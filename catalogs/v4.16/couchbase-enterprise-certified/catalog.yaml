---
defaultChannel: stable
icon:
  base64data: iVBORw0KGgoAAAANSUhEUgAAAK4AAACvCAYAAABkUOVLAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAAOxAAADsQBlSsOGwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAABLSSURBVHic7d17cFz1dQfw77l39ZZlgbHNpH7IxliPlVaStX7gMEVOmeCQQBoIpjNtKYmhbtJ0KFACbdOZlDZMYSAuk0AYDKVDMgVMgU5CsGlpbFLHD7wrrx4rycaWReIkY2wj62FJ1t77O/1DMjEeW3ufe3dX5zPjGY907+93bH/90+7de88PEEIIIYQQQggROAq6gHywr6ZmjlZQMJtSKCOgEABMhMp1GCMAwMAEF+CMSqUGV/f2ngq22vwgwU1jR2trqOLk0NWsVD2Il4JRxUAVgReD6Aow5gDQbAypQDgF5pMM+oCAfmY6SoSj0M3Ovs6a9zfgVdOvP0++kOCehwGKNzRUs6mtJcJagJrAHAZQnMEyxkGUBDhBjF+wrvZEOzt7Mzh/TpjxwX2vvn6hzqH1SvF6Ir4OoDlB13QRJwl4l5m3GwXYvqaj41jQBQVtRgY3VtPQAF3bAOCLYDQEXY9tTB0g/i8FbF3V3Z4MupwgzJjgxsIti4hTX2HgdoBqg67HQ0kQXlFk/vuqrq5fBV1MpuR1cHe0toYqjg/cBKK7GXwD7L2Jyi0EE8xvg7Utw/Mr31y3c6cRdEl+ysvg7qqunlWsFX0VhPsAWhR0PQH4LYOeLdLNJyOdnQNBF+OHvAru3vr6+SGlfxPAXQAqgq4ncIRBBj9bqOPxxo6OD4Mux0t5Edx9NTVzNK34rwh8H4BZQdeThc4AeN7QzEfWdHUdD7oYL+R0cHcvuKakYNbYfUT8ICSwVgwB/C/Do0Ob1/X3jwddjBs5G9x4OHITg54EY0nQteSgXzHzt6I9HT8kgIMuxomcC248vGIZs/ksgHVB15LrCPyO0nnTys7OvqBrsStngrujtTU06/hHfwmi7wAoC7qevEEYY6bHqET/TjQeTwVdjlU5EdxYQ0MNG/RDIooGXUu+ImC/ofAnq3vbDwVdixVZf0F+f23kDphaTELrLwZW6joSsdrIPUHXYkXWrrgHmpoqzQl+AcAfBl3LTMOM181U8VfWHN43FHQtl5KVwY01NNTApNfz7J6CXPM+M9+ysqejK+hCLibrXirEaxtvh6nFJLSBu5qI9sTqmm4LupCLyargxmoj9zDhPyBXDbJFOcCv7K9r+nbQhVwoK14q7GhtDVV8OPB9BjYFXYu4OAZeoJLQpmy5ZBZ4cGMtLaUYM14HcEPQtYh0+K2JobIvrz22ZyzoSgINbnskUpYy6McAPhNkHcI6Bv3cnCi6KegrDoEFt6Oh4bIJU9sGYHVQNQjH9uqF9LnmROJ0UAUE8uasPRIpmzC1H0NCm6vWmBO8fVd1dWB35GU8uLsXXFOSStGbAK7N9NzCU6uL9eJt7ZFIIFeAMhrcWEtLQWHF6BsgtGZyXuGbT6cMbN3R2hrK9MQZDS6NGd+DXD3IM3TjrBMDz2R61owFNxZu/Ae5TpunGBtj4caHMjllRq4qxGsbb2fCS5maTwSCmfi2lcmO1zIxme9BitU0NEDT9kA+xp0JRhSwJhPddXx9qbCrunoWNG0rJLQzRbkGvB5b2jLb74l8DW6xXvwigBo/5xBZZzmKzef8nsS34MbqGv8CchP4DMVf3l8b2ejnDL68xp16EvcAgHI/xhc54Qyb3LLyYMdBPwb3fMXd0doaUsp4CRLama6MdHpxK27T/Rjc8+DOOjFwvzzYKKasWho+5MvDl56+VNhXHVmi69QJuYogfmcUmhmJdnUd8XJQT1dcXafnIaEVn1QKU3/a60E9C268rnEDpC2SuBjCZ+O1jV/ydkgP7KiqKp5VOrsHQJUX44m81Dc8Ohj2qkukJytueUnl/ZDQiuktnVU227M3aq5X3H01NXN0ragP0gFcpEMYnICxdG0y+ZHboVyvuJpe+CAktMIKxuwi6Pd5MZSrFbdtWfNcVaj6IB82COtGCkJ8lds9KVytuKpQPQgJrbCnPJUi16uu4xV377LVFaGi8V+C4fstbCLvDGE8tCjaFx90OoDjFbeg4OwmCa1wqIJLjK+6GcDRihtraSnAmHEEwEI3k4sZ7YPheZctc7oDpqMVl84aN0FCK9xZXH7ioxudnuwouErhbqcTCnEOKXKcI9svFWLhlkVg4yiyrLfulBEAKYCHATIAFAJYEHBNmWYAOAZAAagAoQyMkoBrujiCaehctaaj45jdUx10IDHuRCZDSxgD4+fE6IZGR5jxITMN6DpOK6QGTMM4rZeVDV2qb2t7JDLPMOl+ZjyA/H48/iyAByaGSp+7sA0oA9TZ0FA5SlRGE1Sq6TSXFOaC+EoCz1dMczXClYp5MRE1AijISMUMvcDAHQAesXuq/RW3LtKdoTb3bQQ8yiWhN6Px+KjbwWLhpi1gvsuLwrIS4aFosv1Rt8PEWlpKeTR1MxHdC2CVB5VNj9AZTbZH7J9mw1SPhA67k9h0hhlfi/a0/8jL7Trb6pujSqn9Xo2XbUIGFjQdav+1V+MxQPG6xk0AngBQ6tW4F0OaXtfS1dZj5xx7P/J1bYOt4+07Tpq5dmVPu+d7zA6ODGTl7jEeGW881P4bLwckgKPd7c+AcAMIjj8osEQZtnNlL7js6+PmZ5VGt7R0dfmyok/dBzrhx9hZ4KRfm0lHk+27oOiP4eNm1QyyfZO55eC+V1+/EEC93QmsIuLHV3Uldvs1/pSc3CncAl//XNGexE8Z2OLjFJG26uZP2TnBcnB1Dq23X49FhEGtQHvct/GFa2aI/wmTVy78QKaubOXLcnCVYt+CS8C2IPcTEOlNXmvl//VrfAK8Dy4DRITfd1aSpQn+27exhZfe9nHs69jGVS5LwW2rX1ED4ArHJaVhKq3Pr7GFh1jztDfCBeYlapuWWT3YUnCVMq9xXk96IR0n/BxfeENpcPXUgoXxP231WEvBJcJa5+Wkpyjl14t+4aEQka9XL1gpyzmz9uaM0ey4GiEsIqImq8emDe7UVkB1rioSwgIm1Fvt7pg2uLNPDC4HUOy6KiHSYZQsrjl0lZVD0wZXMYfdVySENaGQtU9n07/GJbb0P0AIL7DipVaOSxtcYukJJjKHmaqsHJc2uCzN7EQGEfESK8dZuBzGi9wWI4R1tNjKUVau485zWYkQdsy1ctC0wWVAA1GlN/UIYcnlVm62mTa4e8LhSjB82e5HiEsIJZqa0rb2mja4RSi63Lt6hLDGMM20uZu2r4LJZlE2dv1wikA/A1RmegZkELOWV3fX6SqU9pPaaYOrMReB8qeHRkt3wnGvKpE5Brgw3THTLqg02cJIiIzSWBWlPWa6b7JGDlo0CeESUdqXc9OvuIod9S4Vwg220P8i3XXcfG2gIbIYgyS4IvfopKV9lGva4GpayJPtK4Www8oziNMG9yzOut4BUAi76EzhqXTHTBvca5LJ0yCY3pUkRFqplr74ULqD0l3HVWAMeFeTEGl9ZKXzpJX7cfPq40SR9U5aOchCcOmXbisRwjr+wMpRVu6hOeqyEiEsYyZLebPwlC/63RYjhFVE1hZKCw9Lsp8d+oT4BGJY6tyZ/vF0jfN50w+RbTS909Jh6Q7o66x5H4SxdMe5oZuhfLpfXTg3uiLZ5s2KuwGvmgB1u6/p0kyoWX6OL7xhgst9nqKLJrdyTcvqSnfARTFpkUaWHkkWwdIU+9qqgIGE5VosDci8x3k5FsYHLPdFFcFRxL52pgfzL6weam3FNa0P6IjCZ3wdX7jGgEZMX/BzjhA0ywukpeBGD3YcgsWP4hwhXL+vOmKpZ5QIRiwcuR2A5c1FHDje3JN43+rB1vaAAJiAd53XlL4OXcf3fRxfuBBb3nIFMbnemT0NW/myfBmKmbfbr8UOunF/OPKYnb2uhP9iLS2lHDJeBrDQz3kIsJUvy8E1CrAdPu8ZS0wPxMONr03tGywCFgu3LOLx1DsE/IHPUzFzyFZwba1usXBjBxgN9mpyZBSElxj0QjSZ2GP12p7wRmJ54+8ZBdgIxjcBlGViymh3u62dnez1TWC8AWQkuKVgbCTwxnhd4+kYYxcIbcx8hDTq0wytb8XBA7/JQB15a0dVVXFlSeVCU+MFrHghaVQFxhIQNRjgpow2OyS8Yf8UG96rawxrQLbcuzAOoA+Eo1B8EkQnQTjBjBMgPsmknaSUOqVo4uSq3t6BmbJqb8VtelW4e65manM1jeYp0uYDfCUYiwEsYuYFRLQQwPyga/2YrmqjnZ29dk6x/UYoVtfYBSAXd+IZBTAC0DAIp6F4GMAIaRhRjCEQj5Kis9BwBsAEgUYApBTUMLFmMOMMLnjen3Ue1Q3T1q6YrGsVrDQdAIj4MmCq1RVN/kjmyY9VCwAQFCrPfV9NfZ/A5QAVMEPXiCsYVIHJH+flACoAVCKX3uAydUR7Eo12T7PfYonwChgP2z4veKWTv3geGB//0/K5yxhMk7+ZevvJU7+hqS9O9v775HtTUgBrNu8PYoBIXfili7/tpd99ny74IhHAOZTPSyL1spPTbN+VZej8gjz5KzxihAx60cmJtoO7pqPjGJjfdjKZEOcj0FtNh9p/7eRcZ/fBsrbF0XlCnI/Uc05PdRTc4fmVbwIsT/8KN/qH5l6+zenJjoK7budOA0RPOp1UCIA3r9u503EbW8ePzIwb41tAGHR6vpjRBkrI/Dc3AzgO7rUHDw4z+Fk3k4uZiUE/CCeTI27GcPWQIqUKHgMw7GYMMeOM6BP0r24HcRXc6KH4SQBPuS1CzCCMzSsOH3Ddj871Y+F6IT0K4LTbccQMQBgsDKnNXgzlOrjNicRpgB/zohiR55j/OdLZ6UnbWk8acZSQ+QQAy88LiZmIjsyeGP2eV6N5EtxwMjlBGh7yYiyRn4jUvVcfPmzrTrppx/NqIACI10X+h0HXezmmyH0E2ub1drSe9uzSlHY3gDNejily3qjSzW94PainwW3uTfQT0z96OabIbcT09ys7Oy01srPD8y6JQ/MrNxOw3+txRU7ae6Tnas/ekJ3Pl1voY/X1V0HpBwBIF8aZ64ypsGJ1b/shPwb3pS9ttKvrCBHd78fYIjcQ0Tf8Ci3g80N1+2sbXyPCLX7OIbIPE15ZmWz/Iz/n8LUT+Fk1ficAX5tCiyxDOGieLf5z/6fx2f7qSDXp9B4mH50W+W1EI231iuQB3xcr3/deWHmw4yBAd8HnvmMicIoYd2QitEAGggsA0e7EqwT+VibmEsEgpodaetptt1JyPF+mJgKAWLjpaTB/LZNzigwgei6aTNydySkzu01TsX4PwG9ldE7hKwZ+Mjy3MuOLUcZ7+OxecE1JYcXoTwGsy/TcwnM/Gx4d/Py6/v7xTE+c8Y3x1h7bM4aS0BcA/F+m5xae2ltCxheDCC0QQHABIBqPj+qFdDOAvUHML9whxm6Mh9a7fVLXjcC2Im1OJE4XhPh6Ar8TVA3CPiJ+d0yNr4/2xQPtqRHoHrqNHR1nzg6V3Sxv2HIDAz8ZOjO0/tqDBwNvSRD45s9rj+0Z6+uuvhnETwddi5gG4XkqCd0a1GvaC2VVZ+BYbeQeEH0XWfAfSnyMGfTwyu7Et4Mu5HxZFVwA2B+O3EpML0Du5c0GQ8S4M5OfiFmVdcEFgH01jct1Da8jN/eayA+Eg4px66ru9mTQpVxMVv5IXt3bfsiYKF4L0H8GXctMxIRXxo3xldkaWiBLV9zz7a+N3EFET2FyVxnhr2Ei+puWZCLru3BmfXAB4EBt09Um8Y8ArAq6ljy2l0j/05Zk2+GgC7EiJ4ILAAxobeGmu5j5Ccjq66VREB7uSy5/fANezZndlHImuOfsq44s0TV6BoTPBl1LriPQNk3h6829if6ga7Er54J7TjwcuYlZ2wzwVUHXkoMOA/R30e7Eq0EX4lTOBhcA3l+2rGiwqOyvAfwtGLODricHnCamR4q11JPhZHIi/eHZK6eDe86u6upZxaHir0MCfCkjYDxVGFKPetWfNmh5Edxz2pY1z1UF6n4QNmFyM+aZboBBP1Bq/Lure3tPBV2Ml/IquOckw+HyMaVvBNG9ABYHXU8A+kF4BmOhZ4K+/dAveRncc3a0tobKPzz9eWK+Cxo+B4YedE2+IZjMeEsj3nIkWf1WLl3aciKvg3u+vZHIAj2l/RlpfDsYDUHX4xmmDpB6OWTQi043dM5FMya454vXr6iFMjYw6EsAIsitvwcG0A7CG9DU1mhnZ2/QBQUhl/7BfNFW3fwpU1frCVgP4DoA84Ku6SKOA3iXgO3Moe3Rnvhvgy4oaDM+uBfaV9O4PKTTWlZqLQPNRFQHoDSDJYwSkFTAASLarSvsbu5JyI5GF5DgprEVt+mLaw5dpencQIwlICwBowqgKgBzpn6FbAxpADg1+Yv7mekoEfeTRn2aSZ1NPYkjBCiv/xz5RoLrgQNNTZWGaV6ucUERjFQpAJgIleswJh/fDhWMKkqdDen6R5MbGgohhBBCCCGEEEIIIYQQQgghhBAz1v8D+o/bXqYjxQQAAAAASUVORK5CYII=
  mediatype: image/png
name: couchbase-enterprise-certified
schema: olm.package
---
entries:
- name: couchbase-operator.v2.6.4-6
- name: couchbase-operator.v2.6.4-7
  skips:
  - couchbase-operator.v2.6.4-6
name: 2.6.4
package: couchbase-enterprise-certified
schema: olm.channel
---
entries:
- name: couchbase-operator.v2.7.0-5
  skips:
  - couchbase-operator.v2.7.0-4
name: 2.7.0
package: couchbase-enterprise-certified
schema: olm.channel
---
entries:
- name: couchbase-operator.v2.8.0-1
- name: couchbase-operator.v2.8.0-2
  skips:
  - couchbase-operator.v2.8.0-1
name: 2.8.0
package: couchbase-enterprise-certified
schema: olm.channel
---
entries:
- name: couchbase-operator.v2.8.1-1
- name: couchbase-operator.v2.8.1-2
  skips:
  - couchbase-operator.v2.8.1-1
name: 2.8.1
package: couchbase-enterprise-certified
schema: olm.channel
---
entries:
- name: couchbase-operator.v2.8.1-1
- name: couchbase-operator.v2.8.1-2
  skips:
  - couchbase-operator.v2.8.1-1
name: stable
package: couchbase-enterprise-certified
schema: olm.channel
---
image: registry.connect.redhat.com/couchbase/operator-bundle@sha256:ea8cf50c89e2c84ae3016cc612264a2a57602020818054f5e55f6a3dfb773eb1
name: couchbase-operator.v2.6.4-6
package: couchbase-enterprise-certified
properties:
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseAutoscaler
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseBackup
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseBackupRestore
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseBucket
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseCluster
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseCollection
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseCollectionGroup
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseEphemeralBucket
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseGroup
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseMemcachedBucket
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseMigrationReplication
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseReplication
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseRoleBinding
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseScope
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseScopeGroup
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseUser
    version: v2
- type: olm.package
  value:
    packageName: couchbase-enterprise-certified
    version: 2.6.4-6
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuNi40IiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjguMCJ9LCJuYW1lIjoiY291Y2hiYXNlY29sbGVjdGlvbmdyb3Vwcy5jb3VjaGJhc2UuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJjb3VjaGJhc2UuY29tIiwibmFtZXMiOnsia2luZCI6IkNvdWNoYmFzZUNvbGxlY3Rpb25Hcm91cCIsImxpc3RLaW5kIjoiQ291Y2hiYXNlQ29sbGVjdGlvbkdyb3VwTGlzdCIsInBsdXJhbCI6ImNvdWNoYmFzZWNvbGxlY3Rpb25ncm91cHMiLCJzaW5ndWxhciI6ImNvdWNoYmFzZWNvbGxlY3Rpb25ncm91cCJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUNvbGxlY3Rpb25Hcm91cCByZXByZXNlbnQgdGhlIGZpbmVzdCBncmFpbmVkIHNpemUgb2YgZGF0YSBzdG9yYWdlIGluIENvdWNoYmFzZS4gQ29sbGVjdGlvbnMgY29udGFpbiBhbGwgZG9jdW1lbnRzIGFuZCBpbmRleGVzIGluIHRoZSBzeXN0ZW0uICBDb2xsZWN0aW9ucyBhbHNvIGZvcm0gdGhlIGZpbmVzdCBncmFpbiBiYXNpcyBmb3Igcm9sZS1iYXNlZCBhY2Nlc3MgY29udHJvbCAoUkJBQykgYW5kIGNyb3NzLWRhdGFjZW50ZXIgcmVwbGljYXRpb24gKFhEQ1IpLiAgSW4gb3JkZXIgdG8gYmUgY29uc2lkZXJlZCBieSB0aGUgT3BlcmF0b3IsIGV2ZXJ5IGNvbGxlY3Rpb24gZ3JvdXAgbXVzdCBiZSByZWZlcmVuY2VkIGJ5IGEgYENvdWNoYmFzZVNjb3BlYCBvciBgQ291Y2hiYXNlU2NvcGVHcm91cGAgcmVzb3VyY2UuICBVbmxpa2UgdGhlIENvdWNoYmFzZUNvbGxlY3Rpb24gcmVzb3VyY2UsIGEgY29sbGVjdGlvbiBncm91cCByZXByZXNlbnRzIG11bHRpcGxlIGNvbGxlY3Rpb25zLCB3aXRoIGNvbW1vbiBjb25maWd1cmF0aW9uIHBhcmFtZXRlcnMsIHRvIGJlIGV4cHJlc3NlZCBhcyBhIHNpbmdsZSByZXNvdXJjZSwgbWluaW1pemluZyByZXF1aXJlZCBjb25maWd1cmF0aW9uIGFuZCBLdWJlcm5ldGVzIEFQSSB0cmFmZmljLiAgSXQgYWxzbyBmb3JtcyB0aGUgYmFzaXMgb2YgQ291Y2hiYXNlIFJCQUMgc2VjdXJpdHkgYm91bmRhcmllcy4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiB0aGUgcmVzb3VyY2UuIiwicHJvcGVydGllcyI6eyJtYXhUVEwiOnsiZGVzY3JpcHRpb24iOiJNYXhUVEwgZGVmaW5lcyBob3cgbG9uZyBhIGRvY3VtZW50IGlzIHBlcm1pdHRlZCB0byBleGlzdCBmb3IsIHdpdGhvdXQgbW9kaWZpY2F0aW9uLCB1bnRpbCBpdCBpcyBhdXRvbWF0aWNhbGx5IGRlbGV0ZWQuICBUaGlzIGZpZWxkIHRha2VzIHByZWNlZGVuY2Ugb3ZlciBhbnkgVFRMIGRlZmluZWQgYXQgdGhlIGJ1Y2tldCBsZXZlbC4gIFRoaXMgaXMgYSBkZWZhdWx0LCBhbmQgbWF4aW11bSB0aW1lLXRvLWxpdmUgYW5kIG1heSBiZSBzZXQgdG8gYSBsb3dlciB2YWx1ZSBieSB0aGUgY2xpZW50LiAgSWYgdGhlIGNsaWVudCBzcGVjaWZpZXMgYSBoaWdoZXIgdmFsdWUsIHRoZW4gaXQgaXMgdHJ1bmNhdGVkIHRvIHRoZSBtYXhpbXVtIGR1cmFiaWxpdHkuICBEb2N1bWVudHMgYXJlIHJlbW92ZWQgYnkgQ291Y2hiYXNlLCBhZnRlciB0aGV5IGhhdmUgZXhwaXJlZCwgd2hlbiBlaXRoZXIgYWNjZXNzZWQsIHRoZSBleHBpcnkgcGFnZXIgaXMgcnVuLCBvciB0aGUgYnVja2V0IGlzIGNvbXBhY3RlZC4gIFdoZW4gc2V0IHRvIDAsIHRoZW4gZG9jdW1lbnRzIGFyZSBub3QgZXhwaXJlZCBieSBkZWZhdWx0LiAgVGhpcyBmaWVsZCBtdXN0IGJlIGEgZHVyYXRpb24gaW4gdGhlIHJhbmdlIDAtMjE0NzQ4MzY0OHMsIGRlZmF1bHRpbmcgdG8gMC4gIE1vcmUgaW5mbzogaHR0cHM6Ly9nb2xhbmcub3JnL3BrZy90aW1lLyNQYXJzZUR1cmF0aW9uIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lcyI6eyJkZXNjcmlwdGlvbiI6Ik5hbWVzIHNwZWNpZmllcyB0aGUgbmFtZXMgb2YgdGhlIGNvbGxlY3Rpb25zLiAgVW5saWtlIENvdWNoYmFzZUNvbGxlY3Rpb24sIHdoaWNoIHNwZWNpZmllcyBhIHNpbmdsZSBjb2xsZWN0aW9uLCBhIGNvbGxlY3Rpb24gZ3JvdXAgc3BlY2lmaWVzIG11bHRpcGxlLCBhbmQgdGhlIGNvbGxlY3Rpb24gZ3JvdXAgbXVzdCBzcGVjaWZ5IGF0IGxlYXN0IG9uZSBjb2xsZWN0aW9uIG5hbWUuIEFueSBjb2xsZWN0aW9uIG5hbWVzIHNwZWNpZmllZCBtdXN0IGJlIHVuaXF1ZS4gQ29sbGVjdGlvbiBuYW1lcyBtdXN0IGJlIDEtMjUxIGNoYXJhY3RlcnMgaW4gbGVuZ3RoLCBjb250YWluIG9ubHkgW2EtekEtWjAtOV8tJV0gYW5kIG5vdCBzdGFydCB3aXRoIGVpdGhlciBfIG9yICUuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJTY29wZU9yQ29sbGVjdGlvbk5hbWUgaXMgYSBnZW5lcmljIHR5cGUgdG8gY2FwdHVyZSBhIHZhbGlkIHNjb3BlIG9yIGNvbGxlY3Rpb24gbmFtZS4gIFRoZXNlIG11c3QgY29uc2lzdCBvZiAxLTI1MSBjaGFyYWN0ZXJzLCBpbmNsdWRlIG9ubHkgQS1aLCBhLXosIDAtOSwgLSwgXyBvciAlLCBhbmQgbXVzdCBub3Qgc3RhcnQgd2l0aCBfICh3aGljaCBpcyBhbiBpbnRlcm5hbCBtYXJrZXIpIG9yICUgKHdoaWNoIGlzIHByb2JhYmx5IGFuIGVzY2FwZSBjaGFyYWN0ZXIgaW4gbGFuZ3VhZ2UgWCkuIiwibWF4TGVuZ3RoIjoyNTEsIm1pbkxlbmd0aCI6MSwicGF0dGVybiI6Il5bYS16QS1aMC05XFwtXVthLXpBLVowLTlcXC0lX117MCwyNTB9JCIsInR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6InNldCJ9fSwicmVxdWlyZWQiOlsibmFtZXMiXSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWV9XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuNi40IiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjguMCJ9LCJuYW1lIjoiY291Y2hiYXNlY29sbGVjdGlvbnMuY291Y2hiYXNlLmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiY291Y2hiYXNlLmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJDb3VjaGJhc2VDb2xsZWN0aW9uIiwibGlzdEtpbmQiOiJDb3VjaGJhc2VDb2xsZWN0aW9uTGlzdCIsInBsdXJhbCI6ImNvdWNoYmFzZWNvbGxlY3Rpb25zIiwic2luZ3VsYXIiOiJjb3VjaGJhc2Vjb2xsZWN0aW9uIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjIiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlQ29sbGVjdGlvbiByZXByZXNlbnQgdGhlIGZpbmVzdCBncmFpbmVkIHNpemUgb2YgZGF0YSBzdG9yYWdlIGluIENvdWNoYmFzZS4gQ29sbGVjdGlvbnMgY29udGFpbiBhbGwgZG9jdW1lbnRzIGFuZCBpbmRleGVzIGluIHRoZSBzeXN0ZW0uICBDb2xsZWN0aW9ucyBhbHNvIGZvcm0gdGhlIGZpbmVzdCBncmFpbiBiYXNpcyBmb3Igcm9sZS1iYXNlZCBhY2Nlc3MgY29udHJvbCAoUkJBQykgYW5kIGNyb3NzLWRhdGFjZW50ZXIgcmVwbGljYXRpb24gKFhEQ1IpLiAgSW4gb3JkZXIgdG8gYmUgY29uc2lkZXJlZCBieSB0aGUgT3BlcmF0b3IsIGV2ZXJ5IGNvbGxlY3Rpb24gbXVzdCBiZSByZWZlcmVuY2VkIGJ5IGEgYENvdWNoYmFzZVNjb3BlYCBvciBgQ291Y2hiYXNlU2NvcGVHcm91cGAgcmVzb3VyY2UuIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVmYXVsdCI6e30sImRlc2NyaXB0aW9uIjoiU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIHRoZSByZXNvdXJjZS4iLCJwcm9wZXJ0aWVzIjp7Im1heFRUTCI6eyJkZXNjcmlwdGlvbiI6Ik1heFRUTCBkZWZpbmVzIGhvdyBsb25nIGEgZG9jdW1lbnQgaXMgcGVybWl0dGVkIHRvIGV4aXN0IGZvciwgd2l0aG91dCBtb2RpZmljYXRpb24sIHVudGlsIGl0IGlzIGF1dG9tYXRpY2FsbHkgZGVsZXRlZC4gIFRoaXMgZmllbGQgdGFrZXMgcHJlY2VkZW5jZSBvdmVyIGFueSBUVEwgZGVmaW5lZCBhdCB0aGUgYnVja2V0IGxldmVsLiAgVGhpcyBpcyBhIGRlZmF1bHQsIGFuZCBtYXhpbXVtIHRpbWUtdG8tbGl2ZSBhbmQgbWF5IGJlIHNldCB0byBhIGxvd2VyIHZhbHVlIGJ5IHRoZSBjbGllbnQuICBJZiB0aGUgY2xpZW50IHNwZWNpZmllcyBhIGhpZ2hlciB2YWx1ZSwgdGhlbiBpdCBpcyB0cnVuY2F0ZWQgdG8gdGhlIG1heGltdW0gZHVyYWJpbGl0eS4gIERvY3VtZW50cyBhcmUgcmVtb3ZlZCBieSBDb3VjaGJhc2UsIGFmdGVyIHRoZXkgaGF2ZSBleHBpcmVkLCB3aGVuIGVpdGhlciBhY2Nlc3NlZCwgdGhlIGV4cGlyeSBwYWdlciBpcyBydW4sIG9yIHRoZSBidWNrZXQgaXMgY29tcGFjdGVkLiAgV2hlbiBzZXQgdG8gMCwgdGhlbiBkb2N1bWVudHMgYXJlIG5vdCBleHBpcmVkIGJ5IGRlZmF1bHQuICBUaGlzIGZpZWxkIG11c3QgYmUgYSBkdXJhdGlvbiBpbiB0aGUgcmFuZ2UgMC0yMTQ3NDgzNjQ4cywgZGVmYXVsdGluZyB0byAwLiAgTW9yZSBpbmZvOiBodHRwczovL2dvbGFuZy5vcmcvcGtnL3RpbWUvI1BhcnNlRHVyYXRpb24iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIHNwZWNpZmllcyB0aGUgbmFtZSBvZiB0aGUgY29sbGVjdGlvbi4gIEJ5IGRlZmF1bHQsIHRoZSBtZXRhZGF0YS5uYW1lIGlzIHVzZWQgdG8gZGVmaW5lIHRoZSBjb2xsZWN0aW9uIG5hbWUsIGhvd2V2ZXIsIGR1ZSB0byB0aGUgbGltaXRlZCBjaGFyYWN0ZXIgc2V0LCB0aGlzIGZpZWxkIGNhbiBiZSB1c2VkIHRvIG92ZXJyaWRlIHRoZSBkZWZhdWx0IGFuZCBwcm92aWRlIHRoZSBmdWxsIGZ1bmN0aW9uYWxpdHkuIEFkZGl0aW9uYWxseSB0aGUgYG1ldGFkYXRhLm5hbWVgIGZpZWxkIGlzIGEgRE5TIGxhYmVsLCBhbmQgdGh1cyBsaW1pdGVkIHRvIDYzIGNoYXJhY3RlcnMsIHRoaXMgZmllbGQgbXVzdCBiZSB1c2VkIGlmIHRoZSBuYW1lIGlzIGxvbmdlciB0aGFuIHRoaXMgbGltaXQuIENvbGxlY3Rpb24gbmFtZXMgbXVzdCBiZSAxLTI1MSBjaGFyYWN0ZXJzIGluIGxlbmd0aCwgY29udGFpbiBvbmx5IFthLXpBLVowLTlfLSVdIGFuZCBub3Qgc3RhcnQgd2l0aCBlaXRoZXIgXyBvciAlLiIsIm1heExlbmd0aCI6MjUxLCJtaW5MZW5ndGgiOjEsInBhdHRlcm4iOiJeW2EtekEtWjAtOVxcLV1bYS16QS1aMC05XFwtJV9dezAsMjUwfSQiLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWV9XX19
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuNi40IiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjguMCJ9LCJuYW1lIjoiY291Y2hiYXNlYXV0b3NjYWxlcnMuY291Y2hiYXNlLmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiY291Y2hiYXNlLmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJDb3VjaGJhc2VBdXRvc2NhbGVyIiwibGlzdEtpbmQiOiJDb3VjaGJhc2VBdXRvc2NhbGVyTGlzdCIsInBsdXJhbCI6ImNvdWNoYmFzZWF1dG9zY2FsZXJzIiwic2hvcnROYW1lcyI6WyJjYmEiXSwic2luZ3VsYXIiOiJjb3VjaGJhc2VhdXRvc2NhbGVyIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7Impzb25QYXRoIjoiLnNwZWMuc2l6ZSIsIm5hbWUiOiJzaXplIiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIuc3BlYy5zZXJ2ZXJzIiwibmFtZSI6InNlcnZlcnMiLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjIiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlQXV0b3NjYWxlciBwcm92aWRlcyBhbiBpbnRlcmZhY2UgZm9yIHRoZSBLdWJlcm5ldGVzIEhvcml6b250YWwgUG9kIEF1dG9zY2FsZXIgdG8gaW50ZXJhY3Qgd2l0aCB0aGUgQ291Y2hiYXNlIGNsdXN0ZXIgYW5kIHByb3ZpZGUgYXV0b3NjYWxpbmcuICBUaGlzIHJlc291cmNlIGlzIG5vdCBkZWZpbmVkIGJ5IHRoZSBlbmQgdXNlciwgYW5kIGlzIG1hbmFnZWQgYnkgdGhlIE9wZXJhdG9yLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlQXV0b3NjYWxlclNwZWMgYWxsb3dzIGNvbnRyb2wgb3ZlciBhbiBhdXRvc2NhbGluZyBncm91cC4iLCJwcm9wZXJ0aWVzIjp7InNlcnZlcnMiOnsiZGVzY3JpcHRpb24iOiJTZXJ2ZXJzIHNwZWNpZmllcyB0aGUgc2VydmVyIGdyb3VwIHRoYXQgdGhpcyBhdXRvc2NhbGVyIGJlbG9uZ3MgdG8uIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sInNpemUiOnsiZGVzY3JpcHRpb24iOiJTaXplIGFsbG93cyB0aGUgc2VydmVyIGdyb3VwIHRvIGJlIGR5bmFtaWNhbGx5IHNjYWxlZC4iLCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9fSwicmVxdWlyZWQiOlsic2VydmVycyIsInNpemUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJDb3VjaGJhc2VBdXRvc2NhbGVyU3RhdHVzIHByb3ZpZGVzIGluZm9ybWF0aW9uIHRvIHRoZSBIUEEgdG8gYXNzaXN0IHdpdGggc2NhbGluZyBzZXJ2ZXIgZ3JvdXBzLiIsInByb3BlcnRpZXMiOnsibGFiZWxTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IkxhYmVsU2VsZWN0b3IgYWxsb3dzIHRoZSBIUEEgdG8gc2VsZWN0IHJlc291cmNlcyB0byBtb25pdG9yIGZvciByZXNvdXJjZSB1dGlsaXphdGlvbiBpbiBvcmRlciB0byB0cmlnZ2VyIHNjYWxpbmcuIiwidHlwZSI6InN0cmluZyJ9LCJzaXplIjp7ImRlc2NyaXB0aW9uIjoiU2l6ZSBpcyB0aGUgY3VycmVudCBzaXplIG9mIHRoZSBzZXJ2ZXIgZ3JvdXAuIiwibWluaW11bSI6MSwidHlwZSI6ImludGVnZXIifX0sInJlcXVpcmVkIjpbImxhYmVsU2VsZWN0b3IiLCJzaXplIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic2NhbGUiOnsibGFiZWxTZWxlY3RvclBhdGgiOiIuc3RhdHVzLmxhYmVsU2VsZWN0b3IiLCJzcGVjUmVwbGljYXNQYXRoIjoiLnNwZWMuc2l6ZSIsInN0YXR1c1JlcGxpY2FzUGF0aCI6Ii5zdGF0dXMuc2l6ZSJ9LCJzdGF0dXMiOnt9fX1dfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuNi40IiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjguMCJ9LCJuYW1lIjoiY291Y2hiYXNlYmFja3VwcmVzdG9yZXMuY291Y2hiYXNlLmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiY291Y2hiYXNlLmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJDb3VjaGJhc2VCYWNrdXBSZXN0b3JlIiwibGlzdEtpbmQiOiJDb3VjaGJhc2VCYWNrdXBSZXN0b3JlTGlzdCIsInBsdXJhbCI6ImNvdWNoYmFzZWJhY2t1cHJlc3RvcmVzIiwic2hvcnROYW1lcyI6WyJjYnJlc3RvcmUiXSwic2luZ3VsYXIiOiJjb3VjaGJhc2ViYWNrdXByZXN0b3JlIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7Impzb25QYXRoIjoiLnN0YXR1cy5jYXBhY2l0eVVzZWQiLCJuYW1lIjoiY2FwYWNpdHkgdXNlZCIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLnN0YXR1cy5sYXN0UnVuIiwibmFtZSI6Imxhc3QgcnVuIiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIuc3RhdHVzLmxhc3RTdWNjZXNzIiwibmFtZSI6Imxhc3Qgc3VjY2VzcyIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLnN0YXR1cy5kdXJhdGlvbiIsIm5hbWUiOiJkdXJhdGlvbiIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLnN0YXR1cy5ydW5uaW5nIiwibmFtZSI6InJ1bm5pbmciLCJ0eXBlIjoiYm9vbGVhbiJ9LHsianNvblBhdGgiOiIubWV0YWRhdGEuY3JlYXRpb25UaW1lc3RhbXAiLCJuYW1lIjoiYWdlIiwidHlwZSI6ImRhdGUifV0sIm5hbWUiOiJ2MiIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJDb3VjaGJhc2VCYWNrdXBSZXN0b3JlIGFsbG93cyB0aGUgcmVzdG9yYXRpb24gb2YgYWxsIENvdWNoYmFzZSBjbHVzdGVyIGRhdGEgZnJvbSBhIENvdWNoYmFzZUJhY2t1cCByZXNvdXJjZS4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUJhY2t1cFJlc3RvcmVTcGVjIGFsbG93cyB0aGUgc3BlY2lmaWNhdGlvbiBvZiBkYXRhIHJlc3RvcmF0aW9uIHRvIGJlIGNvbmZpZ3VyZWQuICBUaGlzIGluY2x1ZGVzIHRoZSBiYWNrdXAgYW5kIHJlcG9zaXRvcnkgdG8gcmVzdG9yZSBkYXRhIGZyb20sIGFuZCB0aGUgdGltZSByYW5nZSBvZiBkYXRhIHRvIGJlIHJlc3RvcmVkLiIsInByb3BlcnRpZXMiOnsiYmFja29mZkxpbWl0Ijp7ImRlZmF1bHQiOjIsImRlc2NyaXB0aW9uIjoiTnVtYmVyIG9mIHRpbWVzIHRoZSByZXN0b3JlIGpvYiBzaG91bGQgdHJ5IHRvIGV4ZWN1dGUuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJiYWNrdXAiOnsiZGVzY3JpcHRpb24iOiJUaGUgYmFja3VwIHJlc291cmNlIG5hbWUgYXNzb2NpYXRlZCB3aXRoIHRoaXMgcmVzdG9yZSwgb3IgdGhlIGJhY2t1cCBQVkMgbmFtZSB0byByZXN0b3JlIGZyb20uIiwidHlwZSI6InN0cmluZyJ9LCJidWNrZXRzIjp7ImRlc2NyaXB0aW9uIjoiREVQUkVDQVRFRCAtIGJ5IHNwZWMuZGF0YS4gU3BlY2lmaWMgYnVja2V0cyBjYW4gYmUgZXhwbGljaXRseSBpbmNsdWRlZCBvciBleGNsdWRlZCBpbiB0aGUgcmVzdG9yZSwgYXMgd2VsbCBhcyBidWNrZXQgbWFwcGluZ3MuICBUaGlzIGZpZWxkIGlzIG5vdyBpZ25vcmVkLiIsInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9LCJkYXRhIjp7ImRlc2NyaXB0aW9uIjoiRGF0YSBhbGxvd3MgY29udHJvbCBvdmVyIHdoYXQga2V5LXZhbHVlL2RvY3VtZW50IGRhdGEgaXMgaW5jbHVkZWQgaW4gdGhlIHJlc3RvcmUuICBCeSBkZWZhdWx0LCBhbGwgZGF0YSBpcyBpbmNsdWRlZC4iLCJwcm9wZXJ0aWVzIjp7ImV4Y2x1ZGUiOnsiZGVzY3JpcHRpb24iOiJFeGNsdWRlIGRlZmluZXMgdGhlIGJ1Y2tldHMsIHNjb3BlcyBvciBjb2xsZWN0aW9ucyB0aGF0IGFyZSBleGNsdWRlZCBmcm9tIHRoZSBiYWNrdXAuIFdoZW4gdGhpcyBmaWVsZCBpcyBzZXQsIGl0IGltcGxpZXMgdGhhdCBieSBkZWZhdWx0IGV2ZXJ5dGhpbmcgd2lsbCBiZSBiYWNrZWQgdXAsIGFuZCBkYXRhIGl0ZW1zIGNhbiBiZSBleHBsaWNpdGx5IGV4Y2x1ZGVkLiAgWW91IG1heSBkZWZpbmUgYW4gZXhjbHVzaW9uIGFzIGEgYnVja2V0IC0tIGBteS1idWNrZXRgLCBhIHNjb3BlIC0tIGBteS1idWNrZXQubXktc2NvcGVgLCBvciBhIGNvbGxlY3Rpb24gLS0gYG15LWJ1Y2tldC5teS1zY29wZS5teS1jb2xsZWN0aW9uYC4gQnVja2V0cyBtYXkgY29udGFpbiBwZXJpb2RzLCBhbmQgdGhlcmVmb3JlIG11c3QgYmUgZXNjYXBlZCAtLSBgbXlcXC5idWNrZXQubXktc2NvcGVgLCBhcyBwZXJpb2QgaXMgdGhlIHNlcGFyYXRvciB1c2VkIHRvIGRlbGltaXQgc2NvcGVzIGFuZCBjb2xsZWN0aW9ucy4gIEV4Y2x1ZGVkIGRhdGEgY2Fubm90IG92ZXJsYXAgZS5nLiBzcGVjaWZ5aW5nIGBteS1idWNrZXRgIGFuZCBgbXktYnVja2V0Lm15LXNjb3BlYCBpcyBpbGxlZ2FsLiAgVGhpcyBmaWVsZCBjYW5ub3QgYmUgdXNlZCBhdCB0aGUgc2FtZSB0aW1lIGFzIGluY2x1ZGVkIGl0ZW1zLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQnVja2V0U2NvcGVPckNvbGxlY3Rpb25OYW1lV2l0aERlZmF1bHRzIGlzIHRoZSBuYW1lIG9mIGEgZnVsbHkgcXVhbGlmZWQgYnVja2V0LCBzY29wZSBvciBjb2xsZWN0aW9uLiBUaGUgX2RlZmF1bHQgc2NvcGUgYW5kIGNvbGxlY3Rpb24gYXJlIHZhbGlkIGZvciB0aGlzIHR5cGUuIEFzIHRoZXNlIG5hbWVzIGFyZSBwZXJpb2Qgc2VwYXJhdGVkLCBhbmQgYnVja2V0cyBjYW4gY29udGFpbiBwZXJpb2RzLCB0aGUgbGF0dGVyIG5lZWQgdG8gYmUgZXNjYXBlZC4gIFRoaXMgc3BlY2lmaWNhdGlvbiBpcyBiYXNlZCBvbiBjYmJhY2t1cG1nci4iLCJwYXR0ZXJuIjoiXig/OlthLXpBLVowLTlcXC1fJV18XFxcXC4pezEsMTAwfShcXC5fZGVmYXVsdChcXC5fZGVmYXVsdCk/fFxcLlthLXpBLVowLTlcXC1dW2EtekEtWjAtOVxcLSVfXXswLDI5fShcXC5bYS16QS1aMC05XFwtXVthLXpBLVowLTlcXC0lX117MCwyOX0pPyk/JCIsInR5cGUiOiJzdHJpbmcifSwibWluSXRlbXMiOjEsInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJzZXQifSwiZmlsdGVyS2V5cyI6eyJkZXNjcmlwdGlvbiI6IkZpbHRlcktleXMgb25seSByZXN0b3JlcyBkb2N1bWVudHMgd2hvc2UgbmFtZXMgbWF0Y2ggdGhlIHByb3ZpZGVkIHJlZ3VsYXIgZXhwcmVzc2lvbi4iLCJ0eXBlIjoic3RyaW5nIn0sImZpbHRlclZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6IkZpbHRlclZhbHVlcyBvbmx5IHJlc3RvcmVzIGRvY3VtZW50cyB3aG9zZSB2YWx1ZXMgbWF0Y2ggdGhlIHByb3ZpZGVkIHJlZ3VsYXIgZXhwcmVzc2lvbi4iLCJ0eXBlIjoic3RyaW5nIn0sImluY2x1ZGUiOnsiZGVzY3JpcHRpb24iOiJJbmNsdWRlIGRlZmluZXMgdGhlIGJ1Y2tldHMsIHNjb3BlcyBvciBjb2xsZWN0aW9ucyB0aGF0IGFyZSBpbmNsdWRlZCBpbiB0aGUgcmVzdG9yZS4gV2hlbiB0aGlzIGZpZWxkIGlzIHNldCwgaXQgaW1wbGllcyB0aGF0IGJ5IGRlZmF1bHQgbm90aGluZyB3aWxsIGJlIHJlc3RvcmVkLCBhbmQgZGF0YSBpdGVtcyBtdXN0IGJlIGV4cGxpY2l0bHkgaW5jbHVkZWQuICBZb3UgbWF5IGRlZmluZSBhbiBpbmNsdXNpb24gYXMgYSBidWNrZXQgLS0gYG15LWJ1Y2tldGAsIGEgc2NvcGUgLS0gYG15LWJ1Y2tldC5teS1zY29wZWAsIG9yIGEgY29sbGVjdGlvbiAtLSBgbXktYnVja2V0Lm15LXNjb3BlLm15LWNvbGxlY3Rpb25gLiBCdWNrZXRzIG1heSBjb250YWluIHBlcmlvZHMsIGFuZCB0aGVyZWZvcmUgbXVzdCBiZSBlc2NhcGVkIC0tIGBteVxcLmJ1Y2tldC5teS1zY29wZWAsIGFzIHBlcmlvZCBpcyB0aGUgc2VwYXJhdG9yIHVzZWQgdG8gZGVsaW1pdCBzY29wZXMgYW5kIGNvbGxlY3Rpb25zLiAgSW5jbHVkZWQgZGF0YSBjYW5ub3Qgb3ZlcmxhcCBlLmcuIHNwZWNpZnlpbmcgYG15LWJ1Y2tldGAgYW5kIGBteS1idWNrZXQubXktc2NvcGVgIGlzIGlsbGVnYWwuICBUaGlzIGZpZWxkIGNhbm5vdCBiZSB1c2VkIGF0IHRoZSBzYW1lIHRpbWUgYXMgZXhjbHVkZWQgaXRlbXMuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJCdWNrZXRTY29wZU9yQ29sbGVjdGlvbk5hbWVXaXRoRGVmYXVsdHMgaXMgdGhlIG5hbWUgb2YgYSBmdWxseSBxdWFsaWZlZCBidWNrZXQsIHNjb3BlIG9yIGNvbGxlY3Rpb24uIFRoZSBfZGVmYXVsdCBzY29wZSBhbmQgY29sbGVjdGlvbiBhcmUgdmFsaWQgZm9yIHRoaXMgdHlwZS4gQXMgdGhlc2UgbmFtZXMgYXJlIHBlcmlvZCBzZXBhcmF0ZWQsIGFuZCBidWNrZXRzIGNhbiBjb250YWluIHBlcmlvZHMsIHRoZSBsYXR0ZXIgbmVlZCB0byBiZSBlc2NhcGVkLiAgVGhpcyBzcGVjaWZpY2F0aW9uIGlzIGJhc2VkIG9uIGNiYmFja3VwbWdyLiIsInBhdHRlcm4iOiJeKD86W2EtekEtWjAtOVxcLV8lXXxcXFxcLil7MSwxMDB9KFxcLl9kZWZhdWx0KFxcLl9kZWZhdWx0KT98XFwuW2EtekEtWjAtOVxcLV1bYS16QS1aMC05XFwtJV9dezAsMjl9KFxcLlthLXpBLVowLTlcXC1dW2EtekEtWjAtOVxcLSVfXXswLDI5fSk/KT8kIiwidHlwZSI6InN0cmluZyJ9LCJtaW5JdGVtcyI6MSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6InNldCJ9LCJtYXAiOnsiZGVzY3JpcHRpb24iOiJNYXAgYWxsb3dzIGRhdGEgaXRlbXMgaW4gdGhlIHJlc3RvcmUgdG8gYmUgcmVtYXBwZWQgdG8gYSBkaWZmZXJlbnQgbmFtZWQgY29udGFpbmVyLiBCdWNrZXRzIGNhbiBiZSByZW1hcHBlZCB0byBvdGhlciBidWNrZXRzIGUuZy4gXCJzb3VyY2U9dGFyZ2V0XCIsIHNjb3BlcyBhbmQgY29sbGVjdGlvbnMgY2FuIGJlIHJlbWFwcGVkIHRvIG90aGVyIHNjb3BlcyBhbmQgY29sbGVjdGlvbnMgd2l0aGluIHRoZSBzYW1lIGJ1Y2tldCBvbmx5IGUuZy4gXCJidWNrZXQuc2NvcGU9YnVja2V0Lm90aGVyXCIgb3IgXCJidWNrZXQuc2NvcGUuY29sbGVjdGlvbj1idWNrZXQuc2NvcGUub3RoZXJcIi4gIE1hcCBzb3VyY2VzIG1heSBvbmx5IGJlIHNwZWNpZmllZCBvbmNlLCBhbmQgbWF5IG5vdCBvdmVybGFwLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiUmVzdG9yZU1hcHBpbmcgYWxsb3dzIGRhdGEgdG8gYmUgbWlncmF0ZWQgb24gcmVzdG9yZS4iLCJwcm9wZXJ0aWVzIjp7InNvdXJjZSI6eyJkZXNjcmlwdGlvbiI6IlNvdXJjZSBkZWZpbmVzIHRoZSBkYXRhIHNvdXJjZSBvZiB0aGUgbWFwcGluZywgdGhpcyBtYXkgYmUgZWl0aGVyIGEgYnVja2V0LCBzY29wZSBvciBjb2xsZWN0aW9uLiIsInBhdHRlcm4iOiJeKD86W2EtekEtWjAtOVxcLV8lXXxcXFxcLil7MSwxMDB9KFxcLl9kZWZhdWx0KFxcLl9kZWZhdWx0KT98XFwuW2EtekEtWjAtOVxcLV1bYS16QS1aMC05XFwtJV9dezAsMjl9KFxcLlthLXpBLVowLTlcXC1dW2EtekEtWjAtOVxcLSVfXXswLDI5fSk/KT8kIiwidHlwZSI6InN0cmluZyJ9LCJ0YXJnZXQiOnsiZGVzY3JpcHRpb24iOiJUYXJnZXQgZGVmaW5lcyB0aGUgZGF0YSB0YXJnZXQgb2YgdGhlIG1hcHBpbmcsIHRoaXMgbWF5IGJlIGVpdGhlciBhIGJ1Y2tldCwgc2NvcGUgb3IgY29sbGVjdGlvbiwgYW5kIG11c3QgcmVmZXIgdG8gdGhlIHNhbWUgdHlwZSBhcyB0aGUgcmVzdG9yZSBzb3VyY2UuIiwicGF0dGVybiI6Il4oPzpbYS16QS1aMC05XFwtXyVdfFxcXFwuKXsxLDEwMH0oXFwuX2RlZmF1bHQoXFwuX2RlZmF1bHQpP3xcXC5bYS16QS1aMC05XFwtXVthLXpBLVowLTlcXC0lX117MCwyOX0oXFwuW2EtekEtWjAtOVxcLV1bYS16QS1aMC05XFwtJV9dezAsMjl9KT8pPyQiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJzb3VyY2UiLCJ0YXJnZXQiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC1tYXAta2V5cyI6WyJzb3VyY2UiXSwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6Im1hcCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJlbmQiOnsiZGVzY3JpcHRpb24iOiJFbmQgZGVub3RlcyB0aGUgbGFzdCBiYWNrdXAgdG8gcmVzdG9yZSBmcm9tLiAgT21pdHRpbmcgdGhpcyBmaWVsZCB3aWxsIG9ubHkgcmVzdG9yZSB0aGUgYmFja3VwIHJlZmVyZW5jZWQgYnkgc3RhcnQuICBUaGlzIG1heSBiZSBzcGVjaWZpZWQgYXMgYW4gaW50ZWdlciBpbmRleCAoc3RhcnRpbmcgZnJvbSAxKSwgYSBzdHJpbmcgc3BlY2lmeWluZyBhIHNob3J0IGRhdGUgREQtTU0tWVlZWSwgdGhlIGJhY2t1cCBuYW1lLCBvciBvbmUgb2YgZWl0aGVyIGBzdGFydGAgb3IgYG9sZGVzdGAga2V5d29yZHMuIiwicHJvcGVydGllcyI6eyJpbnQiOnsiZGVzY3JpcHRpb24iOiJJbnQgcmVmZXJlbmNlcyBhIHJlbGF0aXZlIGJhY2t1cCBieSBpbmRleC4iLCJtaW5pbXVtIjoxLCJ0eXBlIjoiaW50ZWdlciJ9LCJzdHIiOnsiZGVzY3JpcHRpb24iOiJTdHIgcmVmZXJlbmNlcyBhbiBhYnNvbHV0ZSBiYWNrdXAgYnkgbmFtZS4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImZvcmNlVXBkYXRlcyI6eyJkZXNjcmlwdGlvbiI6IkZvcmNlcyBkYXRhIGluIHRoZSBDb3VjaGJhc2UgY2x1c3RlciB0byBiZSBvdmVyd3JpdHRlbiBldmVuIGlmIHRoZSBkYXRhIGluIHRoZSBjbHVzdGVyIGlzIG5ld2VyIHRoYW4gdGhlIHJlc3RvcmUiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJsb2dSZXRlbnRpb24iOnsiZGVmYXVsdCI6IjE2OGgiLCJkZXNjcmlwdGlvbiI6Ik51bWJlciBvZiBob3VycyB0byBob2xkIHJlc3RvcmUgc2NyaXB0IGxvZ3MgZm9yLCBldmVyeXRoaW5nIG9sZGVyIHdpbGwgYmUgZGVsZXRlZC4gTW9yZSBpbmZvOiBodHRwczovL2dvbGFuZy5vcmcvcGtnL3RpbWUvI1BhcnNlRHVyYXRpb24iLCJ0eXBlIjoic3RyaW5nIn0sIm9iamVjdFN0b3JlIjp7ImRlc2NyaXB0aW9uIjoiVGhlIHJlbW90ZSBkZXN0aW5hdGlvbiBmb3IgYmFja3VwLiIsInByb3BlcnRpZXMiOnsiZW5kcG9pbnQiOnsiZGVzY3JpcHRpb24iOiJFbmRwb2ludCBjb250YWlucyB0aGUgY29uZmlndXJhdGlvbiBmb3IgY29ubmVjdGluZyB0byBhIGN1c3RvbSBBenVyZS9TMy9HQ1AgY29tcGxpYW50IG9iamVjdCBzdG9yZS4gSWYgc2V0IHdpbGwgb3ZlcnJpZGUgYENvdWNoYmFzZUNsdXN0ZXIuc3BlYy5iYWNrdXAub2JqZWN0RW5kcG9pbnRgIFNlZSBodHRwczovL2RvY3MuY291Y2hiYXNlLmNvbS9zZXJ2ZXIvY3VycmVudC9iYWNrdXAtcmVzdG9yZS9jYmJhY2t1cG1nci1jbG91ZC5odG1sI2NvbXBhdGlibGUtb2JqZWN0LXN0b3JlcyIsInByb3BlcnRpZXMiOnsic2VjcmV0Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIG5hbWUgb2YgdGhlIHNlY3JldCwgaW4gdGhpcyBuYW1lc3BhY2UsIHRoYXQgY29udGFpbnMgdGhlIENBIGNlcnRpZmljYXRlIGZvciB2ZXJpZmljYXRpb24gb2YgYSBUTFMgZW5kcG9pbnQgVGhlIHNlY3JldCBtdXN0IGhhdmUgdGhlIGtleSB3aXRoIHRoZSBuYW1lIFwidGxzLmNydFwiIiwidHlwZSI6InN0cmluZyJ9LCJ1cmwiOnsiZGVzY3JpcHRpb24iOiJUaGUgaG9zdC9hZGRyZXNzIG9mIHRoZSBjdXN0b20gb2JqZWN0IGVuZHBvaW50LiIsInR5cGUiOiJzdHJpbmcifSwidXNlVmlydHVhbFBhdGgiOnsiZGVzY3JpcHRpb24iOiJVc2VWaXJ0dWFsUGF0aCB3aWxsIGZvcmNlIHRoZSBBV1MgU0RLIHRvIHVzZSB0aGUgbmV3IHZpcnR1YWwgc3R5bGUgcGF0aHMgd2hpY2ggYXJlIG9mdGVuIHJlcXVpcmVkIGJ5IFMzIGNvbXBhdGlibGUgb2JqZWN0IHN0b3Jlcy4iLCJ0eXBlIjoiYm9vbGVhbiJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzZWNyZXQiOnsiZGVzY3JpcHRpb24iOiJPYmpTdG9yZVNlY3JldCBtdXN0IGNvbnRhaW4gdHdvIGZpZWxkcywgYWNjZXNzLWtleS1pZCwgc2VjcmV0LWFjY2Vzcy1rZXkgYW5kIG9wdGlvbmFsbHkgZWl0aGVyIHJlZ2lvbiBvciByZWZyZXNoLXRva2VuLiBUaGVzZSBjb3JyZXNwb25kIHRvIHRoZSBmaWVsZHMgdXNlZCBieSBjYmJhY2t1cG1nciBodHRwczovL2RvY3MuY291Y2hiYXNlLmNvbS9zZXJ2ZXIvY3VycmVudC9iYWNrdXAtcmVzdG9yZS9jYmJhY2t1cG1nci1iYWNrdXAuaHRtbCNvcHRpb25hbC0yIiwidHlwZSI6InN0cmluZyJ9LCJ1cmkiOnsiZGVzY3JpcHRpb24iOiJVUkkgaXMgYSByZWZlcmVuY2UgdG8gYSByZW1vdGUgb2JqZWN0IHN0b3JlLiBUaGlzIGlzIHRoZSBwcmVmaXggb2YgdGhlIG9iamVjdCBzdG9yZSBhbmQgdGhlIGJ1Y2tldCBuYW1lLiBpLmUgczM6Ly9idWNrZXQsIGF6Oi8vYnVja2V0IG9yIGdzOi8vYnVja2V0LiIsInBhdHRlcm4iOiJeKGF6fHMzfGdzKTovLy57Myx9JCIsInR5cGUiOiJzdHJpbmcifSwidXNlSUFNIjp7ImRlc2NyaXB0aW9uIjoiV2hldGhlciB0byBhbGxvdyB0aGUgYmFja3VwIFNESyB0byBhdHRlbXB0IHRvIGF1dGhlbnRpY2F0ZSB1c2luZyB0aGUgaW5zdGFuY2UgbWV0YWRhdGEgYXBpLiBJZiBzZXQsIHdpbGwgb3ZlcnJpZGUgYENvdWNoYmFzZUNsdXN0ZXIuc3BlYy5iYWNrdXAudXNlSUFNYC4iLCJ0eXBlIjoiYm9vbGVhbiJ9fSwidHlwZSI6Im9iamVjdCJ9LCJyZXBvIjp7ImRlc2NyaXB0aW9uIjoiUmVwbyBpcyB0aGUgYmFja3VwIGZvbGRlciB0byByZXN0b3JlIGZyb20uICBJZiBubyByZXBvc2l0b3J5IGlzIHNwZWNpZmllZCwgdGhlIGJhY2t1cCBjb250YWluZXIgd2lsbCBjaG9vc2UgdGhlIGxhdGVzdC4iLCJ0eXBlIjoic3RyaW5nIn0sInMzYnVja2V0Ijp7ImRlc2NyaXB0aW9uIjoiREVQUkVDQVRFRCAtIGJ5IHNwZWMub2JqZWN0U3RvcmUudXJpIE5hbWUgb2YgUzMgYnVja2V0IHRvIHJlc3RvcmUgZnJvbS4gSWYgbm9uLWVtcHR5IHRoaXMgb3ZlcnJpZGVzIGxvY2FsIGJhY2t1cC4iLCJwYXR0ZXJuIjoiXnMzOi8vW2EtejAtOS1cXC5cXC9dezMsNjN9JCIsInR5cGUiOiJzdHJpbmcifSwic2VydmljZXMiOnsiZGVmYXVsdCI6e30sImRlc2NyaXB0aW9uIjoiVGhpcyBsaXN0IGFjY2VwdHMgYSBjZXJ0YWluIHNldCBvZiBwYXJhbWV0ZXJzIHRoYXQgd2lsbCBkaXNhYmxlIHRoYXQgZGF0YSBhbmQgcHJldmVudCBpdCBiZWluZyByZXN0b3JlZC4iLCJwcm9wZXJ0aWVzIjp7ImFuYWx5dGljcyI6eyJkZWZhdWx0Ijp0cnVlLCJkZXNjcmlwdGlvbiI6IkFuYWx5dGljcyByZXN0b3JlcyBhbmFseXRpY3MgZGF0YXNldHMgZnJvbSB0aGUgYmFja3VwLiAgVGhpcyBmaWVsZCBkZWZhdWx0cyB0byB0cnVlLiIsInR5cGUiOiJib29sZWFuIn0sImJ1Y2tldENvbmZpZyI6eyJkZXNjcmlwdGlvbiI6IkJ1Y2tldENvbmZpZyByZXN0b3JlcyBhbGwgYnVja2V0IGNvbmZpZ3VyYXRpb24gc2V0dGluZ3MuIElmIHlvdSBhcmUgcmVzdG9yaW5nIHRvIGNsdXN0ZXIgd2l0aCBtYW5hZ2VkIGJ1Y2tldHMsIHRoZW4gdGhpcyBvcHRpb24gbWF5IGNvbmZsaWN0IHdpdGggZXhpc3RpbmcgYnVja2V0IHNldHRpbmdzLCBhbmQgdGhlIHJlc3VsdHMgYXJlIHVuZGVmaW5lZCwgc28gYXZvaWQgdXNlLiAgVGhpcyBvcHRpb24gaXMgaW50ZW5kZWQgZm9yIHVzZSB3aXRoIHVubWFuYWdlZCBidWNrZXRzLiAgTm90ZSB0aGF0IGJ1Y2tldCBkdXJhYmlsaXR5IHNldHRpbmdzIGFyZSBub3QgcmVzdG9yZWQgaW4gdmVyc2lvbnMgbGVzcyB0aGFuIGFuZCBlcXVhbCB0byAxLjEuMCwgYW5kIHdpbGwgbmVlZCB0byBiZSBtYW51YWxseSBhcHBsaWVkLiAgVGhpcyBmaWVsZCBkZWZhdWx0cyB0byBmYWxzZS4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJidWNrZXRRdWVyeSI6eyJkZWZhdWx0Ijp0cnVlLCJkZXNjcmlwdGlvbiI6IkJ1Y2tldFF1ZXJ5IGVuYWJsZXMgdGhlIGJhY2t1cCBvZiBxdWVyeSBtZXRhZGF0YSBmb3IgYWxsIGJ1Y2tldHMuIFRoaXMgZmllbGQgZGVmYXVsdHMgdG8gYHRydWVgLiIsInR5cGUiOiJib29sZWFuIn0sImNsdXN0ZXJBbmFseXRpY3MiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJDbHVzdGVyQW5hbHl0aWNzIGVuYWJsZXMgdGhlIGJhY2t1cCBvZiBjbHVzdGVyLXdpZGUgYW5hbHl0aWNzIGRhdGEsIGZvciBleGFtcGxlIHN5bm9ueW1zLiBUaGlzIGZpZWxkIGRlZmF1bHRzIHRvIGB0cnVlYC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJjbHVzdGVyUXVlcnkiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJDbHVzdGVyUXVlcnkgZW5hYmxlcyB0aGUgYmFja3VwIG9mIGNsdXN0ZXIgbGV2ZWwgcXVlcnkgbWV0YWRhdGEuIFRoaXMgZmllbGQgZGVmYXVsdHMgdG8gYHRydWVgLiIsInR5cGUiOiJib29sZWFuIn0sImRhdGEiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJEYXRhIHJlc3RvcmVzIGRvY3VtZW50IGRhdGEgZnJvbSB0aGUgYmFja3VwLiAgVGhpcyBmaWVsZCBkZWZhdWx0cyB0byB0cnVlLiIsInR5cGUiOiJib29sZWFuIn0sImV2ZW50aW5nIjp7ImRlZmF1bHQiOnRydWUsImRlc2NyaXB0aW9uIjoiRXZlbnRpbmcgcmVzdG9yZXMgZXZlbnRpbmcgZnVuY3Rpb25zIGZyb20gdGhlIGJhY2t1cC4gIFRoaXMgZmllbGQgZGVmYXVsdHMgdG8gdHJ1ZS4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJmdEFsaWFzIjp7ImRlZmF1bHQiOnRydWUsImRlc2NyaXB0aW9uIjoiRlRBbGlhcyByZXN0b3JlcyBmdWxsLXRleHQgc2VhcmNoIGFsaWFzZXMgZnJvbSB0aGUgYmFja3VwLiAgVGhpcyBmaWVsZCBkZWZhdWx0cyB0byB0cnVlLiIsInR5cGUiOiJib29sZWFuIn0sImZ0SW5kZXgiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJGVEluZGV4IHJlc3RvcmVzIGZ1bGwtdGV4dCBzZWFyY2ggaW5kZXhlcyBmcm9tIHRoZSBiYWNrdXAuICBUaGlzIGZpZWxkIGRlZmF1bHRzIHRvIHRydWUuIiwidHlwZSI6ImJvb2xlYW4ifSwiZ3NpSW5kZXgiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJHU0lJbmRleCByZXN0b3JlcyBkb2N1bWVudCBpbmRleGVzIGZyb20gdGhlIGJhY2t1cC4gIFRoaXMgZmllbGQgZGVmYXVsdHMgdG8gdHJ1ZS4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJ2aWV3cyI6eyJkZWZhdWx0Ijp0cnVlLCJkZXNjcmlwdGlvbiI6IlZpZXdzIHJlc3RvcmVzIHZpZXdzIGZyb20gdGhlIGJhY2t1cC4gIFRoaXMgZmllbGQgZGVmYXVsdHMgdG8gdHJ1ZS4iLCJ0eXBlIjoiYm9vbGVhbiJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzdGFnaW5nVm9sdW1lIjp7ImRlZmF1bHQiOnsic2l6ZSI6IjIwR2kifSwiZGVzY3JpcHRpb24iOiJTdGFnaW5nVm9sdW1lIGNvbnRhaW5zIGNvbmZpZ3VyYXRpb24gcmVsYXRlZCB0byB0aGUgZXBoZW1lcmFsIHZvbHVtZSB1c2VkIGFzIHN0YWdpbmcgd2hlbiByZXN0b3JpbmcgZnJvbSBhIGNsb3VkIGJhY2t1cC4iLCJwcm9wZXJ0aWVzIjp7InNpemUiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJkZWZhdWx0IjoiMjBHaSIsImRlc2NyaXB0aW9uIjoiU2l6ZSBhbGxvd3MgdGhlIHNwZWNpZmljYXRpb24gb2YgYSBzdGFnaW5nIHZvbHVtZS4gTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9jb25maWd1cmF0aW9uL21hbmFnZS1yZXNvdXJjZXMtY29udGFpbmVycy8jcmVzb3VyY2UtdW5pdHMtaW4ta3ViZXJuZXRlcyBUaGUgZXBoZW1lcmFsIHZvbHVtZSB3aWxsIG9ubHkgYmUgdXNlZCB3aGVuIHJlc3RvcmluZyBmcm9tIGEgY2xvdWQgcHJvdmlkZXIsIGlmIHRoZSBiYWNrdXAgam9iIHdhcyBjcmVhdGVkIHVzaW5nIGVwaGVtZXJhbCBzdG9yYWdlLiBPdGhlcndpc2UgdGhlIHJlc3RvcmUgam9iIHdpbGwgc2hhcmUgYSBzdGFnaW5nIHZvbHVtZSB3aXRoIHRoZSBiYWNrdXAgam9iLiIsInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsInR5cGUiOiJzdHJpbmciLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sInN0b3JhZ2VDbGFzc05hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIFN0b3JhZ2VDbGFzcyB0byB1c2UuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzdGFydCI6eyJkZXNjcmlwdGlvbiI6IlN0YXJ0IGRlbm90ZXMgdGhlIGZpcnN0IGJhY2t1cCB0byByZXN0b3JlIGZyb20uICBUaGlzIG1heSBiZSBzcGVjaWZpZWQgYXMgYW4gaW50ZWdlciBpbmRleCAoc3RhcnRpbmcgZnJvbSAxKSwgYSBzdHJpbmcgc3BlY2lmeWluZyBhIHNob3J0IGRhdGUgREQtTU0tWVlZWSwgdGhlIGJhY2t1cCBuYW1lLCBvciBvbmUgb2YgZWl0aGVyIGBzdGFydGAgb3IgYG9sZGVzdGAga2V5d29yZHMuIiwicHJvcGVydGllcyI6eyJpbnQiOnsiZGVzY3JpcHRpb24iOiJJbnQgcmVmZXJlbmNlcyBhIHJlbGF0aXZlIGJhY2t1cCBieSBpbmRleC4iLCJtaW5pbXVtIjoxLCJ0eXBlIjoiaW50ZWdlciJ9LCJzdHIiOnsiZGVzY3JpcHRpb24iOiJTdHIgcmVmZXJlbmNlcyBhbiBhYnNvbHV0ZSBiYWNrdXAgYnkgbmFtZS4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInRocmVhZHMiOnsiZGVmYXVsdCI6MSwiZGVzY3JpcHRpb24iOiJIb3cgbWFueSB0aHJlYWRzIHRvIHVzZSBkdXJpbmcgdGhlIHJlc3RvcmUuIiwibWluaW11bSI6MSwidHlwZSI6ImludGVnZXIifSwidHRsU2Vjb25kc0FmdGVyRmluaXNoZWQiOnsiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2Ygc2Vjb25kcyB0byBlbGFwc2UgYmVmb3JlIGEgY29tcGxldGVkIGpvYiBpcyBkZWxldGVkLiIsImZvcm1hdCI6ImludDMyIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifX0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlQmFja3VwUmVzdG9yZVN0YXR1cyBwcm92aWRlcyBzdGF0dXMgaW5kaWNhdGlvbnMgb2YgYSByZXN0b3JlIGZyb20gYmFja3VwLiAgVGhpcyBpbmNsdWRlcyB3aGV0aGVyIG9yIG5vdCB0aGUgcmVzdG9yZSBpcyBydW5uaW5nLCB3aGV0aGVyIHRoZSByZXN0b3JlIHN1Y2NlZWQgb3Igbm90LCBhbmQgdGhlIGR1cmF0aW9uIHRoZSByZXN0b3JlIHRvb2suIiwicHJvcGVydGllcyI6eyJhcmNoaXZlIjp7ImRlc2NyaXB0aW9uIjoiTG9jYXRpb24gb2YgQmFja3VwIEFyY2hpdmUuIiwidHlwZSI6InN0cmluZyJ9LCJiYWNrdXBzIjp7ImRlc2NyaXB0aW9uIjoiQmFja3VwcyBnaXZlcyB1cyBhIGZ1bGwgbGlzdCBvZiBhbGwgYmFja3VwcyBhbmQgdGhlaXIgcmVzcGVjdGl2ZSByZXBvc2l0b3J5IGxvY2F0aW9ucy4iLCJpdGVtcyI6eyJwcm9wZXJ0aWVzIjp7ImZ1bGwiOnsiZGVzY3JpcHRpb24iOiJGdWxsIGJhY2t1cCBpbnNpZGUgdGhlIHJlcG9zaXRvcnkuIiwidHlwZSI6InN0cmluZyJ9LCJpbmNyZW1lbnRhbHMiOnsiZGVzY3JpcHRpb24iOiJJbmNyZW1lbnRhbCBiYWNrdXBzIGluc2lkZSB0aGUgcmVwb3NpdG9yeS4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcmVwb3NpdG9yeS4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sImR1cmF0aW9uIjp7ImRlc2NyaXB0aW9uIjoiRHVyYXRpb24gdGVsbHMgdXMgaG93IGxvbmcgdGhlIGxhc3QgcmVzdG9yZSB0b29rLiAgTW9yZSBpbmZvOiBodHRwczovL2dvbGFuZy5vcmcvcGtnL3RpbWUvI1BhcnNlRHVyYXRpb24iLCJ0eXBlIjoic3RyaW5nIn0sImZhaWxlZCI6eyJkZXNjcmlwdGlvbiI6IkZhaWxlZCBpbmRpY2F0ZXMgd2hldGhlciB0aGUgbW9zdCByZWNlbnQgcmVzdG9yZSBoYXMgZmFpbGVkLiIsInR5cGUiOiJib29sZWFuIn0sImpvYiI6eyJkZXNjcmlwdGlvbiI6IkRFUFJFQ0FURUQgLSBmaWVsZCBtYXkgbm8gbG9uZ2VyIGJlIHBvcHVsYXRlZC4gSm9iIHRlbGxzIHVzIHdoaWNoIGpvYiBpcyBydW5uaW5nL3JhbiBsYXN0LiIsInR5cGUiOiJzdHJpbmcifSwibGFzdEZhaWx1cmUiOnsiZGVzY3JpcHRpb24iOiJMYXN0RmFpbHVyZSB0ZWxscyB1cyB0aGUgdGltZSB0aGUgbGFzdCBmYWlsZWQgcmVzdG9yZSBmYWlsZWQuIiwiZm9ybWF0IjoiZGF0ZS10aW1lIiwidHlwZSI6InN0cmluZyJ9LCJsYXN0UnVuIjp7ImRlc2NyaXB0aW9uIjoiTGFzdFJ1biB0ZWxscyB1cyB0aGUgdGltZSB0aGUgbGFzdCByZXN0b3JlIGpvYiBzdGFydGVkLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibGFzdFN1Y2Nlc3MiOnsiZGVzY3JpcHRpb24iOiJMYXN0U3VjY2VzcyBnaXZlcyB1cyB0aGUgdGltZSB0aGUgbGFzdCBzdWNjZXNzZnVsIHJlc3RvcmUgZmluaXNoZWQuIiwiZm9ybWF0IjoiZGF0ZS10aW1lIiwidHlwZSI6InN0cmluZyJ9LCJvdXRwdXQiOnsiZGVzY3JpcHRpb24iOiJERVBSRUNBVEVEIC0gZmllbGQgbWF5IG5vIGxvbmdlciBiZSBwb3B1bGF0ZWQuIE91dHB1dCByZXBvcnRzIHVzZWZ1bCBpbmZvcm1hdGlvbiBmcm9tIHRoZSBiYWNrdXAgcHJvY2Vzcy4iLCJ0eXBlIjoic3RyaW5nIn0sInBvZCI6eyJkZXNjcmlwdGlvbiI6IkRFUFJFQ0FURUQgLSBmaWVsZCBtYXkgbm8gbG9uZ2VyIGJlIHBvcHVsYXRlZC4gUG9kIHRlbGxzIHVzIHdoaWNoIHBvZCBpcyBydW5uaW5nL3JhbiBsYXN0LiIsInR5cGUiOiJzdHJpbmcifSwicmVwbyI6eyJkZXNjcmlwdGlvbiI6IlJlcG8gaXMgd2hlcmUgd2UgYXJlIGN1cnJlbnRseSBwZXJmb3JtaW5nIG9wZXJhdGlvbnMuIiwidHlwZSI6InN0cmluZyJ9LCJydW5uaW5nIjp7ImRlc2NyaXB0aW9uIjoiUnVubmluZyBpbmRpY2F0ZXMgd2hldGhlciBhIHJlc3RvcmUgaXMgY3VycmVudGx5IGJlaW5nIHBlcmZvcm1lZC4iLCJ0eXBlIjoiYm9vbGVhbiJ9fSwicmVxdWlyZWQiOlsiZmFpbGVkIiwicnVubmluZyJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZX1dfX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuNi40IiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjguMCJ9LCJuYW1lIjoiY291Y2hiYXNlbWVtY2FjaGVkYnVja2V0cy5jb3VjaGJhc2UuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJjb3VjaGJhc2UuY29tIiwibmFtZXMiOnsia2luZCI6IkNvdWNoYmFzZU1lbWNhY2hlZEJ1Y2tldCIsImxpc3RLaW5kIjoiQ291Y2hiYXNlTWVtY2FjaGVkQnVja2V0TGlzdCIsInBsdXJhbCI6ImNvdWNoYmFzZW1lbWNhY2hlZGJ1Y2tldHMiLCJzaW5ndWxhciI6ImNvdWNoYmFzZW1lbWNhY2hlZGJ1Y2tldCJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zcGVjLm1lbW9yeVF1b3RhIiwibmFtZSI6Im1lbW9yeSBxdW90YSIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6ImFnZSIsInR5cGUiOiJkYXRlIn1dLCJuYW1lIjoidjIiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiVGhlIENvdWNoYmFzZU1lbWNhY2hlZEJ1Y2tldCByZXNvdXJjZSBkZWZpbmVzIGEgc2V0IG9mIGRvY3VtZW50cyBpbiBDb3VjaGJhc2Ugc2VydmVyLiBBIENvdWNoYmFzZSBjbGllbnQgY29ubmVjdHMgdG8gYW5kIG9wZXJhdGVzIG9uIGEgYnVja2V0LCB3aGljaCBwcm92aWRlcyBpbmRlcGVuZGVudCBtYW5hZ2VtZW50IG9mIGEgc2V0IGRvY3VtZW50cyBhbmQgYSBzZWN1cml0eSBib3VuZGFyeSBmb3Igcm9sZSBiYXNlZCBhY2Nlc3MgY29udHJvbC4gQSBDb3VjaGJhc2VFcGhlbWVyYWxCdWNrZXQgcHJvdmlkZXMgaW4tbWVtb3J5IG9ubHkgc3RvcmFnZSBmb3IgZG9jdW1lbnRzIGNvbnRhaW5lZCBieSBpdC4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZWZhdWx0Ijp7fSwiZGVzY3JpcHRpb24iOiJDb3VjaGJhc2VNZW1jYWNoZWRCdWNrZXRTcGVjIGlzIHRoZSBzcGVjaWZpY2F0aW9uIGZvciBhIE1lbWNhY2hlZCBidWNrZXQgcmVzb3VyY2UsIGFuZCBhbGxvd3MgdGhlIGJ1Y2tldCB0byBiZSBjdXN0b21pemVkLiIsInByb3BlcnRpZXMiOnsiZW5hYmxlRmx1c2giOnsiZGVzY3JpcHRpb24iOiJFbmFibGVGbHVzaCBkZWZpbmVzIHdoZXRoZXIgYSBjbGllbnQgY2FuIGRlbGV0ZSBhbGwgZG9jdW1lbnRzIGluIGEgYnVja2V0LiBUaGlzIGZpZWxkIGRlZmF1bHRzIHRvIGZhbHNlLiIsInR5cGUiOiJib29sZWFuIn0sIm1lbW9yeVF1b3RhIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwiZGVmYXVsdCI6IjEwME1pIiwiZGVzY3JpcHRpb24iOiJNZW1vcnlRdW90YSBpcyBhIG1lbW9yeSBsaW1pdCB0byB0aGUgc2l6ZSBvZiBhIGJ1Y2tldC4gVGhlIG1lbW9yeSBxdW90YSBpcyBkZWZpbmVkIHBlciBDb3VjaGJhc2UgcG9kIHJ1bm5pbmcgdGhlIGRhdGEgc2VydmljZS4gIFRoaXMgZmllbGQgZGVmYXVsdHMgdG8sIGFuZCBtdXN0IGJlIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0byAxMDBNaS4gIE1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtcmVzb3VyY2VzLWNvbnRhaW5lcnMvI3Jlc291cmNlLXVuaXRzLWluLWt1YmVybmV0ZXMiLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ0eXBlIjoic3RyaW5nIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBpcyB0aGUgbmFtZSBvZiB0aGUgYnVja2V0IHdpdGhpbiBDb3VjaGJhc2Ugc2VydmVyLiAgQnkgZGVmYXVsdCB0aGUgT3BlcmF0b3Igd2lsbCB1c2UgdGhlIGBtZXRhZGF0YS5uYW1lYCBmaWVsZCB0byBkZWZpbmUgdGhlIGJ1Y2tldCBuYW1lLiAgVGhlIGBtZXRhZGF0YS5uYW1lYCBmaWVsZCBvbmx5IHN1cHBvcnRzIGEgc3Vic2V0IG9mIHRoZSBzdXBwb3J0ZWQgY2hhcmFjdGVyIHNldC4gIFdoZW4gc3BlY2lmaWVkLCB0aGlzIGZpZWxkIG92ZXJyaWRlcyBgbWV0YWRhdGEubmFtZWAuICBMZWdhbCBidWNrZXQgbmFtZXMgaGF2ZSBhIG1heGltdW0gbGVuZ3RoIG9mIDEwMCBjaGFyYWN0ZXJzIGFuZCBtYXkgYmUgY29tcG9zZWQgb2YgYW55IGNoYXJhY3RlciBmcm9tIFwiYS16XCIsIFwiQS1aXCIsIFwiMC05XCIgYW5kIFwiLV8lXFwuXCIuIiwibWF4TGVuZ3RoIjoxMDAsInBhdHRlcm4iOiJeW2EtekEtWjAtOS1fJVxcLl17MSwxMDB9JCIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZX1dfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuNi40IiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjguMCJ9LCJuYW1lIjoiY291Y2hiYXNlbWlncmF0aW9ucmVwbGljYXRpb25zLmNvdWNoYmFzZS5jb20ifSwic3BlYyI6eyJncm91cCI6ImNvdWNoYmFzZS5jb20iLCJuYW1lcyI6eyJraW5kIjoiQ291Y2hiYXNlTWlncmF0aW9uUmVwbGljYXRpb24iLCJsaXN0S2luZCI6IkNvdWNoYmFzZU1pZ3JhdGlvblJlcGxpY2F0aW9uTGlzdCIsInBsdXJhbCI6ImNvdWNoYmFzZW1pZ3JhdGlvbnJlcGxpY2F0aW9ucyIsInNpbmd1bGFyIjoiY291Y2hiYXNlbWlncmF0aW9ucmVwbGljYXRpb24ifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3BlYy5idWNrZXQiLCJuYW1lIjoiYnVja2V0IiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIuc3BlYy5yZW1vdGVCdWNrZXQiLCJuYW1lIjoicmVtb3RlIGJ1Y2tldCIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLnNwZWMucGF1c2VkIiwibmFtZSI6InBhdXNlZCIsInR5cGUiOiJib29sZWFuIn0seyJqc29uUGF0aCI6Ii5tZXRhZGF0YS5jcmVhdGlvblRpbWVzdGFtcCIsIm5hbWUiOiJhZ2UiLCJ0eXBlIjoiZGF0ZSJ9XSwibmFtZSI6InYyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBDb3VjaGJhc2VTY29wZU1pZ3JhdGlvbiByZXNvdXJjZSByZXByZXNlbnRzIHRoZSB1c2Ugb2YgdGhlIHNwZWNpYWwgbWlncmF0aW9uIG1hcHBpbmcgd2l0aGluIFhEQ1IgdG8gdGFrZSBhIGZpbHRlcmVkIGxpc3QgZnJvbSB0aGUgZGVmYXVsdCBzY29wZSBhbmQgY29sbGVjdGlvbiBvZiB0aGUgc291cmNlIGJ1Y2tldCwgcmVwbGljYXRlIGl0IHRvIG5hbWVkIHNjb3BlcyBhbmQgY29sbGVjdGlvbnMgd2l0aGluIHRoZSB0YXJnZXQgYnVja2V0LiBUaGUgYnVja2V0LXRvLWJ1Y2tldCByZXBsaWNhdGlvbiBjYW5ub3QgZHVwbGljYXRlIGFueSB1c2VkIGJ5IHRoZSBDb3VjaGJhc2VSZXBsaWNhdGlvbiByZXNvdXJjZSwgYXMgdGhlc2UgdHdvIHR5cGVzIG9mIHJlcGxpY2F0aW9uIGFyZSBtdXR1YWxseSBleGNsdXNpdmUgYmV0d2VlbiBidWNrZXRzLiBodHRwczovL2RvY3MuY291Y2hiYXNlLmNvbS9zZXJ2ZXIvY3VycmVudC9sZWFybi9jbHVzdGVycy1hbmQtYXZhaWxhYmlsaXR5L3hkY3Itd2l0aC1zY29wZXMtYW5kLWNvbGxlY3Rpb25zLmh0bWwjbWlncmF0aW9uIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sIm1pZ3JhdGlvbk1hcHBpbmciOnsiZGVzY3JpcHRpb24iOiJUaGUgbWlncmF0aW9uIG1hcHBpbmdzIHRvIHVzZSwgc2hvdWxkIG5ldmVyIGJlIGVtcHR5IGFzIHRoYXQgaXMganVzdCBhbiBpbXBsaWNpdCBidWNrZXQtdG8tYnVja2V0IHJlcGxpY2F0aW9uIHRoZW4uIiwicHJvcGVydGllcyI6eyJtYXBwaW5ncyI6eyJkZXNjcmlwdGlvbiI6IlRoZSBtaWdyYXRpb24gbWFwcGluZ3MgdG8gdXNlLCBzaG91bGQgbmV2ZXIgYmUgZW1wdHkgYXMgdGhhdCBpcyBqdXN0IGFuIGltcGxpY2l0IGJ1Y2tldC10by1idWNrZXQgcmVwbGljYXRpb24gdGhlbi4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkluZGljYXRlcyB3aGV0aGVyIHRoaXMgaXMgdXNpbmcgbWlncmF0aW9uIG1hcHBpbmcgb3Igbm90LiBUaGlzIGlzIG9ubHkgdmFsaWQgd2hlbiB1c2luZyB0aGUgZGVmYXVsdCBzY29wZS9jb2xsZWN0aW9uLiIsInByb3BlcnRpZXMiOnsiZmlsdGVyIjp7ImRlZmF1bHQiOiJfZGVmYXVsdC5fZGVmYXVsdCIsImRlc2NyaXB0aW9uIjoiQSBmaWx0ZXIgdG8gc2VsZWN0IGZyb20gdGhlIHNvdXJjZSBkZWZhdWx0IHNjb3BlIGFuZCBjb2xsZWN0aW9uLiBEZWZhdWx0cyB0byBzZWxlY3QgZXZlcnl0aGluZyBpbiB0aGUgZGVmYXVsdCBzY29wZSBhbmQgY29sbGVjdGlvbi4iLCJ0eXBlIjoic3RyaW5nIn0sInRhcmdldEtleXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoiVGhlIGRlc3RpbmF0aW9uIG9mIG91ciBtaWdyYXRpb24sIG11c3QgYmUgYSBzY29wZSBhbmQgY29sbGVjdGlvbi4iLCJwcm9wZXJ0aWVzIjp7ImNvbGxlY3Rpb24iOnsiZGVzY3JpcHRpb24iOiJUaGUgb3B0aW9uYWwgY29sbGVjdGlvbiB3aXRoaW4gdGhlIHNjb3BlLiBNYXkgYmUgZW1wdHkgdG8ganVzdCB3b3JrIGF0IHNjb3BlIGxldmVsLiIsIm1heExlbmd0aCI6MjUxLCJtaW5MZW5ndGgiOjEsInBhdHRlcm4iOiJeKF9kZWZhdWx0fFthLXpBLVowLTlcXC1dW2EtekEtWjAtOVxcLSVfXXswLDI1MH0pJCIsInR5cGUiOiJzdHJpbmcifSwic2NvcGUiOnsiZGVzY3JpcHRpb24iOiJUaGUgc2NvcGUgdG8gdXNlLiIsIm1heExlbmd0aCI6MjUxLCJtaW5MZW5ndGgiOjEsInBhdHRlcm4iOiJeKF9kZWZhdWx0fFthLXpBLVowLTlcXC1dW2EtekEtWjAtOVxcLSVfXXswLDI1MH0pJCIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInNjb3BlIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInRhcmdldEtleXNwYWNlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJtYXBwaW5ncyJdLCJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJDb3VjaGJhc2VSZXBsaWNhdGlvblNwZWMgYWxsb3dzIGNvbmZpZ3VyYXRpb24gb2YgYW4gWERDUiByZXBsaWNhdGlvbi4iLCJwcm9wZXJ0aWVzIjp7ImJ1Y2tldCI6eyJkZXNjcmlwdGlvbiI6IkJ1Y2tldCBpcyB0aGUgc291cmNlIGJ1Y2tldCB0byByZXBsaWNhdGUgZnJvbS4gIFRoaXMgcmVmZXJzIHRvIHRoZSBDb3VjaGJhc2UgYnVja2V0IG5hbWUsIG5vdCB0aGUgcmVzb3VyY2UgbmFtZSBvZiB0aGUgYnVja2V0LiAgQSBidWNrZXQgd2l0aCB0aGlzIG5hbWUgbXVzdCBiZSBkZWZpbmVkIG9uIHRoaXMgY2x1c3Rlci4gIExlZ2FsIGJ1Y2tldCBuYW1lcyBoYXZlIGEgbWF4aW11bSBsZW5ndGggb2YgMTAwIGNoYXJhY3RlcnMgYW5kIG1heSBiZSBjb21wb3NlZCBvZiBhbnkgY2hhcmFjdGVyIGZyb20gXCJhLXpcIiwgXCJBLVpcIiwgXCIwLTlcIiBhbmQgXCItXyVcXC5cIi4iLCJtYXhMZW5ndGgiOjEwMCwicGF0dGVybiI6Il5bYS16QS1aMC05LV8lXFwuXXsxLDEwMH0kIiwidHlwZSI6InN0cmluZyJ9LCJjb21wcmVzc2lvblR5cGUiOnsiZGVmYXVsdCI6IkF1dG8iLCJkZXNjcmlwdGlvbiI6IkNvbXByZXNzaW9uVHlwZSBpcyB0aGUgdHlwZSBvZiBjb21wcmVzc2lvbiB0byBhcHBseSB0byB0aGUgcmVwbGljYXRpb24uIFdoZW4gTm9uZSwgbm8gY29tcHJlc3Npb24gd2lsbCBiZSBhcHBsaWVkIHRvIGRvY3VtZW50cyBhcyB0aGV5IGFyZSB0cmFuc2ZlcnJlZCBiZXR3ZWVuIGNsdXN0ZXJzLiAgV2hlbiBBdXRvLCBDb3VjaGJhc2Ugc2VydmVyIHdpbGwgYXV0b21hdGljYWxseSBjb21wcmVzcyBkb2N1bWVudHMgYXMgdGhleSBhcmUgdHJhbnNmZXJyZWQgdG8gcmVkdWNlIGJhbmR3aWR0aCByZXF1aXJlbWVudHMuIFRoaXMgZmllbGQgbXVzdCBiZSBvbmUgb2YgXCJOb25lXCIgb3IgXCJBdXRvXCIsIGRlZmF1bHRpbmcgdG8gXCJBdXRvXCIuIiwiZW51bSI6WyJOb25lIiwiQXV0byJdLCJ0eXBlIjoic3RyaW5nIn0sImZpbHRlckV4cHJlc3Npb24iOnsiZGVzY3JpcHRpb24iOiJGaWx0ZXJFeHByZXNzaW9uIGFsbG93cyBjZXJ0YWluIGRvY3VtZW50cyB0byBiZSBmaWx0ZXJlZCBvdXQgb2YgdGhlIHJlcGxpY2F0aW9uLiIsInR5cGUiOiJzdHJpbmcifSwicGF1c2VkIjp7ImRlc2NyaXB0aW9uIjoiUGF1c2VkIGFsbG93cyBhIHJlcGxpY2F0aW9uIHRvIGJlIHN0b3BwZWQgYW5kIHJlc3RhcnRlZCB3aXRob3V0IGhhdmluZyB0byByZXN0YXJ0IHRoZSByZXBsaWNhdGlvbiBmcm9tIHRoZSBiZWdpbm5pbmcuIiwidHlwZSI6ImJvb2xlYW4ifSwicmVtb3RlQnVja2V0Ijp7ImRlc2NyaXB0aW9uIjoiUmVtb3RlQnVja2V0IGlzIHRoZSByZW1vdGUgYnVja2V0IG5hbWUgdG8gc3luY2hyb25pemUgdG8uICBUaGlzIHJlZmVycyB0byB0aGUgQ291Y2hiYXNlIGJ1Y2tldCBuYW1lLCBub3QgdGhlIHJlc291cmNlIG5hbWUgb2YgdGhlIGJ1Y2tldC4gIExlZ2FsIGJ1Y2tldCBuYW1lcyBoYXZlIGEgbWF4aW11bSBsZW5ndGggb2YgMTAwIGNoYXJhY3RlcnMgYW5kIG1heSBiZSBjb21wb3NlZCBvZiBhbnkgY2hhcmFjdGVyIGZyb20gXCJhLXpcIiwgXCJBLVpcIiwgXCIwLTlcIiBhbmQgXCItXyVcXC5cIi4iLCJtYXhMZW5ndGgiOjEwMCwicGF0dGVybiI6Il5bYS16QS1aMC05LV8lXFwuXXsxLDEwMH0kIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiYnVja2V0IiwicmVtb3RlQnVja2V0Il0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbIm1pZ3JhdGlvbk1hcHBpbmciLCJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZX1dfX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuNi40IiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjguMCJ9LCJuYW1lIjoiY291Y2hiYXNlcm9sZWJpbmRpbmdzLmNvdWNoYmFzZS5jb20ifSwic3BlYyI6eyJncm91cCI6ImNvdWNoYmFzZS5jb20iLCJuYW1lcyI6eyJraW5kIjoiQ291Y2hiYXNlUm9sZUJpbmRpbmciLCJsaXN0S2luZCI6IkNvdWNoYmFzZVJvbGVCaW5kaW5nTGlzdCIsInBsdXJhbCI6ImNvdWNoYmFzZXJvbGViaW5kaW5ncyIsInNpbmd1bGFyIjoiY291Y2hiYXNlcm9sZWJpbmRpbmcifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7Im5hbWUiOiJ2MiIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJDb3VjaGJhc2VSb2xlQmluZGluZyBhbGxvd3MgYXNzb2NpYXRpb24gb2YgQ291Y2hiYXNlIHVzZXJzIHdpdGggZ3JvdXBzLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlUm9sZUJpbmRpbmdTcGVjIGRlZmluZXMgdGhlIGdyb3VwIG9mIHN1YmplY3RzIGkuZS4gdXNlcnMsIGFuZCB0aGUgcm9sZSBpLmUuIGdyb3VwIHRoZXkgYXJlIGEgbWVtYmVyIG9mLiIsInByb3BlcnRpZXMiOnsicm9sZVJlZiI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUdyb3VwIGJlaW5nIGJvdW5kIHRvIHN1YmplY3RzLiIsInByb3BlcnRpZXMiOnsia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgb2Ygcm9sZSB0byB1c2UgZm9yIGJpbmRpbmcuIiwiZW51bSI6WyJDb3VjaGJhc2VHcm91cCJdLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHJvbGUgcmVzb3VyY2UgdG8gdXNlIGZvciBiaW5kaW5nLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImtpbmQiLCJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3ViamVjdHMiOnsiZGVzY3JpcHRpb24iOiJMaXN0IG9mIHVzZXJzIHRvIGJpbmQgYSByb2xlIHRvLiIsIml0ZW1zIjp7InByb3BlcnRpZXMiOnsia2luZCI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZSB1c2VyL2dyb3VwIGtpbmQuIiwiZW51bSI6WyJDb3VjaGJhc2VVc2VyIl0sInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgQ291Y2hiYXNlIHVzZXIgcmVzb3VyY2UuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsia2luZCIsIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbInJvbGVSZWYiLCJzdWJqZWN0cyJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZX1dfX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuNi40IiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjguMCJ9LCJuYW1lIjoiY291Y2hiYXNldXNlcnMuY291Y2hiYXNlLmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiY291Y2hiYXNlLmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJDb3VjaGJhc2VVc2VyIiwibGlzdEtpbmQiOiJDb3VjaGJhc2VVc2VyTGlzdCIsInBsdXJhbCI6ImNvdWNoYmFzZXVzZXJzIiwic2luZ3VsYXIiOiJjb3VjaGJhc2V1c2VyIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjIiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlVXNlciBhbGxvd3MgdGhlIGF1dG9tYXRpb24gb2YgQ291Y2hiYXNlIHVzZXIgbWFuYWdlbWVudC4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZVVzZXJTcGVjIGFsbG93cyB0aGUgc3BlY2lmaWNhdGlvbiBvZiBDb3VjaGJhc2UgdXNlciBjb25maWd1cmF0aW9uLiIsInByb3BlcnRpZXMiOnsiYXV0aERvbWFpbiI6eyJkZXNjcmlwdGlvbiI6IlRoZSBkb21haW4gd2hpY2ggcHJvdmlkZXMgdXNlciBhdXRoZW50aWNhdGlvbi4iLCJlbnVtIjpbImxvY2FsIiwiZXh0ZXJuYWwiXSwidHlwZSI6InN0cmluZyJ9LCJhdXRoU2VjcmV0Ijp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiBLdWJlcm5ldGVzIHNlY3JldCB3aXRoIHBhc3N3b3JkIGZvciBDb3VjaGJhc2UgZG9tYWluLiIsInR5cGUiOiJzdHJpbmcifSwiZnVsbE5hbWUiOnsiZGVzY3JpcHRpb24iOiJGdWxsIE5hbWUgb2YgQ291Y2hiYXNlIHVzZXIuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiYXV0aERvbWFpbiJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZX1dfX0=
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.connect.redhat.com/couchbase/cloud-native-gateway@sha256:50bbc00cce14ec968c9b8e9ef06a6c5bd2860d38d973cf7af7271d4ff66fe9cc
  name: couchbase-cloud-native-gateway
- image: registry.connect.redhat.com/couchbase/exporter@sha256:de3bacf8233553452db1d9cec7c98b28d12c41aa025d830d6b7c5de0da9723b1
  name: couchbase-metrics
- image: registry.connect.redhat.com/couchbase/operator-backup@sha256:382511f532b0206d2bb0cecc8f91b055809b5ccf89136b6d37d55a40e266812f
  name: couchbase-backup
- image: registry.connect.redhat.com/couchbase/operator-bundle@sha256:ea8cf50c89e2c84ae3016cc612264a2a57602020818054f5e55f6a3dfb773eb1
  name: ""
- image: registry.connect.redhat.com/couchbase/operator@sha256:1f0a6865c360a14ba98706fd6fe8dff3bdbdede32e3622f93f19c82e377ca33f
  name: couchbase-operator
- image: registry.connect.redhat.com/couchbase/server@sha256:033c0b2b8eb12ac63a158754dce20d9787a470c77252c60bd4d9e11f5b2dbc7a
  name: couchbase-server
- image: registry.connect.redhat.com/couchbase/server@sha256:437cd5aa05ff057b17f47d2500dec7cefca21682eb0f4badff4538dc164bc1a7
  name: couchbase-server-7_6_3_4
- image: registry.connect.redhat.com/couchbase/server@sha256:4e0d41b559c5d536aa06709457d6c788fd039b0c915c14f2d429213bdfeff824
  name: couchbase-server-7_2_6_2
- image: registry.connect.redhat.com/couchbase/server@sha256:643272bd58b0b584863400d281f1dcb147099c7f2120a947347be4b1f97391a7
  name: couchbase-server-7_6_2_3
schema: olm.bundle
---
image: registry.connect.redhat.com/couchbase/operator-bundle@sha256:7a04dfd687dfe1646bd59a39c9e88781ffb815085bbd15f6305f6eac5f59bc49
name: couchbase-operator.v2.6.4-7
package: couchbase-enterprise-certified
properties:
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseAutoscaler
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseBackup
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseBackupRestore
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseBucket
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseCluster
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseCollection
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseCollectionGroup
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseEphemeralBucket
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseGroup
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseMemcachedBucket
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseMigrationReplication
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseReplication
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseRoleBinding
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseScope
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseScopeGroup
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseUser
    version: v2
- type: olm.package
  value:
    packageName: couchbase-enterprise-certified
    version: 2.6.4-7
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuNi40IiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjguMCJ9LCJuYW1lIjoiY291Y2hiYXNlY29sbGVjdGlvbmdyb3Vwcy5jb3VjaGJhc2UuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJjb3VjaGJhc2UuY29tIiwibmFtZXMiOnsia2luZCI6IkNvdWNoYmFzZUNvbGxlY3Rpb25Hcm91cCIsImxpc3RLaW5kIjoiQ291Y2hiYXNlQ29sbGVjdGlvbkdyb3VwTGlzdCIsInBsdXJhbCI6ImNvdWNoYmFzZWNvbGxlY3Rpb25ncm91cHMiLCJzaW5ndWxhciI6ImNvdWNoYmFzZWNvbGxlY3Rpb25ncm91cCJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUNvbGxlY3Rpb25Hcm91cCByZXByZXNlbnQgdGhlIGZpbmVzdCBncmFpbmVkIHNpemUgb2YgZGF0YSBzdG9yYWdlIGluIENvdWNoYmFzZS4gQ29sbGVjdGlvbnMgY29udGFpbiBhbGwgZG9jdW1lbnRzIGFuZCBpbmRleGVzIGluIHRoZSBzeXN0ZW0uICBDb2xsZWN0aW9ucyBhbHNvIGZvcm0gdGhlIGZpbmVzdCBncmFpbiBiYXNpcyBmb3Igcm9sZS1iYXNlZCBhY2Nlc3MgY29udHJvbCAoUkJBQykgYW5kIGNyb3NzLWRhdGFjZW50ZXIgcmVwbGljYXRpb24gKFhEQ1IpLiAgSW4gb3JkZXIgdG8gYmUgY29uc2lkZXJlZCBieSB0aGUgT3BlcmF0b3IsIGV2ZXJ5IGNvbGxlY3Rpb24gZ3JvdXAgbXVzdCBiZSByZWZlcmVuY2VkIGJ5IGEgYENvdWNoYmFzZVNjb3BlYCBvciBgQ291Y2hiYXNlU2NvcGVHcm91cGAgcmVzb3VyY2UuICBVbmxpa2UgdGhlIENvdWNoYmFzZUNvbGxlY3Rpb24gcmVzb3VyY2UsIGEgY29sbGVjdGlvbiBncm91cCByZXByZXNlbnRzIG11bHRpcGxlIGNvbGxlY3Rpb25zLCB3aXRoIGNvbW1vbiBjb25maWd1cmF0aW9uIHBhcmFtZXRlcnMsIHRvIGJlIGV4cHJlc3NlZCBhcyBhIHNpbmdsZSByZXNvdXJjZSwgbWluaW1pemluZyByZXF1aXJlZCBjb25maWd1cmF0aW9uIGFuZCBLdWJlcm5ldGVzIEFQSSB0cmFmZmljLiAgSXQgYWxzbyBmb3JtcyB0aGUgYmFzaXMgb2YgQ291Y2hiYXNlIFJCQUMgc2VjdXJpdHkgYm91bmRhcmllcy4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiB0aGUgcmVzb3VyY2UuIiwicHJvcGVydGllcyI6eyJtYXhUVEwiOnsiZGVzY3JpcHRpb24iOiJNYXhUVEwgZGVmaW5lcyBob3cgbG9uZyBhIGRvY3VtZW50IGlzIHBlcm1pdHRlZCB0byBleGlzdCBmb3IsIHdpdGhvdXQgbW9kaWZpY2F0aW9uLCB1bnRpbCBpdCBpcyBhdXRvbWF0aWNhbGx5IGRlbGV0ZWQuICBUaGlzIGZpZWxkIHRha2VzIHByZWNlZGVuY2Ugb3ZlciBhbnkgVFRMIGRlZmluZWQgYXQgdGhlIGJ1Y2tldCBsZXZlbC4gIFRoaXMgaXMgYSBkZWZhdWx0LCBhbmQgbWF4aW11bSB0aW1lLXRvLWxpdmUgYW5kIG1heSBiZSBzZXQgdG8gYSBsb3dlciB2YWx1ZSBieSB0aGUgY2xpZW50LiAgSWYgdGhlIGNsaWVudCBzcGVjaWZpZXMgYSBoaWdoZXIgdmFsdWUsIHRoZW4gaXQgaXMgdHJ1bmNhdGVkIHRvIHRoZSBtYXhpbXVtIGR1cmFiaWxpdHkuICBEb2N1bWVudHMgYXJlIHJlbW92ZWQgYnkgQ291Y2hiYXNlLCBhZnRlciB0aGV5IGhhdmUgZXhwaXJlZCwgd2hlbiBlaXRoZXIgYWNjZXNzZWQsIHRoZSBleHBpcnkgcGFnZXIgaXMgcnVuLCBvciB0aGUgYnVja2V0IGlzIGNvbXBhY3RlZC4gIFdoZW4gc2V0IHRvIDAsIHRoZW4gZG9jdW1lbnRzIGFyZSBub3QgZXhwaXJlZCBieSBkZWZhdWx0LiAgVGhpcyBmaWVsZCBtdXN0IGJlIGEgZHVyYXRpb24gaW4gdGhlIHJhbmdlIDAtMjE0NzQ4MzY0OHMsIGRlZmF1bHRpbmcgdG8gMC4gIE1vcmUgaW5mbzogaHR0cHM6Ly9nb2xhbmcub3JnL3BrZy90aW1lLyNQYXJzZUR1cmF0aW9uIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lcyI6eyJkZXNjcmlwdGlvbiI6Ik5hbWVzIHNwZWNpZmllcyB0aGUgbmFtZXMgb2YgdGhlIGNvbGxlY3Rpb25zLiAgVW5saWtlIENvdWNoYmFzZUNvbGxlY3Rpb24sIHdoaWNoIHNwZWNpZmllcyBhIHNpbmdsZSBjb2xsZWN0aW9uLCBhIGNvbGxlY3Rpb24gZ3JvdXAgc3BlY2lmaWVzIG11bHRpcGxlLCBhbmQgdGhlIGNvbGxlY3Rpb24gZ3JvdXAgbXVzdCBzcGVjaWZ5IGF0IGxlYXN0IG9uZSBjb2xsZWN0aW9uIG5hbWUuIEFueSBjb2xsZWN0aW9uIG5hbWVzIHNwZWNpZmllZCBtdXN0IGJlIHVuaXF1ZS4gQ29sbGVjdGlvbiBuYW1lcyBtdXN0IGJlIDEtMjUxIGNoYXJhY3RlcnMgaW4gbGVuZ3RoLCBjb250YWluIG9ubHkgW2EtekEtWjAtOV8tJV0gYW5kIG5vdCBzdGFydCB3aXRoIGVpdGhlciBfIG9yICUuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJTY29wZU9yQ29sbGVjdGlvbk5hbWUgaXMgYSBnZW5lcmljIHR5cGUgdG8gY2FwdHVyZSBhIHZhbGlkIHNjb3BlIG9yIGNvbGxlY3Rpb24gbmFtZS4gIFRoZXNlIG11c3QgY29uc2lzdCBvZiAxLTI1MSBjaGFyYWN0ZXJzLCBpbmNsdWRlIG9ubHkgQS1aLCBhLXosIDAtOSwgLSwgXyBvciAlLCBhbmQgbXVzdCBub3Qgc3RhcnQgd2l0aCBfICh3aGljaCBpcyBhbiBpbnRlcm5hbCBtYXJrZXIpIG9yICUgKHdoaWNoIGlzIHByb2JhYmx5IGFuIGVzY2FwZSBjaGFyYWN0ZXIgaW4gbGFuZ3VhZ2UgWCkuIiwibWF4TGVuZ3RoIjoyNTEsIm1pbkxlbmd0aCI6MSwicGF0dGVybiI6Il5bYS16QS1aMC05XFwtXVthLXpBLVowLTlcXC0lX117MCwyNTB9JCIsInR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6InNldCJ9fSwicmVxdWlyZWQiOlsibmFtZXMiXSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWV9XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuNi40IiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjguMCJ9LCJuYW1lIjoiY291Y2hiYXNlY29sbGVjdGlvbnMuY291Y2hiYXNlLmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiY291Y2hiYXNlLmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJDb3VjaGJhc2VDb2xsZWN0aW9uIiwibGlzdEtpbmQiOiJDb3VjaGJhc2VDb2xsZWN0aW9uTGlzdCIsInBsdXJhbCI6ImNvdWNoYmFzZWNvbGxlY3Rpb25zIiwic2luZ3VsYXIiOiJjb3VjaGJhc2Vjb2xsZWN0aW9uIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjIiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlQ29sbGVjdGlvbiByZXByZXNlbnQgdGhlIGZpbmVzdCBncmFpbmVkIHNpemUgb2YgZGF0YSBzdG9yYWdlIGluIENvdWNoYmFzZS4gQ29sbGVjdGlvbnMgY29udGFpbiBhbGwgZG9jdW1lbnRzIGFuZCBpbmRleGVzIGluIHRoZSBzeXN0ZW0uICBDb2xsZWN0aW9ucyBhbHNvIGZvcm0gdGhlIGZpbmVzdCBncmFpbiBiYXNpcyBmb3Igcm9sZS1iYXNlZCBhY2Nlc3MgY29udHJvbCAoUkJBQykgYW5kIGNyb3NzLWRhdGFjZW50ZXIgcmVwbGljYXRpb24gKFhEQ1IpLiAgSW4gb3JkZXIgdG8gYmUgY29uc2lkZXJlZCBieSB0aGUgT3BlcmF0b3IsIGV2ZXJ5IGNvbGxlY3Rpb24gbXVzdCBiZSByZWZlcmVuY2VkIGJ5IGEgYENvdWNoYmFzZVNjb3BlYCBvciBgQ291Y2hiYXNlU2NvcGVHcm91cGAgcmVzb3VyY2UuIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVmYXVsdCI6e30sImRlc2NyaXB0aW9uIjoiU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIHRoZSByZXNvdXJjZS4iLCJwcm9wZXJ0aWVzIjp7Im1heFRUTCI6eyJkZXNjcmlwdGlvbiI6Ik1heFRUTCBkZWZpbmVzIGhvdyBsb25nIGEgZG9jdW1lbnQgaXMgcGVybWl0dGVkIHRvIGV4aXN0IGZvciwgd2l0aG91dCBtb2RpZmljYXRpb24sIHVudGlsIGl0IGlzIGF1dG9tYXRpY2FsbHkgZGVsZXRlZC4gIFRoaXMgZmllbGQgdGFrZXMgcHJlY2VkZW5jZSBvdmVyIGFueSBUVEwgZGVmaW5lZCBhdCB0aGUgYnVja2V0IGxldmVsLiAgVGhpcyBpcyBhIGRlZmF1bHQsIGFuZCBtYXhpbXVtIHRpbWUtdG8tbGl2ZSBhbmQgbWF5IGJlIHNldCB0byBhIGxvd2VyIHZhbHVlIGJ5IHRoZSBjbGllbnQuICBJZiB0aGUgY2xpZW50IHNwZWNpZmllcyBhIGhpZ2hlciB2YWx1ZSwgdGhlbiBpdCBpcyB0cnVuY2F0ZWQgdG8gdGhlIG1heGltdW0gZHVyYWJpbGl0eS4gIERvY3VtZW50cyBhcmUgcmVtb3ZlZCBieSBDb3VjaGJhc2UsIGFmdGVyIHRoZXkgaGF2ZSBleHBpcmVkLCB3aGVuIGVpdGhlciBhY2Nlc3NlZCwgdGhlIGV4cGlyeSBwYWdlciBpcyBydW4sIG9yIHRoZSBidWNrZXQgaXMgY29tcGFjdGVkLiAgV2hlbiBzZXQgdG8gMCwgdGhlbiBkb2N1bWVudHMgYXJlIG5vdCBleHBpcmVkIGJ5IGRlZmF1bHQuICBUaGlzIGZpZWxkIG11c3QgYmUgYSBkdXJhdGlvbiBpbiB0aGUgcmFuZ2UgMC0yMTQ3NDgzNjQ4cywgZGVmYXVsdGluZyB0byAwLiAgTW9yZSBpbmZvOiBodHRwczovL2dvbGFuZy5vcmcvcGtnL3RpbWUvI1BhcnNlRHVyYXRpb24iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIHNwZWNpZmllcyB0aGUgbmFtZSBvZiB0aGUgY29sbGVjdGlvbi4gIEJ5IGRlZmF1bHQsIHRoZSBtZXRhZGF0YS5uYW1lIGlzIHVzZWQgdG8gZGVmaW5lIHRoZSBjb2xsZWN0aW9uIG5hbWUsIGhvd2V2ZXIsIGR1ZSB0byB0aGUgbGltaXRlZCBjaGFyYWN0ZXIgc2V0LCB0aGlzIGZpZWxkIGNhbiBiZSB1c2VkIHRvIG92ZXJyaWRlIHRoZSBkZWZhdWx0IGFuZCBwcm92aWRlIHRoZSBmdWxsIGZ1bmN0aW9uYWxpdHkuIEFkZGl0aW9uYWxseSB0aGUgYG1ldGFkYXRhLm5hbWVgIGZpZWxkIGlzIGEgRE5TIGxhYmVsLCBhbmQgdGh1cyBsaW1pdGVkIHRvIDYzIGNoYXJhY3RlcnMsIHRoaXMgZmllbGQgbXVzdCBiZSB1c2VkIGlmIHRoZSBuYW1lIGlzIGxvbmdlciB0aGFuIHRoaXMgbGltaXQuIENvbGxlY3Rpb24gbmFtZXMgbXVzdCBiZSAxLTI1MSBjaGFyYWN0ZXJzIGluIGxlbmd0aCwgY29udGFpbiBvbmx5IFthLXpBLVowLTlfLSVdIGFuZCBub3Qgc3RhcnQgd2l0aCBlaXRoZXIgXyBvciAlLiIsIm1heExlbmd0aCI6MjUxLCJtaW5MZW5ndGgiOjEsInBhdHRlcm4iOiJeW2EtekEtWjAtOVxcLV1bYS16QS1aMC05XFwtJV9dezAsMjUwfSQiLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWV9XX19
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuNi40IiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjguMCJ9LCJuYW1lIjoiY291Y2hiYXNlYXV0b3NjYWxlcnMuY291Y2hiYXNlLmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiY291Y2hiYXNlLmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJDb3VjaGJhc2VBdXRvc2NhbGVyIiwibGlzdEtpbmQiOiJDb3VjaGJhc2VBdXRvc2NhbGVyTGlzdCIsInBsdXJhbCI6ImNvdWNoYmFzZWF1dG9zY2FsZXJzIiwic2hvcnROYW1lcyI6WyJjYmEiXSwic2luZ3VsYXIiOiJjb3VjaGJhc2VhdXRvc2NhbGVyIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7Impzb25QYXRoIjoiLnNwZWMuc2l6ZSIsIm5hbWUiOiJzaXplIiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIuc3BlYy5zZXJ2ZXJzIiwibmFtZSI6InNlcnZlcnMiLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjIiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlQXV0b3NjYWxlciBwcm92aWRlcyBhbiBpbnRlcmZhY2UgZm9yIHRoZSBLdWJlcm5ldGVzIEhvcml6b250YWwgUG9kIEF1dG9zY2FsZXIgdG8gaW50ZXJhY3Qgd2l0aCB0aGUgQ291Y2hiYXNlIGNsdXN0ZXIgYW5kIHByb3ZpZGUgYXV0b3NjYWxpbmcuICBUaGlzIHJlc291cmNlIGlzIG5vdCBkZWZpbmVkIGJ5IHRoZSBlbmQgdXNlciwgYW5kIGlzIG1hbmFnZWQgYnkgdGhlIE9wZXJhdG9yLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlQXV0b3NjYWxlclNwZWMgYWxsb3dzIGNvbnRyb2wgb3ZlciBhbiBhdXRvc2NhbGluZyBncm91cC4iLCJwcm9wZXJ0aWVzIjp7InNlcnZlcnMiOnsiZGVzY3JpcHRpb24iOiJTZXJ2ZXJzIHNwZWNpZmllcyB0aGUgc2VydmVyIGdyb3VwIHRoYXQgdGhpcyBhdXRvc2NhbGVyIGJlbG9uZ3MgdG8uIiwibWluTGVuZ3RoIjoxLCJ0eXBlIjoic3RyaW5nIn0sInNpemUiOnsiZGVzY3JpcHRpb24iOiJTaXplIGFsbG93cyB0aGUgc2VydmVyIGdyb3VwIHRvIGJlIGR5bmFtaWNhbGx5IHNjYWxlZC4iLCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9fSwicmVxdWlyZWQiOlsic2VydmVycyIsInNpemUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJDb3VjaGJhc2VBdXRvc2NhbGVyU3RhdHVzIHByb3ZpZGVzIGluZm9ybWF0aW9uIHRvIHRoZSBIUEEgdG8gYXNzaXN0IHdpdGggc2NhbGluZyBzZXJ2ZXIgZ3JvdXBzLiIsInByb3BlcnRpZXMiOnsibGFiZWxTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IkxhYmVsU2VsZWN0b3IgYWxsb3dzIHRoZSBIUEEgdG8gc2VsZWN0IHJlc291cmNlcyB0byBtb25pdG9yIGZvciByZXNvdXJjZSB1dGlsaXphdGlvbiBpbiBvcmRlciB0byB0cmlnZ2VyIHNjYWxpbmcuIiwidHlwZSI6InN0cmluZyJ9LCJzaXplIjp7ImRlc2NyaXB0aW9uIjoiU2l6ZSBpcyB0aGUgY3VycmVudCBzaXplIG9mIHRoZSBzZXJ2ZXIgZ3JvdXAuIiwibWluaW11bSI6MSwidHlwZSI6ImludGVnZXIifX0sInJlcXVpcmVkIjpbImxhYmVsU2VsZWN0b3IiLCJzaXplIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic2NhbGUiOnsibGFiZWxTZWxlY3RvclBhdGgiOiIuc3RhdHVzLmxhYmVsU2VsZWN0b3IiLCJzcGVjUmVwbGljYXNQYXRoIjoiLnNwZWMuc2l6ZSIsInN0YXR1c1JlcGxpY2FzUGF0aCI6Ii5zdGF0dXMuc2l6ZSJ9LCJzdGF0dXMiOnt9fX1dfX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuNi40IiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjguMCJ9LCJuYW1lIjoiY291Y2hiYXNlYmFja3Vwcy5jb3VjaGJhc2UuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJjb3VjaGJhc2UuY29tIiwibmFtZXMiOnsia2luZCI6IkNvdWNoYmFzZUJhY2t1cCIsImxpc3RLaW5kIjoiQ291Y2hiYXNlQmFja3VwTGlzdCIsInBsdXJhbCI6ImNvdWNoYmFzZWJhY2t1cHMiLCJzaG9ydE5hbWVzIjpbImNiYmFja3VwIl0sInNpbmd1bGFyIjoiY291Y2hiYXNlYmFja3VwIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7Impzb25QYXRoIjoiLnNwZWMuc3RyYXRlZ3kiLCJuYW1lIjoic3RyYXRlZ3kiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zcGVjLnNpemUiLCJuYW1lIjoidm9sdW1lIHNpemUiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zdGF0dXMuY2FwYWNpdHlVc2VkIiwibmFtZSI6ImNhcGFjaXR5IHVzZWQiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zdGF0dXMubGFzdFJ1biIsIm5hbWUiOiJsYXN0IHJ1biIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLnN0YXR1cy5sYXN0U3VjY2VzcyIsIm5hbWUiOiJsYXN0IHN1Y2Nlc3MiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zdGF0dXMucnVubmluZyIsIm5hbWUiOiJydW5uaW5nIiwidHlwZSI6ImJvb2xlYW4ifSx7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6ImFnZSIsInR5cGUiOiJkYXRlIn1dLCJuYW1lIjoidjIiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlQmFja3VwIGFsbG93cyBhdXRvbWF0aWMgYmFja3VwIG9mIGFsbCBkYXRhIGZyb20gYSBDb3VjaGJhc2UgY2x1c3RlciBpbnRvIHBlcnNpc3RlbnQgc3RvcmFnZS4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUJhY2t1cFNwZWMgaXMgYWxsb3dzIHRoZSBzcGVjaWZpY2F0aW9uIG9mIGhvdyBhIENvdWNoYmFzZSBiYWNrdXAgaXMgY29uZmlndXJlZCwgaW5jbHVkaW5nIHdoZW4gYmFja3VwcyBhcmUgcGVyZm9ybWVkLCBob3cgbG9uZyB0aGV5IGFyZSByZXRhaW5lZCBmb3IsIGFuZCB3aGVyZSB0aGV5IGFyZSBiYWNrZWQgdXAgdG8uIiwicHJvcGVydGllcyI6eyJhdXRvU2NhbGluZyI6eyJkZXNjcmlwdGlvbiI6IkF1dG9TY2FsaW5nIGFsbG93cyB0aGUgdm9sdW1lIHNpemUgdG8gYmUgZHluYW1pY2FsbHkgaW5jcmVhc2VkLiBXaGVuIHNwZWNpZmllZCwgdGhlIGJhY2t1cCB2b2x1bWUgd2lsbCBzdGFydCB3aXRoIGFuIGluaXRpYWwgc2l6ZSBhcyBkZWZpbmVkIGJ5IGBzcGVjLnNpemVgLCBhbmQgaW5jcmVhc2UgYXMgcmVxdWlyZWQuIiwicHJvcGVydGllcyI6eyJpbmNyZW1lbnRQZXJjZW50Ijp7ImRlZmF1bHQiOjIwLCJkZXNjcmlwdGlvbiI6IkluY3JlbWVudFBlcmNlbnQgY29udHJvbHMgaG93IG11Y2ggdGhlIHZvbHVtZSBpcyBpbmNyZWFzZWQgZWFjaCB0aW1lIHRoZSB0aHJlc2hvbGQgaXMgZXhjZWVkZWQsIHVwdG8gYSBtYXhpbXVtIGFzIGRlZmluZWQgYnkgdGhlIGxpbWl0LiBUaGlzIGZpZWxkIGRlZmF1bHRzIHRvIDIwIGlmIG5vdCBzcGVjaWZpZWQuIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwibGltaXQiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJkZXNjcmlwdGlvbiI6IkxpbWl0IGltcG9zZXMgYSBoYXJkIGxpbWl0IG9uIHRoZSBzaXplIHdlIGNhbiBhdXRvc2NhbGUgdG8uICBXaGVuIG5vdCBzcGVjaWZpZWQgbm8gYm91bmRzIGFyZSBpbXBvc2VkLiBNb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLXJlc291cmNlcy1jb250YWluZXJzLyNyZXNvdXJjZS11bml0cy1pbi1rdWJlcm5ldGVzIiwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwidHlwZSI6InN0cmluZyIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwidGhyZXNob2xkUGVyY2VudCI6eyJkZWZhdWx0IjoyMCwiZGVzY3JpcHRpb24iOiJUaHJlc2hvbGRQZXJjZW50IGRldGVybWluZXMgdGhlIHBvaW50IGF0IHdoaWNoIGEgdm9sdW1lIGlzIGF1dG9zY2FsZWQuIFRoaXMgcmVwcmVzZW50cyB0aGUgcGVyY2VudGFnZSBvZiBmcmVlIHNwYWNlIHJlbWFpbmluZyBvbiB0aGUgdm9sdW1lLCB3aGVuIGxlc3MgdGhhbiB0aGlzIHRocmVzaG9sZCwgaXQgd2lsbCB0cmlnZ2VyIGEgdm9sdW1lIGV4cGFuc2lvbi4gRm9yIGV4YW1wbGUsIGlmIHRoZSB2b2x1bWUgaXMgMTAwR2ksIGFuZCB0aGUgdGhyZXNob2xkIDIwJSwgdGhlbiBhIHJlc2l6ZSB3aWxsIGJlIHRyaWdnZXJlZCB3aGVuIHRoZSB1c2VkIGNhcGFjaXR5IGV4Y2VlZHMgODBHaSwgYW5kIGZyZWUgc3BhY2UgaXMgbGVzcyB0aGFuIDIwR2kuICBUaGlzIGZpZWxkIGRlZmF1bHRzIHRvIDIwIGlmIG5vdCBzcGVjaWZpZWQuIiwibWF4aW11bSI6OTksIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn19LCJ0eXBlIjoib2JqZWN0In0sImJhY2tvZmZMaW1pdCI6eyJkZWZhdWx0IjoyLCJkZXNjcmlwdGlvbiI6Ik51bWJlciBvZiB0aW1lcyBhIGJhY2t1cCBqb2Igc2hvdWxkIHRyeSB0byBleGVjdXRlLiBPbmNlIGl0IGhpdHMgdGhlIEJhY2tvZmZMaW1pdCBpdCB3aWxsIG5vdCBydW4gdW50aWwgdGhlIG5leHQgc2NoZWR1bGVkIGpvYi4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sImJhY2t1cFJldGVudGlvbiI6eyJkZWZhdWx0IjoiNzIwaCIsImRlc2NyaXB0aW9uIjoiTnVtYmVyIG9mIGhvdXJzIHRvIGhvbGQgYmFja3VwcyBmb3IsIGV2ZXJ5dGhpbmcgb2xkZXIgd2lsbCBiZSBkZWxldGVkLiAgTW9yZSBpbmZvOiBodHRwczovL2dvbGFuZy5vcmcvcGtnL3RpbWUvI1BhcnNlRHVyYXRpb24iLCJ0eXBlIjoic3RyaW5nIn0sImRhdGEiOnsiZGVzY3JpcHRpb24iOiJEYXRhIGFsbG93cyBjb250cm9sIG92ZXIgd2hhdCBrZXktdmFsdWUvZG9jdW1lbnQgZGF0YSBpcyBpbmNsdWRlZCBpbiB0aGUgYmFja3VwLiAgQnkgZGVmYXVsdCwgYWxsIGRhdGEgaXMgaW5jbHVkZWQuICBNb2RpZmljYXRpb25zIHRvIHRoaXMgZmllbGQgd2lsbCBvbmx5IHRha2UgZWZmZWN0IG9uIHRoZSBuZXh0IGZ1bGwgYmFja3VwLiIsInByb3BlcnRpZXMiOnsiZXhjbHVkZSI6eyJkZXNjcmlwdGlvbiI6IkV4Y2x1ZGUgZGVmaW5lcyB0aGUgYnVja2V0cywgc2NvcGVzIG9yIGNvbGxlY3Rpb25zIHRoYXQgYXJlIGV4Y2x1ZGVkIGZyb20gdGhlIGJhY2t1cC4gV2hlbiB0aGlzIGZpZWxkIGlzIHNldCwgaXQgaW1wbGllcyB0aGF0IGJ5IGRlZmF1bHQgZXZlcnl0aGluZyB3aWxsIGJlIGJhY2tlZCB1cCwgYW5kIGRhdGEgaXRlbXMgY2FuIGJlIGV4cGxpY2l0bHkgZXhjbHVkZWQuICBZb3UgbWF5IGRlZmluZSBhbiBleGNsdXNpb24gYXMgYSBidWNrZXQgLS0gYG15LWJ1Y2tldGAsIGEgc2NvcGUgLS0gYG15LWJ1Y2tldC5teS1zY29wZWAsIG9yIGEgY29sbGVjdGlvbiAtLSBgbXktYnVja2V0Lm15LXNjb3BlLm15LWNvbGxlY3Rpb25gLiBCdWNrZXRzIG1heSBjb250YWluIHBlcmlvZHMsIGFuZCB0aGVyZWZvcmUgbXVzdCBiZSBlc2NhcGVkIC0tIGBteVxcLmJ1Y2tldC5teS1zY29wZWAsIGFzIHBlcmlvZCBpcyB0aGUgc2VwYXJhdG9yIHVzZWQgdG8gZGVsaW1pdCBzY29wZXMgYW5kIGNvbGxlY3Rpb25zLiAgRXhjbHVkZWQgZGF0YSBjYW5ub3Qgb3ZlcmxhcCBlLmcuIHNwZWNpZnlpbmcgYG15LWJ1Y2tldGAgYW5kIGBteS1idWNrZXQubXktc2NvcGVgIGlzIGlsbGVnYWwuICBUaGlzIGZpZWxkIGNhbm5vdCBiZSB1c2VkIGF0IHRoZSBzYW1lIHRpbWUgYXMgaW5jbHVkZWQgaXRlbXMuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJCdWNrZXRTY29wZU9yQ29sbGVjdGlvbk5hbWVXaXRoRGVmYXVsdHMgaXMgdGhlIG5hbWUgb2YgYSBmdWxseSBxdWFsaWZlZCBidWNrZXQsIHNjb3BlIG9yIGNvbGxlY3Rpb24uIFRoZSBfZGVmYXVsdCBzY29wZSBhbmQgY29sbGVjdGlvbiBhcmUgdmFsaWQgZm9yIHRoaXMgdHlwZS4gQXMgdGhlc2UgbmFtZXMgYXJlIHBlcmlvZCBzZXBhcmF0ZWQsIGFuZCBidWNrZXRzIGNhbiBjb250YWluIHBlcmlvZHMsIHRoZSBsYXR0ZXIgbmVlZCB0byBiZSBlc2NhcGVkLiAgVGhpcyBzcGVjaWZpY2F0aW9uIGlzIGJhc2VkIG9uIGNiYmFja3VwbWdyLiIsInBhdHRlcm4iOiJeKD86W2EtekEtWjAtOVxcLV8lXXxcXFxcLil7MSwxMDB9KFxcLl9kZWZhdWx0KFxcLl9kZWZhdWx0KT98XFwuW2EtekEtWjAtOVxcLV1bYS16QS1aMC05XFwtJV9dezAsMjl9KFxcLlthLXpBLVowLTlcXC1dW2EtekEtWjAtOVxcLSVfXXswLDI5fSk/KT8kIiwidHlwZSI6InN0cmluZyJ9LCJtaW5JdGVtcyI6MSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6InNldCJ9LCJpbmNsdWRlIjp7ImRlc2NyaXB0aW9uIjoiSW5jbHVkZSBkZWZpbmVzIHRoZSBidWNrZXRzLCBzY29wZXMgb3IgY29sbGVjdGlvbnMgdGhhdCBhcmUgaW5jbHVkZWQgaW4gdGhlIGJhY2t1cC4gV2hlbiB0aGlzIGZpZWxkIGlzIHNldCwgaXQgaW1wbGllcyB0aGF0IGJ5IGRlZmF1bHQgbm90aGluZyB3aWxsIGJlIGJhY2tlZCB1cCwgYW5kIGRhdGEgaXRlbXMgbXVzdCBiZSBleHBsaWNpdGx5IGluY2x1ZGVkLiAgWW91IG1heSBkZWZpbmUgYW4gaW5jbHVzaW9uIGFzIGEgYnVja2V0IC0tIGBteS1idWNrZXRgLCBhIHNjb3BlIC0tIGBteS1idWNrZXQubXktc2NvcGVgLCBvciBhIGNvbGxlY3Rpb24gLS0gYG15LWJ1Y2tldC5teS1zY29wZS5teS1jb2xsZWN0aW9uYC4gQnVja2V0cyBtYXkgY29udGFpbiBwZXJpb2RzLCBhbmQgdGhlcmVmb3JlIG11c3QgYmUgZXNjYXBlZCAtLSBgbXlcXC5idWNrZXQubXktc2NvcGVgLCBhcyBwZXJpb2QgaXMgdGhlIHNlcGFyYXRvciB1c2VkIHRvIGRlbGltaXQgc2NvcGVzIGFuZCBjb2xsZWN0aW9ucy4gIEluY2x1ZGVkIGRhdGEgY2Fubm90IG92ZXJsYXAgZS5nLiBzcGVjaWZ5aW5nIGBteS1idWNrZXRgIGFuZCBgbXktYnVja2V0Lm15LXNjb3BlYCBpcyBpbGxlZ2FsLiAgVGhpcyBmaWVsZCBjYW5ub3QgYmUgdXNlZCBhdCB0aGUgc2FtZSB0aW1lIGFzIGV4Y2x1ZGVkIGl0ZW1zLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQnVja2V0U2NvcGVPckNvbGxlY3Rpb25OYW1lV2l0aERlZmF1bHRzIGlzIHRoZSBuYW1lIG9mIGEgZnVsbHkgcXVhbGlmZWQgYnVja2V0LCBzY29wZSBvciBjb2xsZWN0aW9uLiBUaGUgX2RlZmF1bHQgc2NvcGUgYW5kIGNvbGxlY3Rpb24gYXJlIHZhbGlkIGZvciB0aGlzIHR5cGUuIEFzIHRoZXNlIG5hbWVzIGFyZSBwZXJpb2Qgc2VwYXJhdGVkLCBhbmQgYnVja2V0cyBjYW4gY29udGFpbiBwZXJpb2RzLCB0aGUgbGF0dGVyIG5lZWQgdG8gYmUgZXNjYXBlZC4gIFRoaXMgc3BlY2lmaWNhdGlvbiBpcyBiYXNlZCBvbiBjYmJhY2t1cG1nci4iLCJwYXR0ZXJuIjoiXig/OlthLXpBLVowLTlcXC1fJV18XFxcXC4pezEsMTAwfShcXC5fZGVmYXVsdChcXC5fZGVmYXVsdCk/fFxcLlthLXpBLVowLTlcXC1dW2EtekEtWjAtOVxcLSVfXXswLDI5fShcXC5bYS16QS1aMC05XFwtXVthLXpBLVowLTlcXC0lX117MCwyOX0pPyk/JCIsInR5cGUiOiJzdHJpbmcifSwibWluSXRlbXMiOjEsInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJzZXQifX0sInR5cGUiOiJvYmplY3QifSwiZGVmYXVsdFJlY292ZXJ5TWV0aG9kIjp7ImRlZmF1bHQiOiJub25lIiwiZGVzY3JpcHRpb24iOiJEZWZhdWx0UmVjb3ZlcnlNZXRob2Qgc3BlY2lmaWVzIGhvdyBjYmJhY2t1cG1nciBzaG91bGQgcmVjb3ZlciBmcm9tIGJyb2tlbiBiYWNrdXAvcmVzdG9yZSBhdHRlbXB0cy4iLCJlbnVtIjpbIm5vbmUiLCJyZXN1bWUiLCJwdXJnZSJdLCJ0eXBlIjoic3RyaW5nIn0sImVwaGVtZXJhbFZvbHVtZSI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJFcGhlbWVyYWxWb2x1bWUgc2V0cyBiYWNrdXAgdG8gdXNlIGFuIGVwaGVtZXJhbCB2b2x1bWUgaW5zdGVhZCBvZiBhIHBlcnNpc3RlbnQgdm9sdW1lLiBUaGlzIGlzIHVzZWQgd2hlbiBiYWNraW5nIHVwIHRvIGEgcmVtb3RlIGNsb3VkIHByb3ZpZGVyLCB3aGVyZSBhIHBlcnNpc3RlbnQgdm9sdW1lIGlzIG5vdCBuZWVkZWQuIiwidHlwZSI6ImJvb2xlYW4ifSwiZmFpbGVkSm9ic0hpc3RvcnlMaW1pdCI6eyJkZWZhdWx0IjozLCJkZXNjcmlwdGlvbiI6IkFtb3VudCBvZiBmYWlsZWQgam9icyB0byBrZWVwLiIsImZvcm1hdCI6ImludDMyIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiZnVsbCI6eyJkZXNjcmlwdGlvbiI6IkZ1bGwgaXMgdGhlIHNjaGVkdWxlIG9uIHdoZW4gdG8gdGFrZSBmdWxsIGJhY2t1cHMuIFVzZWQgaW4gRnVsbC9JbmNyZW1lbnRhbCBhbmQgRnVsbE9ubHkgYmFja3VwIHN0cmF0ZWdpZXMuIiwicHJvcGVydGllcyI6eyJzY2hlZHVsZSI6eyJkZXNjcmlwdGlvbiI6IlNjaGVkdWxlIHRha2VzIGEgY3JvbiBzY2hlZHVsZSBpbiBzdHJpbmcgZm9ybWF0LiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInNjaGVkdWxlIl0sInR5cGUiOiJvYmplY3QifSwiaW5jcmVtZW50YWwiOnsiZGVzY3JpcHRpb24iOiJJbmNyZW1lbnRhbCBpcyB0aGUgc2NoZWR1bGUgb24gd2hlbiB0byB0YWtlIGluY3JlbWVudGFsIGJhY2t1cHMuIFVzZWQgaW4gRnVsbC9JbmNyZW1lbnRhbCBiYWNrdXAgc3RyYXRlZ2llcy4iLCJwcm9wZXJ0aWVzIjp7InNjaGVkdWxlIjp7ImRlc2NyaXB0aW9uIjoiU2NoZWR1bGUgdGFrZXMgYSBjcm9uIHNjaGVkdWxlIGluIHN0cmluZyBmb3JtYXQuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsic2NoZWR1bGUiXSwidHlwZSI6Im9iamVjdCJ9LCJsb2dSZXRlbnRpb24iOnsiZGVmYXVsdCI6IjE2OGgiLCJkZXNjcmlwdGlvbiI6Ik51bWJlciBvZiBob3VycyB0byBob2xkIHNjcmlwdCBsb2dzIGZvciwgZXZlcnl0aGluZyBvbGRlciB3aWxsIGJlIGRlbGV0ZWQuICBNb3JlIGluZm86IGh0dHBzOi8vZ29sYW5nLm9yZy9wa2cvdGltZS8jUGFyc2VEdXJhdGlvbiIsInR5cGUiOiJzdHJpbmcifSwib2JqZWN0U3RvcmUiOnsiZGVzY3JpcHRpb24iOiJPYmplY3RTdG9yZSBhbGxvd3MgZm9yIGJhY2tpbmcgdXAgdG8gYSByZW1vdGUgY2xvdWQgc3RvcmFnZS4iLCJwcm9wZXJ0aWVzIjp7ImVuZHBvaW50Ijp7ImRlc2NyaXB0aW9uIjoiRW5kcG9pbnQgY29udGFpbnMgdGhlIGNvbmZpZ3VyYXRpb24gZm9yIGNvbm5lY3RpbmcgdG8gYSBjdXN0b20gQXp1cmUvUzMvR0NQIGNvbXBsaWFudCBvYmplY3Qgc3RvcmUuIElmIHNldCB3aWxsIG92ZXJyaWRlIGBDb3VjaGJhc2VDbHVzdGVyLnNwZWMuYmFja3VwLm9iamVjdEVuZHBvaW50YCBTZWUgaHR0cHM6Ly9kb2NzLmNvdWNoYmFzZS5jb20vc2VydmVyL2N1cnJlbnQvYmFja3VwLXJlc3RvcmUvY2JiYWNrdXBtZ3ItY2xvdWQuaHRtbCNjb21wYXRpYmxlLW9iamVjdC1zdG9yZXMiLCJwcm9wZXJ0aWVzIjp7InNlY3JldCI6eyJkZXNjcmlwdGlvbiI6IlRoZSBuYW1lIG9mIHRoZSBzZWNyZXQsIGluIHRoaXMgbmFtZXNwYWNlLCB0aGF0IGNvbnRhaW5zIHRoZSBDQSBjZXJ0aWZpY2F0ZSBmb3IgdmVyaWZpY2F0aW9uIG9mIGEgVExTIGVuZHBvaW50IFRoZSBzZWNyZXQgbXVzdCBoYXZlIHRoZSBrZXkgd2l0aCB0aGUgbmFtZSBcInRscy5jcnRcIiIsInR5cGUiOiJzdHJpbmcifSwidXJsIjp7ImRlc2NyaXB0aW9uIjoiVGhlIGhvc3QvYWRkcmVzcyBvZiB0aGUgY3VzdG9tIG9iamVjdCBlbmRwb2ludC4iLCJ0eXBlIjoic3RyaW5nIn0sInVzZVZpcnR1YWxQYXRoIjp7ImRlc2NyaXB0aW9uIjoiVXNlVmlydHVhbFBhdGggd2lsbCBmb3JjZSB0aGUgQVdTIFNESyB0byB1c2UgdGhlIG5ldyB2aXJ0dWFsIHN0eWxlIHBhdGhzIHdoaWNoIGFyZSBvZnRlbiByZXF1aXJlZCBieSBTMyBjb21wYXRpYmxlIG9iamVjdCBzdG9yZXMuIiwidHlwZSI6ImJvb2xlYW4ifX0sInR5cGUiOiJvYmplY3QifSwic2VjcmV0Ijp7ImRlc2NyaXB0aW9uIjoiT2JqU3RvcmVTZWNyZXQgbXVzdCBjb250YWluIHR3byBmaWVsZHMsIGFjY2Vzcy1rZXktaWQsIHNlY3JldC1hY2Nlc3Mta2V5IGFuZCBvcHRpb25hbGx5IGVpdGhlciByZWdpb24gb3IgcmVmcmVzaC10b2tlbi4gVGhlc2UgY29ycmVzcG9uZCB0byB0aGUgZmllbGRzIHVzZWQgYnkgY2JiYWNrdXBtZ3IgaHR0cHM6Ly9kb2NzLmNvdWNoYmFzZS5jb20vc2VydmVyL2N1cnJlbnQvYmFja3VwLXJlc3RvcmUvY2JiYWNrdXBtZ3ItYmFja3VwLmh0bWwjb3B0aW9uYWwtMiIsInR5cGUiOiJzdHJpbmcifSwidXJpIjp7ImRlc2NyaXB0aW9uIjoiVVJJIGlzIGEgcmVmZXJlbmNlIHRvIGEgcmVtb3RlIG9iamVjdCBzdG9yZS4gVGhpcyBpcyB0aGUgcHJlZml4IG9mIHRoZSBvYmplY3Qgc3RvcmUgYW5kIHRoZSBidWNrZXQgbmFtZS4gaS5lIHMzOi8vYnVja2V0LCBhejovL2J1Y2tldCBvciBnczovL2J1Y2tldC4iLCJwYXR0ZXJuIjoiXihhenxzM3xncyk6Ly8uezMsfSQiLCJ0eXBlIjoic3RyaW5nIn0sInVzZUlBTSI6eyJkZXNjcmlwdGlvbiI6IldoZXRoZXIgdG8gYWxsb3cgdGhlIGJhY2t1cCBTREsgdG8gYXR0ZW1wdCB0byBhdXRoZW50aWNhdGUgdXNpbmcgdGhlIGluc3RhbmNlIG1ldGFkYXRhIGFwaS4gSWYgc2V0LCB3aWxsIG92ZXJyaWRlIGBDb3VjaGJhc2VDbHVzdGVyLnNwZWMuYmFja3VwLnVzZUlBTWAuIiwidHlwZSI6ImJvb2xlYW4ifX0sInR5cGUiOiJvYmplY3QifSwiczNidWNrZXQiOnsiZGVzY3JpcHRpb24iOiJERVBSRUNBVEVEIC0gYnkgc3BlYy5vYmplY3RTdG9yZS51cmkgTmFtZSBvZiBTMyBidWNrZXQgdG8gYmFja3VwIHRvLiBJZiBub24tZW1wdHkgdGhpcyBvdmVycmlkZXMgbG9jYWwgYmFja3VwLiIsInBhdHRlcm4iOiJeczM6Ly9bYS16MC05LVxcLlxcL117Myw2M30kIiwidHlwZSI6InN0cmluZyJ9LCJzZXJ2aWNlcyI6eyJkZWZhdWx0Ijp7fSwiZGVzY3JpcHRpb24iOiJTZXJ2aWNlcyBhbGxvd3MgY29udHJvbCBvdmVyIHdoYXQgc2VydmljZXMgYXJlIGluY2x1ZGVkIGluIHRoZSBiYWNrdXAuIEJ5IGRlZmF1bHQsIGFsbCBzZXJ2aWNlIGRhdGEgYW5kIG1ldGFkYXRhIGFyZSBpbmNsdWRlZC4gIE1vZGlmaWNhdGlvbnMgdG8gdGhpcyBmaWVsZCB3aWxsIG9ubHkgdGFrZSBlZmZlY3Qgb24gdGhlIG5leHQgZnVsbCBiYWNrdXAuIiwicHJvcGVydGllcyI6eyJhbmFseXRpY3MiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJBbmFseXRpY3MgZW5hYmxlcyB0aGUgYmFja3VwIG9mIGFuYWx5dGljcyBkYXRhLiBUaGlzIGZpZWxkIGRlZmF1bHRzIHRvIGB0cnVlYC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJidWNrZXRDb25maWciOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJCdWNrZXRDb25maWcgZW5hYmxlcyB0aGUgYmFja3VwIG9mIGJ1Y2tldCBjb25maWd1cmF0aW9uLiBUaGlzIGZpZWxkIGRlZmF1bHRzIHRvIGB0cnVlYC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJidWNrZXRRdWVyeSI6eyJkZWZhdWx0Ijp0cnVlLCJkZXNjcmlwdGlvbiI6IkJ1Y2tldFF1ZXJ5IGVuYWJsZXMgdGhlIGJhY2t1cCBvZiBxdWVyeSBtZXRhZGF0YSBmb3IgYWxsIGJ1Y2tldHMuIFRoaXMgZmllbGQgZGVmYXVsdHMgdG8gYHRydWVgLiIsInR5cGUiOiJib29sZWFuIn0sImNsdXN0ZXJBbmFseXRpY3MiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJDbHVzdGVyQW5hbHl0aWNzIGVuYWJsZXMgdGhlIGJhY2t1cCBvZiBjbHVzdGVyLXdpZGUgYW5hbHl0aWNzIGRhdGEsIGZvciBleGFtcGxlIHN5bm9ueW1zLiBUaGlzIGZpZWxkIGRlZmF1bHRzIHRvIGB0cnVlYC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJjbHVzdGVyUXVlcnkiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJDbHVzdGVyUXVlcnkgZW5hYmxlcyB0aGUgYmFja3VwIG9mIGNsdXN0ZXIgbGV2ZWwgcXVlcnkgbWV0YWRhdGEuIFRoaXMgZmllbGQgZGVmYXVsdHMgdG8gYHRydWVgLiIsInR5cGUiOiJib29sZWFuIn0sImRhdGEiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJEYXRhIGVuYWJsZXMgdGhlIGJhY2t1cCBvZiBrZXktdmFsdWUgZGF0YS9kb2N1bWVudHMgZm9yIGFsbCBidWNrZXRzLiBUaGlzIGNhbiBiZSBmdXJ0aGVyIHJlZmluZWQgd2l0aCB0aGUgY291Y2hiYXNlYmFja3Vwcy5zcGVjLmRhdGEgY29uZmlndXJhdGlvbi4gVGhpcyBmaWVsZCBkZWZhdWx0cyB0byBgdHJ1ZWAuIiwidHlwZSI6ImJvb2xlYW4ifSwiZXZlbnRpbmciOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJFdmVudGluZyBlbmFibGVzIHRoZSBiYWNrdXAgb2YgZXZlbnRpbmcgc2VydmljZSBtZXRhZGF0YS4gVGhpcyBmaWVsZCBkZWZhdWx0cyB0byBgdHJ1ZWAuIiwidHlwZSI6ImJvb2xlYW4ifSwiZnRzQWxpYXNlcyI6eyJkZWZhdWx0Ijp0cnVlLCJkZXNjcmlwdGlvbiI6IkZUU0FsaWFzZXMgZW5hYmxlcyB0aGUgYmFja3VwIG9mIGZ1bGwtdGV4dCBzZWFyY2ggYWxpYXMgZGVmaW5pdGlvbnMuIFRoaXMgZmllbGQgZGVmYXVsdHMgdG8gYHRydWVgLiIsInR5cGUiOiJib29sZWFuIn0sImZ0c0luZGV4ZXMiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJGVFNJbmRleGVzIGVuYWJsZXMgdGhlIGJhY2t1cCBvZiBmdWxsLXRleHQgc2VhcmNoIGluZGV4IGRlZmluaXRpb25zIGZvciBhbGwgYnVja2V0cy4gVGhpcyBmaWVsZCBkZWZhdWx0cyB0byBgdHJ1ZWAuIiwidHlwZSI6ImJvb2xlYW4ifSwiZ3NJbmRleGVzIjp7ImRlZmF1bHQiOnRydWUsImRlc2NyaXB0aW9uIjoiR1NJbmRleGVzIGVuYWJsZXMgdGhlIGJhY2t1cCBvZiBnbG9iYWwgc2Vjb25kYXJ5IGluZGV4IGRlZmluaXRpb25zIGZvciBhbGwgYnVja2V0cy4gVGhpcyBmaWVsZCBkZWZhdWx0cyB0byBgdHJ1ZWAuIiwidHlwZSI6ImJvb2xlYW4ifSwidmlld3MiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJWaWV3cyBlbmFibGVzIHRoZSBiYWNrdXAgb2YgdmlldyBkZWZpbml0aW9ucyBmb3IgYWxsIGJ1Y2tldHMuIFRoaXMgZmllbGQgZGVmYXVsdHMgdG8gYHRydWVgLiIsInR5cGUiOiJib29sZWFuIn19LCJ0eXBlIjoib2JqZWN0In0sInNpemUiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJkZWZhdWx0IjoiMjBHaSIsImRlc2NyaXB0aW9uIjoiU2l6ZSBhbGxvd3MgdGhlIHNwZWNpZmljYXRpb24gb2YgYSBiYWNrdXAgcGVyc2lzdGVudCB2b2x1bWUsIHdoZW4gdXNpbmcgdm9sdW1lIGJhc2VkIGJhY2t1cC4gTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9jb25maWd1cmF0aW9uL21hbmFnZS1yZXNvdXJjZXMtY29udGFpbmVycy8jcmVzb3VyY2UtdW5pdHMtaW4ta3ViZXJuZXRlcyIsInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsInR5cGUiOiJzdHJpbmciLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sInN0b3JhZ2VDbGFzc05hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIFN0b3JhZ2VDbGFzcyB0byB1c2UuIiwidHlwZSI6InN0cmluZyJ9LCJzdHJhdGVneSI6eyJkZWZhdWx0IjoiZnVsbF9pbmNyZW1lbnRhbCIsImRlc2NyaXB0aW9uIjoiU3RyYXRlZ3kgZGVmaW5lcyBob3cgdG8gcGVyZm9ybSBiYWNrdXBzLiAgYGZ1bGxfb25seWAgd2lsbCBvbmx5IHBlcmZvcm0gZnVsbCBiYWNrdXBzLCBhbmQgeW91IG11c3QgZGVmaW5lIGEgc2NoZWR1bGUgaW4gdGhlIGBzcGVjLmZ1bGxgIGZpZWxkLiAgYGZ1bGxfaW5jcmVtZW50YWxgIHdpbGwgcGVyZm9ybSBwZXJpb2RpYyBmdWxsIGJhY2t1cHMsIGFuZCBpbmNyZW1lbnRhbCBiYWNrdXBzIGluIGJldHdlZW4uICBZb3UgbXVzdCBkZWZpbmUgZnVsbCBhbmQgaW5jcmVtZW50YWwgc2NoZWR1bGVzIGluIHRoZSBgc3BlYy5mdWxsYCBhbmQgYHNwZWMuaW5jcmVtZW50YWxgIGZpZWxkcyByZXNwZWN0aXZlbHkuICBDYXJlIHNob3VsZCBiZSB0YWtlbiB0byBlbnN1cmUgZnVsbCBhbmQgaW5jcmVtZW50YWwgc2NoZWR1bGVzIGRvIG5vdCBvdmVybGFwLCB0YWtpbmcgaW50byBhY2NvdW50IHRoZSBiYWNrdXAgdGltZSwgYXMgdGhpcyB3aWxsIGNhdXNlIGZhaWx1cmVzIGFzIHRoZSBqb2JzIGF0dGVtcHQgdG8gbW91bnQgdGhlIHNhbWUgYmFja3VwIHZvbHVtZS4gVG8gY2F1c2UgYSBiYWNrdXAgdG8gb2NjdXIgaW1tZWRpYXRlbHkgdXNlIGBpbW1lZGlhdGVfaW5jcmVtZW50YWxgIG9yIGBpbW1lZGlhdGVfZnVsbGAgZm9yIGluY3JlbWVudGFsIG9yIGZ1bGwgYmFja3VwcyByZXNwZWN0aXZlbHkuIFRoaXMgZmllbGQgZGVmYXVsdCB0byBgZnVsbF9pbmNyZW1lbnRhbGAuIEluZm86IGh0dHBzOi8vZG9jcy5jb3VjaGJhc2UuY29tL3NlcnZlci9jdXJyZW50L2JhY2t1cC1yZXN0b3JlL2NiYmFja3VwbWdyLXN0cmF0ZWdpZXMuaHRtbCIsImVudW0iOlsiZnVsbF9pbmNyZW1lbnRhbCIsImZ1bGxfb25seSIsImltbWVkaWF0ZV9pbmNyZW1lbnRhbCIsImltbWVkaWF0ZV9mdWxsIl0sInR5cGUiOiJzdHJpbmcifSwic3VjY2Vzc2Z1bEpvYnNIaXN0b3J5TGltaXQiOnsiZGVmYXVsdCI6MywiZGVzY3JpcHRpb24iOiJBbW91bnQgb2Ygc3VjY2Vzc2Z1bCBqb2JzIHRvIGtlZXAuIiwiZm9ybWF0IjoiaW50MzIiLCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJ0aHJlYWRzIjp7ImRlZmF1bHQiOjEsImRlc2NyaXB0aW9uIjoiSG93IG1hbnkgdGhyZWFkcyB0byB1c2UgZHVyaW5nIHRoZSBiYWNrdXAuICBUaGlzIGZpZWxkIGRlZmF1bHRzIHRvIDEuIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwidHRsU2Vjb25kc0FmdGVyRmluaXNoZWQiOnsiZGVzY3JpcHRpb24iOiJBbW91bnQgb2YgdGltZSB0byBlbGFwc2UgYmVmb3JlIGEgY29tcGxldGVkIGpvYiBpcyBkZWxldGVkLiIsImZvcm1hdCI6ImludDMyIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifX0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlQmFja3VwU3RhdHVzIHByb3ZpZGVzIHN0YXR1cyBub3RpZmljYXRpb25zIGFib3V0IHRoZSBDb3VjaGJhc2UgYmFja3VwIGluY2x1ZGluZyB3aGVuIHRoZSBsYXN0IGJhY2t1cCBvY2N1cnJlZCwgd2hldGhlciBpcyBzdWNjZWVkZWQgb3Igbm90LCB0aGUgcnVuIHRpbWUgb2YgdGhlIGJhY2t1cCBhbmQgdGhlIHNpemUgb2YgdGhlIGJhY2t1cC4iLCJwcm9wZXJ0aWVzIjp7ImFyY2hpdmUiOnsiZGVzY3JpcHRpb24iOiJMb2NhdGlvbiBvZiBCYWNrdXAgQXJjaGl2ZS4iLCJ0eXBlIjoic3RyaW5nIn0sImJhY2t1cHMiOnsiZGVzY3JpcHRpb24iOiJCYWNrdXBzIGdpdmVzIHVzIGEgZnVsbCBsaXN0IG9mIGFsbCBiYWNrdXBzIGFuZCB0aGVpciByZXNwZWN0aXZlIHJlcG9zaXRvcnkgbG9jYXRpb25zLiIsIml0ZW1zIjp7InByb3BlcnRpZXMiOnsiZnVsbCI6eyJkZXNjcmlwdGlvbiI6IkZ1bGwgYmFja3VwIGluc2lkZSB0aGUgcmVwb3NpdG9yeS4iLCJ0eXBlIjoic3RyaW5nIn0sImluY3JlbWVudGFscyI6eyJkZXNjcmlwdGlvbiI6IkluY3JlbWVudGFsIGJhY2t1cHMgaW5zaWRlIHRoZSByZXBvc2l0b3J5LiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZXBvc2l0b3J5LiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwiY2FwYWNpdHlVc2VkIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwiZGVzY3JpcHRpb24iOiJDYXBhY2l0eVVzZWQgdGVsbHMgdXMgaG93IG11Y2ggb2YgdGhlIFBWQyB3ZSBhcmUgdXNpbmcuIE1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtcmVzb3VyY2VzLWNvbnRhaW5lcnMvI3Jlc291cmNlLXVuaXRzLWluLWt1YmVybmV0ZXMiLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ0eXBlIjoic3RyaW5nIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJjcm9uam9iIjp7ImRlc2NyaXB0aW9uIjoiREVQUkVDQVRFRCAtIGZpZWxkIG1heSBubyBsb25nZXIgYmUgcG9wdWxhdGVkLiBDcm9uam9iIHRlbGxzIHVzIHdoaWNoIENyb25qb2IgdGhlIGpvYiBiZWxvbmdzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwiZHVyYXRpb24iOnsiZGVzY3JpcHRpb24iOiJEdXJhdGlvbiB0ZWxscyB1cyBob3cgbG9uZyB0aGUgbGFzdCBiYWNrdXAgdG9vay4gIE1vcmUgaW5mbzogaHR0cHM6Ly9nb2xhbmcub3JnL3BrZy90aW1lLyNQYXJzZUR1cmF0aW9uIiwidHlwZSI6InN0cmluZyJ9LCJmYWlsZWQiOnsiZGVzY3JpcHRpb24iOiJGYWlsZWQgaW5kaWNhdGVzIHdoZXRoZXIgdGhlIG1vc3QgcmVjZW50IGJhY2t1cCBoYXMgZmFpbGVkLiIsInR5cGUiOiJib29sZWFuIn0sImpvYiI6eyJkZXNjcmlwdGlvbiI6IkRFUFJFQ0FURUQgLSBmaWVsZCBtYXkgbm8gbG9uZ2VyIGJlIHBvcHVsYXRlZC4gSm9iIHRlbGxzIHVzIHdoaWNoIGpvYiBpcyBydW5uaW5nL3JhbiBsYXN0LiIsInR5cGUiOiJzdHJpbmcifSwibGFzdEZhaWx1cmUiOnsiZGVzY3JpcHRpb24iOiJMYXN0RmFpbHVyZSB0ZWxscyB1cyB0aGUgdGltZSB0aGUgbGFzdCBmYWlsZWQgYmFja3VwIGZhaWxlZC4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sImxhc3RSdW4iOnsiZGVzY3JpcHRpb24iOiJMYXN0UnVuIHRlbGxzIHVzIHRoZSB0aW1lIHRoZSBsYXN0IGJhY2t1cCBqb2Igc3RhcnRlZC4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sImxhc3RTdWNjZXNzIjp7ImRlc2NyaXB0aW9uIjoiTGFzdFN1Y2Nlc3MgZ2l2ZXMgdXMgdGhlIHRpbWUgdGhlIGxhc3Qgc3VjY2Vzc2Z1bCBiYWNrdXAgZmluaXNoZWQuIiwiZm9ybWF0IjoiZGF0ZS10aW1lIiwidHlwZSI6InN0cmluZyJ9LCJvdXRwdXQiOnsiZGVzY3JpcHRpb24iOiJERVBSRUNBVEVEIC0gZmllbGQgbWF5IG5vIGxvbmdlciBiZSBwb3B1bGF0ZWQuIE91dHB1dCByZXBvcnRzIHVzZWZ1bCBpbmZvcm1hdGlvbiBmcm9tIHRoZSBiYWNrdXBfc2NyaXB0LiIsInR5cGUiOiJzdHJpbmcifSwicG9kIjp7ImRlc2NyaXB0aW9uIjoiREVQUkVDQVRFRCAtIGZpZWxkIG1heSBubyBsb25nZXIgYmUgcG9wdWxhdGVkLiBQb2QgdGVsbHMgdXMgd2hpY2ggcG9kIGlzIHJ1bm5pbmcvcmFuIGxhc3QuIiwidHlwZSI6InN0cmluZyJ9LCJyZXBvIjp7ImRlc2NyaXB0aW9uIjoiUmVwbyBpcyB3aGVyZSB3ZSBhcmUgY3VycmVudGx5IHBlcmZvcm1pbmcgb3BlcmF0aW9ucy4iLCJ0eXBlIjoic3RyaW5nIn0sInJ1bm5pbmciOnsiZGVzY3JpcHRpb24iOiJSdW5uaW5nIGluZGljYXRlcyB3aGV0aGVyIGEgYmFja3VwIGlzIGN1cnJlbnRseSBiZWluZyBwZXJmb3JtZWQuIiwidHlwZSI6ImJvb2xlYW4ifX0sInJlcXVpcmVkIjpbImZhaWxlZCIsInJ1bm5pbmciXSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWV9XX19
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuNi40IiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjguMCJ9LCJuYW1lIjoiY291Y2hiYXNlbWVtY2FjaGVkYnVja2V0cy5jb3VjaGJhc2UuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJjb3VjaGJhc2UuY29tIiwibmFtZXMiOnsia2luZCI6IkNvdWNoYmFzZU1lbWNhY2hlZEJ1Y2tldCIsImxpc3RLaW5kIjoiQ291Y2hiYXNlTWVtY2FjaGVkQnVja2V0TGlzdCIsInBsdXJhbCI6ImNvdWNoYmFzZW1lbWNhY2hlZGJ1Y2tldHMiLCJzaW5ndWxhciI6ImNvdWNoYmFzZW1lbWNhY2hlZGJ1Y2tldCJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zcGVjLm1lbW9yeVF1b3RhIiwibmFtZSI6Im1lbW9yeSBxdW90YSIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6ImFnZSIsInR5cGUiOiJkYXRlIn1dLCJuYW1lIjoidjIiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiVGhlIENvdWNoYmFzZU1lbWNhY2hlZEJ1Y2tldCByZXNvdXJjZSBkZWZpbmVzIGEgc2V0IG9mIGRvY3VtZW50cyBpbiBDb3VjaGJhc2Ugc2VydmVyLiBBIENvdWNoYmFzZSBjbGllbnQgY29ubmVjdHMgdG8gYW5kIG9wZXJhdGVzIG9uIGEgYnVja2V0LCB3aGljaCBwcm92aWRlcyBpbmRlcGVuZGVudCBtYW5hZ2VtZW50IG9mIGEgc2V0IGRvY3VtZW50cyBhbmQgYSBzZWN1cml0eSBib3VuZGFyeSBmb3Igcm9sZSBiYXNlZCBhY2Nlc3MgY29udHJvbC4gQSBDb3VjaGJhc2VFcGhlbWVyYWxCdWNrZXQgcHJvdmlkZXMgaW4tbWVtb3J5IG9ubHkgc3RvcmFnZSBmb3IgZG9jdW1lbnRzIGNvbnRhaW5lZCBieSBpdC4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZWZhdWx0Ijp7fSwiZGVzY3JpcHRpb24iOiJDb3VjaGJhc2VNZW1jYWNoZWRCdWNrZXRTcGVjIGlzIHRoZSBzcGVjaWZpY2F0aW9uIGZvciBhIE1lbWNhY2hlZCBidWNrZXQgcmVzb3VyY2UsIGFuZCBhbGxvd3MgdGhlIGJ1Y2tldCB0byBiZSBjdXN0b21pemVkLiIsInByb3BlcnRpZXMiOnsiZW5hYmxlRmx1c2giOnsiZGVzY3JpcHRpb24iOiJFbmFibGVGbHVzaCBkZWZpbmVzIHdoZXRoZXIgYSBjbGllbnQgY2FuIGRlbGV0ZSBhbGwgZG9jdW1lbnRzIGluIGEgYnVja2V0LiBUaGlzIGZpZWxkIGRlZmF1bHRzIHRvIGZhbHNlLiIsInR5cGUiOiJib29sZWFuIn0sIm1lbW9yeVF1b3RhIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwiZGVmYXVsdCI6IjEwME1pIiwiZGVzY3JpcHRpb24iOiJNZW1vcnlRdW90YSBpcyBhIG1lbW9yeSBsaW1pdCB0byB0aGUgc2l6ZSBvZiBhIGJ1Y2tldC4gVGhlIG1lbW9yeSBxdW90YSBpcyBkZWZpbmVkIHBlciBDb3VjaGJhc2UgcG9kIHJ1bm5pbmcgdGhlIGRhdGEgc2VydmljZS4gIFRoaXMgZmllbGQgZGVmYXVsdHMgdG8sIGFuZCBtdXN0IGJlIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0byAxMDBNaS4gIE1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtcmVzb3VyY2VzLWNvbnRhaW5lcnMvI3Jlc291cmNlLXVuaXRzLWluLWt1YmVybmV0ZXMiLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ0eXBlIjoic3RyaW5nIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBpcyB0aGUgbmFtZSBvZiB0aGUgYnVja2V0IHdpdGhpbiBDb3VjaGJhc2Ugc2VydmVyLiAgQnkgZGVmYXVsdCB0aGUgT3BlcmF0b3Igd2lsbCB1c2UgdGhlIGBtZXRhZGF0YS5uYW1lYCBmaWVsZCB0byBkZWZpbmUgdGhlIGJ1Y2tldCBuYW1lLiAgVGhlIGBtZXRhZGF0YS5uYW1lYCBmaWVsZCBvbmx5IHN1cHBvcnRzIGEgc3Vic2V0IG9mIHRoZSBzdXBwb3J0ZWQgY2hhcmFjdGVyIHNldC4gIFdoZW4gc3BlY2lmaWVkLCB0aGlzIGZpZWxkIG92ZXJyaWRlcyBgbWV0YWRhdGEubmFtZWAuICBMZWdhbCBidWNrZXQgbmFtZXMgaGF2ZSBhIG1heGltdW0gbGVuZ3RoIG9mIDEwMCBjaGFyYWN0ZXJzIGFuZCBtYXkgYmUgY29tcG9zZWQgb2YgYW55IGNoYXJhY3RlciBmcm9tIFwiYS16XCIsIFwiQS1aXCIsIFwiMC05XCIgYW5kIFwiLV8lXFwuXCIuIiwibWF4TGVuZ3RoIjoxMDAsInBhdHRlcm4iOiJeW2EtekEtWjAtOS1fJVxcLl17MSwxMDB9JCIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZX1dfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuNi40IiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjguMCJ9LCJuYW1lIjoiY291Y2hiYXNlbWlncmF0aW9ucmVwbGljYXRpb25zLmNvdWNoYmFzZS5jb20ifSwic3BlYyI6eyJncm91cCI6ImNvdWNoYmFzZS5jb20iLCJuYW1lcyI6eyJraW5kIjoiQ291Y2hiYXNlTWlncmF0aW9uUmVwbGljYXRpb24iLCJsaXN0S2luZCI6IkNvdWNoYmFzZU1pZ3JhdGlvblJlcGxpY2F0aW9uTGlzdCIsInBsdXJhbCI6ImNvdWNoYmFzZW1pZ3JhdGlvbnJlcGxpY2F0aW9ucyIsInNpbmd1bGFyIjoiY291Y2hiYXNlbWlncmF0aW9ucmVwbGljYXRpb24ifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3BlYy5idWNrZXQiLCJuYW1lIjoiYnVja2V0IiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIuc3BlYy5yZW1vdGVCdWNrZXQiLCJuYW1lIjoicmVtb3RlIGJ1Y2tldCIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLnNwZWMucGF1c2VkIiwibmFtZSI6InBhdXNlZCIsInR5cGUiOiJib29sZWFuIn0seyJqc29uUGF0aCI6Ii5tZXRhZGF0YS5jcmVhdGlvblRpbWVzdGFtcCIsIm5hbWUiOiJhZ2UiLCJ0eXBlIjoiZGF0ZSJ9XSwibmFtZSI6InYyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBDb3VjaGJhc2VTY29wZU1pZ3JhdGlvbiByZXNvdXJjZSByZXByZXNlbnRzIHRoZSB1c2Ugb2YgdGhlIHNwZWNpYWwgbWlncmF0aW9uIG1hcHBpbmcgd2l0aGluIFhEQ1IgdG8gdGFrZSBhIGZpbHRlcmVkIGxpc3QgZnJvbSB0aGUgZGVmYXVsdCBzY29wZSBhbmQgY29sbGVjdGlvbiBvZiB0aGUgc291cmNlIGJ1Y2tldCwgcmVwbGljYXRlIGl0IHRvIG5hbWVkIHNjb3BlcyBhbmQgY29sbGVjdGlvbnMgd2l0aGluIHRoZSB0YXJnZXQgYnVja2V0LiBUaGUgYnVja2V0LXRvLWJ1Y2tldCByZXBsaWNhdGlvbiBjYW5ub3QgZHVwbGljYXRlIGFueSB1c2VkIGJ5IHRoZSBDb3VjaGJhc2VSZXBsaWNhdGlvbiByZXNvdXJjZSwgYXMgdGhlc2UgdHdvIHR5cGVzIG9mIHJlcGxpY2F0aW9uIGFyZSBtdXR1YWxseSBleGNsdXNpdmUgYmV0d2VlbiBidWNrZXRzLiBodHRwczovL2RvY3MuY291Y2hiYXNlLmNvbS9zZXJ2ZXIvY3VycmVudC9sZWFybi9jbHVzdGVycy1hbmQtYXZhaWxhYmlsaXR5L3hkY3Itd2l0aC1zY29wZXMtYW5kLWNvbGxlY3Rpb25zLmh0bWwjbWlncmF0aW9uIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sIm1pZ3JhdGlvbk1hcHBpbmciOnsiZGVzY3JpcHRpb24iOiJUaGUgbWlncmF0aW9uIG1hcHBpbmdzIHRvIHVzZSwgc2hvdWxkIG5ldmVyIGJlIGVtcHR5IGFzIHRoYXQgaXMganVzdCBhbiBpbXBsaWNpdCBidWNrZXQtdG8tYnVja2V0IHJlcGxpY2F0aW9uIHRoZW4uIiwicHJvcGVydGllcyI6eyJtYXBwaW5ncyI6eyJkZXNjcmlwdGlvbiI6IlRoZSBtaWdyYXRpb24gbWFwcGluZ3MgdG8gdXNlLCBzaG91bGQgbmV2ZXIgYmUgZW1wdHkgYXMgdGhhdCBpcyBqdXN0IGFuIGltcGxpY2l0IGJ1Y2tldC10by1idWNrZXQgcmVwbGljYXRpb24gdGhlbi4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkluZGljYXRlcyB3aGV0aGVyIHRoaXMgaXMgdXNpbmcgbWlncmF0aW9uIG1hcHBpbmcgb3Igbm90LiBUaGlzIGlzIG9ubHkgdmFsaWQgd2hlbiB1c2luZyB0aGUgZGVmYXVsdCBzY29wZS9jb2xsZWN0aW9uLiIsInByb3BlcnRpZXMiOnsiZmlsdGVyIjp7ImRlZmF1bHQiOiJfZGVmYXVsdC5fZGVmYXVsdCIsImRlc2NyaXB0aW9uIjoiQSBmaWx0ZXIgdG8gc2VsZWN0IGZyb20gdGhlIHNvdXJjZSBkZWZhdWx0IHNjb3BlIGFuZCBjb2xsZWN0aW9uLiBEZWZhdWx0cyB0byBzZWxlY3QgZXZlcnl0aGluZyBpbiB0aGUgZGVmYXVsdCBzY29wZSBhbmQgY29sbGVjdGlvbi4iLCJ0eXBlIjoic3RyaW5nIn0sInRhcmdldEtleXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoiVGhlIGRlc3RpbmF0aW9uIG9mIG91ciBtaWdyYXRpb24sIG11c3QgYmUgYSBzY29wZSBhbmQgY29sbGVjdGlvbi4iLCJwcm9wZXJ0aWVzIjp7ImNvbGxlY3Rpb24iOnsiZGVzY3JpcHRpb24iOiJUaGUgb3B0aW9uYWwgY29sbGVjdGlvbiB3aXRoaW4gdGhlIHNjb3BlLiBNYXkgYmUgZW1wdHkgdG8ganVzdCB3b3JrIGF0IHNjb3BlIGxldmVsLiIsIm1heExlbmd0aCI6MjUxLCJtaW5MZW5ndGgiOjEsInBhdHRlcm4iOiJeKF9kZWZhdWx0fFthLXpBLVowLTlcXC1dW2EtekEtWjAtOVxcLSVfXXswLDI1MH0pJCIsInR5cGUiOiJzdHJpbmcifSwic2NvcGUiOnsiZGVzY3JpcHRpb24iOiJUaGUgc2NvcGUgdG8gdXNlLiIsIm1heExlbmd0aCI6MjUxLCJtaW5MZW5ndGgiOjEsInBhdHRlcm4iOiJeKF9kZWZhdWx0fFthLXpBLVowLTlcXC1dW2EtekEtWjAtOVxcLSVfXXswLDI1MH0pJCIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInNjb3BlIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInRhcmdldEtleXNwYWNlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJtYXBwaW5ncyJdLCJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJDb3VjaGJhc2VSZXBsaWNhdGlvblNwZWMgYWxsb3dzIGNvbmZpZ3VyYXRpb24gb2YgYW4gWERDUiByZXBsaWNhdGlvbi4iLCJwcm9wZXJ0aWVzIjp7ImJ1Y2tldCI6eyJkZXNjcmlwdGlvbiI6IkJ1Y2tldCBpcyB0aGUgc291cmNlIGJ1Y2tldCB0byByZXBsaWNhdGUgZnJvbS4gIFRoaXMgcmVmZXJzIHRvIHRoZSBDb3VjaGJhc2UgYnVja2V0IG5hbWUsIG5vdCB0aGUgcmVzb3VyY2UgbmFtZSBvZiB0aGUgYnVja2V0LiAgQSBidWNrZXQgd2l0aCB0aGlzIG5hbWUgbXVzdCBiZSBkZWZpbmVkIG9uIHRoaXMgY2x1c3Rlci4gIExlZ2FsIGJ1Y2tldCBuYW1lcyBoYXZlIGEgbWF4aW11bSBsZW5ndGggb2YgMTAwIGNoYXJhY3RlcnMgYW5kIG1heSBiZSBjb21wb3NlZCBvZiBhbnkgY2hhcmFjdGVyIGZyb20gXCJhLXpcIiwgXCJBLVpcIiwgXCIwLTlcIiBhbmQgXCItXyVcXC5cIi4iLCJtYXhMZW5ndGgiOjEwMCwicGF0dGVybiI6Il5bYS16QS1aMC05LV8lXFwuXXsxLDEwMH0kIiwidHlwZSI6InN0cmluZyJ9LCJjb21wcmVzc2lvblR5cGUiOnsiZGVmYXVsdCI6IkF1dG8iLCJkZXNjcmlwdGlvbiI6IkNvbXByZXNzaW9uVHlwZSBpcyB0aGUgdHlwZSBvZiBjb21wcmVzc2lvbiB0byBhcHBseSB0byB0aGUgcmVwbGljYXRpb24uIFdoZW4gTm9uZSwgbm8gY29tcHJlc3Npb24gd2lsbCBiZSBhcHBsaWVkIHRvIGRvY3VtZW50cyBhcyB0aGV5IGFyZSB0cmFuc2ZlcnJlZCBiZXR3ZWVuIGNsdXN0ZXJzLiAgV2hlbiBBdXRvLCBDb3VjaGJhc2Ugc2VydmVyIHdpbGwgYXV0b21hdGljYWxseSBjb21wcmVzcyBkb2N1bWVudHMgYXMgdGhleSBhcmUgdHJhbnNmZXJyZWQgdG8gcmVkdWNlIGJhbmR3aWR0aCByZXF1aXJlbWVudHMuIFRoaXMgZmllbGQgbXVzdCBiZSBvbmUgb2YgXCJOb25lXCIgb3IgXCJBdXRvXCIsIGRlZmF1bHRpbmcgdG8gXCJBdXRvXCIuIiwiZW51bSI6WyJOb25lIiwiQXV0byJdLCJ0eXBlIjoic3RyaW5nIn0sImZpbHRlckV4cHJlc3Npb24iOnsiZGVzY3JpcHRpb24iOiJGaWx0ZXJFeHByZXNzaW9uIGFsbG93cyBjZXJ0YWluIGRvY3VtZW50cyB0byBiZSBmaWx0ZXJlZCBvdXQgb2YgdGhlIHJlcGxpY2F0aW9uLiIsInR5cGUiOiJzdHJpbmcifSwicGF1c2VkIjp7ImRlc2NyaXB0aW9uIjoiUGF1c2VkIGFsbG93cyBhIHJlcGxpY2F0aW9uIHRvIGJlIHN0b3BwZWQgYW5kIHJlc3RhcnRlZCB3aXRob3V0IGhhdmluZyB0byByZXN0YXJ0IHRoZSByZXBsaWNhdGlvbiBmcm9tIHRoZSBiZWdpbm5pbmcuIiwidHlwZSI6ImJvb2xlYW4ifSwicmVtb3RlQnVja2V0Ijp7ImRlc2NyaXB0aW9uIjoiUmVtb3RlQnVja2V0IGlzIHRoZSByZW1vdGUgYnVja2V0IG5hbWUgdG8gc3luY2hyb25pemUgdG8uICBUaGlzIHJlZmVycyB0byB0aGUgQ291Y2hiYXNlIGJ1Y2tldCBuYW1lLCBub3QgdGhlIHJlc291cmNlIG5hbWUgb2YgdGhlIGJ1Y2tldC4gIExlZ2FsIGJ1Y2tldCBuYW1lcyBoYXZlIGEgbWF4aW11bSBsZW5ndGggb2YgMTAwIGNoYXJhY3RlcnMgYW5kIG1heSBiZSBjb21wb3NlZCBvZiBhbnkgY2hhcmFjdGVyIGZyb20gXCJhLXpcIiwgXCJBLVpcIiwgXCIwLTlcIiBhbmQgXCItXyVcXC5cIi4iLCJtYXhMZW5ndGgiOjEwMCwicGF0dGVybiI6Il5bYS16QS1aMC05LV8lXFwuXXsxLDEwMH0kIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiYnVja2V0IiwicmVtb3RlQnVja2V0Il0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbIm1pZ3JhdGlvbk1hcHBpbmciLCJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZX1dfX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuNi40IiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjguMCJ9LCJuYW1lIjoiY291Y2hiYXNlcm9sZWJpbmRpbmdzLmNvdWNoYmFzZS5jb20ifSwic3BlYyI6eyJncm91cCI6ImNvdWNoYmFzZS5jb20iLCJuYW1lcyI6eyJraW5kIjoiQ291Y2hiYXNlUm9sZUJpbmRpbmciLCJsaXN0S2luZCI6IkNvdWNoYmFzZVJvbGVCaW5kaW5nTGlzdCIsInBsdXJhbCI6ImNvdWNoYmFzZXJvbGViaW5kaW5ncyIsInNpbmd1bGFyIjoiY291Y2hiYXNlcm9sZWJpbmRpbmcifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7Im5hbWUiOiJ2MiIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJDb3VjaGJhc2VSb2xlQmluZGluZyBhbGxvd3MgYXNzb2NpYXRpb24gb2YgQ291Y2hiYXNlIHVzZXJzIHdpdGggZ3JvdXBzLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC4gU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kIG1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLiBTZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by4gQ2Fubm90IGJlIHVwZGF0ZWQuIEluIENhbWVsQ2FzZS4gTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlUm9sZUJpbmRpbmdTcGVjIGRlZmluZXMgdGhlIGdyb3VwIG9mIHN1YmplY3RzIGkuZS4gdXNlcnMsIGFuZCB0aGUgcm9sZSBpLmUuIGdyb3VwIHRoZXkgYXJlIGEgbWVtYmVyIG9mLiIsInByb3BlcnRpZXMiOnsicm9sZVJlZiI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUdyb3VwIGJlaW5nIGJvdW5kIHRvIHN1YmplY3RzLiIsInByb3BlcnRpZXMiOnsia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgb2Ygcm9sZSB0byB1c2UgZm9yIGJpbmRpbmcuIiwiZW51bSI6WyJDb3VjaGJhc2VHcm91cCJdLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHJvbGUgcmVzb3VyY2UgdG8gdXNlIGZvciBiaW5kaW5nLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImtpbmQiLCJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3ViamVjdHMiOnsiZGVzY3JpcHRpb24iOiJMaXN0IG9mIHVzZXJzIHRvIGJpbmQgYSByb2xlIHRvLiIsIml0ZW1zIjp7InByb3BlcnRpZXMiOnsia2luZCI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZSB1c2VyL2dyb3VwIGtpbmQuIiwiZW51bSI6WyJDb3VjaGJhc2VVc2VyIl0sInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgQ291Y2hiYXNlIHVzZXIgcmVzb3VyY2UuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsia2luZCIsIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbInJvbGVSZWYiLCJzdWJqZWN0cyJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZX1dfX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuNi40IiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjguMCJ9LCJuYW1lIjoiY291Y2hiYXNldXNlcnMuY291Y2hiYXNlLmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiY291Y2hiYXNlLmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJDb3VjaGJhc2VVc2VyIiwibGlzdEtpbmQiOiJDb3VjaGJhc2VVc2VyTGlzdCIsInBsdXJhbCI6ImNvdWNoYmFzZXVzZXJzIiwic2luZ3VsYXIiOiJjb3VjaGJhc2V1c2VyIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjIiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlVXNlciBhbGxvd3MgdGhlIGF1dG9tYXRpb24gb2YgQ291Y2hiYXNlIHVzZXIgbWFuYWdlbWVudC4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZVVzZXJTcGVjIGFsbG93cyB0aGUgc3BlY2lmaWNhdGlvbiBvZiBDb3VjaGJhc2UgdXNlciBjb25maWd1cmF0aW9uLiIsInByb3BlcnRpZXMiOnsiYXV0aERvbWFpbiI6eyJkZXNjcmlwdGlvbiI6IlRoZSBkb21haW4gd2hpY2ggcHJvdmlkZXMgdXNlciBhdXRoZW50aWNhdGlvbi4iLCJlbnVtIjpbImxvY2FsIiwiZXh0ZXJuYWwiXSwidHlwZSI6InN0cmluZyJ9LCJhdXRoU2VjcmV0Ijp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiBLdWJlcm5ldGVzIHNlY3JldCB3aXRoIHBhc3N3b3JkIGZvciBDb3VjaGJhc2UgZG9tYWluLiIsInR5cGUiOiJzdHJpbmcifSwiZnVsbE5hbWUiOnsiZGVzY3JpcHRpb24iOiJGdWxsIE5hbWUgb2YgQ291Y2hiYXNlIHVzZXIuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiYXV0aERvbWFpbiJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZX1dfX0=
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.connect.redhat.com/couchbase/cloud-native-gateway@sha256:50bbc00cce14ec968c9b8e9ef06a6c5bd2860d38d973cf7af7271d4ff66fe9cc
  name: couchbase-cloud-native-gateway
- image: registry.connect.redhat.com/couchbase/exporter@sha256:de3bacf8233553452db1d9cec7c98b28d12c41aa025d830d6b7c5de0da9723b1
  name: couchbase-metrics
- image: registry.connect.redhat.com/couchbase/operator-backup@sha256:382511f532b0206d2bb0cecc8f91b055809b5ccf89136b6d37d55a40e266812f
  name: couchbase-backup
- image: registry.connect.redhat.com/couchbase/operator-bundle@sha256:7a04dfd687dfe1646bd59a39c9e88781ffb815085bbd15f6305f6eac5f59bc49
  name: ""
- image: registry.connect.redhat.com/couchbase/operator@sha256:1f0a6865c360a14ba98706fd6fe8dff3bdbdede32e3622f93f19c82e377ca33f
  name: couchbase-operator
- image: registry.connect.redhat.com/couchbase/server@sha256:033c0b2b8eb12ac63a158754dce20d9787a470c77252c60bd4d9e11f5b2dbc7a
  name: couchbase-server
- image: registry.connect.redhat.com/couchbase/server@sha256:437cd5aa05ff057b17f47d2500dec7cefca21682eb0f4badff4538dc164bc1a7
  name: couchbase-server-7_6_3_4
- image: registry.connect.redhat.com/couchbase/server@sha256:4e0d41b559c5d536aa06709457d6c788fd039b0c915c14f2d429213bdfeff824
  name: couchbase-server-7_2_6_2
- image: registry.connect.redhat.com/couchbase/server@sha256:643272bd58b0b584863400d281f1dcb147099c7f2120a947347be4b1f97391a7
  name: couchbase-server-7_6_2_3
schema: olm.bundle
---
image: registry.connect.redhat.com/couchbase/operator-bundle@sha256:d1a9246def81537e3417a6d48d1e818459583db658b54a87ca5af6911c8a3f53
name: couchbase-operator.v2.7.0-5
package: couchbase-enterprise-certified
properties:
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseAutoscaler
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseBackup
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseBackupRestore
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseBucket
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseCluster
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseCollection
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseCollectionGroup
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseEphemeralBucket
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseGroup
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseMemcachedBucket
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseMigrationReplication
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseReplication
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseRoleBinding
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseScope
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseScopeGroup
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseUser
    version: v2
- type: olm.package
  value:
    packageName: couchbase-enterprise-certified
    version: 2.7.0-5
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuNy4wIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZW1lbWNhY2hlZGJ1Y2tldHMuY291Y2hiYXNlLmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiY291Y2hiYXNlLmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJDb3VjaGJhc2VNZW1jYWNoZWRCdWNrZXQiLCJsaXN0S2luZCI6IkNvdWNoYmFzZU1lbWNhY2hlZEJ1Y2tldExpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2VtZW1jYWNoZWRidWNrZXRzIiwic2luZ3VsYXIiOiJjb3VjaGJhc2VtZW1jYWNoZWRidWNrZXQifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3BlYy5tZW1vcnlRdW90YSIsIm5hbWUiOiJtZW1vcnkgcXVvdGEiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5tZXRhZGF0YS5jcmVhdGlvblRpbWVzdGFtcCIsIm5hbWUiOiJhZ2UiLCJ0eXBlIjoiZGF0ZSJ9XSwibmFtZSI6InYyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBDb3VjaGJhc2VNZW1jYWNoZWRCdWNrZXQgcmVzb3VyY2UgZGVmaW5lcyBhIHNldCBvZiBkb2N1bWVudHMgaW4gQ291Y2hiYXNlIHNlcnZlci5cbkEgQ291Y2hiYXNlIGNsaWVudCBjb25uZWN0cyB0byBhbmQgb3BlcmF0ZXMgb24gYSBidWNrZXQsIHdoaWNoIHByb3ZpZGVzIGluZGVwZW5kZW50XG5tYW5hZ2VtZW50IG9mIGEgc2V0IGRvY3VtZW50cyBhbmQgYSBzZWN1cml0eSBib3VuZGFyeSBmb3Igcm9sZSBiYXNlZCBhY2Nlc3MgY29udHJvbC5cbkEgQ291Y2hiYXNlRXBoZW1lcmFsQnVja2V0IHByb3ZpZGVzIGluLW1lbW9yeSBvbmx5IHN0b3JhZ2UgZm9yIGRvY3VtZW50cyBjb250YWluZWQgYnkgaXQuIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LlxuU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kXG5tYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuXG5TZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by5cbkNhbm5vdCBiZSB1cGRhdGVkLlxuSW4gQ2FtZWxDYXNlLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlZmF1bHQiOnt9LCJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZU1lbWNhY2hlZEJ1Y2tldFNwZWMgaXMgdGhlIHNwZWNpZmljYXRpb24gZm9yIGEgTWVtY2FjaGVkIGJ1Y2tldFxucmVzb3VyY2UsIGFuZCBhbGxvd3MgdGhlIGJ1Y2tldCB0byBiZSBjdXN0b21pemVkLiIsInByb3BlcnRpZXMiOnsiZW5hYmxlRmx1c2giOnsiZGVzY3JpcHRpb24iOiJFbmFibGVGbHVzaCBkZWZpbmVzIHdoZXRoZXIgYSBjbGllbnQgY2FuIGRlbGV0ZSBhbGwgZG9jdW1lbnRzIGluIGEgYnVja2V0LlxuVGhpcyBmaWVsZCBkZWZhdWx0cyB0byBmYWxzZS4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJtZW1vcnlRdW90YSI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sImRlZmF1bHQiOiIxMDBNaSIsImRlc2NyaXB0aW9uIjoiTWVtb3J5UXVvdGEgaXMgYSBtZW1vcnkgbGltaXQgdG8gdGhlIHNpemUgb2YgYSBidWNrZXQuIFRoZSBtZW1vcnkgcXVvdGFcbmlzIGRlZmluZWQgcGVyIENvdWNoYmFzZSBwb2QgcnVubmluZyB0aGUgZGF0YSBzZXJ2aWNlLiAgVGhpcyBmaWVsZCBkZWZhdWx0cyB0bywgYW5kIG11c3RcbmJlIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0byAxMDBNaS4gIE1vcmUgaW5mbzpcbmh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLXJlc291cmNlcy1jb250YWluZXJzLyNyZXNvdXJjZS11bml0cy1pbi1rdWJlcm5ldGVzIiwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwidHlwZSI6InN0cmluZyIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIGJ1Y2tldCB3aXRoaW4gQ291Y2hiYXNlIHNlcnZlci4gIEJ5IGRlZmF1bHQgdGhlIE9wZXJhdG9yXG53aWxsIHVzZSB0aGUgYG1ldGFkYXRhLm5hbWVgIGZpZWxkIHRvIGRlZmluZSB0aGUgYnVja2V0IG5hbWUuICBUaGUgYG1ldGFkYXRhLm5hbWVgXG5maWVsZCBvbmx5IHN1cHBvcnRzIGEgc3Vic2V0IG9mIHRoZSBzdXBwb3J0ZWQgY2hhcmFjdGVyIHNldC4gIFdoZW4gc3BlY2lmaWVkLCB0aGlzXG5maWVsZCBvdmVycmlkZXMgYG1ldGFkYXRhLm5hbWVgLiAgTGVnYWwgYnVja2V0IG5hbWVzIGhhdmUgYSBtYXhpbXVtIGxlbmd0aCBvZiAxMDBcbmNoYXJhY3RlcnMgYW5kIG1heSBiZSBjb21wb3NlZCBvZiBhbnkgY2hhcmFjdGVyIGZyb20gXCJhLXpcIiwgXCJBLVpcIiwgXCIwLTlcIiBhbmQgXCItXyVcXC5cIi4iLCJtYXhMZW5ndGgiOjEwMCwicGF0dGVybiI6Il5bYS16QS1aMC05LV8lXFwuXXsxLDEwMH0kIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlfV19fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuNy4wIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZW1pZ3JhdGlvbnJlcGxpY2F0aW9ucy5jb3VjaGJhc2UuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJjb3VjaGJhc2UuY29tIiwibmFtZXMiOnsia2luZCI6IkNvdWNoYmFzZU1pZ3JhdGlvblJlcGxpY2F0aW9uIiwibGlzdEtpbmQiOiJDb3VjaGJhc2VNaWdyYXRpb25SZXBsaWNhdGlvbkxpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2VtaWdyYXRpb25yZXBsaWNhdGlvbnMiLCJzaW5ndWxhciI6ImNvdWNoYmFzZW1pZ3JhdGlvbnJlcGxpY2F0aW9uIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7Impzb25QYXRoIjoiLnNwZWMuYnVja2V0IiwibmFtZSI6ImJ1Y2tldCIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLnNwZWMucmVtb3RlQnVja2V0IiwibmFtZSI6InJlbW90ZSBidWNrZXQiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zcGVjLnBhdXNlZCIsIm5hbWUiOiJwYXVzZWQiLCJ0eXBlIjoiYm9vbGVhbiJ9LHsianNvblBhdGgiOiIubWV0YWRhdGEuY3JlYXRpb25UaW1lc3RhbXAiLCJuYW1lIjoiYWdlIiwidHlwZSI6ImRhdGUifV0sIm5hbWUiOiJ2MiIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJUaGUgQ291Y2hiYXNlU2NvcGVNaWdyYXRpb24gcmVzb3VyY2UgcmVwcmVzZW50cyB0aGUgdXNlIG9mIHRoZSBzcGVjaWFsIG1pZ3JhdGlvbiBtYXBwaW5nXG53aXRoaW4gWERDUiB0byB0YWtlIGEgZmlsdGVyZWQgbGlzdCBmcm9tIHRoZSBkZWZhdWx0IHNjb3BlIGFuZCBjb2xsZWN0aW9uIG9mIHRoZSBzb3VyY2UgYnVja2V0LFxucmVwbGljYXRlIGl0IHRvIG5hbWVkIHNjb3BlcyBhbmQgY29sbGVjdGlvbnMgd2l0aGluIHRoZSB0YXJnZXQgYnVja2V0LlxuVGhlIGJ1Y2tldC10by1idWNrZXQgcmVwbGljYXRpb24gY2Fubm90IGR1cGxpY2F0ZSBhbnkgdXNlZCBieSB0aGUgQ291Y2hiYXNlUmVwbGljYXRpb24gcmVzb3VyY2UsXG5hcyB0aGVzZSB0d28gdHlwZXMgb2YgcmVwbGljYXRpb24gYXJlIG11dHVhbGx5IGV4Y2x1c2l2ZSBiZXR3ZWVuIGJ1Y2tldHMuXG5odHRwczovL2RvY3MuY291Y2hiYXNlLmNvbS9zZXJ2ZXIvY3VycmVudC9sZWFybi9jbHVzdGVycy1hbmQtYXZhaWxhYmlsaXR5L3hkY3Itd2l0aC1zY29wZXMtYW5kLWNvbGxlY3Rpb25zLmh0bWwjbWlncmF0aW9uIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LlxuU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kXG5tYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuXG5TZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by5cbkNhbm5vdCBiZSB1cGRhdGVkLlxuSW4gQ2FtZWxDYXNlLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJtaWdyYXRpb25NYXBwaW5nIjp7ImRlc2NyaXB0aW9uIjoiVGhlIG1pZ3JhdGlvbiBtYXBwaW5ncyB0byB1c2UsIHNob3VsZCBuZXZlciBiZSBlbXB0eSBhcyB0aGF0IGlzIGp1c3QgYW4gaW1wbGljaXQgYnVja2V0LXRvLWJ1Y2tldCByZXBsaWNhdGlvbiB0aGVuLiIsInByb3BlcnRpZXMiOnsibWFwcGluZ3MiOnsiZGVzY3JpcHRpb24iOiJUaGUgbWlncmF0aW9uIG1hcHBpbmdzIHRvIHVzZSwgc2hvdWxkIG5ldmVyIGJlIGVtcHR5IGFzIHRoYXQgaXMganVzdCBhbiBpbXBsaWNpdCBidWNrZXQtdG8tYnVja2V0IHJlcGxpY2F0aW9uIHRoZW4uIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJJbmRpY2F0ZXMgd2hldGhlciB0aGlzIGlzIHVzaW5nIG1pZ3JhdGlvbiBtYXBwaW5nIG9yIG5vdC5cblRoaXMgaXMgb25seSB2YWxpZCB3aGVuIHVzaW5nIHRoZSBkZWZhdWx0IHNjb3BlL2NvbGxlY3Rpb24uIiwicHJvcGVydGllcyI6eyJmaWx0ZXIiOnsiZGVmYXVsdCI6Il9kZWZhdWx0Ll9kZWZhdWx0IiwiZGVzY3JpcHRpb24iOiJBIGZpbHRlciB0byBzZWxlY3QgZnJvbSB0aGUgc291cmNlIGRlZmF1bHQgc2NvcGUgYW5kIGNvbGxlY3Rpb24uXG5EZWZhdWx0cyB0byBzZWxlY3QgZXZlcnl0aGluZyBpbiB0aGUgZGVmYXVsdCBzY29wZSBhbmQgY29sbGVjdGlvbi4iLCJ0eXBlIjoic3RyaW5nIn0sInRhcmdldEtleXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoiVGhlIGRlc3RpbmF0aW9uIG9mIG91ciBtaWdyYXRpb24sIG11c3QgYmUgYSBzY29wZSBhbmQgY29sbGVjdGlvbi4iLCJwcm9wZXJ0aWVzIjp7ImNvbGxlY3Rpb24iOnsiZGVzY3JpcHRpb24iOiJUaGUgb3B0aW9uYWwgY29sbGVjdGlvbiB3aXRoaW4gdGhlIHNjb3BlLiBNYXkgYmUgZW1wdHkgdG8ganVzdCB3b3JrIGF0IHNjb3BlIGxldmVsLiIsIm1heExlbmd0aCI6MjUxLCJtaW5MZW5ndGgiOjEsInBhdHRlcm4iOiJeKF9kZWZhdWx0fFthLXpBLVowLTlcXC1dW2EtekEtWjAtOVxcLSVfXXswLDI1MH0pJCIsInR5cGUiOiJzdHJpbmcifSwic2NvcGUiOnsiZGVzY3JpcHRpb24iOiJUaGUgc2NvcGUgdG8gdXNlLiIsIm1heExlbmd0aCI6MjUxLCJtaW5MZW5ndGgiOjEsInBhdHRlcm4iOiJeKF9kZWZhdWx0fFthLXpBLVowLTlcXC1dW2EtekEtWjAtOVxcLSVfXXswLDI1MH0pJCIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInNjb3BlIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInRhcmdldEtleXNwYWNlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJtYXBwaW5ncyJdLCJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJDb3VjaGJhc2VSZXBsaWNhdGlvblNwZWMgYWxsb3dzIGNvbmZpZ3VyYXRpb24gb2YgYW4gWERDUiByZXBsaWNhdGlvbi4iLCJwcm9wZXJ0aWVzIjp7ImJ1Y2tldCI6eyJkZXNjcmlwdGlvbiI6IkJ1Y2tldCBpcyB0aGUgc291cmNlIGJ1Y2tldCB0byByZXBsaWNhdGUgZnJvbS4gIFRoaXMgcmVmZXJzIHRvIHRoZSBDb3VjaGJhc2VcbmJ1Y2tldCBuYW1lLCBub3QgdGhlIHJlc291cmNlIG5hbWUgb2YgdGhlIGJ1Y2tldC4gIEEgYnVja2V0IHdpdGggdGhpcyBuYW1lIG11c3RcbmJlIGRlZmluZWQgb24gdGhpcyBjbHVzdGVyLiAgTGVnYWwgYnVja2V0IG5hbWVzIGhhdmUgYSBtYXhpbXVtIGxlbmd0aCBvZiAxMDBcbmNoYXJhY3RlcnMgYW5kIG1heSBiZSBjb21wb3NlZCBvZiBhbnkgY2hhcmFjdGVyIGZyb20gXCJhLXpcIiwgXCJBLVpcIiwgXCIwLTlcIiBhbmQgXCItXyVcXC5cIi4iLCJtYXhMZW5ndGgiOjEwMCwicGF0dGVybiI6Il5bYS16QS1aMC05LV8lXFwuXXsxLDEwMH0kIiwidHlwZSI6InN0cmluZyJ9LCJjb21wcmVzc2lvblR5cGUiOnsiZGVmYXVsdCI6IkF1dG8iLCJkZXNjcmlwdGlvbiI6IkNvbXByZXNzaW9uVHlwZSBpcyB0aGUgdHlwZSBvZiBjb21wcmVzc2lvbiB0byBhcHBseSB0byB0aGUgcmVwbGljYXRpb24uXG5XaGVuIE5vbmUsIG5vIGNvbXByZXNzaW9uIHdpbGwgYmUgYXBwbGllZCB0byBkb2N1bWVudHMgYXMgdGhleSBhcmVcbnRyYW5zZmVycmVkIGJldHdlZW4gY2x1c3RlcnMuICBXaGVuIEF1dG8sIENvdWNoYmFzZSBzZXJ2ZXIgd2lsbCBhdXRvbWF0aWNhbGx5XG5jb21wcmVzcyBkb2N1bWVudHMgYXMgdGhleSBhcmUgdHJhbnNmZXJyZWQgdG8gcmVkdWNlIGJhbmR3aWR0aCByZXF1aXJlbWVudHMuXG5UaGlzIGZpZWxkIG11c3QgYmUgb25lIG9mIFwiTm9uZVwiIG9yIFwiQXV0b1wiLCBkZWZhdWx0aW5nIHRvIFwiQXV0b1wiLiIsImVudW0iOlsiTm9uZSIsIkF1dG8iXSwidHlwZSI6InN0cmluZyJ9LCJmaWx0ZXJFeHByZXNzaW9uIjp7ImRlc2NyaXB0aW9uIjoiRmlsdGVyRXhwcmVzc2lvbiBhbGxvd3MgY2VydGFpbiBkb2N1bWVudHMgdG8gYmUgZmlsdGVyZWQgb3V0IG9mIHRoZSByZXBsaWNhdGlvbi4iLCJ0eXBlIjoic3RyaW5nIn0sInBhdXNlZCI6eyJkZXNjcmlwdGlvbiI6IlBhdXNlZCBhbGxvd3MgYSByZXBsaWNhdGlvbiB0byBiZSBzdG9wcGVkIGFuZCByZXN0YXJ0ZWQgd2l0aG91dCBoYXZpbmcgdG9cbnJlc3RhcnQgdGhlIHJlcGxpY2F0aW9uIGZyb20gdGhlIGJlZ2lubmluZy4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJyZW1vdGVCdWNrZXQiOnsiZGVzY3JpcHRpb24iOiJSZW1vdGVCdWNrZXQgaXMgdGhlIHJlbW90ZSBidWNrZXQgbmFtZSB0byBzeW5jaHJvbml6ZSB0by4gIFRoaXMgcmVmZXJzIHRvIHRoZVxuQ291Y2hiYXNlIGJ1Y2tldCBuYW1lLCBub3QgdGhlIHJlc291cmNlIG5hbWUgb2YgdGhlIGJ1Y2tldC4gIExlZ2FsIGJ1Y2tldCBuYW1lc1xuaGF2ZSBhIG1heGltdW0gbGVuZ3RoIG9mIDEwMCBjaGFyYWN0ZXJzIGFuZCBtYXkgYmUgY29tcG9zZWQgb2YgYW55IGNoYXJhY3RlciBmcm9tXG5cImEtelwiLCBcIkEtWlwiLCBcIjAtOVwiIGFuZCBcIi1fJVxcLlwiLiIsIm1heExlbmd0aCI6MTAwLCJwYXR0ZXJuIjoiXlthLXpBLVowLTktXyVcXC5dezEsMTAwfSQiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJidWNrZXQiLCJyZW1vdGVCdWNrZXQiXSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsibWlncmF0aW9uTWFwcGluZyIsInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlfV19fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuNy4wIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZWF1dG9zY2FsZXJzLmNvdWNoYmFzZS5jb20ifSwic3BlYyI6eyJncm91cCI6ImNvdWNoYmFzZS5jb20iLCJuYW1lcyI6eyJraW5kIjoiQ291Y2hiYXNlQXV0b3NjYWxlciIsImxpc3RLaW5kIjoiQ291Y2hiYXNlQXV0b3NjYWxlckxpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2VhdXRvc2NhbGVycyIsInNob3J0TmFtZXMiOlsiY2JhIl0sInNpbmd1bGFyIjoiY291Y2hiYXNlYXV0b3NjYWxlciJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zcGVjLnNpemUiLCJuYW1lIjoic2l6ZSIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLnNwZWMuc2VydmVycyIsIm5hbWUiOiJzZXJ2ZXJzIiwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUF1dG9zY2FsZXIgcHJvdmlkZXMgYW4gaW50ZXJmYWNlIGZvciB0aGUgS3ViZXJuZXRlcyBIb3Jpem9udGFsIFBvZCBBdXRvc2NhbGVyXG50byBpbnRlcmFjdCB3aXRoIHRoZSBDb3VjaGJhc2UgY2x1c3RlciBhbmQgcHJvdmlkZSBhdXRvc2NhbGluZy4gIFRoaXMgcmVzb3VyY2UgaXNcbm5vdCBkZWZpbmVkIGJ5IHRoZSBlbmQgdXNlciwgYW5kIGlzIG1hbmFnZWQgYnkgdGhlIE9wZXJhdG9yLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUF1dG9zY2FsZXJTcGVjIGFsbG93cyBjb250cm9sIG92ZXIgYW4gYXV0b3NjYWxpbmcgZ3JvdXAuIiwicHJvcGVydGllcyI6eyJzZXJ2ZXJzIjp7ImRlc2NyaXB0aW9uIjoiU2VydmVycyBzcGVjaWZpZXMgdGhlIHNlcnZlciBncm91cCB0aGF0IHRoaXMgYXV0b3NjYWxlciBiZWxvbmdzIHRvLiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJzaXplIjp7ImRlc2NyaXB0aW9uIjoiU2l6ZSBhbGxvd3MgdGhlIHNlcnZlciBncm91cCB0byBiZSBkeW5hbWljYWxseSBzY2FsZWQuIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifX0sInJlcXVpcmVkIjpbInNlcnZlcnMiLCJzaXplIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlQXV0b3NjYWxlclN0YXR1cyBwcm92aWRlcyBpbmZvcm1hdGlvbiB0byB0aGUgSFBBIHRvIGFzc2lzdCB3aXRoIHNjYWxpbmdcbnNlcnZlciBncm91cHMuIiwicHJvcGVydGllcyI6eyJsYWJlbFNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiTGFiZWxTZWxlY3RvciBhbGxvd3MgdGhlIEhQQSB0byBzZWxlY3QgcmVzb3VyY2VzIHRvIG1vbml0b3IgZm9yIHJlc291cmNlXG51dGlsaXphdGlvbiBpbiBvcmRlciB0byB0cmlnZ2VyIHNjYWxpbmcuIiwidHlwZSI6InN0cmluZyJ9LCJzaXplIjp7ImRlc2NyaXB0aW9uIjoiU2l6ZSBpcyB0aGUgY3VycmVudCBzaXplIG9mIHRoZSBzZXJ2ZXIgZ3JvdXAuIiwibWluaW11bSI6MSwidHlwZSI6ImludGVnZXIifX0sInJlcXVpcmVkIjpbImxhYmVsU2VsZWN0b3IiLCJzaXplIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic2NhbGUiOnsibGFiZWxTZWxlY3RvclBhdGgiOiIuc3RhdHVzLmxhYmVsU2VsZWN0b3IiLCJzcGVjUmVwbGljYXNQYXRoIjoiLnNwZWMuc2l6ZSIsInN0YXR1c1JlcGxpY2FzUGF0aCI6Ii5zdGF0dXMuc2l6ZSJ9LCJzdGF0dXMiOnt9fX1dfX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuNy4wIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZWJhY2t1cHMuY291Y2hiYXNlLmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiY291Y2hiYXNlLmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJDb3VjaGJhc2VCYWNrdXAiLCJsaXN0S2luZCI6IkNvdWNoYmFzZUJhY2t1cExpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2ViYWNrdXBzIiwic2hvcnROYW1lcyI6WyJjYmJhY2t1cCJdLCJzaW5ndWxhciI6ImNvdWNoYmFzZWJhY2t1cCJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zcGVjLnN0cmF0ZWd5IiwibmFtZSI6InN0cmF0ZWd5IiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIuc3BlYy5zaXplIiwibmFtZSI6InZvbHVtZSBzaXplIiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIuc3RhdHVzLmNhcGFjaXR5VXNlZCIsIm5hbWUiOiJjYXBhY2l0eSB1c2VkIiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIuc3RhdHVzLmxhc3RSdW4iLCJuYW1lIjoibGFzdCBydW4iLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zdGF0dXMubGFzdFN1Y2Nlc3MiLCJuYW1lIjoibGFzdCBzdWNjZXNzIiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIuc3RhdHVzLnJ1bm5pbmciLCJuYW1lIjoicnVubmluZyIsInR5cGUiOiJib29sZWFuIn0seyJqc29uUGF0aCI6Ii5tZXRhZGF0YS5jcmVhdGlvblRpbWVzdGFtcCIsIm5hbWUiOiJhZ2UiLCJ0eXBlIjoiZGF0ZSJ9XSwibmFtZSI6InYyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUJhY2t1cCBhbGxvd3MgYXV0b21hdGljIGJhY2t1cCBvZiBhbGwgZGF0YSBmcm9tIGEgQ291Y2hiYXNlIGNsdXN0ZXJcbmludG8gcGVyc2lzdGVudCBzdG9yYWdlLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUJhY2t1cFNwZWMgaXMgYWxsb3dzIHRoZSBzcGVjaWZpY2F0aW9uIG9mIGhvdyBhIENvdWNoYmFzZSBiYWNrdXAgaXNcbmNvbmZpZ3VyZWQsIGluY2x1ZGluZyB3aGVuIGJhY2t1cHMgYXJlIHBlcmZvcm1lZCwgaG93IGxvbmcgdGhleSBhcmUgcmV0YWluZWRcbmZvciwgYW5kIHdoZXJlIHRoZXkgYXJlIGJhY2tlZCB1cCB0by4iLCJwcm9wZXJ0aWVzIjp7ImF1dG9TY2FsaW5nIjp7ImRlc2NyaXB0aW9uIjoiQXV0b1NjYWxpbmcgYWxsb3dzIHRoZSB2b2x1bWUgc2l6ZSB0byBiZSBkeW5hbWljYWxseSBpbmNyZWFzZWQuXG5XaGVuIHNwZWNpZmllZCwgdGhlIGJhY2t1cCB2b2x1bWUgd2lsbCBzdGFydCB3aXRoIGFuIGluaXRpYWwgc2l6ZVxuYXMgZGVmaW5lZCBieSBgc3BlYy5zaXplYCwgYW5kIGluY3JlYXNlIGFzIHJlcXVpcmVkLiIsInByb3BlcnRpZXMiOnsiaW5jcmVtZW50UGVyY2VudCI6eyJkZWZhdWx0IjoyMCwiZGVzY3JpcHRpb24iOiJJbmNyZW1lbnRQZXJjZW50IGNvbnRyb2xzIGhvdyBtdWNoIHRoZSB2b2x1bWUgaXMgaW5jcmVhc2VkIGVhY2ggdGltZSB0aGVcbnRocmVzaG9sZCBpcyBleGNlZWRlZCwgdXB0byBhIG1heGltdW0gYXMgZGVmaW5lZCBieSB0aGUgbGltaXQuXG5UaGlzIGZpZWxkIGRlZmF1bHRzIHRvIDIwIGlmIG5vdCBzcGVjaWZpZWQuIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwibGltaXQiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJkZXNjcmlwdGlvbiI6IkxpbWl0IGltcG9zZXMgYSBoYXJkIGxpbWl0IG9uIHRoZSBzaXplIHdlIGNhbiBhdXRvc2NhbGUgdG8uICBXaGVuIG5vdFxuc3BlY2lmaWVkIG5vIGJvdW5kcyBhcmUgaW1wb3NlZC4gTW9yZSBpbmZvOlxuaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtcmVzb3VyY2VzLWNvbnRhaW5lcnMvI3Jlc291cmNlLXVuaXRzLWluLWt1YmVybmV0ZXMiLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ0eXBlIjoic3RyaW5nIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJ0aHJlc2hvbGRQZXJjZW50Ijp7ImRlZmF1bHQiOjIwLCJkZXNjcmlwdGlvbiI6IlRocmVzaG9sZFBlcmNlbnQgZGV0ZXJtaW5lcyB0aGUgcG9pbnQgYXQgd2hpY2ggYSB2b2x1bWUgaXMgYXV0b3NjYWxlZC5cblRoaXMgcmVwcmVzZW50cyB0aGUgcGVyY2VudGFnZSBvZiBmcmVlIHNwYWNlIHJlbWFpbmluZyBvbiB0aGUgdm9sdW1lLFxud2hlbiBsZXNzIHRoYW4gdGhpcyB0aHJlc2hvbGQsIGl0IHdpbGwgdHJpZ2dlciBhIHZvbHVtZSBleHBhbnNpb24uXG5Gb3IgZXhhbXBsZSwgaWYgdGhlIHZvbHVtZSBpcyAxMDBHaSwgYW5kIHRoZSB0aHJlc2hvbGQgMjAlLCB0aGVuIGEgcmVzaXplXG53aWxsIGJlIHRyaWdnZXJlZCB3aGVuIHRoZSB1c2VkIGNhcGFjaXR5IGV4Y2VlZHMgODBHaSwgYW5kIGZyZWUgc3BhY2UgaXNcbmxlc3MgdGhhbiAyMEdpLiAgVGhpcyBmaWVsZCBkZWZhdWx0cyB0byAyMCBpZiBub3Qgc3BlY2lmaWVkLiIsIm1heGltdW0iOjk5LCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9fSwidHlwZSI6Im9iamVjdCJ9LCJiYWNrb2ZmTGltaXQiOnsiZGVmYXVsdCI6MiwiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2YgdGltZXMgYSBiYWNrdXAgam9iIHNob3VsZCB0cnkgdG8gZXhlY3V0ZS5cbk9uY2UgaXQgaGl0cyB0aGUgQmFja29mZkxpbWl0IGl0IHdpbGwgbm90IHJ1biB1bnRpbCB0aGUgbmV4dCBzY2hlZHVsZWQgam9iLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwiYmFja3VwUmV0ZW50aW9uIjp7ImRlZmF1bHQiOiI3MjBoIiwiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2YgaG91cnMgdG8gaG9sZCBiYWNrdXBzIGZvciwgZXZlcnl0aGluZyBvbGRlciB3aWxsIGJlIGRlbGV0ZWQuICBNb3JlIGluZm86XG5odHRwczovL2dvbGFuZy5vcmcvcGtnL3RpbWUvI1BhcnNlRHVyYXRpb24iLCJ0eXBlIjoic3RyaW5nIn0sImRhdGEiOnsiZGVzY3JpcHRpb24iOiJEYXRhIGFsbG93cyBjb250cm9sIG92ZXIgd2hhdCBrZXktdmFsdWUvZG9jdW1lbnQgZGF0YSBpcyBpbmNsdWRlZCBpbiB0aGVcbmJhY2t1cC4gIEJ5IGRlZmF1bHQsIGFsbCBkYXRhIGlzIGluY2x1ZGVkLiAgTW9kaWZpY2F0aW9uc1xudG8gdGhpcyBmaWVsZCB3aWxsIG9ubHkgdGFrZSBlZmZlY3Qgb24gdGhlIG5leHQgZnVsbCBiYWNrdXAuIiwicHJvcGVydGllcyI6eyJleGNsdWRlIjp7ImRlc2NyaXB0aW9uIjoiRXhjbHVkZSBkZWZpbmVzIHRoZSBidWNrZXRzLCBzY29wZXMgb3IgY29sbGVjdGlvbnMgdGhhdCBhcmUgZXhjbHVkZWQgZnJvbSB0aGUgYmFja3VwLlxuV2hlbiB0aGlzIGZpZWxkIGlzIHNldCwgaXQgaW1wbGllcyB0aGF0IGJ5IGRlZmF1bHQgZXZlcnl0aGluZyB3aWxsIGJlIGJhY2tlZCB1cCxcbmFuZCBkYXRhIGl0ZW1zIGNhbiBiZSBleHBsaWNpdGx5IGV4Y2x1ZGVkLiAgWW91IG1heSBkZWZpbmUgYW4gZXhjbHVzaW9uIGFzIGEgYnVja2V0XG4tLSBgbXktYnVja2V0YCwgYSBzY29wZSAtLSBgbXktYnVja2V0Lm15LXNjb3BlYCwgb3IgYSBjb2xsZWN0aW9uIC0tIGBteS1idWNrZXQubXktc2NvcGUubXktY29sbGVjdGlvbmAuXG5CdWNrZXRzIG1heSBjb250YWluIHBlcmlvZHMsIGFuZCB0aGVyZWZvcmUgbXVzdCBiZSBlc2NhcGVkIC0tIGBteVxcLmJ1Y2tldC5teS1zY29wZWAsIGFzXG5wZXJpb2QgaXMgdGhlIHNlcGFyYXRvciB1c2VkIHRvIGRlbGltaXQgc2NvcGVzIGFuZCBjb2xsZWN0aW9ucy4gIEV4Y2x1ZGVkIGRhdGEgY2Fubm90IG92ZXJsYXBcbmUuZy4gc3BlY2lmeWluZyBgbXktYnVja2V0YCBhbmQgYG15LWJ1Y2tldC5teS1zY29wZWAgaXMgaWxsZWdhbC4gIFRoaXMgZmllbGQgY2Fubm90XG5iZSB1c2VkIGF0IHRoZSBzYW1lIHRpbWUgYXMgaW5jbHVkZWQgaXRlbXMuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJCdWNrZXRTY29wZU9yQ29sbGVjdGlvbk5hbWVXaXRoRGVmYXVsdHMgaXMgdGhlIG5hbWUgb2YgYSBmdWxseSBxdWFsaWZlZCBidWNrZXQsIHNjb3BlIG9yIGNvbGxlY3Rpb24uXG5UaGUgX2RlZmF1bHQgc2NvcGUgYW5kIGNvbGxlY3Rpb24gYXJlIHZhbGlkIGZvciB0aGlzIHR5cGUuXG5BcyB0aGVzZSBuYW1lcyBhcmUgcGVyaW9kIHNlcGFyYXRlZCwgYW5kIGJ1Y2tldHMgY2FuIGNvbnRhaW4gcGVyaW9kcywgdGhlIGxhdHRlciBuZWVkXG50byBiZSBlc2NhcGVkLiAgVGhpcyBzcGVjaWZpY2F0aW9uIGlzIGJhc2VkIG9uIGNiYmFja3VwbWdyLiIsInBhdHRlcm4iOiJeKD86W2EtekEtWjAtOVxcLV8lXXxcXFxcLil7MSwxMDB9KFxcLl9kZWZhdWx0KFxcLl9kZWZhdWx0KT98XFwuW2EtekEtWjAtOVxcLV1bYS16QS1aMC05XFwtJV9dezAsMjl9KFxcLlthLXpBLVowLTlcXC1dW2EtekEtWjAtOVxcLSVfXXswLDI5fSk/KT8kIiwidHlwZSI6InN0cmluZyJ9LCJtaW5JdGVtcyI6MSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6InNldCJ9LCJpbmNsdWRlIjp7ImRlc2NyaXB0aW9uIjoiSW5jbHVkZSBkZWZpbmVzIHRoZSBidWNrZXRzLCBzY29wZXMgb3IgY29sbGVjdGlvbnMgdGhhdCBhcmUgaW5jbHVkZWQgaW4gdGhlIGJhY2t1cC5cbldoZW4gdGhpcyBmaWVsZCBpcyBzZXQsIGl0IGltcGxpZXMgdGhhdCBieSBkZWZhdWx0IG5vdGhpbmcgd2lsbCBiZSBiYWNrZWQgdXAsXG5hbmQgZGF0YSBpdGVtcyBtdXN0IGJlIGV4cGxpY2l0bHkgaW5jbHVkZWQuICBZb3UgbWF5IGRlZmluZSBhbiBpbmNsdXNpb24gYXMgYSBidWNrZXRcbi0tIGBteS1idWNrZXRgLCBhIHNjb3BlIC0tIGBteS1idWNrZXQubXktc2NvcGVgLCBvciBhIGNvbGxlY3Rpb24gLS0gYG15LWJ1Y2tldC5teS1zY29wZS5teS1jb2xsZWN0aW9uYC5cbkJ1Y2tldHMgbWF5IGNvbnRhaW4gcGVyaW9kcywgYW5kIHRoZXJlZm9yZSBtdXN0IGJlIGVzY2FwZWQgLS0gYG15XFwuYnVja2V0Lm15LXNjb3BlYCwgYXNcbnBlcmlvZCBpcyB0aGUgc2VwYXJhdG9yIHVzZWQgdG8gZGVsaW1pdCBzY29wZXMgYW5kIGNvbGxlY3Rpb25zLiAgSW5jbHVkZWQgZGF0YSBjYW5ub3Qgb3ZlcmxhcFxuZS5nLiBzcGVjaWZ5aW5nIGBteS1idWNrZXRgIGFuZCBgbXktYnVja2V0Lm15LXNjb3BlYCBpcyBpbGxlZ2FsLiAgVGhpcyBmaWVsZCBjYW5ub3RcbmJlIHVzZWQgYXQgdGhlIHNhbWUgdGltZSBhcyBleGNsdWRlZCBpdGVtcy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkJ1Y2tldFNjb3BlT3JDb2xsZWN0aW9uTmFtZVdpdGhEZWZhdWx0cyBpcyB0aGUgbmFtZSBvZiBhIGZ1bGx5IHF1YWxpZmVkIGJ1Y2tldCwgc2NvcGUgb3IgY29sbGVjdGlvbi5cblRoZSBfZGVmYXVsdCBzY29wZSBhbmQgY29sbGVjdGlvbiBhcmUgdmFsaWQgZm9yIHRoaXMgdHlwZS5cbkFzIHRoZXNlIG5hbWVzIGFyZSBwZXJpb2Qgc2VwYXJhdGVkLCBhbmQgYnVja2V0cyBjYW4gY29udGFpbiBwZXJpb2RzLCB0aGUgbGF0dGVyIG5lZWRcbnRvIGJlIGVzY2FwZWQuICBUaGlzIHNwZWNpZmljYXRpb24gaXMgYmFzZWQgb24gY2JiYWNrdXBtZ3IuIiwicGF0dGVybiI6Il4oPzpbYS16QS1aMC05XFwtXyVdfFxcXFwuKXsxLDEwMH0oXFwuX2RlZmF1bHQoXFwuX2RlZmF1bHQpP3xcXC5bYS16QS1aMC05XFwtXVthLXpBLVowLTlcXC0lX117MCwyOX0oXFwuW2EtekEtWjAtOVxcLV1bYS16QS1aMC05XFwtJV9dezAsMjl9KT8pPyQiLCJ0eXBlIjoic3RyaW5nIn0sIm1pbkl0ZW1zIjoxLCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoic2V0In19LCJ0eXBlIjoib2JqZWN0In0sImRlZmF1bHRSZWNvdmVyeU1ldGhvZCI6eyJkZWZhdWx0Ijoibm9uZSIsImRlc2NyaXB0aW9uIjoiRGVmYXVsdFJlY292ZXJ5TWV0aG9kIHNwZWNpZmllcyBob3cgY2JiYWNrdXBtZ3Igc2hvdWxkXG5yZWNvdmVyIGZyb20gYnJva2VuIGJhY2t1cC9yZXN0b3JlIGF0dGVtcHRzLiIsImVudW0iOlsibm9uZSIsInJlc3VtZSIsInB1cmdlIl0sInR5cGUiOiJzdHJpbmcifSwiZXBoZW1lcmFsVm9sdW1lIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IkVwaGVtZXJhbFZvbHVtZSBzZXRzIGJhY2t1cCB0byB1c2UgYW4gZXBoZW1lcmFsIHZvbHVtZSBpbnN0ZWFkXG5vZiBhIHBlcnNpc3RlbnQgdm9sdW1lLiBUaGlzIGlzIHVzZWQgd2hlbiBiYWNraW5nIHVwIHRvIGEgcmVtb3RlXG5jbG91ZCBwcm92aWRlciwgd2hlcmUgYSBwZXJzaXN0ZW50IHZvbHVtZSBpcyBub3QgbmVlZGVkLiIsInR5cGUiOiJib29sZWFuIn0sImZhaWxlZEpvYnNIaXN0b3J5TGltaXQiOnsiZGVmYXVsdCI6MywiZGVzY3JpcHRpb24iOiJBbW91bnQgb2YgZmFpbGVkIGpvYnMgdG8ga2VlcC4iLCJmb3JtYXQiOiJpbnQzMiIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sImZ1bGwiOnsiZGVzY3JpcHRpb24iOiJGdWxsIGlzIHRoZSBzY2hlZHVsZSBvbiB3aGVuIHRvIHRha2UgZnVsbCBiYWNrdXBzLlxuVXNlZCBpbiBGdWxsL0luY3JlbWVudGFsIGFuZCBGdWxsT25seSBiYWNrdXAgc3RyYXRlZ2llcy4iLCJwcm9wZXJ0aWVzIjp7InNjaGVkdWxlIjp7ImRlc2NyaXB0aW9uIjoiU2NoZWR1bGUgdGFrZXMgYSBjcm9uIHNjaGVkdWxlIGluIHN0cmluZyBmb3JtYXQuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsic2NoZWR1bGUiXSwidHlwZSI6Im9iamVjdCJ9LCJpbmNyZW1lbnRhbCI6eyJkZXNjcmlwdGlvbiI6IkluY3JlbWVudGFsIGlzIHRoZSBzY2hlZHVsZSBvbiB3aGVuIHRvIHRha2UgaW5jcmVtZW50YWwgYmFja3Vwcy5cblVzZWQgaW4gRnVsbC9JbmNyZW1lbnRhbCBiYWNrdXAgc3RyYXRlZ2llcy4iLCJwcm9wZXJ0aWVzIjp7InNjaGVkdWxlIjp7ImRlc2NyaXB0aW9uIjoiU2NoZWR1bGUgdGFrZXMgYSBjcm9uIHNjaGVkdWxlIGluIHN0cmluZyBmb3JtYXQuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsic2NoZWR1bGUiXSwidHlwZSI6Im9iamVjdCJ9LCJsb2dSZXRlbnRpb24iOnsiZGVmYXVsdCI6IjE2OGgiLCJkZXNjcmlwdGlvbiI6Ik51bWJlciBvZiBob3VycyB0byBob2xkIHNjcmlwdCBsb2dzIGZvciwgZXZlcnl0aGluZyBvbGRlciB3aWxsIGJlIGRlbGV0ZWQuICBNb3JlIGluZm86XG5odHRwczovL2dvbGFuZy5vcmcvcGtnL3RpbWUvI1BhcnNlRHVyYXRpb24iLCJ0eXBlIjoic3RyaW5nIn0sIm9iamVjdFN0b3JlIjp7ImRlc2NyaXB0aW9uIjoiT2JqZWN0U3RvcmUgYWxsb3dzIGZvciBiYWNraW5nIHVwIHRvIGEgcmVtb3RlIGNsb3VkIHN0b3JhZ2UuIiwicHJvcGVydGllcyI6eyJlbmRwb2ludCI6eyJkZXNjcmlwdGlvbiI6IkVuZHBvaW50IGNvbnRhaW5zIHRoZSBjb25maWd1cmF0aW9uIGZvciBjb25uZWN0aW5nIHRvIGEgY3VzdG9tIEF6dXJlL1MzL0dDUCBjb21wbGlhbnQgb2JqZWN0IHN0b3JlLlxuSWYgc2V0IHdpbGwgb3ZlcnJpZGUgYENvdWNoYmFzZUNsdXN0ZXIuc3BlYy5iYWNrdXAub2JqZWN0RW5kcG9pbnRgXG5TZWUgaHR0cHM6Ly9kb2NzLmNvdWNoYmFzZS5jb20vc2VydmVyL2N1cnJlbnQvYmFja3VwLXJlc3RvcmUvY2JiYWNrdXBtZ3ItY2xvdWQuaHRtbCNjb21wYXRpYmxlLW9iamVjdC1zdG9yZXMiLCJwcm9wZXJ0aWVzIjp7InNlY3JldCI6eyJkZXNjcmlwdGlvbiI6IlRoZSBuYW1lIG9mIHRoZSBzZWNyZXQsIGluIHRoaXMgbmFtZXNwYWNlLCB0aGF0IGNvbnRhaW5zIHRoZSBDQSBjZXJ0aWZpY2F0ZSBmb3IgdmVyaWZpY2F0aW9uIG9mIGEgVExTIGVuZHBvaW50XG5UaGUgc2VjcmV0IG11c3QgaGF2ZSB0aGUga2V5IHdpdGggdGhlIG5hbWUgXCJ0bHMuY3J0XCIiLCJ0eXBlIjoic3RyaW5nIn0sInVybCI6eyJkZXNjcmlwdGlvbiI6IlRoZSBob3N0L2FkZHJlc3Mgb2YgdGhlIGN1c3RvbSBvYmplY3QgZW5kcG9pbnQuIiwidHlwZSI6InN0cmluZyJ9LCJ1c2VWaXJ0dWFsUGF0aCI6eyJkZXNjcmlwdGlvbiI6IlVzZVZpcnR1YWxQYXRoIHdpbGwgZm9yY2UgdGhlIEFXUyBTREsgdG8gdXNlIHRoZSBuZXcgdmlydHVhbCBzdHlsZSBwYXRoc1xud2hpY2ggYXJlIG9mdGVuIHJlcXVpcmVkIGJ5IFMzIGNvbXBhdGlibGUgb2JqZWN0IHN0b3Jlcy4iLCJ0eXBlIjoiYm9vbGVhbiJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzZWNyZXQiOnsiZGVzY3JpcHRpb24iOiJPYmpTdG9yZVNlY3JldCBtdXN0IGNvbnRhaW4gdHdvIGZpZWxkcywgYWNjZXNzLWtleS1pZCwgc2VjcmV0LWFjY2Vzcy1rZXkgYW5kIG9wdGlvbmFsbHkgZWl0aGVyIHJlZ2lvbiBvciByZWZyZXNoLXRva2VuLlxuVGhlc2UgY29ycmVzcG9uZCB0byB0aGUgZmllbGRzIHVzZWQgYnkgY2JiYWNrdXBtZ3Jcbmh0dHBzOi8vZG9jcy5jb3VjaGJhc2UuY29tL3NlcnZlci9jdXJyZW50L2JhY2t1cC1yZXN0b3JlL2NiYmFja3VwbWdyLWJhY2t1cC5odG1sI29wdGlvbmFsLTIiLCJ0eXBlIjoic3RyaW5nIn0sInVyaSI6eyJkZXNjcmlwdGlvbiI6IlVSSSBpcyBhIHJlZmVyZW5jZSB0byBhIHJlbW90ZSBvYmplY3Qgc3RvcmUuXG5UaGlzIGlzIHRoZSBwcmVmaXggb2YgdGhlIG9iamVjdCBzdG9yZSBhbmQgdGhlIGJ1Y2tldCBuYW1lLlxuaS5lIHMzOi8vYnVja2V0LCBhejovL2J1Y2tldCBvciBnczovL2J1Y2tldC4iLCJwYXR0ZXJuIjoiXihhenxzM3xncyk6Ly8uezMsfSQiLCJ0eXBlIjoic3RyaW5nIn0sInVzZUlBTSI6eyJkZXNjcmlwdGlvbiI6IldoZXRoZXIgdG8gYWxsb3cgdGhlIGJhY2t1cCBTREsgdG8gYXR0ZW1wdCB0byBhdXRoZW50aWNhdGVcbnVzaW5nIHRoZSBpbnN0YW5jZSBtZXRhZGF0YSBhcGkuXG5JZiBzZXQsIHdpbGwgb3ZlcnJpZGUgYENvdWNoYmFzZUNsdXN0ZXIuc3BlYy5iYWNrdXAudXNlSUFNYC4iLCJ0eXBlIjoiYm9vbGVhbiJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzM2J1Y2tldCI6eyJkZXNjcmlwdGlvbiI6IkRFUFJFQ0FURUQgLSBieSBzcGVjLm9iamVjdFN0b3JlLnVyaVxuTmFtZSBvZiBTMyBidWNrZXQgdG8gYmFja3VwIHRvLiBJZiBub24tZW1wdHkgdGhpcyBvdmVycmlkZXMgbG9jYWwgYmFja3VwLiIsInBhdHRlcm4iOiJeczM6Ly9bYS16MC05LVxcLlxcL117Myw2M30kIiwidHlwZSI6InN0cmluZyJ9LCJzZXJ2aWNlcyI6eyJkZWZhdWx0Ijp7fSwiZGVzY3JpcHRpb24iOiJTZXJ2aWNlcyBhbGxvd3MgY29udHJvbCBvdmVyIHdoYXQgc2VydmljZXMgYXJlIGluY2x1ZGVkIGluIHRoZSBiYWNrdXAuXG5CeSBkZWZhdWx0LCBhbGwgc2VydmljZSBkYXRhIGFuZCBtZXRhZGF0YSBhcmUgaW5jbHVkZWQgYXBhcnQgZnJvbSB1c2Vycy5cbk1vZGlmaWNhdGlvbnMgdG8gdGhpcyBmaWVsZCB3aWxsIG9ubHkgdGFrZSBlZmZlY3Qgb24gdGhlIG5leHQgZnVsbCBiYWNrdXAuIiwicHJvcGVydGllcyI6eyJhbmFseXRpY3MiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJBbmFseXRpY3MgZW5hYmxlcyB0aGUgYmFja3VwIG9mIGFuYWx5dGljcyBkYXRhLlxuVGhpcyBmaWVsZCBkZWZhdWx0cyB0byBgdHJ1ZWAuIiwidHlwZSI6ImJvb2xlYW4ifSwiYnVja2V0Q29uZmlnIjp7ImRlZmF1bHQiOnRydWUsImRlc2NyaXB0aW9uIjoiQnVja2V0Q29uZmlnIGVuYWJsZXMgdGhlIGJhY2t1cCBvZiBidWNrZXQgY29uZmlndXJhdGlvbi5cblRoaXMgZmllbGQgZGVmYXVsdHMgdG8gYHRydWVgLiIsInR5cGUiOiJib29sZWFuIn0sImJ1Y2tldFF1ZXJ5Ijp7ImRlZmF1bHQiOnRydWUsImRlc2NyaXB0aW9uIjoiQnVja2V0UXVlcnkgZW5hYmxlcyB0aGUgYmFja3VwIG9mIHF1ZXJ5IG1ldGFkYXRhIGZvciBhbGwgYnVja2V0cy5cblRoaXMgZmllbGQgZGVmYXVsdHMgdG8gYHRydWVgLiIsInR5cGUiOiJib29sZWFuIn0sImNsdXN0ZXJBbmFseXRpY3MiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJDbHVzdGVyQW5hbHl0aWNzIGVuYWJsZXMgdGhlIGJhY2t1cCBvZiBjbHVzdGVyLXdpZGUgYW5hbHl0aWNzIGRhdGEsIGZvciBleGFtcGxlIHN5bm9ueW1zLlxuVGhpcyBmaWVsZCBkZWZhdWx0cyB0byBgdHJ1ZWAuIiwidHlwZSI6ImJvb2xlYW4ifSwiY2x1c3RlclF1ZXJ5Ijp7ImRlZmF1bHQiOnRydWUsImRlc2NyaXB0aW9uIjoiQ2x1c3RlclF1ZXJ5IGVuYWJsZXMgdGhlIGJhY2t1cCBvZiBjbHVzdGVyIGxldmVsIHF1ZXJ5IG1ldGFkYXRhLlxuVGhpcyBmaWVsZCBkZWZhdWx0cyB0byBgdHJ1ZWAuIiwidHlwZSI6ImJvb2xlYW4ifSwiZGF0YSI6eyJkZWZhdWx0Ijp0cnVlLCJkZXNjcmlwdGlvbiI6IkRhdGEgZW5hYmxlcyB0aGUgYmFja3VwIG9mIGtleS12YWx1ZSBkYXRhL2RvY3VtZW50cyBmb3IgYWxsIGJ1Y2tldHMuXG5UaGlzIGNhbiBiZSBmdXJ0aGVyIHJlZmluZWQgd2l0aCB0aGUgY291Y2hiYXNlYmFja3Vwcy5zcGVjLmRhdGEgY29uZmlndXJhdGlvbi5cblRoaXMgZmllbGQgZGVmYXVsdHMgdG8gYHRydWVgLiIsInR5cGUiOiJib29sZWFuIn0sImV2ZW50aW5nIjp7ImRlZmF1bHQiOnRydWUsImRlc2NyaXB0aW9uIjoiRXZlbnRpbmcgZW5hYmxlcyB0aGUgYmFja3VwIG9mIGV2ZW50aW5nIHNlcnZpY2UgbWV0YWRhdGEuXG5UaGlzIGZpZWxkIGRlZmF1bHRzIHRvIGB0cnVlYC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJmdHNBbGlhc2VzIjp7ImRlZmF1bHQiOnRydWUsImRlc2NyaXB0aW9uIjoiRlRTQWxpYXNlcyBlbmFibGVzIHRoZSBiYWNrdXAgb2YgZnVsbC10ZXh0IHNlYXJjaCBhbGlhcyBkZWZpbml0aW9ucy5cblRoaXMgZmllbGQgZGVmYXVsdHMgdG8gYHRydWVgLiIsInR5cGUiOiJib29sZWFuIn0sImZ0c0luZGV4ZXMiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJGVFNJbmRleGVzIGVuYWJsZXMgdGhlIGJhY2t1cCBvZiBmdWxsLXRleHQgc2VhcmNoIGluZGV4IGRlZmluaXRpb25zIGZvciBhbGwgYnVja2V0cy5cblRoaXMgZmllbGQgZGVmYXVsdHMgdG8gYHRydWVgLiIsInR5cGUiOiJib29sZWFuIn0sImdzSW5kZXhlcyI6eyJkZWZhdWx0Ijp0cnVlLCJkZXNjcmlwdGlvbiI6IkdTSW5kZXhlcyBlbmFibGVzIHRoZSBiYWNrdXAgb2YgZ2xvYmFsIHNlY29uZGFyeSBpbmRleCBkZWZpbml0aW9ucyBmb3IgYWxsIGJ1Y2tldHMuXG5UaGlzIGZpZWxkIGRlZmF1bHRzIHRvIGB0cnVlYC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJ1c2VycyI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJVc2VycyBlbmFibGVzIHRoZSBiYWNrdXAgb2YgdXNlcnMgaW5jbHVkaW5nIHRoZWlyIHJvbGVzIGFuZCBwZXJtaXNzaW9ucy4gVGhpcyBpc1xub25seSBhdmFpbGFibGUgZm9yIENvdWNoYmFzZSBTZXJ2ZXIgNy42IGFuZCBsYXRlci4gVGhpcyBmaWVsZCBkZWZhdWx0cyB0byBgZmFsc2VgLiIsInR5cGUiOiJib29sZWFuIn0sInZpZXdzIjp7ImRlZmF1bHQiOnRydWUsImRlc2NyaXB0aW9uIjoiVmlld3MgZW5hYmxlcyB0aGUgYmFja3VwIG9mIHZpZXcgZGVmaW5pdGlvbnMgZm9yIGFsbCBidWNrZXRzLlxuVGhpcyBmaWVsZCBkZWZhdWx0cyB0byBgdHJ1ZWAuIiwidHlwZSI6ImJvb2xlYW4ifX0sInR5cGUiOiJvYmplY3QifSwic2l6ZSI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sImRlZmF1bHQiOiIyMEdpIiwiZGVzY3JpcHRpb24iOiJTaXplIGFsbG93cyB0aGUgc3BlY2lmaWNhdGlvbiBvZiBhIGJhY2t1cCBwZXJzaXN0ZW50IHZvbHVtZSwgd2hlbiB1c2luZ1xudm9sdW1lIGJhc2VkIGJhY2t1cC4gTW9yZSBpbmZvOlxuaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtcmVzb3VyY2VzLWNvbnRhaW5lcnMvI3Jlc291cmNlLXVuaXRzLWluLWt1YmVybmV0ZXMiLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ0eXBlIjoic3RyaW5nIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJzdG9yYWdlQ2xhc3NOYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiBTdG9yYWdlQ2xhc3MgdG8gdXNlLiIsInR5cGUiOiJzdHJpbmcifSwic3RyYXRlZ3kiOnsiZGVmYXVsdCI6ImZ1bGxfaW5jcmVtZW50YWwiLCJkZXNjcmlwdGlvbiI6IlN0cmF0ZWd5IGRlZmluZXMgaG93IHRvIHBlcmZvcm0gYmFja3Vwcy4gIGBmdWxsX29ubHlgIHdpbGwgb25seSBwZXJmb3JtIGZ1bGxcbmJhY2t1cHMsIGFuZCB5b3UgbXVzdCBkZWZpbmUgYSBzY2hlZHVsZSBpbiB0aGUgYHNwZWMuZnVsbGAgZmllbGQuICBgZnVsbF9pbmNyZW1lbnRhbGBcbndpbGwgcGVyZm9ybSBwZXJpb2RpYyBmdWxsIGJhY2t1cHMsIGFuZCBpbmNyZW1lbnRhbCBiYWNrdXBzIGluIGJldHdlZW4uICBZb3UgbXVzdFxuZGVmaW5lIGZ1bGwgYW5kIGluY3JlbWVudGFsIHNjaGVkdWxlcyBpbiB0aGUgYHNwZWMuZnVsbGAgYW5kIGBzcGVjLmluY3JlbWVudGFsYCBmaWVsZHNcbnJlc3BlY3RpdmVseS4gIENhcmUgc2hvdWxkIGJlIHRha2VuIHRvIGVuc3VyZSBmdWxsIGFuZCBpbmNyZW1lbnRhbCBzY2hlZHVsZXMgZG8gbm90XG5vdmVybGFwLCB0YWtpbmcgaW50byBhY2NvdW50IHRoZSBiYWNrdXAgdGltZSwgYXMgdGhpcyB3aWxsIGNhdXNlIGZhaWx1cmVzIGFzIHRoZSBqb2JzXG5hdHRlbXB0IHRvIG1vdW50IHRoZSBzYW1lIGJhY2t1cCB2b2x1bWUuIFRvIGNhdXNlIGEgYmFja3VwIHRvIG9jY3VyIGltbWVkaWF0ZWx5IHVzZSBgaW1tZWRpYXRlX2luY3JlbWVudGFsYFxub3IgYGltbWVkaWF0ZV9mdWxsYCBmb3IgaW5jcmVtZW50YWwgb3IgZnVsbCBiYWNrdXBzIHJlc3BlY3RpdmVseS5cblRoaXMgZmllbGQgZGVmYXVsdCB0byBgZnVsbF9pbmNyZW1lbnRhbGAuXG5JbmZvOiBodHRwczovL2RvY3MuY291Y2hiYXNlLmNvbS9zZXJ2ZXIvY3VycmVudC9iYWNrdXAtcmVzdG9yZS9jYmJhY2t1cG1nci1zdHJhdGVnaWVzLmh0bWwiLCJlbnVtIjpbImZ1bGxfaW5jcmVtZW50YWwiLCJmdWxsX29ubHkiLCJpbW1lZGlhdGVfaW5jcmVtZW50YWwiLCJpbW1lZGlhdGVfZnVsbCJdLCJ0eXBlIjoic3RyaW5nIn0sInN1Y2Nlc3NmdWxKb2JzSGlzdG9yeUxpbWl0Ijp7ImRlZmF1bHQiOjMsImRlc2NyaXB0aW9uIjoiQW1vdW50IG9mIHN1Y2Nlc3NmdWwgam9icyB0byBrZWVwLiIsImZvcm1hdCI6ImludDMyIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwidGhyZWFkcyI6eyJkZWZhdWx0IjoxLCJkZXNjcmlwdGlvbiI6IkhvdyBtYW55IHRocmVhZHMgdG8gdXNlIGR1cmluZyB0aGUgYmFja3VwLiAgVGhpcyBmaWVsZCBkZWZhdWx0cyB0byAxLiIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sInR0bFNlY29uZHNBZnRlckZpbmlzaGVkIjp7ImRlc2NyaXB0aW9uIjoiQW1vdW50IG9mIHRpbWUgdG8gZWxhcHNlIGJlZm9yZSBhIGNvbXBsZXRlZCBqb2IgaXMgZGVsZXRlZC4iLCJmb3JtYXQiOiJpbnQzMiIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUJhY2t1cFN0YXR1cyBwcm92aWRlcyBzdGF0dXMgbm90aWZpY2F0aW9ucyBhYm91dCB0aGUgQ291Y2hiYXNlIGJhY2t1cFxuaW5jbHVkaW5nIHdoZW4gdGhlIGxhc3QgYmFja3VwIG9jY3VycmVkLCB3aGV0aGVyIGlzIHN1Y2NlZWRlZCBvciBub3QsIHRoZSBydW5cbnRpbWUgb2YgdGhlIGJhY2t1cCBhbmQgdGhlIHNpemUgb2YgdGhlIGJhY2t1cC4iLCJwcm9wZXJ0aWVzIjp7ImFyY2hpdmUiOnsiZGVzY3JpcHRpb24iOiJMb2NhdGlvbiBvZiBCYWNrdXAgQXJjaGl2ZS4iLCJ0eXBlIjoic3RyaW5nIn0sImJhY2t1cHMiOnsiZGVzY3JpcHRpb24iOiJCYWNrdXBzIGdpdmVzIHVzIGEgZnVsbCBsaXN0IG9mIGFsbCBiYWNrdXBzXG5hbmQgdGhlaXIgcmVzcGVjdGl2ZSByZXBvc2l0b3J5IGxvY2F0aW9ucy4iLCJpdGVtcyI6eyJwcm9wZXJ0aWVzIjp7ImZ1bGwiOnsiZGVzY3JpcHRpb24iOiJGdWxsIGJhY2t1cCBpbnNpZGUgdGhlIHJlcG9zaXRvcnkuIiwidHlwZSI6InN0cmluZyJ9LCJpbmNyZW1lbnRhbHMiOnsiZGVzY3JpcHRpb24iOiJJbmNyZW1lbnRhbCBiYWNrdXBzIGluc2lkZSB0aGUgcmVwb3NpdG9yeS4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcmVwb3NpdG9yeS4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sImNhcGFjaXR5VXNlZCI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sImRlc2NyaXB0aW9uIjoiQ2FwYWNpdHlVc2VkIHRlbGxzIHVzIGhvdyBtdWNoIG9mIHRoZSBQVkMgd2UgYXJlIHVzaW5nLiBNb3JlIGluZm86XG5odHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9jb25maWd1cmF0aW9uL21hbmFnZS1yZXNvdXJjZXMtY29udGFpbmVycy8jcmVzb3VyY2UtdW5pdHMtaW4ta3ViZXJuZXRlcyIsInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsInR5cGUiOiJzdHJpbmciLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sImNyb25qb2IiOnsiZGVzY3JpcHRpb24iOiJERVBSRUNBVEVEIC0gZmllbGQgbWF5IG5vIGxvbmdlciBiZSBwb3B1bGF0ZWQuXG5Dcm9uam9iIHRlbGxzIHVzIHdoaWNoIENyb25qb2IgdGhlIGpvYiBiZWxvbmdzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwiZHVyYXRpb24iOnsiZGVzY3JpcHRpb24iOiJEdXJhdGlvbiB0ZWxscyB1cyBob3cgbG9uZyB0aGUgbGFzdCBiYWNrdXAgdG9vay4gIE1vcmUgaW5mbzpcbmh0dHBzOi8vZ29sYW5nLm9yZy9wa2cvdGltZS8jUGFyc2VEdXJhdGlvbiIsInR5cGUiOiJzdHJpbmcifSwiZmFpbGVkIjp7ImRlc2NyaXB0aW9uIjoiRmFpbGVkIGluZGljYXRlcyB3aGV0aGVyIHRoZSBtb3N0IHJlY2VudCBiYWNrdXAgaGFzIGZhaWxlZC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJqb2IiOnsiZGVzY3JpcHRpb24iOiJERVBSRUNBVEVEIC0gZmllbGQgbWF5IG5vIGxvbmdlciBiZSBwb3B1bGF0ZWQuXG5Kb2IgdGVsbHMgdXMgd2hpY2ggam9iIGlzIHJ1bm5pbmcvcmFuIGxhc3QuIiwidHlwZSI6InN0cmluZyJ9LCJsYXN0RmFpbHVyZSI6eyJkZXNjcmlwdGlvbiI6Ikxhc3RGYWlsdXJlIHRlbGxzIHVzIHRoZSB0aW1lIHRoZSBsYXN0IGZhaWxlZCBiYWNrdXAgZmFpbGVkLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibGFzdFJ1biI6eyJkZXNjcmlwdGlvbiI6Ikxhc3RSdW4gdGVsbHMgdXMgdGhlIHRpbWUgdGhlIGxhc3QgYmFja3VwIGpvYiBzdGFydGVkLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibGFzdFN1Y2Nlc3MiOnsiZGVzY3JpcHRpb24iOiJMYXN0U3VjY2VzcyBnaXZlcyB1cyB0aGUgdGltZSB0aGUgbGFzdCBzdWNjZXNzZnVsIGJhY2t1cCBmaW5pc2hlZC4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sIm91dHB1dCI6eyJkZXNjcmlwdGlvbiI6IkRFUFJFQ0FURUQgLSBmaWVsZCBtYXkgbm8gbG9uZ2VyIGJlIHBvcHVsYXRlZC5cbk91dHB1dCByZXBvcnRzIHVzZWZ1bCBpbmZvcm1hdGlvbiBmcm9tIHRoZSBiYWNrdXBfc2NyaXB0LiIsInR5cGUiOiJzdHJpbmcifSwicG9kIjp7ImRlc2NyaXB0aW9uIjoiREVQUkVDQVRFRCAtIGZpZWxkIG1heSBubyBsb25nZXIgYmUgcG9wdWxhdGVkLlxuUG9kIHRlbGxzIHVzIHdoaWNoIHBvZCBpcyBydW5uaW5nL3JhbiBsYXN0LiIsInR5cGUiOiJzdHJpbmcifSwicmVwbyI6eyJkZXNjcmlwdGlvbiI6IlJlcG8gaXMgd2hlcmUgd2UgYXJlIGN1cnJlbnRseSBwZXJmb3JtaW5nIG9wZXJhdGlvbnMuIiwidHlwZSI6InN0cmluZyJ9LCJydW5uaW5nIjp7ImRlc2NyaXB0aW9uIjoiUnVubmluZyBpbmRpY2F0ZXMgd2hldGhlciBhIGJhY2t1cCBpcyBjdXJyZW50bHkgYmVpbmcgcGVyZm9ybWVkLiIsInR5cGUiOiJib29sZWFuIn19LCJyZXF1aXJlZCI6WyJmYWlsZWQiLCJydW5uaW5nIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlfV19fQ==
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuNy4wIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZWNvbGxlY3Rpb25ncm91cHMuY291Y2hiYXNlLmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiY291Y2hiYXNlLmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJDb3VjaGJhc2VDb2xsZWN0aW9uR3JvdXAiLCJsaXN0S2luZCI6IkNvdWNoYmFzZUNvbGxlY3Rpb25Hcm91cExpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2Vjb2xsZWN0aW9uZ3JvdXBzIiwic2luZ3VsYXIiOiJjb3VjaGJhc2Vjb2xsZWN0aW9uZ3JvdXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7Im5hbWUiOiJ2MiIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJDb3VjaGJhc2VDb2xsZWN0aW9uR3JvdXAgcmVwcmVzZW50IHRoZSBmaW5lc3QgZ3JhaW5lZCBzaXplIG9mIGRhdGEgc3RvcmFnZSBpbiBDb3VjaGJhc2UuXG5Db2xsZWN0aW9ucyBjb250YWluIGFsbCBkb2N1bWVudHMgYW5kIGluZGV4ZXMgaW4gdGhlIHN5c3RlbS4gIENvbGxlY3Rpb25zIGFsc28gZm9ybVxudGhlIGZpbmVzdCBncmFpbiBiYXNpcyBmb3Igcm9sZS1iYXNlZCBhY2Nlc3MgY29udHJvbCAoUkJBQykgYW5kIGNyb3NzLWRhdGFjZW50ZXJcbnJlcGxpY2F0aW9uIChYRENSKS4gIEluIG9yZGVyIHRvIGJlIGNvbnNpZGVyZWQgYnkgdGhlIE9wZXJhdG9yLCBldmVyeSBjb2xsZWN0aW9uIGdyb3VwXG5tdXN0IGJlIHJlZmVyZW5jZWQgYnkgYSBgQ291Y2hiYXNlU2NvcGVgIG9yIGBDb3VjaGJhc2VTY29wZUdyb3VwYCByZXNvdXJjZS4gIFVubGlrZSB0aGVcbkNvdWNoYmFzZUNvbGxlY3Rpb24gcmVzb3VyY2UsIGEgY29sbGVjdGlvbiBncm91cCByZXByZXNlbnRzIG11bHRpcGxlIGNvbGxlY3Rpb25zLCB3aXRoXG5jb21tb24gY29uZmlndXJhdGlvbiBwYXJhbWV0ZXJzLCB0byBiZSBleHByZXNzZWQgYXMgYSBzaW5nbGUgcmVzb3VyY2UsIG1pbmltaXppbmcgcmVxdWlyZWRcbmNvbmZpZ3VyYXRpb24gYW5kIEt1YmVybmV0ZXMgQVBJIHRyYWZmaWMuICBJdCBhbHNvIGZvcm1zIHRoZSBiYXNpcyBvZiBDb3VjaGJhc2UgUkJBQ1xuc2VjdXJpdHkgYm91bmRhcmllcy4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgdGhlIHJlc291cmNlLiIsInByb3BlcnRpZXMiOnsibWF4VFRMIjp7ImRlc2NyaXB0aW9uIjoiTWF4VFRMIGRlZmluZXMgaG93IGxvbmcgYSBkb2N1bWVudCBpcyBwZXJtaXR0ZWQgdG8gZXhpc3QgZm9yLCB3aXRob3V0XG5tb2RpZmljYXRpb24sIHVudGlsIGl0IGlzIGF1dG9tYXRpY2FsbHkgZGVsZXRlZC4gIFRoaXMgZmllbGQgdGFrZXMgcHJlY2VkZW5jZSBvdmVyXG5hbnkgVFRMIGRlZmluZWQgYXQgdGhlIGJ1Y2tldCBsZXZlbC4gIFRoaXMgaXMgYSBkZWZhdWx0LCBhbmQgbWF4aW11bVxudGltZS10by1saXZlIGFuZCBtYXkgYmUgc2V0IHRvIGEgbG93ZXIgdmFsdWUgYnkgdGhlIGNsaWVudC4gIElmIHRoZSBjbGllbnQgc3BlY2lmaWVzXG5hIGhpZ2hlciB2YWx1ZSwgdGhlbiBpdCBpcyB0cnVuY2F0ZWQgdG8gdGhlIG1heGltdW0gZHVyYWJpbGl0eS4gIERvY3VtZW50cyBhcmVcbnJlbW92ZWQgYnkgQ291Y2hiYXNlLCBhZnRlciB0aGV5IGhhdmUgZXhwaXJlZCwgd2hlbiBlaXRoZXIgYWNjZXNzZWQsIHRoZSBleHBpcnlcbnBhZ2VyIGlzIHJ1biwgb3IgdGhlIGJ1Y2tldCBpcyBjb21wYWN0ZWQuICBXaGVuIHNldCB0byAwLCB0aGVuIGRvY3VtZW50cyBhcmUgbm90XG5leHBpcmVkIGJ5IGRlZmF1bHQuICBUaGlzIGZpZWxkIG11c3QgYmUgYSBkdXJhdGlvbiBpbiB0aGUgcmFuZ2UgMC0yMTQ3NDgzNjQ4cyxcbmRlZmF1bHRpbmcgdG8gMC4gIE1vcmUgaW5mbzpcbmh0dHBzOi8vZ29sYW5nLm9yZy9wa2cvdGltZS8jUGFyc2VEdXJhdGlvbiIsInR5cGUiOiJzdHJpbmcifSwibmFtZXMiOnsiZGVzY3JpcHRpb24iOiJOYW1lcyBzcGVjaWZpZXMgdGhlIG5hbWVzIG9mIHRoZSBjb2xsZWN0aW9ucy4gIFVubGlrZSBDb3VjaGJhc2VDb2xsZWN0aW9uLCB3aGljaFxuc3BlY2lmaWVzIGEgc2luZ2xlIGNvbGxlY3Rpb24sIGEgY29sbGVjdGlvbiBncm91cCBzcGVjaWZpZXMgbXVsdGlwbGUsIGFuZCB0aGVcbmNvbGxlY3Rpb24gZ3JvdXAgbXVzdCBzcGVjaWZ5IGF0IGxlYXN0IG9uZSBjb2xsZWN0aW9uIG5hbWUuXG5BbnkgY29sbGVjdGlvbiBuYW1lcyBzcGVjaWZpZWQgbXVzdCBiZSB1bmlxdWUuXG5Db2xsZWN0aW9uIG5hbWVzIG11c3QgYmUgMS0yNTEgY2hhcmFjdGVycyBpbiBsZW5ndGgsIGNvbnRhaW4gb25seSBbYS16QS1aMC05Xy0lXVxuYW5kIG5vdCBzdGFydCB3aXRoIGVpdGhlciBfIG9yICUuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJTY29wZU9yQ29sbGVjdGlvbk5hbWUgaXMgYSBnZW5lcmljIHR5cGUgdG8gY2FwdHVyZSBhIHZhbGlkXG5zY29wZSBvciBjb2xsZWN0aW9uIG5hbWUuICBUaGVzZSBtdXN0IGNvbnNpc3Qgb2YgMS0yNTEgY2hhcmFjdGVycyxcbmluY2x1ZGUgb25seSBBLVosIGEteiwgMC05LCAtLCBfIG9yICUsIGFuZCBtdXN0IG5vdCBzdGFydCB3aXRoXG5fICh3aGljaCBpcyBhbiBpbnRlcm5hbCBtYXJrZXIpIG9yICUgKHdoaWNoIGlzIHByb2JhYmx5IGFuIGVzY2FwZVxuY2hhcmFjdGVyIGluIGxhbmd1YWdlIFgpLiIsIm1heExlbmd0aCI6MjUxLCJtaW5MZW5ndGgiOjEsInBhdHRlcm4iOiJeW2EtekEtWjAtOVxcLV1bYS16QS1aMC05XFwtJV9dezAsMjUwfSQiLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJzZXQifX0sInJlcXVpcmVkIjpbIm5hbWVzIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlfV19fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuNy4wIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZWNvbGxlY3Rpb25zLmNvdWNoYmFzZS5jb20ifSwic3BlYyI6eyJncm91cCI6ImNvdWNoYmFzZS5jb20iLCJuYW1lcyI6eyJraW5kIjoiQ291Y2hiYXNlQ29sbGVjdGlvbiIsImxpc3RLaW5kIjoiQ291Y2hiYXNlQ29sbGVjdGlvbkxpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2Vjb2xsZWN0aW9ucyIsInNpbmd1bGFyIjoiY291Y2hiYXNlY29sbGVjdGlvbiJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUNvbGxlY3Rpb24gcmVwcmVzZW50IHRoZSBmaW5lc3QgZ3JhaW5lZCBzaXplIG9mIGRhdGEgc3RvcmFnZSBpbiBDb3VjaGJhc2UuXG5Db2xsZWN0aW9ucyBjb250YWluIGFsbCBkb2N1bWVudHMgYW5kIGluZGV4ZXMgaW4gdGhlIHN5c3RlbS4gIENvbGxlY3Rpb25zIGFsc28gZm9ybVxudGhlIGZpbmVzdCBncmFpbiBiYXNpcyBmb3Igcm9sZS1iYXNlZCBhY2Nlc3MgY29udHJvbCAoUkJBQykgYW5kIGNyb3NzLWRhdGFjZW50ZXJcbnJlcGxpY2F0aW9uIChYRENSKS4gIEluIG9yZGVyIHRvIGJlIGNvbnNpZGVyZWQgYnkgdGhlIE9wZXJhdG9yLCBldmVyeSBjb2xsZWN0aW9uXG5tdXN0IGJlIHJlZmVyZW5jZWQgYnkgYSBgQ291Y2hiYXNlU2NvcGVgIG9yIGBDb3VjaGJhc2VTY29wZUdyb3VwYCByZXNvdXJjZS4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVmYXVsdCI6e30sImRlc2NyaXB0aW9uIjoiU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIHRoZSByZXNvdXJjZS4iLCJwcm9wZXJ0aWVzIjp7Im1heFRUTCI6eyJkZXNjcmlwdGlvbiI6Ik1heFRUTCBkZWZpbmVzIGhvdyBsb25nIGEgZG9jdW1lbnQgaXMgcGVybWl0dGVkIHRvIGV4aXN0IGZvciwgd2l0aG91dFxubW9kaWZpY2F0aW9uLCB1bnRpbCBpdCBpcyBhdXRvbWF0aWNhbGx5IGRlbGV0ZWQuICBUaGlzIGZpZWxkIHRha2VzIHByZWNlZGVuY2Ugb3ZlclxuYW55IFRUTCBkZWZpbmVkIGF0IHRoZSBidWNrZXQgbGV2ZWwuICBUaGlzIGlzIGEgZGVmYXVsdCwgYW5kIG1heGltdW1cbnRpbWUtdG8tbGl2ZSBhbmQgbWF5IGJlIHNldCB0byBhIGxvd2VyIHZhbHVlIGJ5IHRoZSBjbGllbnQuICBJZiB0aGUgY2xpZW50IHNwZWNpZmllc1xuYSBoaWdoZXIgdmFsdWUsIHRoZW4gaXQgaXMgdHJ1bmNhdGVkIHRvIHRoZSBtYXhpbXVtIGR1cmFiaWxpdHkuICBEb2N1bWVudHMgYXJlXG5yZW1vdmVkIGJ5IENvdWNoYmFzZSwgYWZ0ZXIgdGhleSBoYXZlIGV4cGlyZWQsIHdoZW4gZWl0aGVyIGFjY2Vzc2VkLCB0aGUgZXhwaXJ5XG5wYWdlciBpcyBydW4sIG9yIHRoZSBidWNrZXQgaXMgY29tcGFjdGVkLiAgV2hlbiBzZXQgdG8gMCwgdGhlbiBkb2N1bWVudHMgYXJlIG5vdFxuZXhwaXJlZCBieSBkZWZhdWx0LiAgVGhpcyBmaWVsZCBtdXN0IGJlIGEgZHVyYXRpb24gaW4gdGhlIHJhbmdlIDAtMjE0NzQ4MzY0OHMsXG5kZWZhdWx0aW5nIHRvIDAuICBNb3JlIGluZm86XG5odHRwczovL2dvbGFuZy5vcmcvcGtnL3RpbWUvI1BhcnNlRHVyYXRpb24iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIHNwZWNpZmllcyB0aGUgbmFtZSBvZiB0aGUgY29sbGVjdGlvbi4gIEJ5IGRlZmF1bHQsIHRoZSBtZXRhZGF0YS5uYW1lIGlzXG51c2VkIHRvIGRlZmluZSB0aGUgY29sbGVjdGlvbiBuYW1lLCBob3dldmVyLCBkdWUgdG8gdGhlIGxpbWl0ZWQgY2hhcmFjdGVyIHNldCxcbnRoaXMgZmllbGQgY2FuIGJlIHVzZWQgdG8gb3ZlcnJpZGUgdGhlIGRlZmF1bHQgYW5kIHByb3ZpZGUgdGhlIGZ1bGwgZnVuY3Rpb25hbGl0eS5cbkFkZGl0aW9uYWxseSB0aGUgYG1ldGFkYXRhLm5hbWVgIGZpZWxkIGlzIGEgRE5TIGxhYmVsLCBhbmQgdGh1cyBsaW1pdGVkIHRvIDYzXG5jaGFyYWN0ZXJzLCB0aGlzIGZpZWxkIG11c3QgYmUgdXNlZCBpZiB0aGUgbmFtZSBpcyBsb25nZXIgdGhhbiB0aGlzIGxpbWl0LlxuQ29sbGVjdGlvbiBuYW1lcyBtdXN0IGJlIDEtMjUxIGNoYXJhY3RlcnMgaW4gbGVuZ3RoLCBjb250YWluIG9ubHkgW2EtekEtWjAtOV8tJV1cbmFuZCBub3Qgc3RhcnQgd2l0aCBlaXRoZXIgXyBvciAlLiIsIm1heExlbmd0aCI6MjUxLCJtaW5MZW5ndGgiOjEsInBhdHRlcm4iOiJeW2EtekEtWjAtOVxcLV1bYS16QS1aMC05XFwtJV9dezAsMjUwfSQiLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWV9XX19
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuNy4wIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZXJvbGViaW5kaW5ncy5jb3VjaGJhc2UuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJjb3VjaGJhc2UuY29tIiwibmFtZXMiOnsia2luZCI6IkNvdWNoYmFzZVJvbGVCaW5kaW5nIiwibGlzdEtpbmQiOiJDb3VjaGJhc2VSb2xlQmluZGluZ0xpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2Vyb2xlYmluZGluZ3MiLCJzaW5ndWxhciI6ImNvdWNoYmFzZXJvbGViaW5kaW5nIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjIiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlUm9sZUJpbmRpbmcgYWxsb3dzIGFzc29jaWF0aW9uIG9mIENvdWNoYmFzZSB1c2VycyB3aXRoIGdyb3Vwcy4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJDb3VjaGJhc2VSb2xlQmluZGluZ1NwZWMgZGVmaW5lcyB0aGUgZ3JvdXAgb2Ygc3ViamVjdHMgaS5lLiB1c2VycywgYW5kIHRoZVxucm9sZSBpLmUuIGdyb3VwIHRoZXkgYXJlIGEgbWVtYmVyIG9mLiIsInByb3BlcnRpZXMiOnsicm9sZVJlZiI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUdyb3VwIGJlaW5nIGJvdW5kIHRvIHN1YmplY3RzLiIsInByb3BlcnRpZXMiOnsia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgb2Ygcm9sZSB0byB1c2UgZm9yIGJpbmRpbmcuIiwiZW51bSI6WyJDb3VjaGJhc2VHcm91cCJdLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHJvbGUgcmVzb3VyY2UgdG8gdXNlIGZvciBiaW5kaW5nLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImtpbmQiLCJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3ViamVjdHMiOnsiZGVzY3JpcHRpb24iOiJMaXN0IG9mIHVzZXJzIHRvIGJpbmQgYSByb2xlIHRvLiIsIml0ZW1zIjp7InByb3BlcnRpZXMiOnsia2luZCI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZSB1c2VyL2dyb3VwIGtpbmQuIiwiZW51bSI6WyJDb3VjaGJhc2VVc2VyIl0sInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgQ291Y2hiYXNlIHVzZXIgcmVzb3VyY2UuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsia2luZCIsIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbInJvbGVSZWYiLCJzdWJqZWN0cyJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZX1dfX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuNy4wIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZXVzZXJzLmNvdWNoYmFzZS5jb20ifSwic3BlYyI6eyJncm91cCI6ImNvdWNoYmFzZS5jb20iLCJuYW1lcyI6eyJraW5kIjoiQ291Y2hiYXNlVXNlciIsImxpc3RLaW5kIjoiQ291Y2hiYXNlVXNlckxpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2V1c2VycyIsInNpbmd1bGFyIjoiY291Y2hiYXNldXNlciJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZVVzZXIgYWxsb3dzIHRoZSBhdXRvbWF0aW9uIG9mIENvdWNoYmFzZSB1c2VyIG1hbmFnZW1lbnQuIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LlxuU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kXG5tYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuXG5TZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by5cbkNhbm5vdCBiZSB1cGRhdGVkLlxuSW4gQ2FtZWxDYXNlLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlVXNlclNwZWMgYWxsb3dzIHRoZSBzcGVjaWZpY2F0aW9uIG9mIENvdWNoYmFzZSB1c2VyIGNvbmZpZ3VyYXRpb24uIiwicHJvcGVydGllcyI6eyJhdXRoRG9tYWluIjp7ImRlc2NyaXB0aW9uIjoiVGhlIGRvbWFpbiB3aGljaCBwcm92aWRlcyB1c2VyIGF1dGhlbnRpY2F0aW9uLiIsImVudW0iOlsibG9jYWwiLCJleHRlcm5hbCJdLCJ0eXBlIjoic3RyaW5nIn0sImF1dGhTZWNyZXQiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIEt1YmVybmV0ZXMgc2VjcmV0IHdpdGggcGFzc3dvcmQgZm9yIENvdWNoYmFzZSBkb21haW4uIiwidHlwZSI6InN0cmluZyJ9LCJmdWxsTmFtZSI6eyJkZXNjcmlwdGlvbiI6IkZ1bGwgTmFtZSBvZiBDb3VjaGJhc2UgdXNlci4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJhdXRoRG9tYWluIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlfV19fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoib3BlcmF0b3JzLmNvcmVvcy5jb20vdjFhbHBoYTEiLCJraW5kIjoiQ2x1c3RlclNlcnZpY2VWZXJzaW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiYWxtLWV4YW1wbGVzIjoiW1xuICB7XG4gICAgXCJhcGlWZXJzaW9uXCI6IFwiY291Y2hiYXNlLmNvbS92MlwiLFxuICAgIFwia2luZFwiOiBcIkNvdWNoYmFzZUNsdXN0ZXJcIixcbiAgICBcIm1ldGFkYXRhXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcImNiLWV4YW1wbGVcIlxuICAgIH0sXG4gICAgXCJzcGVjXCI6IHtcbiAgICAgIFwiaW1hZ2VcIjogXCJyZWdpc3RyeS5jb25uZWN0LnJlZGhhdC5jb20vY291Y2hiYXNlL3NlcnZlckBzaGEyNTY6MDMzYzBiMmI4ZWIxMmFjNjNhMTU4NzU0ZGNlMjBkOTc4N2E0NzBjNzcyNTJjNjBiZDRkOWUxMWY1YjJkYmM3YVwiLFxuICAgICAgXCJjbHVzdGVyXCI6IHtcbiAgICAgICAgXCJjbHVzdGVyTmFtZVwiOiBcImNiLWV4YW1wbGVcIixcbiAgICAgICAgXCJkYXRhU2VydmljZU1lbW9yeVF1b3RhXCI6IFwiMjU2TWlcIixcbiAgICAgICAgXCJpbmRleFNlcnZpY2VNZW1vcnlRdW90YVwiOiBcIjI1Nk1pXCIsXG4gICAgICAgIFwic2VhcmNoU2VydmljZU1lbW9yeVF1b3RhXCI6IFwiMjU2TWlcIixcbiAgICAgICAgXCJldmVudGluZ1NlcnZpY2VNZW1vcnlRdW90YVwiOiBcIjI1Nk1pXCIsXG4gICAgICAgIFwiYW5hbHl0aWNzU2VydmljZU1lbW9yeVF1b3RhXCI6IFwiMUdpXCIsXG4gICAgICAgIFwiaW5kZXhTdG9yYWdlU2V0dGluZ1wiOiBcIm1lbW9yeV9vcHRpbWl6ZWRcIixcbiAgICAgICAgXCJhdXRvRmFpbG92ZXJUaW1lb3V0XCI6IFwiMTIwc1wiLFxuICAgICAgICBcImF1dG9GYWlsb3Zlck1heENvdW50XCI6IDMsXG4gICAgICAgIFwiYXV0b0ZhaWxvdmVyT25EYXRhRGlza0lzc3Vlc1wiOiB0cnVlLFxuICAgICAgICBcImF1dG9GYWlsb3Zlck9uRGF0YURpc2tJc3N1ZXNUaW1lUGVyaW9kXCI6IFwiMTIwc1wiLFxuICAgICAgICBcImF1dG9GYWlsb3ZlclNlcnZlckdyb3VwXCI6IGZhbHNlXG4gICAgICB9LFxuICAgICAgXCJ1cGdyYWRlU3RyYXRlZ3lcIjogXCJSb2xsaW5nVXBncmFkZVwiLFxuICAgICAgXCJoaWJlcm5hdGVcIjogZmFsc2UsXG4gICAgICBcImhpYmVybmF0aW9uU3RyYXRlZ3lcIjogXCJJbW1lZGlhdGVcIixcbiAgICAgIFwicmVjb3ZlcnlQb2xpY3lcIjogXCJQcmlvcml0aXplRGF0YUludGVncml0eVwiLFxuICAgICAgXCJvbmxpbmVWb2x1bWVFeHBhbnNpb25UaW1lb3V0SW5NaW5zXCI6IDIwLFxuICAgICAgXCJzZWN1cml0eVwiOiB7XG4gICAgICAgIFwiYWRtaW5TZWNyZXRcIjogXCJjYi1leGFtcGxlLWF1dGhcIixcbiAgICAgICAgXCJyYmFjXCI6IHtcbiAgICAgICAgICBcIm1hbmFnZWRcIjogdHJ1ZSxcbiAgICAgICAgICBcInNlbGVjdG9yXCI6IHtcbiAgICAgICAgICAgIFwibWF0Y2hMYWJlbHNcIjoge1xuICAgICAgICAgICAgICBcImNsdXN0ZXJcIjogXCJjYi1leGFtcGxlXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBcInhkY3JcIjoge1xuICAgICAgICAgXCJtYW5hZ2VkXCI6IGZhbHNlLFxuICAgICAgICAgIFwic2VsZWN0b3JcIjoge1xuICAgICAgICAgICAgXCJtYXRjaExhYmVsc1wiOiB7XG4gICAgICAgICAgICAgIFwiY2x1c3RlclwiOiBcImNiLWV4YW1wbGVcIlxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICB9LFxuICAgICAgXCJiYWNrdXBcIjoge1xuICAgICAgICBcImltYWdlXCI6IFwicmVnaXN0cnkuY29ubmVjdC5yZWRoYXQuY29tL2NvdWNoYmFzZS9vcGVyYXRvci1iYWNrdXBAc2hhMjU2OjM4MjUxMWY1MzJiMDIwNmQyYmIwY2VjYzhmOTFiMDU1ODA5YjVjY2Y4OTEzNmI2ZDM3ZDU1YTQwZTI2NjgxMmZcIixcbiAgICAgICAgXCJtYW5hZ2VkXCI6IGZhbHNlLFxuICAgICAgICBcInNlcnZpY2VBY2NvdW50TmFtZVwiOiBcImNvdWNoYmFzZS1iYWNrdXBcIixcbiAgICAgICAgXCJzZWxlY3RvclwiOiB7XG4gICAgICAgICAgXCJtYXRjaExhYmVsc1wiOiB7XG4gICAgICAgICAgICBcImNsdXN0ZXJcIjogXCJjYi1leGFtcGxlXCJcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBcIm1vbml0b3JpbmdcIjoge1xuICAgICAgICBcInByb21ldGhldXNcIjoge1xuICAgICAgICAgIFwiZW5hYmxlZFwiOiBmYWxzZSxcbiAgICAgICAgICBcImltYWdlXCI6IFwicmVnaXN0cnkuY29ubmVjdC5yZWRoYXQuY29tL2NvdWNoYmFzZS9leHBvcnRlckBzaGEyNTY6ZGUzYmFjZjgyMzM1NTM0NTJkYjFkOWNlYzdjOThiMjhkMTJjNDFhYTAyNWQ4MzBkNmI3YzVkZTBkYTk3MjNiMVwiXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBcIm5ldHdvcmtpbmdcIjoge1xuICAgICAgICBcImV4cG9zZUFkbWluQ29uc29sZVwiOiB0cnVlLFxuICAgICAgICBcImFkbWluQ29uc29sZVNlcnZpY2VzXCI6IFtcbiAgICAgICAgICBcImRhdGFcIlxuICAgICAgICBdLFxuICAgICAgICBcImV4cG9zZWRGZWF0dXJlc1wiOiBbXG4gICAgICAgICAgXCJ4ZGNyXCJcbiAgICAgICAgXSxcbiAgICAgICAgXCJleHBvc2VkRmVhdHVyZVNlcnZpY2VUeXBlXCI6IFwiTm9kZVBvcnRcIixcbiAgICAgICAgXCJhZG1pbkNvbnNvbGVTZXJ2aWNlVHlwZVwiOiBcIk5vZGVQb3J0XCIsXG4gICAgICAgIFwiY2xvdWROYXRpdmVHYXRld2F5XCI6IHtcbiAgICAgICAgICBcImltYWdlXCI6IFwicmVnaXN0cnkuY29ubmVjdC5yZWRoYXQuY29tL2NvdWNoYmFzZS9jbG91ZC1uYXRpdmUtZ2F0ZXdheUBzaGEyNTY6NTBiYmMwMGNjZTE0ZWM5NjhjOWI4ZTllZjA2YTZjNWJkMjg2MGQzOGQ5NzNjZjdhZjcyNzFkNGZmNjZmZTljY1wiXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBcImJ1Y2tldHNcIjoge1xuICAgICAgICBcIm1hbmFnZWRcIjogdHJ1ZSxcbiAgICAgICAgXCJzZWxlY3RvclwiOiB7XG4gICAgICAgICAgXCJtYXRjaExhYmVsc1wiOiB7XG4gICAgICAgICAgICBcImNsdXN0ZXJcIjogXCJjYi1leGFtcGxlXCJcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBcImxvZ1JldGVudGlvblRpbWVcIjogXCI2MDQ4MDBzXCIsXG4gICAgICBcImxvZ1JldGVudGlvbkNvdW50XCI6IDIwLFxuICAgICAgXCJlbmFibGVQcmV2aWV3U2NhbGluZ1wiOiBmYWxzZSxcbiAgICAgIFwic2VydmVyc1wiOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBcInNpemVcIjogMyxcbiAgICAgICAgICBcIm5hbWVcIjogXCJhbGxfc2VydmljZXNcIixcbiAgICAgICAgICBcInNlcnZpY2VzXCI6IFtcbiAgICAgICAgICAgIFwiZGF0YVwiLFxuICAgICAgICAgICAgXCJpbmRleFwiLFxuICAgICAgICAgICAgXCJxdWVyeVwiLFxuICAgICAgICAgICAgXCJzZWFyY2hcIixcbiAgICAgICAgICAgIFwiZXZlbnRpbmdcIixcbiAgICAgICAgICAgIFwiYW5hbHl0aWNzXCJcbiAgICAgICAgICBdXG4gICAgICAgIH1cbiAgICAgIF1cbiAgICB9LFxuICAgIFwic3RhdHVzXCI6IHtcbiAgICAgIFwic2l6ZVwiOiAwXG4gICAgfVxuICB9LFxuICB7XG4gICAgXCJhcGlWZXJzaW9uXCI6IFwiY291Y2hiYXNlLmNvbS92MlwiLFxuICAgIFwia2luZFwiOiBcIkNvdWNoYmFzZUJ1Y2tldFwiLFxuICAgIFwibWV0YWRhdGFcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiZGVmYXVsdFwiLFxuICAgICAgXCJsYWJlbHNcIjoge1xuICAgICAgICBcImNsdXN0ZXJcIjogXCJjYi1leGFtcGxlXCJcbiAgICAgIH1cbiAgICB9LFxuICAgIFwic3BlY1wiOiB7XG4gICAgICBcIm1lbW9yeVF1b3RhXCI6IFwiMTAwTWlcIixcbiAgICAgIFwicmVwbGljYXNcIjogMixcbiAgICAgIFwiaW9Qcmlvcml0eVwiOiBcImxvd1wiLFxuICAgICAgXCJldmljdGlvblBvbGljeVwiOiBcInZhbHVlT25seVwiLFxuICAgICAgXCJjb25mbGljdFJlc29sdXRpb25cIjogXCJsd3dcIixcbiAgICAgIFwiZW5hYmxlRmx1c2hcIjogZmFsc2UsXG4gICAgICBcImVuYWJsZUluZGV4UmVwbGljYVwiOiB0cnVlLFxuICAgICAgXCJjb21wcmVzc2lvbk1vZGVcIjogXCJwYXNzaXZlXCJcbiAgICB9LFxuICAgIFwic3RhdHVzXCI6IHt9XG4gIH0sXG4gIHtcbiAgICAgXCJhcGlWZXJzaW9uXCI6IFwiY291Y2hiYXNlLmNvbS92MlwiLFxuICAgICBcImtpbmRcIjogXCJDb3VjaGJhc2VFcGhlbWVyYWxCdWNrZXRcIixcbiAgICAgXCJtZXRhZGF0YVwiOiB7XG4gICAgICAgIFwibmFtZVwiOiBcImVwaGVtZXJhbC1idWNrZXRcIixcbiAgICAgICAgXCJsYWJlbHNcIjoge1xuICAgICAgICAgICBcImNsdXN0ZXJcIjogXCJjYi1leGFtcGxlXCJcbiAgICAgICAgfVxuICAgICB9LFxuICAgICBcInNwZWNcIjoge1xuICAgICAgICBcIm1lbW9yeVF1b3RhXCI6IFwiMTAwTWlcIixcbiAgICAgICAgXCJyZXBsaWNhc1wiOiAyLFxuICAgICAgICBcImlvUHJpb3JpdHlcIjogXCJsb3dcIixcbiAgICAgICAgXCJldmljdGlvblBvbGljeVwiOiBcIm5vRXZpY3Rpb25cIixcbiAgICAgICAgXCJjb25mbGljdFJlc29sdXRpb25cIjogXCJsd3dcIixcbiAgICAgICAgXCJlbmFibGVGbHVzaFwiOiBmYWxzZSxcbiAgICAgICAgXCJjb21wcmVzc2lvbk1vZGVcIjogXCJwYXNzaXZlXCJcbiAgICAgfSxcbiAgICAgXCJzdGF0dXNcIjoge31cbiAgfSxcbiAge1xuICAgICBcImFwaVZlcnNpb25cIjogXCJjb3VjaGJhc2UuY29tL3YyXCIsXG4gICAgIFwia2luZFwiOiBcIkNvdWNoYmFzZU1lbWNhY2hlZEJ1Y2tldFwiLFxuICAgICBcIm1ldGFkYXRhXCI6IHtcbiAgICAgICAgXCJuYW1lXCI6IFwibWVtY2FjaGVkLWJ1Y2tldFwiLFxuICAgICAgICBcImxhYmVsc1wiOiB7XG4gICAgICAgICAgIFwiY2x1c3RlclwiOiBcImNiLWV4YW1wbGVcIlxuICAgICAgICB9XG4gICAgIH0sXG4gICAgIFwic3BlY1wiOiB7XG4gICAgICAgIFwibWVtb3J5UXVvdGFcIjogXCIxMDBNaVwiLFxuICAgICAgICBcImVuYWJsZUZsdXNoXCI6IGZhbHNlXG4gICAgIH0sXG4gICAgIFwic3RhdHVzXCI6IHt9XG4gIH0sXG4gIHtcbiAgICBcImFwaVZlcnNpb25cIjogXCJjb3VjaGJhc2UuY29tL3YyXCIsXG4gICAgXCJraW5kXCI6IFwiQ291Y2hiYXNlVXNlclwiLFxuICAgIFwibWV0YWRhdGFcIjoge1xuICAgICAgXCJuYW1lXCI6IFwibXktdXNlclwiLFxuICAgICAgXCJsYWJlbHNcIjoge1xuICAgICAgICBcImNsdXN0ZXJcIjogXCJjYi1leGFtcGxlXCJcbiAgICAgIH1cbiAgICB9LFxuICAgIFwic3BlY1wiOiB7XG4gICAgICBcImZ1bGxOYW1lXCI6IFwiTXkgVXNlclwiLFxuICAgICAgXCJhdXRoRG9tYWluXCI6IFwibG9jYWxcIixcbiAgICAgIFwiYXV0aFNlY3JldFwiOiBcImNiLWV4YW1wbGUtYXV0aFwiXG4gICAgfSxcbiAgICBcInN0YXR1c1wiOiB7fVxuICB9LFxuICB7XG4gICAgXCJhcGlWZXJzaW9uXCI6IFwiY291Y2hiYXNlLmNvbS92MlwiLFxuICAgIFwia2luZFwiOiBcIkNvdWNoYmFzZUdyb3VwXCIsXG4gICAgXCJtZXRhZGF0YVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJteS1ncm91cFwiLFxuICAgICAgXCJsYWJlbHNcIjoge1xuICAgICAgICBcImNsdXN0ZXJcIjogXCJjYi1leGFtcGxlXCJcbiAgICAgIH1cbiAgICB9LFxuICAgIFwic3BlY1wiOiB7XG4gICAgICBcInJvbGVzXCI6IFtcbiAgICAgICAge1xuICAgICAgICAgIFwibmFtZVwiOiBcImJ1Y2tldF9hZG1pblwiLFxuICAgICAgICAgIFwiYnVja2V0XCI6IFwiZGVmYXVsdFwiXG4gICAgICAgIH1cbiAgICAgIF1cbiAgICB9LFxuICAgIFwic3RhdHVzXCI6IHt9XG4gIH0sXG4gIHtcbiAgICBcImFwaVZlcnNpb25cIjogXCJjb3VjaGJhc2UuY29tL3YyXCIsXG4gICAgXCJraW5kXCI6IFwiQ291Y2hiYXNlUm9sZUJpbmRpbmdcIixcbiAgICBcIm1ldGFkYXRhXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIm15LXJvbGUtYmluZGluZ1wiXG4gICAgfSxcbiAgICBcInNwZWNcIjoge1xuICAgICAgXCJzdWJqZWN0c1wiOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBcImtpbmRcIjogXCJDb3VjaGJhc2VVc2VyXCIsXG4gICAgICAgICAgXCJuYW1lXCI6IFwibXktdXNlclwiXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBcInJvbGVSZWZcIjoge1xuICAgICAgICBcImtpbmRcIjogXCJDb3VjaGJhc2VHcm91cFwiLFxuICAgICAgICBcIm5hbWVcIjogXCJteS1ncm91cFwiXG4gICAgICB9XG4gICAgfSxcbiAgICBcInN0YXR1c1wiOiB7fVxuICB9LFxuICB7XG4gICAgIFwiYXBpVmVyc2lvblwiOiBcImNvdWNoYmFzZS5jb20vdjJcIixcbiAgICAgXCJraW5kXCI6IFwiQ291Y2hiYXNlUmVwbGljYXRpb25cIixcbiAgICAgXCJtZXRhZGF0YVwiOiB7XG4gICAgICAgIFwibmFtZVwiOiBcIm15LXJlcGxpY2F0aW9uXCIsXG4gICAgICAgIFwibGFiZWxzXCI6IHtcbiAgICAgICAgICAgXCJjbHVzdGVyXCI6IFwiY2ItZXhhbXBsZVwiXG4gICAgICAgIH1cbiAgICAgfSxcbiAgICAgXCJzcGVjXCI6IHtcbiAgICAgICAgXCJidWNrZXRcIjogXCJkZWZhdWx0XCIsXG4gICAgICAgIFwicmVtb3RlQnVja2V0XCI6IFwiZGVmYXVsdFwiLFxuICAgICAgICBcImNvbXByZXNzaW9uVHlwZVwiOiBcIlNuYXBweVwiLFxuICAgICAgICBcImZpbHRlckV4cHJlc3Npb25cIjogXCJcIixcbiAgICAgICAgXCJwYXVzZWRcIjogZmFsc2VcbiAgICAgfSxcbiAgICAgXCJzdGF0dXNcIjoge31cbiAgfSxcbiAge1xuICAgIFwiYXBpVmVyc2lvblwiOiBcImNvdWNoYmFzZS5jb20vdjJcIixcbiAgICBcImtpbmRcIjogXCJDb3VjaGJhc2VCYWNrdXBcIixcbiAgICBcIm1ldGFkYXRhXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcImNiLWJhY2t1cFwiLFxuICAgICAgXCJsYWJlbHNcIjoge1xuICAgICAgICBcImNsdXN0ZXJcIjogXCJjYi1leGFtcGxlXCJcbiAgICAgIH1cbiAgICB9LFxuICAgIFwic3BlY1wiOiB7XG4gICAgICBcInN0cmF0ZWd5XCI6IFwiZnVsbF9pbmNyZW1lbnRhbFwiLFxuICAgICAgXCJmdWxsXCI6IHtcbiAgICAgICAgXCJzY2hlZHVsZVwiOiBcIjAgMyAqICogNlwiXG4gICAgICB9LFxuICAgICAgXCJpbmNyZW1lbnRhbFwiOiB7XG4gICAgICAgIFwic2NoZWR1bGVcIjogXCIwIDMgKiAqIDEtNlwiXG4gICAgICB9LFxuICAgICAgXCJzdWNjZXNzZnVsSm9ic0hpc3RvcnlMaW1pdFwiOiAxLFxuICAgICAgXCJmYWlsZWRKb2JzSGlzdG9yeUxpbWl0XCI6IDMsXG4gICAgICBcImJhY2tPZmZMaW1pdFwiOiAyLFxuICAgICAgXCJiYWNrdXBSZXRlbnRpb25cIjogXCIyNGhcIixcbiAgICAgIFwibG9nUmV0ZW50aW9uXCI6IFwiMjRoXCIsXG4gICAgICBcInNpemVcIjogXCI1R2lcIlxuICAgIH0sXG4gICAgXCJzdGF0dXNcIjoge31cbiAgfSxcbiAge1xuICAgICBcImFwaVZlcnNpb25cIjogXCJjb3VjaGJhc2UuY29tL3YyXCIsXG4gICAgIFwia2luZFwiOiBcIkNvdWNoYmFzZUJhY2t1cFJlc3RvcmVcIixcbiAgICAgXCJtZXRhZGF0YVwiOiB7XG4gICAgICAgIFwibmFtZVwiOiBcImNiLXJlc3RvcmVcIixcbiAgICAgICAgXCJsYWJlbHNcIjoge1xuICAgICAgICAgICBcImNsdXN0ZXJcIjogXCJjYi1leGFtcGxlXCJcbiAgICAgICAgfVxuICAgICB9LFxuICAgICBcInNwZWNcIjoge1xuICAgICAgICBcImJhY2t1cFwiOiBcImNiLWJhY2t1cFwiLFxuICAgICAgICBcInJlcG9cIjogXCJjYi1leGFtcGxlLTIwMjAtMTAtMjlUMTlfMDBfMDNcIixcbiAgICAgICAgXCJzdGFydFwiOiB7XG4gICAgICAgICAgIFwiaW50XCI6IDFcbiAgICAgICAgfSxcbiAgICAgICAgXCJlbmRcIjoge1xuICAgICAgICAgICBcImludFwiOiAxXG4gICAgICAgIH0sXG4gICAgICAgIFwiYmFja09mZkxpbWl0XCI6IDIsXG4gICAgICAgIFwibG9nUmV0ZW50aW9uXCI6IFwiMjRoXCJcbiAgICAgfSxcbiAgICAgXCJzdGF0dXNcIjoge31cbiAgfSxcbiAge1xuICAgIFwiYXBpVmVyc2lvblwiOiBcImNvdWNoYmFzZS5jb20vdjJcIixcbiAgICBcImtpbmRcIjogXCJDb3VjaGJhc2VDb2xsZWN0aW9uR3JvdXBcIixcbiAgICBcIm1ldGFkYXRhXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIm15LWNvbGxlY3Rpb24tZ3JvdXBcIlxuICAgIH0sXG4gICAgXCJzcGVjXCI6IHtcbiAgICAgIFwibWF4VFRMXCI6IFwiXCIsXG4gICAgICBcIm5hbWVzXCI6IFtcIm15LWNvbGxlY3Rpb25cIl1cbiAgICB9LFxuICAgIFwic3RhdHVzXCI6IHt9XG4gIH0sXG4gIHtcbiAgICBcImFwaVZlcnNpb25cIjogXCJjb3VjaGJhc2UuY29tL3YyXCIsXG4gICAgXCJraW5kXCI6IFwiQ291Y2hiYXNlQ29sbGVjdGlvblwiLFxuICAgIFwibWV0YWRhdGFcIjoge1xuICAgICAgXCJuYW1lXCI6IFwibXktY29sbGVjdGlvblwiXG4gICAgfSxcbiAgICBcInNwZWNcIjoge1xuICAgICAgXCJtYXhUVExcIjogXCJcIixcbiAgICAgIFwibmFtZVwiOiBcIm15LWNvbGxlY3Rpb25cIlxuICAgIH0sXG4gICAgXCJzdGF0dXNcIjoge31cbiAgfSxcbiAge1xuICAgIFwiYXBpVmVyc2lvblwiOiBcImNvdWNoYmFzZS5jb20vdjJcIixcbiAgICBcImtpbmRcIjogXCJDb3VjaGJhc2VTY29wZUdyb3VwXCIsXG4gICAgXCJtZXRhZGF0YVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJteS1zY29wZS1ncm91cFwiXG4gICAgfSxcbiAgICBcInNwZWNcIjoge1xuICAgICAgXCJjb2xsZWN0aW9uc1wiOiB7fSxcbiAgICAgIFwibmFtZXNcIjogW1wibXktc2NvcGVcIl1cbiAgICB9LFxuICAgIFwic3RhdHVzXCI6IHt9XG4gIH0sXG4gIHtcbiAgICBcImFwaVZlcnNpb25cIjogXCJjb3VjaGJhc2UuY29tL3YyXCIsXG4gICAgXCJraW5kXCI6IFwiQ291Y2hiYXNlU2NvcGVcIixcbiAgICBcIm1ldGFkYXRhXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIm15LXNjb3BlXCJcbiAgICB9LFxuICAgIFwic3BlY1wiOiB7XG4gICAgICBcImNvbGxlY3Rpb25zXCI6IHt9LFxuICAgICAgXCJuYW1lXCI6IFwibXktc2NvcGVcIlxuICAgIH0sXG4gICAgXCJzdGF0dXNcIjoge31cbiAgfSxcbiAge1xuICAgIFwiYXBpVmVyc2lvblwiOiBcImNvdWNoYmFzZS5jb20vdjJcIixcbiAgICBcImtpbmRcIjogXCJDb3VjaGJhc2VNaWdyYXRpb25SZXBsaWNhdGlvblwiLFxuICAgIFwibWV0YWRhdGFcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiZGVmYXVsdC1taWdyYXRpb25cIlxuICAgIH0sXG4gICAgXCJtaWdyYXRpb25NYXBwaW5nXCI6IHtcbiAgICAgIFwibWFwcGluZ3NcIjogW11cbiAgICB9LFxuICAgIFwic3BlY1wiOiB7XG4gICAgICBcImJ1Y2tldFwiOiBcImRlZmF1bHRcIixcbiAgICAgIFwicmVtb3RlQnVja2V0XCI6IFwiZGVmYXVsdFwiXG4gICAgfVxuICB9LFxuICB7XG4gICAgXCJhcGlWZXJzaW9uXCI6IFwiY291Y2hiYXNlLmNvbS92MlwiLFxuICAgIFwia2luZFwiOiBcIkNvdWNoYmFzZUF1dG9zY2FsZXJcIixcbiAgICBcIm1ldGFkYXRhXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcImRvLm5vdC5jcmVhdGUuaW50ZXJuYWwub25seVwiXG4gICAgfSxcbiAgICBcInNwZWNcIjoge1xuICAgICAgXCJzZXJ2ZXJzXCI6IFwiaW50ZXJuYWxcIixcbiAgICAgIFwic2l6ZVwiOiAyXG4gICAgfSxcbiAgICBcInN0YXR1c1wiOiB7XG4gICAgICBcImxhYmVsU2VsZWN0b3JcIjogXCJcIixcbiAgICAgIFwic2l6ZVwiOiAyXG4gICAgfVxuICB9XG5dIiwiY2FwYWJpbGl0aWVzIjoiQXV0byBQaWxvdCIsImNhdGVnb3JpZXMiOiJEYXRhYmFzZSIsImNlcnRpZmllZCI6InRydWUiLCJjcmVhdGVkQXQiOiIyMDIzLzA0LzI4IiwiZGVzY3JpcHRpb24iOiJUaGUgQ291Y2hiYXNlIEF1dG9ub21vdXMgT3BlcmF0b3IgYWxsb3dzIHVzZXJzIHRvIGVhc2lseSBkZXBsb3ksIG1hbmFnZSwgYW5kIG1haW50YWluIENvdWNoYmFzZSBkZXBsb3ltZW50cyIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vY25mIjoiZmFsc2UiLCJmZWF0dXJlcy5vcGVyYXRvcnMub3BlbnNoaWZ0LmlvL2NuaSI6ImZhbHNlIiwiZmVhdHVyZXMub3BlcmF0b3JzLm9wZW5zaGlmdC5pby9jc2kiOiJmYWxzZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vZGlzY29ubmVjdGVkIjoidHJ1ZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vZmlwcy1jb21wbGlhbnQiOiJmYWxzZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vcHJveHktYXdhcmUiOiJmYWxzZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vdGxzLXByb2ZpbGVzIjoiZmFsc2UiLCJmZWF0dXJlcy5vcGVyYXRvcnMub3BlbnNoaWZ0LmlvL3Rva2VuLWF1dGgtYXdzIjoiZmFsc2UiLCJmZWF0dXJlcy5vcGVyYXRvcnMub3BlbnNoaWZ0LmlvL3Rva2VuLWF1dGgtYXp1cmUiOiJmYWxzZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vdG9rZW4tYXV0aC1nY3AiOiJmYWxzZSIsIm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vaW5mcmFzdHJ1Y3R1cmUtZmVhdHVyZXMiOiJbXCJEaXNjb25uZWN0ZWRcIl0iLCJzdXBwb3J0IjoiQ291Y2hiYXNlLCBJbmMifSwibmFtZSI6ImNvdWNoYmFzZS1vcGVyYXRvci52Mi43LjAtNSJ9LCJzcGVjIjp7ImFwaXNlcnZpY2VkZWZpbml0aW9ucyI6e30sImN1c3RvbXJlc291cmNlZGVmaW5pdGlvbnMiOnsib3duZWQiOlt7ImRlc2NyaXB0aW9uIjoiTWFuYWdlcyBDbHVzdGVycyIsImRpc3BsYXlOYW1lIjoiQ291Y2hiYXNlIENsdXN0ZXIiLCJraW5kIjoiQ291Y2hiYXNlQ2x1c3RlciIsIm5hbWUiOiJjb3VjaGJhc2VjbHVzdGVycy5jb3VjaGJhc2UuY29tIiwicmVzb3VyY2VzIjpbeyJraW5kIjoiQ291Y2hiYXNlQ2x1c3RlciIsInZlcnNpb24iOiJ2MiJ9LHsia2luZCI6IkNvbmZpZ01hcCIsInZlcnNpb24iOiJ2MSJ9LHsia2luZCI6IlNlcnZpY2UiLCJ2ZXJzaW9uIjoidjEifSx7ImtpbmQiOiJQb2QiLCJ2ZXJzaW9uIjoidjEifV0sInNwZWNEZXNjcmlwdG9ycyI6W3siZGVzY3JpcHRpb24iOiJDbHVzdGVyIG5hbWUgb3ZlcnJpZGUiLCJkaXNwbGF5TmFtZSI6IkNsdXN0ZXIgbmFtZSIsInBhdGgiOiJjbHVzdGVyLmNsdXN0ZXJOYW1lIiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOnN0cmluZyJdfSx7ImRlc2NyaXB0aW9uIjoiVGhpcyBvYmplY3QgYWxsb3dzIGNvbmZpZ3VyYXRpb24gb2YgZ2xvYmFsIENvdWNoYmFzZSBzZWN1cml0eSBzZXR0aW5ncyBhbmQgUkJBQy4iLCJkaXNwbGF5TmFtZSI6IlNlY3VyaXR5IiwicGF0aCI6InNlY3VyaXR5In0seyJkZXNjcmlwdGlvbiI6IlRoZSBuYW1lIG9mIHRoZSBzZWNyZXQgb2JqZWN0IHRoYXQgc3RvcmVzIHRoZSBhZG1pbiBjcmVkZW50aWFscy4iLCJkaXNwbGF5TmFtZSI6IkFkbWluIFNlY3JldCIsInBhdGgiOiJzZWN1cml0eS5hZG1pblNlY3JldCIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmlvLmt1YmVybmV0ZXM6U2VjcmV0Il19LHsiZGVzY3JpcHRpb24iOiJTcGVjaWZpZXMgd2hldGhlciB0aGUgT3BlcmF0b3Igc2hvdWxkIG1hbmFnZSBDb3VjaGJhc2UgUkJBQy4iLCJkaXNwbGF5TmFtZSI6IlJCQUMgbWFuYWdlZCIsInBhdGgiOiJzZWN1cml0eS5yYmFjLm1hbmFnZWQiLCJ4LWRlc2NyaXB0b3JzIjpbInVybjphbG06ZGVzY3JpcHRvcjpjb20udGVjdG9uaWMudWk6Ym9vbGVhblN3aXRjaCJdfSx7ImRlc2NyaXB0aW9uIjoiU3BlY2lmaWVzIHRoZSBsYWJlbHMgb2YgUkJBQyByZXNvdXJjZXMgdG8gYmUgc2VsZWN0ZWQgYW5kIG1hbmFnZWQuIiwiZGlzcGxheU5hbWUiOiJSQkFDIHNlbGVjdG9yIiwicGF0aCI6InNlY3VyaXR5LnJiYWMuc2VsZWN0b3IiLCJ4LWRlc2NyaXB0b3JzIjpbInVybjphbG06ZGVzY3JpcHRvcjpjb20udGVjdG9uaWMudWk6c2VsZWN0b3I6Y29yZTp2MTpDb25maWdNYXAiXX0seyJkZXNjcmlwdGlvbiI6IlRoaXMgZmllbGQgc3BlY2lmaWVzIHRoZSBpbWFnZSB0aGF0IHNob3VsZCBiZSB1c2VkLiIsImRpc3BsYXlOYW1lIjoiSW1hZ2UiLCJwYXRoIjoiaW1hZ2UiLCJ4LWRlc2NyaXB0b3JzIjpbInVybjphbG06ZGVzY3JpcHRvcjpjb20udGVjdG9uaWMudWk6c3RyaW5nIl19LHsiZGVzY3JpcHRpb24iOiJTcGVjaWZpZXMgd2hldGhlciB0byBtYW5hZ2UgYnVja2V0cyBhbmQgaG93IHRvIHNlbGVjdCB3aGljaCBidWNrZXQgcmVzb3VyY2VzIHRvIHVzZS4iLCJkaXNwbGF5TmFtZSI6IkJ1Y2tldHMiLCJwYXRoIjoiYnVja2V0cyJ9LHsiZGVzY3JpcHRpb24iOiJTcGVjaWZpZXMgd2hldGhlciB0aGUgT3BlcmF0b3Igc2hvdWxkIG1hbmFnZSBDb3VjaGJhc2UgYnVja2V0cy4iLCJkaXNwbGF5TmFtZSI6IkJ1Y2tldHMgbWFuYWdlZCIsInBhdGgiOiJidWNrZXRzLm1hbmFnZWQiLCJ4LWRlc2NyaXB0b3JzIjpbInVybjphbG06ZGVzY3JpcHRvcjpjb20udGVjdG9uaWMudWk6Ym9vbGVhblN3aXRjaCJdfSx7ImRlc2NyaXB0aW9uIjoiU3BlY2lmaWVzIHRoZSBsYWJlbHMgb2YgYnVja2V0cyB0byBiZSBzZWxlY3RlZCBhbmQgbWFuYWdlZC4iLCJkaXNwbGF5TmFtZSI6IkJ1Y2tldHMgc2VsZWN0b3IiLCJwYXRoIjoiYnVja2V0cy5zZWxlY3RvciIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpzZWxlY3Rvcjpjb3JlOnYxOkNvbmZpZ01hcCJdfSx7ImRlc2NyaXB0aW9uIjoiU3BlY2lmaWVzIHdoZXRoZXIgdGhlIE9wZXJhdG9yIHNob3VsZCBtYW5hZ2UgQ291Y2hiYXNlIFhEQ1IgcmVwbGljYXRpb25zLiIsImRpc3BsYXlOYW1lIjoiWERDUiBtYW5hZ2VkIiwicGF0aCI6InhkY3IubWFuYWdlZCIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpib29sZWFuU3dpdGNoIl19LHsiZGVzY3JpcHRpb24iOiJTcGVjaWZpZXMgdGhlIGxhYmVscyBvZiBSZXBsaWNhdGlvbiByZXNvdXJjZXMgdG8gYmUgc2VsZWN0ZWQgYW5kIG1hbmFnZWQuIiwiZGlzcGxheU5hbWUiOiJYRENSIHNlbGVjdG9yIiwicGF0aCI6InhkY3Iuc2VsZWN0b3IiLCJ4LWRlc2NyaXB0b3JzIjpbInVybjphbG06ZGVzY3JpcHRvcjpjb20udGVjdG9uaWMudWk6c2VsZWN0b3I6Y29yZTp2MTpDb25maWdNYXAiXX0seyJkZXNjcmlwdGlvbiI6IkRlZmluZXMgd2hldGhlciB0aGUgQXV0b21hdGVkIEJhY2t1cCBmZWF0dXJlIGlzIGVuYWJsZWQgZm9yIHRoZSBjbHVzdGVyLiIsImRpc3BsYXlOYW1lIjoiQmFja3VwIGVuYWJsZWQiLCJwYXRoIjoiYmFja3VwLm1hbmFnZWQiLCJ4LWRlc2NyaXB0b3JzIjpbInVybjphbG06ZGVzY3JpcHRvcjpjb20udGVjdG9uaWMudWk6Ym9vbGVhblN3aXRjaCJdfSx7ImRlc2NyaXB0aW9uIjoiU3BlY2lmaWVzIHRoZSBsYWJlbHMgb2YgQmFja3VwIHJlc291cmNlcyB0byBiZSBzZWxlY3RlZCBhbmQgbWFuYWdlZC4iLCJkaXNwbGF5TmFtZSI6IkJhY2t1cCBzZWxlY3RvciIsInBhdGgiOiJiYWNrdXAuc2VsZWN0b3IiLCJ4LWRlc2NyaXB0b3JzIjpbInVybjphbG06ZGVzY3JpcHRvcjpjb20udGVjdG9uaWMudWk6c2VsZWN0b3I6Y29yZTp2MTpDb25maWdNYXAiXX0seyJkZXNjcmlwdGlvbiI6IkRlZmluZXMgd2hldGhlciB0aGUgUHJvbWV0aGV1cyBtZXRyaWMgY29sbGVjdGlvbiBpcyBlbmFibGVkIGZvciB0aGUgY2x1c3Rlci4iLCJkaXNwbGF5TmFtZSI6Ik1vbml0b3JpbmcgZW5hYmxlZCIsInBhdGgiOiJtb25pdG9yaW5nLnByb21ldGhldXMuZW5hYmxlZCIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpib29sZWFuU3dpdGNoIl19LHsiZGVzY3JpcHRpb24iOiJTcGVjaWZpZXMgdGhlIGxhYmVscyBvZiBCYWNrdXAgcmVzb3VyY2VzIHRvIGJlIHNlbGVjdGVkIGFuZCBtYW5hZ2VkLiIsImRpc3BsYXlOYW1lIjoiQmFja3VwIHNlbGVjdG9yIiwicGF0aCI6Im1vbml0b3JpbmcucHJvbWV0aGV1cy5zZWxlY3RvciIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpzZWxlY3Rvcjpjb3JlOnYxOkNvbmZpZ01hcCJdfSx7ImRlc2NyaXB0aW9uIjoiVGhpcyBvYmplY3QgYWxsb3dzIHRoZSBjb25maWd1cmF0aW9uIG9mIHRoZSBDb3VjaGJhc2UgY2x1c3RlciB0b3BvbG9neS4iLCJkaXNwbGF5TmFtZSI6IlNlcnZlcnMiLCJwYXRoIjoic2VydmVycyJ9LHsiZGVzY3JpcHRpb24iOiJUaGlzIG9iamVjdCBhbGxvd3MgY29uZmlndXJhdGlvbiBvZiBuZXR3b3JrIHJlbGF0ZWQgb3B0aW9ucy4iLCJkaXNwbGF5TmFtZSI6Ik5ldHdvcmtpbmciLCJwYXRoIjoibmV0d29ya2luZyJ9LHsiZGVzY3JpcHRpb24iOiJUaGUgbmFtZSBvZiB0aGUgc2VjcmV0IG9iamVjdCB0aGF0IHN0b3JlcyB0aGUgc2VydmVyJ3MgVExTIGNlcnRpZmljYXRlLiIsImRpc3BsYXlOYW1lIjoiU2VydmVyIFRMUyBTZWNyZXQiLCJwYXRoIjoibmV0d29ya2luZy50bHMuc3RhdGljLnNlcnZlclNlY3JldCIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmlvLmt1YmVybmV0ZXM6U2VjcmV0Il19LHsiZGVzY3JpcHRpb24iOiJUaGUgbmFtZSBvZiB0aGUgc2VjcmV0IG9iamVjdCB0aGF0IHN0b3JlcyB0aGUgT3BlcmF0b3IncyBUTFMgY2VydGlmaWNhdGUuIiwiZGlzcGxheU5hbWUiOiJPcGVyYXRvciBUTFMgU2VjcmV0IiwicGF0aCI6Im5ldHdvcmtpbmcudGxzLnN0YXRpYy5vcGVyYXRvclNlY3JldCIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmlvLmt1YmVybmV0ZXM6U2VjcmV0Il19LHsiZGVzY3JpcHRpb24iOiJTcGVjaWZpZXMgaWYgdGhlIE9wZXJhdG9yIHdpbGwgbWFuYWdlIHRoaXMgY2x1c3Rlci4iLCJkaXNwbGF5TmFtZSI6IlBhdXNlZCIsInBhdGgiOiJwYXVzZWQiLCJ4LWRlc2NyaXB0b3JzIjpbInVybjphbG06ZGVzY3JpcHRvcjpjb20udGVjdG9uaWMudWk6Ym9vbGVhblN3aXRjaCJdfSx7ImRlc2NyaXB0aW9uIjoiU3BlY2lmaWVzIGlmIHRoZSBDb3VjaGJhc2UgU2VydmVyIFdlYiBDb25zb2xlIHdpbGwgYmUgZXhwb3NlZCBleHRlcm5hbGx5LiIsImRpc3BsYXlOYW1lIjoiRXhwb3NlIENvbnNvbGUiLCJwYXRoIjoibmV0d29ya2luZy5leHBvc2VBZG1pbkNvbnNvbGUiLCJ4LWRlc2NyaXB0b3JzIjpbInVybjphbG06ZGVzY3JpcHRvcjpjb20udGVjdG9uaWMudWk6Ym9vbGVhblN3aXRjaCJdfSx7ImRlc2NyaXB0aW9uIjoiU3BlY2lmaWVzIHdoZXRoZXIgb3Igbm90IHR3byBwb2RzIGluIHRoaXMgY2x1c3RlciBjYW4gYmUgZGVwbG95ZWQgb24gdGhlIHNhbWUgS3ViZXJuZXRlcyBub2RlLiIsImRpc3BsYXlOYW1lIjoiQW50aSBBZmZpbml0eSIsInBhdGgiOiJhbnRpQWZmaW5pdHkiLCJ4LWRlc2NyaXB0b3JzIjpbInVybjphbG06ZGVzY3JpcHRvcjpjb20udGVjdG9uaWMudWk6Ym9vbGVhblN3aXRjaCJdfSx7ImRlc2NyaXB0aW9uIjoiU3BlY2lmaWVzIGlmIHVwZGF0ZSBub3RpZmljYXRpb25zIHdpbGwgYmUgZGlzcGxheWVkIGluIHRoZSBDb3VjaGJhc2UgVUkuIiwiZGlzcGxheU5hbWUiOiJTaG93IFVwZGF0ZSBOb3RpZmljYXRpb25zIiwicGF0aCI6InNvZnR3YXJlVXBkYXRlTm90aWZpY2F0aW9ucyIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpib29sZWFuU3dpdGNoIl19LHsiZGVzY3JpcHRpb24iOiJTcGVjaWZpZXMgaWYgdGhlIE9wZXJhdG9yIHdpbGwgY3JlYXRlIG9yIGRlbGV0ZSBidWNrZXRzLiIsImRpc3BsYXlOYW1lIjoiRGlzYWJsZSBCdWNrZXQgTWFuYWdlbWVudCIsInBhdGgiOiJkaXNhYmxlQnVja2V0TWFuYWdlbWVudCIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpib29sZWFuU3dpdGNoIl19LHsiZGVzY3JpcHRpb24iOiJUaGUgZGVzaXJlZCBudW1iZXIgb2YgbWVtYmVyIFBvZHMgZm9yIHRoZSBDb3VjaGJhc2UgY2x1c3Rlci4iLCJkaXNwbGF5TmFtZSI6IlNpemUiLCJwYXRoIjoic2VydmVyc1swXS5zaXplIiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOnBvZENvdW50Il19LHsiZGVzY3JpcHRpb24iOiJUaGUgc2VydmljZXMgdGhhdCBzaG91bGQgYmUgcnVuIG9uIG5vZGVzIChkYXRhLCBpbmRleCwgcXVlcnksIHNlYXJjaCwgZXZlbnRpbmcgYW5kIGFuYWx5dGljcykiLCJkaXNwbGF5TmFtZSI6IlNlcnZpY2VzIiwicGF0aCI6InNlcnZlcnNbMF0uc2VydmljZXMifSx7ImRlc2NyaXB0aW9uIjoiVGhlIHNldCBvZiBzZXJ2ZXIgZ3JvdXBzIHRvIHNjaGVkdWxlIHBvZHMgaW4gKG92ZXJyaWRlcyB0b3AtbGV2ZWwgc2VydmVyR3JvdXBzKSIsImRpc3BsYXlOYW1lIjoiU2VydmVyR3JvdXBzIiwicGF0aCI6InNlcnZlcnNbMF0uc2VydmVyR3JvdXBzIn0seyJkZXNjcmlwdGlvbiI6IlRoZSBtYXhpbXVtIG51bWJlciBvZiBmYWlsb3ZlciBldmVudHMgdG9sZXJhdGVkIGJlZm9yZSBtYW51YWwgaW50ZXJ2ZW50aW9uIGlzIHJlcXVpcmVkLiIsImRpc3BsYXlOYW1lIjoiQXV0byBGYWlsb3ZlciBNYXggQ291bnQiLCJwYXRoIjoiY2x1c3Rlci5hdXRvRmFpbG92ZXJNYXhDb3VudCIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpzbGlkZXIiLCJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOnNsaWRlclN0YXJ0OjEiXX0seyJkZXNjcmlwdGlvbiI6IkxEQVAgc2V0dGluZ3MgZm9yIGV4dGVybmFsIHVzZXIgYXV0aGVudGljYXRpb24iLCJkaXNwbGF5TmFtZSI6IkxEQVAgU2V0dGluZ3MiLCJwYXRoIjoic2VjdXJpdHkubGRhcCJ9LHsiZGVzY3JpcHRpb24iOiJMaXN0IG9mIExEQVAgaG9zdHMgT3BlcmF0b3Igc2hvdWxkIGNvbm5lY3QgdG8gZm9yIGF1dGhlbnRpY2F0aW9uIiwiZGlzcGxheU5hbWUiOiJIb3N0cyIsInBhdGgiOiJzZWN1cml0eS5sZGFwLmhvc3RzIn0seyJkZXNjcmlwdGlvbiI6IlRoZSBwb3J0IE9wZXJhdG9yIHNob3VsZCB1c2UgY29ubmVjdCB3aGVuIGNvbm5lY3RpbmcgdG8gaG9zdHMiLCJkaXNwbGF5TmFtZSI6IlBvcnQiLCJwYXRoIjoic2VjdXJpdHkubGRhcC5wb3J0IiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOm51bWJlciJdfSx7ImRlc2NyaXB0aW9uIjoiVGhlIHR5cGUgb2YgZW5jcnlwdGlvbiB0byB1c2UgZm9yIGNvbm5lY3Rpb24gd2l0aCB0aGUgTERBUCBzZXJ2ZXIgKE5vbmUsIFRMUywgU3RhcnRUTFNFeHRlbnNpb24pIiwiZGlzcGxheU5hbWUiOiJFbmNyeXB0aW9uIiwicGF0aCI6InNlY3VyaXR5LmxkYXAuZW5jcnlwdGlvbiIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpzdHJpbmciXX0seyJkZXNjcmlwdGlvbiI6IlRoZSBzZXQgb2Ygc2VydmVyIGdyb3VwcyB0byBzY2hlZHVsZSBwb2RzIGluLiIsImRpc3BsYXlOYW1lIjoiU2VydmVyR3JvdXBzIiwicGF0aCI6InNlcnZlckdyb3VwcyJ9XSwic3RhdHVzRGVzY3JpcHRvcnMiOlt7ImRlc2NyaXB0aW9uIjoiVGhlIGRlc2lyZWQgbnVtYmVyIG9mIG1lbWJlciBQb2RzIGZvciB0aGUgZGVwbG95bWVudC4iLCJkaXNwbGF5TmFtZSI6IlNpemUiLCJwYXRoIjoic2l6ZSIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpwb2RDb3VudCJdfSx7ImRlc2NyaXB0aW9uIjoiRXhwbGFuYXRpb24gZm9yIHRoZSBjdXJyZW50IHN0YXR1cyBvZiB0aGUgYXBwbGljYXRpb24uIiwiZGlzcGxheU5hbWUiOiJTdGF0dXMgRGV0YWlscyIsInBhdGgiOiJyZWFzb24iLCJ4LWRlc2NyaXB0b3JzIjpbInVybjphbG06ZGVzY3JpcHRvcjppby5rdWJlcm5ldGVzLnBoYXNlOnJlYXNvbiJdfSx7ImRlc2NyaXB0aW9uIjoiVGhlIHN0YXR1cyBvZiBlYWNoIG9mIHRoZSBtZW1iZXIgUG9kcyBmb3IgdGhlIENvdWNoYmFzZSBjbHVzdGVyLiIsImRpc3BsYXlOYW1lIjoiTWVtYmVyIFN0YXR1cyIsInBhdGgiOiJtZW1iZXJzIiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOnBvZFN0YXR1c2VzIl19LHsiZGVzY3JpcHRpb24iOiJUaGUgY3VycmVudCB2ZXJzaW9uIG9mIHRoZSBDb3VjaGJhc2UgY2x1c3Rlci4iLCJkaXNwbGF5TmFtZSI6IkN1cnJlbnQgVmVyc2lvbiIsInBhdGgiOiJjdXJyZW50VmVyc2lvbiJ9LHsiZGVzY3JpcHRpb24iOiJUaGUgY2x1c3RlciBpZGVudGlmaWVyIGFzIHByb3ZpZGVkIGJ5IHRoZSBDb3VjaGJhc2UgY2x1c3Rlci4iLCJkaXNwbGF5TmFtZSI6IkNsdXN0ZXIgSUQiLCJwYXRoIjoiY2x1c3RlcklEIn0seyJkZXNjcmlwdGlvbiI6IlNwZWNpZmllcyBpZiB0aGUgT3BlcmF0b3IgaXMgY3VycmVudGx5IG1hbmFnaW5nIHRoaXMgY2x1c3Rlci4iLCJkaXNwbGF5TmFtZSI6IkNvbnRyb2wgUGF1c2VkIiwicGF0aCI6ImNvbnRyb2xQYXVzZWQifSx7ImRlc2NyaXB0aW9uIjoiVGhlIHBvcnQgdGhhdCB0aGUgd2ViIGNvbnNvbGUgY2FuIGJlIGFjY2Vzc2VkIG9uIGZyb20gYW55IG5vZGUgaW4gdGhlIEt1YmVybmV0ZXMgY2x1c3Rlci4iLCJkaXNwbGF5TmFtZSI6IkFkbWluIENvbnNvbGUgUG9ydCIsInBhdGgiOiJhZG1pbkNvbnNvbGVQb3J0In0seyJkZXNjcmlwdGlvbiI6IlRoZSBTU0wgcG9ydCB0aGF0IHRoZSB3ZWIgY29uc29sZSBjYW4gYmUgYWNjZXNzZWQgb24gZnJvbSBhbnkgbm9kZSBpbiB0aGUgS3ViZXJuZXRlcyBjbHVzdGVyLiIsImRpc3BsYXlOYW1lIjoiU1NMIEFkbWluIENvbnNvbGUgUG9ydCIsInBhdGgiOiJhZG1pbkNvbnNvbGVQb3J0U1NMIn0seyJkZXNjcmlwdGlvbiI6IkNvbmRpdGlvbnMgZm9yIHRoZSBjbHVzdGVyIiwiZGlzcGxheU5hbWUiOiJDb25kaXRpb25zIiwicGF0aCI6ImNvbmRpdGlvbnMiLCJ4LWRlc2NyaXB0b3JzIjpbInVybjphbG06ZGVzY3JpcHRvcjppby5rdWJlcm5ldGVzLmNvbmRpdGlvbnMiXX1dLCJ2ZXJzaW9uIjoidjIifSx7ImRlc2NyaXB0aW9uIjoiTWFuYWdlcyBCdWNrZXRzIiwiZGlzcGxheU5hbWUiOiJDb3VjaGJhc2UgQnVja2V0Iiwia2luZCI6IkNvdWNoYmFzZUJ1Y2tldCIsIm5hbWUiOiJjb3VjaGJhc2VidWNrZXRzLmNvdWNoYmFzZS5jb20iLCJyZXNvdXJjZXMiOlt7ImtpbmQiOiJDb3VjaGJhc2VCdWNrZXQiLCJ2ZXJzaW9uIjoidjIifSx7ImtpbmQiOiJDb3VjaGJhc2VDbHVzdGVyIiwidmVyc2lvbiI6InYyIn0seyJraW5kIjoiQ29uZmlnTWFwIiwidmVyc2lvbiI6InYxIn0seyJraW5kIjoiU2VydmljZSIsInZlcnNpb24iOiJ2MSJ9LHsia2luZCI6IlBvZCIsInZlcnNpb24iOiJ2MSJ9XSwic3BlY0Rlc2NyaXB0b3JzIjpbeyJkZXNjcmlwdGlvbiI6IlRoZSBuYW1lIG9mIGEgY291Y2hiYXNlIGJ1Y2tldC4iLCJkaXNwbGF5TmFtZSI6IkJ1Y2tldCBOYW1lIiwicGF0aCI6Im1lbW9yeVF1b3RhIiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOnJlc291cmNlUmVxdWlyZW1lbnRzIl19LHsiZGVzY3JpcHRpb24iOiJUaGUgbnVtYmVyIG9mIHJlcGxpY2FzIHRoYXQgc2hvdWxkIGJlIGNyZWF0ZWQgZm9yIHRoaXMgYnVja2V0LiIsImRpc3BsYXlOYW1lIjoiQnVja2V0IFJlcGxpY2FzIiwicGF0aCI6InJlcGxpY2FzIiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOm51bWJlciJdfSx7ImRlc2NyaXB0aW9uIjoiVGhlIElPIHByaW9yaXR5IG9mIGJhY2tncm91bmQgdGhyZWFkcyBmb3IgdGhpcyBidWNrZXQgKGxvdyB8IGhpZ2gpIiwiZGlzcGxheU5hbWUiOiJJTyBwcmlvcml0eSIsInBhdGgiOiJpb1ByaW9yaXR5IiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOnN0cmluZyJdfSx7ImRlc2NyaXB0aW9uIjoiVGhlIGluLW1lbW9yeSBjYWNoZSBldmljdGlvbiBwb2xpY3kgZm9yIHRoaXMgYnVja2V0ICh2YWx1ZU9ubHkgfCBmdWxsRXZpY3Rpb24pIiwiZGlzcGxheU5hbWUiOiJFdmljdGlvbiBQb2xpY3kiLCJwYXRoIjoiZXZpY3Rpb25Qb2xpY3kiLCJ4LWRlc2NyaXB0b3JzIjpbInVybjphbG06ZGVzY3JpcHRvcjpjb20udGVjdG9uaWMudWk6c3RyaW5nIl19LHsiZGVzY3JpcHRpb24iOiJUaGUgYnVja2V0J3MgY29uZmxpY3QgcmVzb2x1dGlvbiBtZWNoYW5pc20gKHNlcW5vIHwgbHd3KSIsImRpc3BsYXlOYW1lIjoiQ29uZmxpY3QgUmVzb2x1dGlvbiIsInBhdGgiOiJjb25mbGljdFJlc29sdXRpb24iLCJ4LWRlc2NyaXB0b3JzIjpbInVybjphbG06ZGVzY3JpcHRvcjpjb20udGVjdG9uaWMudWk6c3RyaW5nIl19LHsiZGVzY3JpcHRpb24iOiJUaGUgY2hvaWNlIHRvIGVuYWJsZSBidWNrZXQgZmx1c2hpbmciLCJkaXNwbGF5TmFtZSI6IkVuYWJsZSBGbHVzaCIsInBhdGgiOiJlbmFibGVGbHVzaCIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpib29sZWFuU3dpdGNoIl19LHsiZGVzY3JpcHRpb24iOiJUaGUgY29tcHJlc3Npb24gbW9kZSBmb3IgdGhpcyBidWNrZXQgKG9mZiB8IHBhc3NpdmUgfCBhY3RpdmUpIiwiZGlzcGxheU5hbWUiOiJDb21wcmVzc2lvbiBNb2RlIiwicGF0aCI6ImNvbXByZXNzaW9uTW9kZSIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpzdHJpbmciXX0seyJkZXNjcmlwdGlvbiI6IlRoaXMgZmllbGQgc3BlY2lmaWVzIHdoZXRoZXIgb3Igbm90IHRvIGVuYWJsZSB2aWV3IGluZGV4IHJlcGxpY2FzIGZvciB0aGlzIGJ1Y2tldC4iLCJkaXNwbGF5TmFtZSI6IkVuYWJsZSBJbmRleCBSZXBsaWNhIiwicGF0aCI6ImVuYWJsZUluZGV4UmVwbGljYSIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpib29sZWFuU3dpdGNoIl19XSwidmVyc2lvbiI6InYyIn0seyJkZXNjcmlwdGlvbiI6Ik1hbmFnZXMgRXBoZW1lcmFsIEJ1Y2tldHMiLCJkaXNwbGF5TmFtZSI6IkNvdWNoYmFzZSBFcGhlbWVyYWwgQnVja2V0Iiwia2luZCI6IkNvdWNoYmFzZUVwaGVtZXJhbEJ1Y2tldCIsIm5hbWUiOiJjb3VjaGJhc2VlcGhlbWVyYWxidWNrZXRzLmNvdWNoYmFzZS5jb20iLCJyZXNvdXJjZXMiOlt7ImtpbmQiOiJDb3VjaGJhc2VFcGhlbWVyYWxCdWNrZXQiLCJ2ZXJzaW9uIjoidjIifSx7ImtpbmQiOiJDb3VjaGJhc2VDbHVzdGVyIiwidmVyc2lvbiI6InYyIn0seyJraW5kIjoiQ29uZmlnTWFwIiwidmVyc2lvbiI6InYxIn0seyJraW5kIjoiU2VydmljZSIsInZlcnNpb24iOiJ2MSJ9LHsia2luZCI6IlBvZCIsInZlcnNpb24iOiJ2MSJ9XSwic3BlY0Rlc2NyaXB0b3JzIjpbeyJkZXNjcmlwdGlvbiI6IlRoZSBuYW1lIG9mIGEgY291Y2hiYXNlIGVwaGVtZXJhbCBidWNrZXQuIiwiZGlzcGxheU5hbWUiOiJCdWNrZXQgTmFtZSIsInBhdGgiOiJtZW1vcnlRdW90YSIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpyZXNvdXJjZVJlcXVpcmVtZW50cyJdfSx7ImRlc2NyaXB0aW9uIjoiVGhlIG51bWJlciBvZiByZXBsaWNhcyB0aGF0IHNob3VsZCBiZSBjcmVhdGVkIGZvciB0aGlzIGJ1Y2tldC4iLCJkaXNwbGF5TmFtZSI6IkJ1Y2tldCBSZXBsaWNhcyIsInBhdGgiOiJyZXBsaWNhcyIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpudW1iZXIiXX0seyJkZXNjcmlwdGlvbiI6IlRoZSBJTyBwcmlvcml0eSBvZiBiYWNrZ3JvdW5kIHRocmVhZHMgZm9yIHRoaXMgYnVja2V0IChsb3cgfCBoaWdoKSIsImRpc3BsYXlOYW1lIjoiSU8gcHJpb3JpdHkiLCJwYXRoIjoiaW9Qcmlvcml0eSIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpzdHJpbmciXX0seyJkZXNjcmlwdGlvbiI6IlRoZSBpbi1tZW1vcnkgY2FjaGUgZXZpY3Rpb24gcG9saWN5IGZvciB0aGlzIGJ1Y2tldCAodmFsdWVPbmx5IHwgZnVsbEV2aWN0aW9uKSIsImRpc3BsYXlOYW1lIjoiRXZpY3Rpb24gUG9saWN5IiwicGF0aCI6ImV2aWN0aW9uUG9saWN5IiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOnN0cmluZyJdfSx7ImRlc2NyaXB0aW9uIjoiVGhlIGJ1Y2tldCdzIGNvbmZsaWN0IHJlc29sdXRpb24gbWVjaGFuaXNtIChzZXFubyB8IGx3dykiLCJkaXNwbGF5TmFtZSI6IkNvbmZsaWN0IFJlc29sdXRpb24iLCJwYXRoIjoiY29uZmxpY3RSZXNvbHV0aW9uIiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOnN0cmluZyJdfSx7ImRlc2NyaXB0aW9uIjoiVGhlIGNob2ljZSB0byBlbmFibGUgYnVja2V0IGZsdXNoaW5nIiwiZGlzcGxheU5hbWUiOiJFbmFibGUgRmx1c2giLCJwYXRoIjoiZW5hYmxlRmx1c2giLCJ4LWRlc2NyaXB0b3JzIjpbInVybjphbG06ZGVzY3JpcHRvcjpjb20udGVjdG9uaWMudWk6Ym9vbGVhblN3aXRjaCJdfSx7ImRlc2NyaXB0aW9uIjoiVGhlIGNvbXByZXNzaW9uIG1vZGUgZm9yIHRoaXMgYnVja2V0IChvZmYgfCBwYXNzaXZlIHwgYWN0aXZlKSIsImRpc3BsYXlOYW1lIjoiQ29tcHJlc3Npb24gTW9kZSIsInBhdGgiOiJjb21wcmVzc2lvbk1vZGUiLCJ4LWRlc2NyaXB0b3JzIjpbInVybjphbG06ZGVzY3JpcHRvcjpjb20udGVjdG9uaWMudWk6c3RyaW5nIl19XSwidmVyc2lvbiI6InYyIn0seyJkZXNjcmlwdGlvbiI6Ik1hbmFnZXMgTWVtY2FjaGVkIEJ1Y2tldHMiLCJkaXNwbGF5TmFtZSI6IkNvdWNoYmFzZSBNZW1jYWNoZWQgQnVja2V0Iiwia2luZCI6IkNvdWNoYmFzZU1lbWNhY2hlZEJ1Y2tldCIsIm5hbWUiOiJjb3VjaGJhc2VtZW1jYWNoZWRidWNrZXRzLmNvdWNoYmFzZS5jb20iLCJyZXNvdXJjZXMiOlt7ImtpbmQiOiJDb3VjaGJhc2VNZW1jYWNoZWRCdWNrZXQiLCJ2ZXJzaW9uIjoidjIifSx7ImtpbmQiOiJDb3VjaGJhc2VDbHVzdGVyIiwidmVyc2lvbiI6InYyIn0seyJraW5kIjoiQ29uZmlnTWFwIiwidmVyc2lvbiI6InYxIn0seyJraW5kIjoiU2VydmljZSIsInZlcnNpb24iOiJ2MSJ9LHsia2luZCI6IlBvZCIsInZlcnNpb24iOiJ2MSJ9XSwic3BlY0Rlc2NyaXB0b3JzIjpbeyJkZXNjcmlwdGlvbiI6IlRoZSBuYW1lIG9mIGEgY291Y2hiYXNlIG1lbWNhY2hlZCBidWNrZXQuIiwiZGlzcGxheU5hbWUiOiJCdWNrZXQgTmFtZSIsInBhdGgiOiJtZW1vcnlRdW90YSIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpyZXNvdXJjZVJlcXVpcmVtZW50cyJdfSx7ImRlc2NyaXB0aW9uIjoiVGhlIGNob2ljZSB0byBlbmFibGUgYnVja2V0IGZsdXNoaW5nIiwiZGlzcGxheU5hbWUiOiJFbmFibGUgRmx1c2giLCJwYXRoIjoiZW5hYmxlRmx1c2giLCJ4LWRlc2NyaXB0b3JzIjpbInVybjphbG06ZGVzY3JpcHRvcjpjb20udGVjdG9uaWMudWk6Ym9vbGVhblN3aXRjaCJdfV0sInZlcnNpb24iOiJ2MiJ9LHsiZGVzY3JpcHRpb24iOiJNYW5hZ2VzIFJCQUMgVXNlcnMiLCJkaXNwbGF5TmFtZSI6IkNvdWNoYmFzZSBVc2VyIiwia2luZCI6IkNvdWNoYmFzZVVzZXIiLCJuYW1lIjoiY291Y2hiYXNldXNlcnMuY291Y2hiYXNlLmNvbSIsInJlc291cmNlcyI6W3sia2luZCI6IkNvdWNoYmFzZVVzZXIiLCJ2ZXJzaW9uIjoidjIifSx7ImtpbmQiOiJDb3VjaGJhc2VDbHVzdGVyIiwidmVyc2lvbiI6InYyIn0seyJraW5kIjoiQ29uZmlnTWFwIiwidmVyc2lvbiI6InYxIn0seyJraW5kIjoiU2VydmljZSIsInZlcnNpb24iOiJ2MSJ9LHsia2luZCI6IlBvZCIsInZlcnNpb24iOiJ2MSJ9XSwic3BlY0Rlc2NyaXB0b3JzIjpbeyJkZXNjcmlwdGlvbiI6IlRoZSB1c2VyIGZ1bGwgbmFtZS4iLCJkaXNwbGF5TmFtZSI6IkZ1bGwgTmFtZSIsInBhdGgiOiJmdWxsTmFtZSIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpzdHJpbmciXX0seyJkZXNjcmlwdGlvbiI6IlRoZSBkb21haW4gdXNlZCB0byBhdXRoZW50aWNhdGUgdXNlciAobG9jYWwgfCBsZGFwKSIsImRpc3BsYXlOYW1lIjoiQXV0aCBEb21haW4iLCJwYXRoIjoiYXV0aERvbWFpbiIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpzdHJpbmciXX0seyJkZXNjcmlwdGlvbiI6IlRoZSBTZWNyZXQgY29udGFpbmluZyB1c2VyIHBhc3N3b3JkIiwiZGlzcGxheU5hbWUiOiJBdXRoIFNlY3JldCIsInBhdGgiOiJhdXRoU2VjcmV0IiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6aW8ua3ViZXJuZXRlczpTZWNyZXQiXX1dLCJ2ZXJzaW9uIjoidjIifSx7ImRlc2NyaXB0aW9uIjoiTWFuYWdlcyBSQkFDIEdyb3VwcyIsImRpc3BsYXlOYW1lIjoiQ291Y2hiYXNlIEdyb3VwcyIsImtpbmQiOiJDb3VjaGJhc2VHcm91cCIsIm5hbWUiOiJjb3VjaGJhc2Vncm91cHMuY291Y2hiYXNlLmNvbSIsInJlc291cmNlcyI6W3sia2luZCI6IkNvdWNoYmFzZUdyb3VwIiwidmVyc2lvbiI6InYyIn0seyJraW5kIjoiQ291Y2hiYXNlQ2x1c3RlciIsInZlcnNpb24iOiJ2MiJ9LHsia2luZCI6IkNvbmZpZ01hcCIsInZlcnNpb24iOiJ2MSJ9LHsia2luZCI6IlNlcnZpY2UiLCJ2ZXJzaW9uIjoidjEifSx7ImtpbmQiOiJQb2QiLCJ2ZXJzaW9uIjoidjEifV0sInNwZWNEZXNjcmlwdG9ycyI6W3siZGVzY3JpcHRpb24iOiJUaGlzIGZpZWxkIGlzIGEgbGlzdCBvZiByb2xlcyB0byBiZSBhc3NvY2lhdGVkIHdpdGggYSB1c2VyIG9yIGdyb3VwIG9mIHVzZXJzLiIsImRpc3BsYXlOYW1lIjoiUm9sZXMiLCJwYXRoIjoicm9sZXMifV0sInZlcnNpb24iOiJ2MiJ9LHsiZGVzY3JpcHRpb24iOiJNYW5hZ2VzIFJCQUMgQmluZGluZyIsImRpc3BsYXlOYW1lIjoiQ291Y2hiYXNlIFJvbGUgQmluZGluZyIsImtpbmQiOiJDb3VjaGJhc2VSb2xlQmluZGluZyIsIm5hbWUiOiJjb3VjaGJhc2Vyb2xlYmluZGluZ3MuY291Y2hiYXNlLmNvbSIsInJlc291cmNlcyI6W3sia2luZCI6IkNvdWNoYmFzZVJvbGVCaW5kaW5nIiwidmVyc2lvbiI6InYyIn0seyJraW5kIjoiQ291Y2hiYXNlQ2x1c3RlciIsInZlcnNpb24iOiJ2MiJ9LHsia2luZCI6IkNvbmZpZ01hcCIsInZlcnNpb24iOiJ2MSJ9LHsia2luZCI6IlNlcnZpY2UiLCJ2ZXJzaW9uIjoidjEifSx7ImtpbmQiOiJQb2QiLCJ2ZXJzaW9uIjoidjEifV0sInNwZWNEZXNjcmlwdG9ycyI6W3siZGVzY3JpcHRpb24iOiJUaGlzIGZpZWxkIGRlZmluZXMgdGhlIHJlc291cmNlIHRvIGV4dHJhY3QgdGhlIHJvbGVzIGZyb20uIiwiZGlzcGxheU5hbWUiOiJSb2xlIFJlZmVyZW5jZSIsInBhdGgiOiJyb2xlUmVmIn0seyJkZXNjcmlwdGlvbiI6IlRoaXMgZmllbGQgaXMgYSBsaXN0IG9mIHN1YmplY3RzIHRvIGEgYXBwbHkgcm9sZSB0by4iLCJkaXNwbGF5TmFtZSI6IlN1YmplY3RzIiwicGF0aCI6InN1YmplY3RzIn1dLCJ2ZXJzaW9uIjoidjIifSx7ImRlc2NyaXB0aW9uIjoiTWFuYWdlcyBDb3VjaGJhc2UgUmVwbGljYXRpb25zIiwiZGlzcGxheU5hbWUiOiJDb3VjaGJhc2UgUmVwbGljYXRpb25zIiwia2luZCI6IkNvdWNoYmFzZVJlcGxpY2F0aW9uIiwibmFtZSI6ImNvdWNoYmFzZXJlcGxpY2F0aW9ucy5jb3VjaGJhc2UuY29tIiwicmVzb3VyY2VzIjpbeyJraW5kIjoiQ291Y2hiYXNlUmVwbGljYXRpb24iLCJ2ZXJzaW9uIjoidjIifSx7ImtpbmQiOiJDb3VjaGJhc2VDbHVzdGVyIiwidmVyc2lvbiI6InYyIn1dLCJzcGVjRGVzY3JpcHRvcnMiOlt7ImRlc2NyaXB0aW9uIjoiVGhlIGxvY2FsIGJ1Y2tldCB0byByZXBsaWNhdGUgZnJvbS4gIE11c3QgYmUgYSBDb3VjaGJhc2VCdWNrZXQgb3IgQ291Y2hiYXNlRXBoZW1lcmFsQnVja2V0IiwiZGlzcGxheU5hbWUiOiJCdWNrZXQgTmFtZSIsInBhdGgiOiJidWNrZXQiLCJ4LWRlc2NyaXB0b3JzIjpbInVybjphbG06ZGVzY3JpcHRvcjpjb20udGVjdG9uaWMudWk6c3RyaW5nIl19LHsiZGVzY3JpcHRpb24iOiJUaGUgcmVtb3RlIGJ1Y2tldCB0byByZXBsaWNhdGUgdG8uICBNdXN0IGJlIGEgQ291Y2hiYXNlQnVja2V0IG9yIENvdWNoYmFzZUVwaGVtZXJhbEJ1Y2tldCIsImRpc3BsYXlOYW1lIjoiUmVtb3RlIEJ1Y2tldCBOYW1lIiwicGF0aCI6InJlbW90ZUJ1Y2tldCIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpzdHJpbmciXX0seyJkZXNjcmlwdGlvbiI6IlRoZSBjb21wcmVzc2lvbiB0eXBlIHRvIHVzZSB3aGVuIHJlcGxpY2F0aW5nIGRhdGEuIChOb25lIHwgQXV0byB8IFNuYXBweSkiLCJkaXNwbGF5TmFtZSI6IkNvbXByZXNzaW9uIFR5cGUiLCJwYXRoIjoiY29tcHJlc3Npb25UeXBlIiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOnN0cmluZyJdfSx7ImRlc2NyaXB0aW9uIjoiVGhpcyBmaWVsZCBjb250cm9scyB3aGF0IGRvY3VtZW50cyBhcmUgcmVwbGljYXRlZCB0byB0aGUgcmVtb3RlIGNsdXN0ZXIiLCJkaXNwbGF5TmFtZSI6IkZpbHRlciBFeHByZXNzaW9uIiwicGF0aCI6ImZpbHRlckV4cHJlc3Npb24iLCJ4LWRlc2NyaXB0b3JzIjpbInVybjphbG06ZGVzY3JpcHRvcjpjb20udGVjdG9uaWMudWk6c3RyaW5nIl19LHsiZGVzY3JpcHRpb24iOiJUaGlzIGZpZWxkIGNvbnRyb2xzIHdoZXRoZXIgYSByZXBsaWNhdGlvbiBpcyBwYXVzZWQgb3Igbm90IiwiZGlzcGxheU5hbWUiOiJSZXBsaWNhdGlvbiBQYXVzZWQiLCJwYXRoIjoicGF1c2VkIiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOmJvb2xlYW5Td2l0Y2giXX1dLCJ2ZXJzaW9uIjoidjIifSx7ImRlc2NyaXB0aW9uIjoiTWFuYWdlcyBCYWNrdXBzIiwiZGlzcGxheU5hbWUiOiJDb3VjaGJhc2UgQmFja3VwIiwia2luZCI6IkNvdWNoYmFzZUJhY2t1cCIsIm5hbWUiOiJjb3VjaGJhc2ViYWNrdXBzLmNvdWNoYmFzZS5jb20iLCJyZXNvdXJjZXMiOlt7ImtpbmQiOiJDcm9uSm9iIiwibmFtZSI6IiIsInZlcnNpb24iOiJiYXRjaC92MSJ9LHsia2luZCI6IkNvdWNoYmFzZVJvbGVCaW5kaW5nIiwidmVyc2lvbiI6InYyIn0seyJraW5kIjoiQ291Y2hiYXNlQ2x1c3RlciIsInZlcnNpb24iOiJ2MiJ9LHsia2luZCI6IkNvbmZpZ01hcCIsInZlcnNpb24iOiJ2MSJ9LHsia2luZCI6IlNlcnZpY2UiLCJ2ZXJzaW9uIjoidjEifSx7ImtpbmQiOiJQb2QiLCJ2ZXJzaW9uIjoidjEifV0sInNwZWNEZXNjcmlwdG9ycyI6W3siZGVzY3JpcHRpb24iOiJUaGUgYmFja3VwIHN0cmF0ZWd5IHRvIHVzZSAoZnVsbF9vbmx5IHwgZnVsbF9pbmNyZW1lbnRhbCkiLCJkaXNwbGF5TmFtZSI6IkJhY2t1cCBTdHJhdGVneSIsInBhdGgiOiJzdHJhdGVneSIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpzdHJpbmciXX0seyJkZXNjcmlwdGlvbiI6IlRoZSBzY2hlZHVsZSBhIHVzZXIgd2FudHMgdGhlIE9wZXJhdG9yIHRvIHBlcmZvcm0gYSBmdWxsIGJhY2t1cCBvZiB0aGUgY2x1c3Rlci4iLCJkaXNwbGF5TmFtZSI6IkZ1bGwgQmFja3VwIFNjaGVkdWxlIiwicGF0aCI6ImZ1bGwuc2NoZWR1bGUiLCJ4LWRlc2NyaXB0b3JzIjpbInVybjphbG06ZGVzY3JpcHRvcjpjb20udGVjdG9uaWMudWk6c3RyaW5nIl19LHsiZGVzY3JpcHRpb24iOiJUaGUgc2NoZWR1bGUgYSB1c2VyIHdhbnRzIHRoZSBPcGVyYXRvciB0byBwZXJmb3JtIGFuIGluY3JlbWVudGFsIGJhY2t1cCBvZiB0aGUgY2x1c3Rlci4iLCJkaXNwbGF5TmFtZSI6IkluY3JlbWVudGFsIEJhY2t1cCBTY2hlZHVsZSIsInBhdGgiOiJpbmNyZW1lbnRhbC5zY2hlZHVsZSIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpzdHJpbmciXX0seyJkZXNjcmlwdGlvbiI6IlRoZSBhbW91bnQgb2Ygc3VjY2Vzc2Z1bCBqb2JzIHRvIGtlZXAiLCJkaXNwbGF5TmFtZSI6IkpvYiBIaXN0b3J5IExpbWl0IiwicGF0aCI6InN1Y2Nlc3NmdWxKb2JzSGlzdG9yeUxpbWl0IiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOm51bWJlciJdfSx7ImRlc2NyaXB0aW9uIjoiVGhlIGZpZWxkIGRlZmluZXMgdGhlIHNpemUgb2YgdGhlIFBlcnNpc3RlbnQgVm9sdW1lIHRvIHN0b3JlIGJhY2t1cHMuIiwiZGlzcGxheU5hbWUiOiJTaXplIiwicGF0aCI6InNpemUiLCJ4LWRlc2NyaXB0b3JzIjpbInVybjphbG06ZGVzY3JpcHRvcjpjb20udGVjdG9uaWMudWk6cmVzb3VyY2VSZXF1aXJlbWVudHMiXX0seyJkZXNjcmlwdGlvbiI6IlRoZSBmaWVsZCBkZWZpbmVzIHRoZSBzY2hlZHVsZSB0byB1c2UgZm9yIGZ1bGwgYmFja3VwLiIsImRpc3BsYXlOYW1lIjoiRnVsbCIsInBhdGgiOiJmdWxsIiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOnN0cmluZyJdfSx7ImRlc2NyaXB0aW9uIjoiVGhpcyBmaWVsZCBkZWZpbmVzIHRoZSBzY2hlZHVsZSBhIHVzZXIgd2FudHMgdGhlIE9wZXJhdG9yIHRvIHBlcmZvcm0gYW4gaW5jcmVtZW50YWwgYmFja3VwIG9mIHRoZSBjbHVzdGVyLiIsImRpc3BsYXlOYW1lIjoiSW5jcmVtZW50YWwiLCJwYXRoIjoiaW5jcmVtZW50YWwiLCJ4LWRlc2NyaXB0b3JzIjpbInVybjphbG06ZGVzY3JpcHRvcjpjb20udGVjdG9uaWMudWk6c3RyaW5nIl19LHsiZGVzY3JpcHRpb24iOiJUaGlzIGZpZWxkIGRlZmluZXMgdGhlIGFtb3VudCBvZiB0aW1lcyBvbmUgYmFja3VwIGpvYiB3aWxsIHRyeSB0byBwZXJmb3JtIGEgYmFja3VwLiIsImRpc3BsYXlOYW1lIjoiQmFjayBPZmYgTGltaXQiLCJwYXRoIjoiYmFja09mZkxpbWl0IiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOm51bWJlciJdfSx7ImRlc2NyaXB0aW9uIjoiVGhpcyBmaWVsZCBkZWZpbmVzIHRoZSB0aW1lIHBlcmlvZCBpbiB3aGljaCB0byByZXRhaW4gZXhpc3RpbmcgYmFja3Vwcy4iLCJkaXNwbGF5TmFtZSI6IkJhY2t1cCBSZXRlbnRpb24iLCJwYXRoIjoiYmFja3VwUmV0ZW50aW9uIiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOnN0cmluZyJdfSx7ImRlc2NyaXB0aW9uIjoiVGhpcyBmaWVsZCBkZWZpbmVzIHRoZSB0aW1lIHBlcmlvZCBpbiB3aGljaCB0byByZXRhaW4gYmFja3VwIGxvZ3MuIiwiZGlzcGxheU5hbWUiOiJMb2cgUmV0ZW50aW9uIFRpbWUiLCJwYXRoIjoibG9nUmV0ZW50aW9uIiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOnN0cmluZyJdfSx7ImRlc2NyaXB0aW9uIjoiVGhpcyBmaWVsZCBkZWZpbmVzIHRoZSBhbW91bnQgb2YgZmFpbGVkIGpvYnMgdG8ga2VlcCBiZWZvcmUgS3ViZXJuZXRlcyBzdGFydHMgZGVsZXRpbmcgb2xkZXIgb25lcy4iLCJkaXNwbGF5TmFtZSI6IkZhaWxlZCBKb2JzIEhpc3RvcnkgTGltaXQiLCJwYXRoIjoiZmFpbGVkSm9ic0hpc3RvcnlMaW1pdCIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpudW1iZXIiXX1dLCJ2ZXJzaW9uIjoidjIifSx7ImRlc2NyaXB0aW9uIjoiTWFuYWdlcyBCYWNrdXAgUmVzdG9yZXMiLCJkaXNwbGF5TmFtZSI6IkNvdWNoYmFzZSBCYWNrdXAgUmVzdG9yZSIsImtpbmQiOiJDb3VjaGJhc2VCYWNrdXBSZXN0b3JlIiwibmFtZSI6ImNvdWNoYmFzZWJhY2t1cHJlc3RvcmVzLmNvdWNoYmFzZS5jb20iLCJyZXNvdXJjZXMiOlt7ImtpbmQiOiJDb3VjaGJhc2VCYWNrdXBSZXN0b3JlIiwidmVyc2lvbiI6InYyIn1dLCJzcGVjRGVzY3JpcHRvcnMiOlt7ImRlc2NyaXB0aW9uIjoiVGhlIGJhY2t1cCBuYW1lIHRvIHJlc3RvcmUgZnJvbSIsImRpc3BsYXlOYW1lIjoiQmFja3VwIE5hbWUiLCJwYXRoIjoiYmFja3VwIiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOnN0cmluZyJdfSx7ImRlc2NyaXB0aW9uIjoiVGhlIHJlcG8gbmFtZSB3aGVyZSB0aGUgYmFja3VwIHdlIHdoaWNoIHRvIHJlc3RvcmUgaXMgbG9jYXRlZCIsImRpc3BsYXlOYW1lIjoiUmVwb3NpdG9yeSIsInBhdGgiOiJyZXBvIiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOnN0cmluZyJdfSx7ImRlc2NyaXB0aW9uIjoiVGhlIGluZGV4IG9mIHRoZSBmaXJzdCBiYWNrdXAgdG8gcmVzdG9yZSB3aXRoIDEgYmVpbmcgdGhlIG9sZGVzdCAoZGVmYXVsdCkiLCJkaXNwbGF5TmFtZSI6IlN0YXJ0IFJhbmdlIiwicGF0aCI6InN0YXJ0LmludCIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpudW1iZXIiXX0seyJkZXNjcmlwdGlvbiI6IlRoZSBpbmRleCBvZiB0aGUgbGFzdCBiYWNrdXAgdG8gcmVzdG9yZSB3aXRoIDEgYmVpbmcgdGhlIG9sZGVzdCAoZGVmYXVsdCkiLCJkaXNwbGF5TmFtZSI6IkVuZCBSYW5nZSIsInBhdGgiOiJlbmQuaW50IiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOm51bWJlciJdfSx7ImRlc2NyaXB0aW9uIjoiVGhlIGFtb3VudCBvZiB0aW1lcyB0aGUgcmVzdG9yZSBqb2Igd2lsbCB0cnkgdG8gcGVyZm9ybSBhIHJlc3RvcmUiLCJkaXNwbGF5TmFtZSI6IkJhY2sgT2ZmIExpbWl0IiwicGF0aCI6ImJhY2tPZmZMaW1pdCIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpudW1iZXIiXX0seyJkZXNjcmlwdGlvbiI6IlRoZSB0aW1lIHBlcmlvZCBpbiB3aGljaCB0byByZXRhaW4gYmFja3VwIGxvZ3MiLCJkaXNwbGF5TmFtZSI6IkxvZyBSZXRlbnRpb24gVGltZSIsInBhdGgiOiJsb2dSZXRlbnRpb25UaW1lIiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOnN0cmluZyJdfV0sInZlcnNpb24iOiJ2MiJ9LHsiZGVzY3JpcHRpb24iOiJNYW5hZ2VzIFJCQUMgQ29sbGVjdGlvbiBHcm91cHMiLCJkaXNwbGF5TmFtZSI6IkNvdWNoYmFzZSBDb2xsZWN0aW9uIEdyb3VwcyIsImtpbmQiOiJDb3VjaGJhc2VDb2xsZWN0aW9uR3JvdXAiLCJuYW1lIjoiY291Y2hiYXNlY29sbGVjdGlvbmdyb3Vwcy5jb3VjaGJhc2UuY29tIiwicmVzb3VyY2VzIjpbeyJraW5kIjoiQ291Y2hiYXNlQ29sbGVjdGlvbkdyb3VwIiwidmVyc2lvbiI6InYyIn1dLCJzcGVjRGVzY3JpcHRvcnMiOlt7ImRlc2NyaXB0aW9uIjoiTWF4VFRMIGRlZmluZXMgaG93IGxvbmcgYSBkb2N1bWVudCBpcyBwZXJtaXR0ZWQgdG8gZXhpc3QuIiwiZGlzcGxheU5hbWUiOiJNYXhUVEwiLCJwYXRoIjoibWF4VFRMIiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOnN0cmluZyJdfSx7ImRlc2NyaXB0aW9uIjoiTmFtZXMgc3BlY2lmaWVzIHRoZSBuYW1lcyBvZiB0aGUgY29sbGVjdGlvbnMuIiwiZGlzcGxheU5hbWUiOiJOYW1lcyIsInBhdGgiOiJuYW1lcyJ9XSwidmVyc2lvbiI6InYyIn0seyJkZXNjcmlwdGlvbiI6Ik1hbmFnZXMgUkJBQyBDb2xsZWN0aW9ucyIsImRpc3BsYXlOYW1lIjoiQ291Y2hiYXNlIENvbGxlY3Rpb24iLCJraW5kIjoiQ291Y2hiYXNlQ29sbGVjdGlvbiIsIm5hbWUiOiJjb3VjaGJhc2Vjb2xsZWN0aW9ucy5jb3VjaGJhc2UuY29tIiwicmVzb3VyY2VzIjpbeyJraW5kIjoiQ291Y2hiYXNlQ29sbGVjdGlvbiIsInZlcnNpb24iOiJ2MiJ9XSwic3BlY0Rlc2NyaXB0b3JzIjpbeyJkZXNjcmlwdGlvbiI6Ik1heFRUTCBkZWZpbmVzIGhvdyBsb25nIGEgZG9jdW1lbnQgaXMgcGVybWl0dGVkIHRvIGV4aXN0LiIsImRpc3BsYXlOYW1lIjoiTWF4VFRMIiwicGF0aCI6Im1heFRUTCIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpzdHJpbmciXX0seyJkZXNjcmlwdGlvbiI6Ik5hbWUgc3BlY2lmaWVzIHRoZSBuYW1lIG9mIHRoZSBjb2xsZWN0aW9uLiIsImRpc3BsYXlOYW1lIjoiTmFtZSIsInBhdGgiOiJuYW1lIiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOnN0cmluZyJdfV0sInZlcnNpb24iOiJ2MiJ9LHsiZGVzY3JpcHRpb24iOiJNYW5hZ2VzIFJCQUMgU2NvcGUgR3JvdXBzIiwiZGlzcGxheU5hbWUiOiJDb3VjaGJhc2UgU2NvcGUgR3JvdXAiLCJraW5kIjoiQ291Y2hiYXNlU2NvcGVHcm91cCIsIm5hbWUiOiJjb3VjaGJhc2VzY29wZWdyb3Vwcy5jb3VjaGJhc2UuY29tIiwicmVzb3VyY2VzIjpbeyJraW5kIjoiQ291Y2hiYXNlU2NvcGVHcm91cCIsInZlcnNpb24iOiJ2MiJ9XSwic3BlY0Rlc2NyaXB0b3JzIjpbeyJkZXNjcmlwdGlvbiI6IkNvbGxlY3Rpb25zIGRlZmluZXMgaG93IHRvIGNvbGxhdGUgY29sbGVjdGlvbnMgaW5jbHVkZWQgaW4gdGhpcyBzY29wZSBvciBzY29wZSBncm91cC4iLCJkaXNwbGF5TmFtZSI6IkNvbGxlY3Rpb25zIiwicGF0aCI6ImNvbGxlY3Rpb25zIn0seyJkZXNjcmlwdGlvbiI6Ik1hbmFnZWQgaW5kaWNhdGVzIHdoZXRoZXIgY29sbGVjdGlvbnMgd2l0aGluIHRoaXMgc2NvcGUgYXJlIG1hbmFnZWQuIiwiZGlzcGxheU5hbWUiOiJNYW5hZ2VkIiwicGF0aCI6ImNvbGxlY3Rpb25zLm1hbmFnZWQiLCJ4LWRlc2NyaXB0b3JzIjpbInVybjphbG06ZGVzY3JpcHRvcjpjb20udGVjdG9uaWMudWk6Ym9vbGVhblN3aXRjaCJdfSx7ImRlc2NyaXB0aW9uIjoiUHJlc2VydmVEZWZhdWx0Q29sbGVjdGlvbiBpbmRpY2F0ZXMgd2hldGhlciB0aGUgT3BlcmF0b3Igc2hvdWxkIG1hbmFnZSB0aGUgZGVmYXVsdCBjb2xsZWN0aW9uIHdpdGhpbiB0aGUgZGVmYXVsdCBzY29wZS4iLCJkaXNwbGF5TmFtZSI6IlByZXNlcnZlIERlZmF1bHQgQ29sbGVjdGlvbiIsInBhdGgiOiJjb2xsZWN0aW9ucy5wcmVzZXJ2ZURlZmF1bHRDb2xsZWN0aW9uIiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOmJvb2xlYW5Td2l0Y2giXX0seyJkZXNjcmlwdGlvbiI6IlJlc291cmNlcyBpcyBhbiBleHBsaWNpdCBsaXN0IG9mIG5hbWVkIHJlc291cmNlcyB0aGF0IHdpbGwgYmUgY29uc2lkZXJlZCBmb3IgaW5jbHVzaW9uIGluIHRoaXMgc2NvcGUgb3Igc2NvcGVzLiIsImRpc3BsYXlOYW1lIjoiQ29sbGVjdGlvbiBSZXNvdXJjZXMiLCJwYXRoIjoiY29sbGVjdGlvbnMucmVzb3VyY2VzIn0seyJkZXNjcmlwdGlvbiI6IktpbmQgaW5kaWNhdGVzIHRoZSBraW5kIG9mIHJlc291cmNlIHRoYXQgaXMgYmVpbmcgcmVmZXJlbmNlZC4gQSBzY29wZSBjYW4gb25seSByZWZlcmVuY2UgQ291Y2hiYXNlQ29sbGVjdGlvbiBhbmQgQ291Y2hiYXNlQ29sbGVjdGlvbkdyb3VwIHJlc291cmNlIGtpbmRzLiIsImRpc3BsYXlOYW1lIjoiUmVzb3VyY2UgS2luZCIsInBhdGgiOiJjb2xsZWN0aW9ucy5yZXNvdXJjZXNbMF0ua2luZCIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpzdHJpbmciXX0seyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIEt1YmVybmV0ZXMgcmVzb3VyY2UgbmFtZSB0aGF0IGlzIGJlaW5nIHJlZmVyZW5jZWQuIiwiZGlzcGxheU5hbWUiOiJSZXNvdXJjZSBOYW1lIiwicGF0aCI6ImNvbGxlY3Rpb25zLnJlc291cmNlc1swXS5uYW1lIiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOnN0cmluZyJdfSx7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgS3ViZXJuZXRlcyByZXNvdXJjZSBuYW1lIHRoYXQgaXMgYmVpbmcgcmVmZXJlbmNlZC4iLCJkaXNwbGF5TmFtZSI6IlNlbGVjdG9yIiwicGF0aCI6ImNvbGxlY3Rpb25zLnJlc291cmNlc1swXS5zZWxlY3RvciIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpzZWxlY3Rvcjpjb3JlOnYxOkNvbmZpZ01hcCJdfSx7ImRlc2NyaXB0aW9uIjoiRGVmYXVsdFNjb3BlIGluZGljYXRlcyB3aGV0aGVyIHRoaXMgcmVzb3VyY2UgcmVwcmVzZW50cyB0aGUgZGVmYXVsdCBzY29wZSBmb3IgYSBidWNrZXQuIiwiZGlzcGxheU5hbWUiOiJEZWZhdWx0IFNjb3BlIiwicGF0aCI6ImRlZmF1bHRTY29wZSIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpib29sZWFuU3dpdGNoIl19LHsiZGVzY3JpcHRpb24iOiJOYW1lcyBzcGVjaWZpZXMgdGhlIG5hbWVzIG9mIHRoZSBzY29wZXMgYmVsb25naW5nIHRvIHRoaXMgZ3JvdXAuIiwiZGlzcGxheU5hbWUiOiJOYW1lcyIsInBhdGgiOiJuYW1lcyJ9XSwidmVyc2lvbiI6InYyIn0seyJkZXNjcmlwdGlvbiI6Ik1hbmFnZXMgUkJBQyBTY29wZXMiLCJkaXNwbGF5TmFtZSI6IkNvdWNoYmFzZSBTY29wZSIsImtpbmQiOiJDb3VjaGJhc2VTY29wZSIsIm5hbWUiOiJjb3VjaGJhc2VzY29wZXMuY291Y2hiYXNlLmNvbSIsInJlc291cmNlcyI6W3sia2luZCI6IkNvdWNoYmFzZVNjb3BlIiwidmVyc2lvbiI6InYyIn1dLCJzcGVjRGVzY3JpcHRvcnMiOlt7ImRlc2NyaXB0aW9uIjoiQ29sbGVjdGlvbnMgZGVmaW5lcyBob3cgdG8gY29sbGF0ZSBjb2xsZWN0aW9ucyBpbmNsdWRlZCBpbiB0aGlzIHNjb3BlIG9yIHNjb3BlIGdyb3VwLiIsImRpc3BsYXlOYW1lIjoiQ29sbGVjdGlvbnMiLCJwYXRoIjoiY29sbGVjdGlvbnMifSx7ImRlc2NyaXB0aW9uIjoiTWFuYWdlZCBpbmRpY2F0ZXMgd2hldGhlciBjb2xsZWN0aW9ucyB3aXRoaW4gdGhpcyBzY29wZSBhcmUgbWFuYWdlZC4iLCJkaXNwbGF5TmFtZSI6Ik1hbmFnZWQiLCJwYXRoIjoiY29sbGVjdGlvbnMubWFuYWdlZCIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpib29sZWFuU3dpdGNoIl19LHsiZGVzY3JpcHRpb24iOiJQcmVzZXJ2ZURlZmF1bHRDb2xsZWN0aW9uIGluZGljYXRlcyB3aGV0aGVyIHRoZSBPcGVyYXRvciBzaG91bGQgbWFuYWdlIHRoZSBkZWZhdWx0IGNvbGxlY3Rpb24gd2l0aGluIHRoZSBkZWZhdWx0IHNjb3BlLiIsImRpc3BsYXlOYW1lIjoiUHJlc2VydmUgRGVmYXVsdCBDb2xsZWN0aW9uIiwicGF0aCI6ImNvbGxlY3Rpb25zLnByZXNlcnZlRGVmYXVsdENvbGxlY3Rpb24iLCJ4LWRlc2NyaXB0b3JzIjpbInVybjphbG06ZGVzY3JpcHRvcjpjb20udGVjdG9uaWMudWk6Ym9vbGVhblN3aXRjaCJdfSx7ImRlc2NyaXB0aW9uIjoiUmVzb3VyY2VzIGlzIGFuIGV4cGxpY2l0IGxpc3Qgb2YgbmFtZWQgcmVzb3VyY2VzIHRoYXQgd2lsbCBiZSBjb25zaWRlcmVkIGZvciBpbmNsdXNpb24gaW4gdGhpcyBzY29wZSBvciBzY29wZXMuIiwiZGlzcGxheU5hbWUiOiJDb2xsZWN0aW9uIFJlc291cmNlcyIsInBhdGgiOiJjb2xsZWN0aW9ucy5yZXNvdXJjZXMifSx7ImRlc2NyaXB0aW9uIjoiS2luZCBpbmRpY2F0ZXMgdGhlIGtpbmQgb2YgcmVzb3VyY2UgdGhhdCBpcyBiZWluZyByZWZlcmVuY2VkLiBBIHNjb3BlIGNhbiBvbmx5IHJlZmVyZW5jZSBDb3VjaGJhc2VDb2xsZWN0aW9uIGFuZCBDb3VjaGJhc2VDb2xsZWN0aW9uR3JvdXAgcmVzb3VyY2Uga2luZHMuIiwiZGlzcGxheU5hbWUiOiJSZXNvdXJjZSBLaW5kIiwicGF0aCI6ImNvbGxlY3Rpb25zLnJlc291cmNlc1swXS5raW5kIiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOnN0cmluZyJdfSx7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgS3ViZXJuZXRlcyByZXNvdXJjZSBuYW1lIHRoYXQgaXMgYmVpbmcgcmVmZXJlbmNlZC4iLCJkaXNwbGF5TmFtZSI6IlJlc291cmNlIE5hbWUiLCJwYXRoIjoiY29sbGVjdGlvbnMucmVzb3VyY2VzWzBdLm5hbWUiLCJ4LWRlc2NyaXB0b3JzIjpbInVybjphbG06ZGVzY3JpcHRvcjpjb20udGVjdG9uaWMudWk6c3RyaW5nIl19LHsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBLdWJlcm5ldGVzIHJlc291cmNlIG5hbWUgdGhhdCBpcyBiZWluZyByZWZlcmVuY2VkLiIsImRpc3BsYXlOYW1lIjoiU2VsZWN0b3IiLCJwYXRoIjoiY29sbGVjdGlvbnMucmVzb3VyY2VzWzBdLnNlbGVjdG9yIiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOnNlbGVjdG9yOmNvcmU6djE6Q29uZmlnTWFwIl19LHsiZGVzY3JpcHRpb24iOiJEZWZhdWx0U2NvcGUgaW5kaWNhdGVzIHdoZXRoZXIgdGhpcyByZXNvdXJjZSByZXByZXNlbnRzIHRoZSBkZWZhdWx0IHNjb3BlIGZvciBhIGJ1Y2tldC4iLCJkaXNwbGF5TmFtZSI6IkRlZmF1bHQgU2NvcGUiLCJwYXRoIjoiZGVmYXVsdFNjb3BlIiwieC1kZXNjcmlwdG9ycyI6WyJ1cm46YWxtOmRlc2NyaXB0b3I6Y29tLnRlY3RvbmljLnVpOmJvb2xlYW5Td2l0Y2giXX0seyJkZXNjcmlwdGlvbiI6Ik5hbWUgc3BlY2lmaWVzIHRoZSBuYW1lIG9mIHRoZSBzY29wZS4iLCJkaXNwbGF5TmFtZSI6Ik5hbWUiLCJwYXRoIjoibmFtZSIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpzdHJpbmciXX1dLCJ2ZXJzaW9uIjoidjIifSx7ImRlc2NyaXB0aW9uIjoiU3BlY2lhbCBtaWdyYXRpb24gbWFwcGluZyB3aXRoaW4gWERDUiB0byB0YWtlIGEgZmlsdGVyZWQgbGlzdCBmcm9tIHRoZSBkZWZhdWx0IHNjb3BlIGFuZCBjb2xsZWN0aW9uIG9mIHRoZSBzb3VyY2UgdG8gdGFyZ2V0IGJ1Y2tldC4iLCJkaXNwbGF5TmFtZSI6IkNvdWNoYmFzZSBNaWdyYXRpb24gUmVwbGljYXRpb24iLCJraW5kIjoiQ291Y2hiYXNlTWlncmF0aW9uUmVwbGljYXRpb24iLCJuYW1lIjoiY291Y2hiYXNlbWlncmF0aW9ucmVwbGljYXRpb25zLmNvdWNoYmFzZS5jb20iLCJyZXNvdXJjZXMiOlt7ImtpbmQiOiJDb3VjaGJhc2VNaWdyYXRpb25SZXBsaWNhdGlvbiIsInZlcnNpb24iOiJ2MiJ9XSwic3BlY0Rlc2NyaXB0b3JzIjpbeyJkZXNjcmlwdGlvbiI6IlRoZSBtaWdyYXRpb24gbWFwcGluZ3MgdG8gdXNlLiIsImRpc3BsYXlOYW1lIjoiTWlncmF0aW9uIE1hcHBpbmciLCJwYXRoIjoibWlncmF0aW9uTWFwcGluZyJ9LHsiZGVzY3JpcHRpb24iOiJMaXN0IG9mIG1hcHBpbmcgZmlsdGVycy4iLCJkaXNwbGF5TmFtZSI6Ik1hcHBpbmdzIiwicGF0aCI6Im1pZ3JhdGlvbk1hcHBpbmcubWFwcGluZ3MifSx7ImRlc2NyaXB0aW9uIjoiQnVja2V0IGlzIHRoZSBzb3VyY2UgYnVja2V0IHRvIHJlcGxpY2F0ZSBmcm9tLiIsImRpc3BsYXlOYW1lIjoiQnVja2V0IiwicGF0aCI6ImJ1Y2tldCIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpzdHJpbmciXX0seyJkZXNjcmlwdGlvbiI6IlJlbW90ZUJ1Y2tldCBpcyB0aGUgcmVtb3RlIGJ1Y2tldCBuYW1lIHRvIHN5bmNocm9uaXplIHRvLiIsImRpc3BsYXlOYW1lIjoiUmVtb3RlQnVja2V0IiwicGF0aCI6InJlbW90ZUJ1Y2tldCIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTpzdHJpbmciXX1dLCJ2ZXJzaW9uIjoidjIifSx7ImRlc2NyaXB0aW9uIjoiSW50ZXJuYWwgQXV0b3NjYWxpbmcgTWFuYWdlbWVudCBSZXNvdXJjZSIsImRpc3BsYXlOYW1lIjoiQ291Y2hiYXNlIEF1dG9zY2FsZXIiLCJraW5kIjoiQ291Y2hiYXNlQXV0b3NjYWxlciIsIm5hbWUiOiJjb3VjaGJhc2VhdXRvc2NhbGVycy5jb3VjaGJhc2UuY29tIiwicmVzb3VyY2VzIjpbeyJraW5kIjoiQ291Y2hiYXNlQXV0b3NjYWxlciIsInZlcnNpb24iOiJ2MiJ9XSwic3BlY0Rlc2NyaXB0b3JzIjpbeyJkZXNjcmlwdGlvbiI6IlRoZSBzaXplIG9mIHRoZSByZWxhdGVkIHNlcnZlciBjb25maWciLCJkaXNwbGF5TmFtZSI6IlNpemUiLCJwYXRoIjoic2l6ZSIsIngtZGVzY3JpcHRvcnMiOlsidXJuOmFsbTpkZXNjcmlwdG9yOmNvbS50ZWN0b25pYy51aTppbnQiXX1dLCJ2ZXJzaW9uIjoidjIifV19LCJkZXNjcmlwdGlvbiI6IlRoZSBDb3VjaGJhc2UgQXV0b25vbW91cyBPcGVyYXRvciBhbGxvd3MgdXNlcnMgdG8gZWFzaWx5IGRlcGxveSwgbWFuYWdlLCBhbmQgbWFpbnRhaW4gQ291Y2hiYXNlIGRlcGxveW1lbnRzIG9uIE9wZW5TaGlmdC4gQnkgaW5zdGFsbGluZyB0aGlzIGludGVncmF0aW9uIHlvdSB3aWxsIGJlIGFibGUgdG8gZGVwbHkgQ291Y2hiYXNlIFNlcnZlciBjbHVzdGVycyB3aXRoIGEgc2luZ2xlIGNvbW1hbmQuXG5cbiMjIFN1cHBvcnRlZCBGZWF0dXJlc1xuXG4qICoqQXV0b21hdGVkIGNsdXN0ZXIgcHJvdmlzaW9uaW5nKiogLSBEZXBsb3lpbmcgYSBDb3VjaGJhc2UgQ2x1c3RlciBoYXMgbmV2ZXIgYmVlbiBlYXNpZXIuIEZpbGwgb3V0IGEgQ291Y2hiYXNlIHNwZWNpZmljIGNvbmZpZ3VyYXRpb24gYW5kIGxldCB0aGUgQ291Y2hiYXNlIE9wZXJhdG9yIHRha2UgY2FyZSBvZiBwcm92aXNpb25pbmcgbm9kZXMgYW5kIHNldHRpbmcgdXAgY2x1c3RlciB0byB5b3VyIGV4YWN0IHNwZWNpZmljYXRpb24uXG5cbiogKipPbi1kZW1hbmQgc2NhbGFiaWxpdHkqKiAtIEF1dG9tYXRpY2FsbHkgc2NhbGUgeW91ciBjbHVzdGVyIHVwIG9yIGRvd24gYnkgY2hhbmdpbmcgYSBzaW1wbGUgY29uZmlndXJhdGlvbiBwYXJhbWV0ZXIgYW5kIGxldCB0aGUgQ291Y2hiYXNlIE9wZXJhdG9yIGhhbmRsZSBwcm92aXNpb25pbmcgb2YgbmV3IG5vZGVzIGFuZCBqb2luaW5nIHRoZW0gaW50byB0aGUgY2x1c3Rlci5cblxuKiAqKkF1dG8tcmVjb3ZlcnkqKiAtIERldGVjdCBDb3VjaGJhc2Ugbm9kZSBmYWlsdXJlcywgcmViYWxhbmNlIG91dCBiYWQgbm9kZXMsIGFuZCBicmluZyB0aGUgY2x1c3RlciBiYWNrIHVwIHRvIHRoZSBkZXNpcmVkIGNhcGFjaXR5LiBBdXRvLXJlY292ZXJ5IGlzIGNvbXBsZXRlbHkgYXV0b21hdGVkIHNvIHlvdSBjYW4gc2xlZXAgZWFzeSB0aHJvdWdoIHRoZSBuaWdodCBrbm93aW5nIHRoYXQgdGhlIENvdWNoYmFzZSBPcGVyYXRvciB3aWxsIGhhbmRsZSBhbnkgZmFpbHVyZXMuXG5cbiogKipHZW8tZGlzdHJpYnV0aW9uKiogLSBSZXBsaWNhdGUgeW91ciBkYXRhIGJldHdlZW4gZGF0YWNlbnRlcnMgdG8gbW92ZSBkYXRhIGNsb3NlciB0byB0aGUgdXNlcnMgd2hvIGNvbnN1bWUgaXQgYW5kIHByb3RlY3QgYWdhaW5zdCBkaXNhc3RlciBzY2VuYXJpb3Mgd2hlcmUgYW4gZW50aXJlIGRhdGFjZW50ZXIgYmVjb21lcyB1bmF2YWlsYWJsZS5cblxuKiAqKlBlcnNpc3RlbnQgc3RvcmFnZSoqIC0gRGVmaW5lIHBlcnNpc3RlbnQgbmV0d29yay1hdHRhY2hlZCBzdG9yYWdlIGZvciBlYWNoIG5vZGUgaW4geW91ciBjbHVzdGVyIHRvIGFsbG93IHBvZHMgdG8gYmUgcmVjb3ZlcmVkIGV2ZW4gaWYgdGhlIG5vZGUgdGhleSB3ZXJlIHJ1bm5pbmcgb24gaXMgbm8gbG9uZ2VyIGF2YWlsYWJsZS5cblxuKiAqKlJhY2svem9uZSBhd2FyZW5lc3MqKiAtIFRlbGwgdGhlIENvdWNoYmFzZSBPcGVyYXRvciBhYm91dCBhdmFpbGFiaWxpdHkgem9uZXMgaW4geW91ciBkYXRhY2VudGVyIGFuZCBsZXQgdGhlIG9wZXJhdG9yIHRha2UgY2FyZSBvZiBlbnN1cmluZyB0aGF0IG5vZGVzIGluIHlvdXIgY2x1c3RlciBhcmUgZGVwbG95ZWQgZXF1YWxseSBhY3Jvc3MgZWFjaCB6b25lLlxuXG4qICoqU3VwcG9ydGFiaWxpdHkqKiAtIFdoZW4gdGhpbmdzIGdvIHdyb25nLCB1c2UgdGhlIGNib3BpbmZvIHRvb2wgcHJvdmlkZWQgd2l0aCB0aGUgQ291Y2hiYXNlIE9wZXJhdG9yIHRvIGNvbGxlY3QgcmVsZXZhbnQgZGF0YSBhYm91dCB5b3VyIENvdWNoYmFzZSBkZXBsb3ltZW50IHNvIHRoYXQgeW91IGNhbiBxdWlja2x5IGFkZHJlc3MgaXNzdWVzLlxuXG4qICoqQ2VudHJhbGl6ZWQgY29uZmlndXJhdGlvbiBtYW5hZ2VtZW50KiogLSBNYW5hZ2UgeW91ciBjb25maWd1cmF0aW9uIGNlbnRyYWxseSB3aXRoIE9wZW5TaGlmdC4gVXBkYXRlcyB0byB0aGUgY29uZmlndXJhdGlvbiBhcmUgd2F0Y2hlZCBieSB0aGUgQ291Y2hiYXNlIE9wZXJhdG9yIGFuZCBhY3Rpb25zIGFyZSB0YWtlbiB0byBtYWtlIHRoZSB0YXJnZXQgY2x1c3RlciBtYXRjaCB0aGUgZGVzaXJlZCBjb25maWd1cmF0aW9uLlxuIyMgUmVxdWlyZWQgUGFyYW1ldGVyc1xuKiBgYXV0aFNlY3JldGAgLSBwcm92aWRlIHRoZSBuYW1lIG9mIGEgc2VjcmV0IHRoYXQgY29udGFpbnMgdHdvIGtleXMgZm9yIHRoZSBgdXNlcm5hbWVgIGFuZCBgcGFzc3dvcmRgIG9mIHRoZSBzdXBlciB1c2VyIChbZG9jdW1lbnRhdGlvbl0oaHR0cHM6Ly9kb2NzLmNvdWNoYmFzZS5jb20vb3BlcmF0b3IvMS4yL2NvdWNoYmFzZS1jbHVzdGVyLWNvbmZpZy5odG1sKSlcblxuIyMgQWJvdXQgQ291Y2hiYXNlIFNlcnZlclxuXG5CdWlsdCBvbiB0aGUgbW9zdCBwb3dlcmZ1bCBOb1NRTCB0ZWNobm9sb2d5LCBDb3VjaGJhc2UgU2VydmVyIGRlbGl2ZXJzIHVucGFyYWxsZWxlZCBwZXJmb3JtYW5jZSBhdCBzY2FsZSwgaW4gYW55IGNsb3VkLiBXaXRoIGZlYXR1cmVzIGxpa2UgbWVtb3J5LWZpcnN0IGFyY2hpdGVjdHVyZSwgZ2VvLWRpc3RyaWJ1dGVkIGRlcGxveW1lbnRzLCBhbmQgd29ya2xvYWQgaXNvbGF0aW9uLCBDb3VjaGJhc2UgU2VydmVyIGV4Y2VscyBhdCBzdXBwb3J0aW5nIG1pc3Npb24tY3JpdGljYWwgYXBwbGljYXRpb25zIGF0IHNjYWxlIHdoaWxlIG1haW50YWluaW5nIHN1Ym1pbGxpc2Vjb25kIGxhdGVuY2llcyBhbmQgOTkuOTk5JSBhdmFpbGFiaWxpdHkuIFBsdXMsIHdpdGggdGhlIG1vc3QgY29tcHJlaGVuc2l2ZSBTUUwtY29tcGF0aWJsZSBxdWVyeSBsYW5ndWFnZSAoTjFRTCksIG1pZ3JhdGluZyBmcm9tIFJEQk1TIHRvIENvdWNoYmFzZSBTZXJ2ZXIgaXMgZWFzeSB3aXRoIEFOU0kgam9pbnMuXG4iLCJkaXNwbGF5TmFtZSI6IkNvdWNoYmFzZSBPcGVyYXRvciIsImljb24iOlt7ImJhc2U2NGRhdGEiOiJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBSzRBQUFDdkNBWUFBQUJrVU9WTEFBQUFCSE5DU1ZRSUNBZ0lmQWhraUFBQUFBbHdTRmx6QUFBT3hBQUFEc1FCbFNzT0d3QUFBQmwwUlZoMFUyOW1kSGRoY21VQWQzZDNMbWx1YTNOallYQmxMbTl5WjV2dVBCb0FBQkxTU1VSQlZIaWM3ZDE3Y0Z6MWRRZnc3N2wzOVpabGdiSE5wSDdJeGxpUGxWYVN0WDdnTUVWT21lQ1FRQm9JcGpOdEtZbWhidEowS0ZBQ2JkT1psRFpNWVNBdWswQVlES1ZETWdWTWdVNUNzR2xwYkZMSEQ3d3JyeDRyeWNhV1JlSWtZMndqNjJGSjF0NzdPLzFETWpFZVczdWZlM2RYNXpQakdZOTA3KzkzYkgvOTArN2RlODhQRUVJSUlZUVFRZ2dST0FxNmdIeXdyNlptamxaUU1KdFNLQ09nRUFCTWhNcDFHQ01Bd01BRUYrQ01TcVVHVi9mMm5ncTIydndnd1UxalIydHJxT0xrME5Xc1ZEMklsNEpSeFVBVmdSZUQ2QW93NWdEUWJBeXBRRGdGNXBNTStvQ0FmbVk2U29TajBNM092czZhOXpmZ1ZkT3ZQMCsra09DZWh3R0tOelJVczZtdEpjSmFnSnJBSEFaUW5NRXl4a0dVQkRoQmpGK3dydlpFT3p0N016aC9UcGp4d1gydnZuNmh6cUgxU3ZGNklyNE9vRGxCMTNRUkp3bDRsNW0zR3dYWXZxYWo0MWpRQlFWdFJnWTNWdFBRQUYzYkFPQ0xZRFFFWFk5dFRCMGcvaThGYkYzVjNaNE11cHdnekpqZ3hzSXRpNGhUWDJIZ2RvQnFnNjdIUTBrUVhsRmsvdnVxcnE1ZkJWMU1wdVIxY0hlMHRvWXFqZy9jQktLN0dYd0Q3TDJKeWkwRUU4eHZnN1V0dy9NcjMxeTNjNmNSZEVsK3lzdmc3cXF1bmxXc0ZYMFZoUHNBV2hSMFBRSDRMWU9lTGRMTkp5T2RuUU5CRitPSHZBcnUzdnI2K1NHbGZ4UEFYUUFxZ3E0bmNJUkJCajlicU9QeHhvNk9ENE11eDB0NUVkeDlOVFZ6TkszNHJ3aDhINEJaUWRlVGhjNEFlTjdRekVmV2RIVWREN29ZTCtSMGNIY3Z1S2FrWU5iWWZVVDhJQ1N3Vmd3Qi9DL0RvME9iMS9YM2p3ZGRqQnM1Rzl4NE9ISVRnNTRFWTBuUXRlU2dYekh6dDZJOUhUOGtnSU11eG9tY0MyNDh2R0lacy9rc2dIVkIxNUxyQ1B5TzBublR5czdPdnFCcnNTdG5ncnVqdFRVMDYvaEhmd21pN3dBb0M3cWV2RUVZWTZiSHFFVC9UalFlVHdWZGpsVTVFZHhZUTBNTkcvUkRJb29HWFV1K0ltQy9vZkFucTN2YkR3VmRpeFZaZjBGK2YyM2tEcGhhVEVMckx3Wlc2am9Tc2RySVBVSFhZa1hXcnJnSG1wb3F6UWwrQWNBZkJsM0xUTU9NMTgxVThWZldITjQzRkhRdGw1S1Z3WTAxTk5UQXBOZno3SjZDWFBNK005K3lzcWVqSytoQ0xpYnJYaXJFYXh0dmg2bkZKTFNCdTVxSTlzVHFtbTRMdXBDTHlhcmd4bW9qOXpEaFB5QlhEYkpGT2NDdjdLOXIrbmJRaFZ3b0sxNHE3R2h0RFZWOE9QQjlCallGWFl1NE9BWmVvSkxRcG15NVpCWjRjR010TGFVWU0xNEhjRVBRdFloMCtLMkpvYkl2cnoyMlp5em9TZ0lOYm5za1VwWXk2TWNBUGhOa0hjSTZCdjNjbkNpNktlZ3JEb0VGdDZPaDRiSUpVOXNHWUhWUU5Rakg5dXFGOUxubVJPSjBVQVVFOHVhc1BSSXBtekMxSDBOQ202dldtQk84ZlZkMWRXQjM1R1U4dUxzWFhGT1NTdEdiQUs3TjlOekNVNnVMOWVKdDdaRklJRmVBTWhyY1dFdExRV0hGNkJzZ3RHWnlYdUdiVDZjTWJOM1IyaHJLOU1RWkRTNk5HZCtEWEQzSU0zVGpyQk1EejJSNjFvd0ZOeFp1L0FlNVRwdW5HQnRqNGNhSE1qbGxScTRxeEdzYmIyZkNTNW1hVHdTQ21maTJsY21PMXpJeG1lOUJpdFUwTkVEVDlrQSt4cDBKUmhTd0poUGRkWHg5cWJDcnVub1dORzBySkxRelJia0d2QjViMmpMYjc0bDhEVzZ4WHZ3aWdCby81eEJaWnptS3plZjhuc1MzNE1icUd2OENjaFA0RE1WZjNsOGIyZWpuREw2OHhwMTZFdmNBZ0hJL3hoYzU0UXliM0xMeVlNZEJQd2IzZk1YZDBkb2FVc3A0Q1JMYW1hNk1kSHB4SzI3VC9SamM4K0RPT2pGd3Z6ellLS2FzV2hvKzVNdkRsNTYrVk5oWEhWbWk2OVFKdVlvZ2ZtY1VtaG1KZG5VZDhYSlFUMWRjWGFmbklhRVZuMVFLVTMvYTYwRTlDMjY4cm5FRHBDMlN1QmpDWitPMWpWL3lka2dQN0tpcUtwNVZPcnNIUUpVWDQ0bTgxRGM4T2hqMnFrdWtKeXR1ZVVubC9aRFFpdWt0blZVMjI3TTNhcTVYM0gwMU5YTjByYWdQMGdGY3BFTVluSUN4ZEcweStaSGJvVnl2dUpwZStDQWt0TUlLeHV3aTZQZDVNWlNyRmJkdFdmTmNWYWo2SUI4MkNPdEdDa0o4bGRzOUtWeXR1S3BRUFFnSnJiQ25QSlVpMTZ1dTR4VjM3N0xWRmFHaThWK0M0ZnN0YkNMdkRHRTh0Q2phRng5ME9vRGpGYmVnNE93bUNhMXdxSUpMaksrNkdjRFJpaHRyYVNuQW1IRUV3RUkzazRzWjdZUGhlWmN0YzdvRHBxTVZsODRhTjBGQ0s5eFpYSDdpb3h1ZG51d291RXJoYnFjVENuRU9LWEtjSTlzdkZXTGhsa1ZnNHlpeXJMZnVsQkVBS1lDSEFUSUFGQUpZRUhCTm1XWUFPQVpBQWFnQW9ReU1rb0JydWppQ2FlaGN0YWFqNDVqZFV4MTBJREh1UkNaRFN4Z0Q0K2ZFNklaR1I1anhJVE1ONkRwT0s2UUdUTU00clplVkRWMnFiMnQ3SkRMUE1PbCtaanlBL0g0OC9peUFCeWFHU3ArN3NBMG9BOVRaMEZBNVNsUkdFMVNxNlRTWEZPYUMrRW9DejFkTWN6WENsWXA1TVJFMUFpaklTTVVNdmNEQUhRQWVzWHVxL1JXM0x0S2RvVGIzYlFROHlpV2hONlB4K0tqYndXTGhwaTFndnN1THdySVM0YUZvc3YxUnQ4UEVXbHBLZVRSMU14SGRDMkNWQjVWTmo5QVpUYlpIN0o5bXcxU1BoQTY3azloMGhobGZpL2EwLzhqTDdUcmI2cHVqU3FuOVhvMlhiVUlHRmpRZGF2KzFWK014UVBHNnhrMEFuZ0JRNnRXNEYwT2FYdGZTMWRaajV4eDdQL0oxYllPdDQrMDdUcHE1ZG1WUHUrZDd6QTZPREdUbDdqRWVHVzg4MVA0Ykx3Y2tnS1BkN2MrQWNBTUlqajhvc0VRWnRuTmxMN2pzNitQbVo1Vkd0N1IwZGZteW9rL2RCenJoeDloWjRLUmZtMGxIaysyN29PaVA0ZU5tMVF5eWZaTzU1ZUMrVjErL0VFQzkzUW1zSXVMSFYzVWxkdnMxL3BTYzNDbmNBbC8vWE5HZXhFOFoyT0xqRkpHMjZ1WlAyVG5CY25CMURxMjNYNDlGaEVHdFFIdmN0L0dGYTJhSS93bVRWeTc4UUthdWJPWExjbkNWWXQrQ1M4QzJJUGNURU9sTlhtdmwvL1ZyZkFLOER5NERSSVRmZDFhU3BRbisyN2V4aFpmZTluSHM2OWpHVlM1THdXMnJYMUVENEFySEphVmhLcTNQcjdHRmgxanp0RGZDQmVZbGFwdVdXVDNZVW5DVk1xOXhYazk2SVIwbi9CeGZlRU5wY1BYVWdvWHhQMjMxV0V2QkpjSmE1K1drcHlqbDE0dCs0YUVRa2E5WEwxZ3B5em16OXVhTTBleTRHaUVzSXFJbXE4ZW1EZTdVVmtCMXJpb1N3Z0ltMUZ2dDdwZzJ1TE5QREM0SFVPeTZLaUhTWVpRc3JqbDBsWlZEMHdaWE1ZZmRWeVNFTmFHUXRVOW4wNy9HSmJiMFAwQUlMN0RpcFZhT1N4dGNZdWtKSmpLSG1hcXNISmMydUN6TjdFUUdFZkVTSzhkWnVCekdpOXdXSTRSMXROaktVVmF1NDg1eldZa1Fkc3kxY3RDMHdXVkFBMUdsTi9VSVljbmxWbTYybVRhNGU4TGhTakI4MmU1SGlFc0lKWnFhMHJiMm1qYTRSU2k2M0x0NmhMREdNTTIwdVp1MnI0TEpabEUyZHYxd2lrQS9BMVJtZWdaa0VMT1dWM2ZYNlNxVTlwUGFhWU9yTVJlQjhxZUhSa3Qzd25HdktwRTVCcmd3M1RIVExxZzAyY0pJaUl6U1dCV2xQV2E2YjdKR0RsbzBDZUVTVWRxWGM5T3Z1SW9kOVM0VndnMjIwUDhpM1hYY2ZHMmdJYklZZ3lTNEl2Zm9wS1Y5bEd2YTRHcGF5SlB0SzRXd3c4b3ppTk1HOXl6T3V0NEJVQWk3NkV6aHFYVEhUQnZjYTVMSjB5Q1kzcFVrUkZxcGxyNzRVTHFEMGwzSFZXQU1lRmVURUdsOVpLWHpwSlg3Y2ZQcTQwU1I5VTVhT2NoQ2NPbVhiaXNSd2pyK3dNcFJWdTZoT2VxeUVpRXNZeVpMZWJQd2xDLzYzUllqaEZWRTFoWktDdzlMc3A4ZCtvVDRCR0pZNnR5Wi92RjBqZk41MHcrUmJUUzkwOUpoNlE3bzY2eDVINFN4ZE1lNW9adWhmTHBmWFRnM3VpTFo1czJLdXdHdm1nQjF1Ni9wMGt5b1dYNk9MN3hoZ3N0OW5xS0xKcmR5VGN2cVNuZkFSVEZwa1VhV0hra1d3ZElVKzlxcWdJR0U1Vm9zRGNpOHgzazVGc1lITFBkRkZjRlJ4TDUycGdmekw2d2VhbTNGTmEwUDZJakNaM3dkWDdqR2dFWk1YL0J6amhBMHl3dWtwZUJHRDNZY2dzV1A0aHdoWEwrdk9tS3BaNVFJUml3Y3VSMkE1YzFGSERqZTNKTjQzK3JCMXZhQUFKaUFkNTNYbEw0T1hjZjNmUnhmdUJCYjNuSUZNYm5lbVQwTlcvbXlmQm1LbWJmYnI4VU91bkYvT1BLWW5iMnVoUDlpTFMybEhESmVCckRRejNrSXNKVXZ5OEUxQ3JBZFB1OFpTMHdQeE1PTnIwM3RHeXdDRmd1M0xPTHgxRHNFL0lIUFV6Rnp5Rlp3YmExdXNYQmpCeGdOOW1weVpCU0VseGowUWpTWjJHUDEycDd3Um1KNTQrOFpCZGdJeGpjQmxHVml5bWgzdTYyZG5lejFUV0M4QVdRa3VLVmdiQ1R3eG5oZDQra1lZeGNJYmN4OGhEVHEwd3l0YjhYQkE3L0pRQjE1YTBkVlZYRmxTZVZDVStNRnJIZ2hhVlFGeGhJUU5Samdwb3cyT3lTOFlmOFVHOTZyYXd4clFMYmN1ekFPb0ErRW8xQjhFa1FuUVRqQmpCTWdQc21rbmFTVU9xVm80dVNxM3Q2Qm1iSnFiOFZ0ZWxXNGU2NW1hbk0xamVZcDB1WURmQ1VZaXdFc1l1WUZSTFFRd1B5Z2EvMllybXFqbloyOWRrNngvVVlvVnRmWUJTQVhkK0laQlRBQzBEQUlwNkY0R01BSWFSaFJqQ0VRajVLaXM5QndCc0FFZ1VZQXBCVFVNTEZtTU9NTUxuamVuM1VlMVEzVDFxNllyR3NWckRRZEFJajRNbUNxMVJWTi9ram15WTlWQ3dBUUZDclBmVjlOZlovQTVRQVZNRVBYaUNzWVZJSEpIK2ZsQUNvQVZDS1gzdUF5ZFVSN0VvMTJUN1BmWW9ud0NoZ1AyejR2ZUtXVHYzZ2VHQi8vMC9LNXl4aE1rNytaZXZ2SlU3K2hxUzlPOXY3NzVIdFRVZ0JyTnU4UFlvQklYZmlsaTcvdHBkOTlueTc0SWhIQU9aVFBTeUwxc3BQVGJOK1ZaZWo4Z2p6NUt6eGloQXg2MGNtSnRvTzdwcVBqR0pqZmRqS1pFT2NqMEZ0Tmg5cC83ZVJjWi9mQnNyYkYwWGxDbkkvVWMwNVBkUlRjNGZtVmJ3SXNULzhLTi9xSDVsNit6ZW5Kam9LN2J1ZE9BMFJQT3AxVUNJQTNyOXU1MDNFYlc4ZVB6SXdiNDF0QUdIUjZ2cGpSQmtySS9EYzNBemdPN3JVSER3NHorRmszazR1WmlVRS9DQ2VUSTI3R2NQV1FJcVVLSGdNdzdHWU1NZU9NNkJQMHIyNEhjUlhjNktINFNRQlB1UzFDekNDTXpTc09IM0Rkajg3MVkrRjZJVDBLNExUYmNjUU1RQmdzREtuTlhnemxPcmpOaWNScGdCL3pvaGlSNTVqL09kTFo2VW5iV2s4YWNaU1ErUVFBeTg4TGlabUlqc3llR1AyZVY2TjVFdHh3TWpsQkdoN3lZaXlSbjRqVXZWY2ZQbXpyVHJwcHgvTnFJQUNJMTBYK2gwSFhlem1teUgwRTJ1YjFkclNlOXV6U2xIWTNnRE5lamlseTNxalN6Vzk0UGFpbndXM3VUZlFUMHo5Nk9hYkliY1QwOXlzN095MDFzclBEOHk2SlEvTXJOeE93Myt0eFJVN2FlNlRuYXMvZWtKM1BsMXZvWS9YMVYwSHBCd0JJRjhhWjY0eXBzR0oxYi9zaFB3YjNwUzl0dEt2ckNCSGQ3OGZZSWpjUTBUZjhDaTNnODBOMSsyc2JYeVBDTFg3T0liSVBFMTVabVd6L0l6L244TFVUK0ZrMWZpY0FYNXRDaXl4RE9HaWVMZjV6LzZmeDJmN3FTRFhwOUI0bUg1MFcrVzFFSTIzMWl1UUIzeGNyMy9kZVdIbXc0eUJBZDhIbnZtTWljSW9ZZDJRaXRFQUdnZ3NBMGU3RXF3VCtWaWJtRXNFZ3BvZGFldHB0dDFKeVBGK21KZ0tBV0xqcGFUQi9MWk56aWd3Z2VpNmFUTnlkeVNrenUwMVRzWDRQd0c5bGRFN2hLd1orTWp5M011T0xVY1o3K094ZWNFMUpZY1hvVHdHc3kvVGN3bk0vR3g0ZC9QeTYvdjd4VEUrYzhZM3gxaDdiTTRhUzBCY0EvRittNXhhZTJsdEN4aGVEQ0MwUVFIQUJJQnFQaitxRmRET0F2VUhNTDl3aHhtNk1oOWE3ZlZMWGpjQzJJbTFPSkU0WGhQaDZBcjhUVkEzQ1BpSitkMHlOcjQvMnhRUHRxUkhvSHJxTkhSMW56ZzZWM1N4djJISURBejhaT2pPMC90cURCd052U1JENDVzOXJqKzBaNit1dXZobkVUd2RkaTVnRzRYa3FDZDBhMUd2YUMyVlZaK0JZYmVRZUVIMFhXZkFmU255TUdmVHd5dTdFdDRNdTVIeFpGVndBMkIrTzNFcE1MMER1NWMwR1E4UzRNNU9maUZtVmRjRUZnSDAxamN0MURhOGpOL2VheUErRWc0cHg2NnJ1OW1UUXBWeE1WdjVJWHQzYmZzaVlLRjRMMEg4R1hjdE14SVJYeG8zeGxka2FXaUJMVjl6ejdhK04zRUZFVDJGeVZ4bmhyMkVpK3B1V1pDTHJ1M0JtZlhBQjRFQnQwOVVtOFk4QXJBcTZsankybDBqLzA1WmsyK0dnQzdFaUo0SUxBQXhvYmVHbXU1ajVDY2pxNjZWUkVCN3VTeTUvZkFOZXpabmRsSEltdU9mc3E0NHMwVFY2Qm9UUEJsMUxyaVBRTmszaDY4MjlpZjZnYTdFcjU0SjdUandjdVlsWjJ3endWVUhYa29NT0EvUjMwZTdFcTBFWDRsVE9CaGNBM2wrMnJHaXdxT3l2QWZ3dEdMT0RyaWNIbkNhbVI0cTExSlBoWkhJaS9lSFpLNmVEZTg2dTZ1cFp4YUhpcjBNQ2ZDa2pZRHhWR0ZLUGV0V2ZObWg1RWR4ejJwWTF6MVVGNm40UU5tRnlNK2FaYm9CQlAxQnEvTHVyZTN0UEJWMk1sL0lxdU9ja3crSHlNYVZ2Qk5HOUFCWUhYVThBK2tGNEJtT2haNEsrL2RBdmVSbmNjM2EwdG9iS1B6ejllV0srQ3hvK0I0WWVkRTIrSVpqTWVFc2ozbklrV2YxV0xsM2FjaUt2ZzN1K3ZaSElBajJsL1JscGZEc1lEVUhYNHhtbURwQjZPV1RRaTA0M2RNNUZNeWE0NTR2WHI2aUZNall3NkVzQUlzaXR2d2NHMEE3Q0c5RFUxbWhuWjIvUUJRVWhsLzdCZk5GVzNmd3BVMWZyQ1ZnUDREb0E4NEt1NlNLT0EzaVhnTzNNb2UzUm52aHZneTRvYURNK3VCZmFWOU80UEtUVFdsWnFMUVBOUkZRSG9EU0RKWXdTa0ZUQUFTTGFyU3ZzYnU1SnlJNUdGNURncHJFVnQrbUxhdzVkcGVuY1FJd2xJQ3dCb3dxZ0tnQnpwbjZGYkF4cEFEZzErWXY3bWVrb0VmZVRSbjJhU1oxTlBZa2pCQ2l2L3h6NVJvTHJnUU5OVFpXR2FWNnVjVUVSakZRcEFKZ0lsZXN3SmgvZkRoV01La3FkRGVuNlI1TWJHZ29oaEJCQ0NDR0VFRUlJSVlRUVFnZ2hoQkF6MXY4RCtvL2JYcVlqeFFRQUFBQUFTVVZPUks1Q1lJST0iLCJtZWRpYXR5cGUiOiJpbWFnZS9wbmcifV0sImluc3RhbGwiOnsic3BlYyI6eyJkZXBsb3ltZW50cyI6W3sibmFtZSI6ImNvdWNoYmFzZS1vcGVyYXRvciIsInNwZWMiOnsicmVwbGljYXMiOjEsInNlbGVjdG9yIjp7Im1hdGNoTGFiZWxzIjp7ImFwcCI6ImNvdWNoYmFzZS1vcGVyYXRvciJ9fSwic3RyYXRlZ3kiOnt9LCJ0ZW1wbGF0ZSI6eyJtZXRhZGF0YSI6eyJsYWJlbHMiOnsiYXBwIjoiY291Y2hiYXNlLW9wZXJhdG9yIn19LCJzcGVjIjp7ImNvbnRhaW5lcnMiOlt7ImFyZ3MiOlsiLS1wb2QtY3JlYXRlLXRpbWVvdXQ9MTBtMHMiXSwiY29tbWFuZCI6WyJjb3VjaGJhc2Utb3BlcmF0b3IiXSwiZW52IjpbeyJuYW1lIjoiV0FUQ0hfTkFNRVNQQUNFIiwidmFsdWVGcm9tIjp7ImZpZWxkUmVmIjp7ImZpZWxkUGF0aCI6Im1ldGFkYXRhLmFubm90YXRpb25zWydvbG0udGFyZ2V0TmFtZXNwYWNlcyddIn19fSx7Im5hbWUiOiJQT0RfTkFNRSIsInZhbHVlRnJvbSI6eyJmaWVsZFJlZiI6eyJmaWVsZFBhdGgiOiJtZXRhZGF0YS5uYW1lIn19fSx7Im5hbWUiOiJSRUxBVEVEX0lNQUdFX0NPVUNIQkFTRV9TRVJWRVIiLCJ2YWx1ZSI6InJlZ2lzdHJ5LmNvbm5lY3QucmVkaGF0LmNvbS9jb3VjaGJhc2Uvc2VydmVyQHNoYTI1NjowMzNjMGIyYjhlYjEyYWM2M2ExNTg3NTRkY2UyMGQ5Nzg3YTQ3MGM3NzI1MmM2MGJkNGQ5ZTExZjViMmRiYzdhIn0seyJuYW1lIjoiUkVMQVRFRF9JTUFHRV9DT1VDSEJBU0VfQkFDS1VQIiwidmFsdWUiOiJyZWdpc3RyeS5jb25uZWN0LnJlZGhhdC5jb20vY291Y2hiYXNlL29wZXJhdG9yLWJhY2t1cEBzaGEyNTY6MzgyNTExZjUzMmIwMjA2ZDJiYjBjZWNjOGY5MWIwNTU4MDliNWNjZjg5MTM2YjZkMzdkNTVhNDBlMjY2ODEyZiJ9LHsibmFtZSI6IlJFTEFURURfSU1BR0VfQ09VQ0hCQVNFX01FVFJJQ1MiLCJ2YWx1ZSI6InJlZ2lzdHJ5LmNvbm5lY3QucmVkaGF0LmNvbS9jb3VjaGJhc2UvZXhwb3J0ZXJAc2hhMjU2OmRlM2JhY2Y4MjMzNTUzNDUyZGIxZDljZWM3Yzk4YjI4ZDEyYzQxYWEwMjVkODMwZDZiN2M1ZGUwZGE5NzIzYjEifSx7Im5hbWUiOiJSRUxBVEVEX0lNQUdFX0NPVUNIQkFTRV9DTE9VRF9OQVRJVkVfR0FURVdBWSIsInZhbHVlIjoicmVnaXN0cnkuY29ubmVjdC5yZWRoYXQuY29tL2NvdWNoYmFzZS9jbG91ZC1uYXRpdmUtZ2F0ZXdheUBzaGEyNTY6NTBiYmMwMGNjZTE0ZWM5NjhjOWI4ZTllZjA2YTZjNWJkMjg2MGQzOGQ5NzNjZjdhZjcyNzFkNGZmNjZmZTljYyJ9LHsibmFtZSI6IlJFTEFURURfSU1BR0VfQ09VQ0hCQVNFX1NFUlZFUl83XzJfNl8yIiwidmFsdWUiOiJyZWdpc3RyeS5jb25uZWN0LnJlZGhhdC5jb20vY291Y2hiYXNlL3NlcnZlckBzaGEyNTY6NGUwZDQxYjU1OWM1ZDUzNmFhMDY3MDk0NTdkNmM3ODhmZDAzOWIwYzkxNWMxNGYyZDQyOTIxM2JkZmVmZjgyNCJ9LHsibmFtZSI6IlJFTEFURURfSU1BR0VfQ09VQ0hCQVNFX1NFUlZFUl83XzZfMl8zIiwidmFsdWUiOiJyZWdpc3RyeS5jb25uZWN0LnJlZGhhdC5jb20vY291Y2hiYXNlL3NlcnZlckBzaGEyNTY6NjQzMjcyYmQ1OGIwYjU4NDg2MzQwMGQyODFmMWRjYjE0NzA5OWM3ZjIxMjBhOTQ3MzQ3YmU0YjFmOTczOTFhNyJ9LHsibmFtZSI6IlJFTEFURURfSU1BR0VfQ09VQ0hCQVNFX1NFUlZFUl83XzZfM180IiwidmFsdWUiOiJyZWdpc3RyeS5jb25uZWN0LnJlZGhhdC5jb20vY291Y2hiYXNlL3NlcnZlckBzaGEyNTY6NDM3Y2Q1YWEwNWZmMDU3YjE3ZjQ3ZDI1MDBkZWM3Y2VmY2EyMTY4MmViMGY0YmFkZmY0NTM4ZGMxNjRiYzFhNyJ9XSwiaW1hZ2UiOiJyZWdpc3RyeS5jb25uZWN0LnJlZGhhdC5jb20vY291Y2hiYXNlL29wZXJhdG9yQHNoYTI1Njo3MDc1NzFhNzg4MWJjMTJkNWYxYjBiMWE5NGViM2M2NzVkNWMwZWEwMTE0Yzk5NGE0N2NlYjVhYTc5ZGY0MDEzIiwibmFtZSI6ImNvdWNoYmFzZS1vcGVyYXRvciIsInBvcnRzIjpbeyJjb250YWluZXJQb3J0Ijo4MDgwLCJuYW1lIjoiaHR0cCJ9LHsiY29udGFpbmVyUG9ydCI6ODM4MywibmFtZSI6InByb21ldGhldXMifV0sInJlc291cmNlcyI6e319XSwic2VydmljZUFjY291bnROYW1lIjoiY291Y2hiYXNlLW9wZXJhdG9yIn19fX1dLCJwZXJtaXNzaW9ucyI6W3sicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJiYXRjaCJdLCJyZXNvdXJjZXMiOlsiam9icyIsImNyb25qb2JzIl0sInZlcmJzIjpbImxpc3QiLCJ3YXRjaCIsImNyZWF0ZSIsInVwZGF0ZSIsImRlbGV0ZSJdfSx7ImFwaUdyb3VwcyI6WyJjb3VjaGJhc2UuY29tIl0sInJlc291cmNlcyI6WyJjb3VjaGJhc2VjbHVzdGVycyIsImNvdWNoYmFzZWNsdXN0ZXJzL2ZpbmFsaXplcnMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbImNvdWNoYmFzZS5jb20iXSwicmVzb3VyY2VzIjpbImNvdWNoYmFzZXJlcGxpY2F0aW9ucyIsImNvdWNoYmFzZW1pZ3JhdGlvbnJlcGxpY2F0aW9ucyIsImNvdWNoYmFzZXVzZXJzIiwiY291Y2hiYXNlZ3JvdXBzIiwiY291Y2hiYXNlcm9sZWJpbmRpbmdzIiwiY291Y2hiYXNlYmFja3VwcyJdLCJ2ZXJicyI6WyJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiY291Y2hiYXNlLmNvbSJdLCJyZXNvdXJjZXMiOlsiY291Y2hiYXNlYnVja2V0cyIsImNvdWNoYmFzZWVwaGVtZXJhbGJ1Y2tldHMiLCJjb3VjaGJhc2VtZW1jYWNoZWRidWNrZXRzIiwiY291Y2hiYXNlc2NvcGVzIiwiY291Y2hiYXNlc2NvcGVncm91cHMiLCJjb3VjaGJhc2Vjb2xsZWN0aW9ucyIsImNvdWNoYmFzZWNvbGxlY3Rpb25ncm91cHMiXSwidmVyYnMiOlsibGlzdCIsIndhdGNoIiwiY3JlYXRlIl19LHsiYXBpR3JvdXBzIjpbImNvdWNoYmFzZS5jb20iXSwicmVzb3VyY2VzIjpbImNvdWNoYmFzZWJhY2t1cHJlc3RvcmVzIl0sInZlcmJzIjpbImxpc3QiLCJ3YXRjaCIsImRlbGV0ZSJdfSx7ImFwaUdyb3VwcyI6WyJjb3VjaGJhc2UuY29tIl0sInJlc291cmNlcyI6WyJjb3VjaGJhc2VhdXRvc2NhbGVycyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giLCJjcmVhdGUiLCJ1cGRhdGUiLCJkZWxldGUiXX0seyJhcGlHcm91cHMiOlsiY291Y2hiYXNlLmNvbSJdLCJyZXNvdXJjZXMiOlsiY291Y2hiYXNlYXV0b3NjYWxlcnMvc3RhdHVzIl0sInZlcmJzIjpbInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbImNvbmZpZ21hcHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIiwiY3JlYXRlIiwidXBkYXRlIiwiZGVsZXRlIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsicG9kcyIsInBvZHMvc3RhdHVzIiwic2VydmljZXMiLCJwZXJzaXN0ZW50dm9sdW1lY2xhaW1zIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCIsImNyZWF0ZSIsInVwZGF0ZSIsImRlbGV0ZSIsInBhdGNoIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsiZXZlbnRzIl0sInZlcmJzIjpbImxpc3QiLCJjcmVhdGUiLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJzZWNyZXRzIl0sInZlcmJzIjpbImdldCIsImNyZWF0ZSIsInVwZGF0ZSIsImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJwb2xpY3kiXSwicmVzb3VyY2VzIjpbInBvZGRpc3J1cHRpb25idWRnZXRzIl0sInZlcmJzIjpbImdldCIsImNyZWF0ZSIsImRlbGV0ZSIsImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJjb29yZGluYXRpb24uazhzLmlvIl0sInJlc291cmNlcyI6WyJsZWFzZXMiXSwidmVyYnMiOlsiZ2V0IiwiY3JlYXRlIiwidXBkYXRlIl19XSwic2VydmljZUFjY291bnROYW1lIjoiY291Y2hiYXNlLW9wZXJhdG9yIn1dfSwic3RyYXRlZ3kiOiJkZXBsb3ltZW50In0sImluc3RhbGxNb2RlcyI6W3sic3VwcG9ydGVkIjp0cnVlLCJ0eXBlIjoiT3duTmFtZXNwYWNlIn0seyJzdXBwb3J0ZWQiOnRydWUsInR5cGUiOiJTaW5nbGVOYW1lc3BhY2UifSx7InN1cHBvcnRlZCI6ZmFsc2UsInR5cGUiOiJNdWx0aU5hbWVzcGFjZSJ9LHsic3VwcG9ydGVkIjp0cnVlLCJ0eXBlIjoiQWxsTmFtZXNwYWNlcyJ9XSwia2V5d29yZHMiOlsiY291Y2hiYXNlIiwiZGF0YWJhc2UiLCJrZXkgdmFsdWUiLCJub3NxbCIsIm9wZW4gc291cmNlIl0sImxhYmVscyI6eyJhbG0tb3duZXItY291Y2hiYXNlIjoiY291Y2hiYXNlb3BlcmF0b3IiLCJvcGVyYXRlZC1ieSI6ImNvdWNoYmFzZW9wZXJhdG9yIn0sImxpbmtzIjpbeyJuYW1lIjoiQ291Y2hiYXNlIiwidXJsIjoiaHR0cHM6Ly93d3cuY291Y2hiYXNlLmNvbSJ9LHsibmFtZSI6IkRvY3VtZW50YXRpb24iLCJ1cmwiOiJodHRwczovL2RvY3MuY291Y2hiYXNlLmNvbS9vcGVyYXRvci9jdXJyZW50L292ZXJ2aWV3Lmh0bWwifSx7Im5hbWUiOiJEb3dubG9hZHMiLCJ1cmwiOiJodHRwczovL3d3dy5jb3VjaGJhc2UuY29tL2Rvd25sb2FkcyJ9XSwibWFpbnRhaW5lcnMiOlt7ImVtYWlsIjoic3VwcG9ydEBjb3VjaGJhc2UuY29tIiwibmFtZSI6IkNvdWNoYmFzZSJ9XSwibWF0dXJpdHkiOiJzdGFibGUiLCJtaW5LdWJlVmVyc2lvbiI6IjEuMjMuMCIsInByb3ZpZGVyIjp7Im5hbWUiOiJDb3VjaGJhc2UifSwicmVsYXRlZEltYWdlcyI6W3siaW1hZ2UiOiJyZWdpc3RyeS5jb25uZWN0LnJlZGhhdC5jb20vY291Y2hiYXNlL29wZXJhdG9yQHNoYTI1Njo3MDc1NzFhNzg4MWJjMTJkNWYxYjBiMWE5NGViM2M2NzVkNWMwZWEwMTE0Yzk5NGE0N2NlYjVhYTc5ZGY0MDEzIiwibmFtZSI6ImNvdWNoYmFzZS1vcGVyYXRvciJ9LHsiaW1hZ2UiOiJyZWdpc3RyeS5jb25uZWN0LnJlZGhhdC5jb20vY291Y2hiYXNlL3NlcnZlckBzaGEyNTY6MDMzYzBiMmI4ZWIxMmFjNjNhMTU4NzU0ZGNlMjBkOTc4N2E0NzBjNzcyNTJjNjBiZDRkOWUxMWY1YjJkYmM3YSIsIm5hbWUiOiJjb3VjaGJhc2Utc2VydmVyIn0seyJpbWFnZSI6InJlZ2lzdHJ5LmNvbm5lY3QucmVkaGF0LmNvbS9jb3VjaGJhc2Uvb3BlcmF0b3ItYmFja3VwQHNoYTI1NjozODI1MTFmNTMyYjAyMDZkMmJiMGNlY2M4ZjkxYjA1NTgwOWI1Y2NmODkxMzZiNmQzN2Q1NWE0MGUyNjY4MTJmIiwibmFtZSI6ImNvdWNoYmFzZS1iYWNrdXAifSx7ImltYWdlIjoicmVnaXN0cnkuY29ubmVjdC5yZWRoYXQuY29tL2NvdWNoYmFzZS9leHBvcnRlckBzaGEyNTY6ZGUzYmFjZjgyMzM1NTM0NTJkYjFkOWNlYzdjOThiMjhkMTJjNDFhYTAyNWQ4MzBkNmI3YzVkZTBkYTk3MjNiMSIsIm5hbWUiOiJjb3VjaGJhc2UtbWV0cmljcyJ9LHsiaW1hZ2UiOiJyZWdpc3RyeS5jb25uZWN0LnJlZGhhdC5jb20vY291Y2hiYXNlL2Nsb3VkLW5hdGl2ZS1nYXRld2F5QHNoYTI1Njo1MGJiYzAwY2NlMTRlYzk2OGM5YjhlOWVmMDZhNmM1YmQyODYwZDM4ZDk3M2NmN2FmNzI3MWQ0ZmY2NmZlOWNjIiwibmFtZSI6ImNvdWNoYmFzZS1jbG91ZC1uYXRpdmUtZ2F0ZXdheSJ9LHsiaW1hZ2UiOiJyZWdpc3RyeS5jb25uZWN0LnJlZGhhdC5jb20vY291Y2hiYXNlL3NlcnZlckBzaGEyNTY6NGUwZDQxYjU1OWM1ZDUzNmFhMDY3MDk0NTdkNmM3ODhmZDAzOWIwYzkxNWMxNGYyZDQyOTIxM2JkZmVmZjgyNCIsIm5hbWUiOiJjb3VjaGJhc2Utc2VydmVyLTdfMl82XzIifSx7ImltYWdlIjoicmVnaXN0cnkuY29ubmVjdC5yZWRoYXQuY29tL2NvdWNoYmFzZS9zZXJ2ZXJAc2hhMjU2OjY0MzI3MmJkNThiMGI1ODQ4NjM0MDBkMjgxZjFkY2IxNDcwOTljN2YyMTIwYTk0NzM0N2JlNGIxZjk3MzkxYTciLCJuYW1lIjoiY291Y2hiYXNlLXNlcnZlci03XzZfMl8zIn0seyJpbWFnZSI6InJlZ2lzdHJ5LmNvbm5lY3QucmVkaGF0LmNvbS9jb3VjaGJhc2Uvc2VydmVyQHNoYTI1Njo0MzdjZDVhYTA1ZmYwNTdiMTdmNDdkMjUwMGRlYzdjZWZjYTIxNjgyZWIwZjRiYWRmZjQ1MzhkYzE2NGJjMWE3IiwibmFtZSI6ImNvdWNoYmFzZS1zZXJ2ZXItN182XzNfNCJ9XSwic2VsZWN0b3IiOnsibWF0Y2hMYWJlbHMiOnsiYWxtLW93bmVyLWNvdWNoYmFzZSI6ImNvdWNoYmFzZW9wZXJhdG9yIiwib3BlcmF0ZWQtYnkiOiJjb3VjaGJhc2VvcGVyYXRvciJ9fSwic2tpcHMiOlsiY291Y2hiYXNlLW9wZXJhdG9yLnYyLjcuMC00Il0sInZlcnNpb24iOiIyLjcuMC01In19
relatedImages:
- image: registry.connect.redhat.com/couchbase/cloud-native-gateway@sha256:50bbc00cce14ec968c9b8e9ef06a6c5bd2860d38d973cf7af7271d4ff66fe9cc
  name: couchbase-cloud-native-gateway
- image: registry.connect.redhat.com/couchbase/exporter@sha256:de3bacf8233553452db1d9cec7c98b28d12c41aa025d830d6b7c5de0da9723b1
  name: couchbase-metrics
- image: registry.connect.redhat.com/couchbase/operator-backup@sha256:382511f532b0206d2bb0cecc8f91b055809b5ccf89136b6d37d55a40e266812f
  name: couchbase-backup
- image: registry.connect.redhat.com/couchbase/operator-bundle@sha256:d1a9246def81537e3417a6d48d1e818459583db658b54a87ca5af6911c8a3f53
  name: ""
- image: registry.connect.redhat.com/couchbase/operator@sha256:707571a7881bc12d5f1b0b1a94eb3c675d5c0ea0114c994a47ceb5aa79df4013
  name: couchbase-operator
- image: registry.connect.redhat.com/couchbase/server@sha256:033c0b2b8eb12ac63a158754dce20d9787a470c77252c60bd4d9e11f5b2dbc7a
  name: couchbase-server
- image: registry.connect.redhat.com/couchbase/server@sha256:437cd5aa05ff057b17f47d2500dec7cefca21682eb0f4badff4538dc164bc1a7
  name: couchbase-server-7_6_3_4
- image: registry.connect.redhat.com/couchbase/server@sha256:4e0d41b559c5d536aa06709457d6c788fd039b0c915c14f2d429213bdfeff824
  name: couchbase-server-7_2_6_2
- image: registry.connect.redhat.com/couchbase/server@sha256:643272bd58b0b584863400d281f1dcb147099c7f2120a947347be4b1f97391a7
  name: couchbase-server-7_6_2_3
schema: olm.bundle
---
image: registry.connect.redhat.com/couchbase/operator-bundle@sha256:f1484bba6741d972b707155068fe43a23038b68a8e184e345e3666e7ccfdfdc6
name: couchbase-operator.v2.8.0-1
package: couchbase-enterprise-certified
properties:
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseAutoscaler
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseBackup
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseBackupRestore
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseBucket
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseCluster
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseCollection
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseCollectionGroup
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseEphemeralBucket
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseGroup
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseMemcachedBucket
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseMigrationReplication
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseReplication
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseRoleBinding
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseScope
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseScopeGroup
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseUser
    version: v2
- type: olm.package
  value:
    packageName: couchbase-enterprise-certified
    version: 2.8.0-1
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuOC4wIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZW1lbWNhY2hlZGJ1Y2tldHMuY291Y2hiYXNlLmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiY291Y2hiYXNlLmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJDb3VjaGJhc2VNZW1jYWNoZWRCdWNrZXQiLCJsaXN0S2luZCI6IkNvdWNoYmFzZU1lbWNhY2hlZEJ1Y2tldExpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2VtZW1jYWNoZWRidWNrZXRzIiwic2luZ3VsYXIiOiJjb3VjaGJhc2VtZW1jYWNoZWRidWNrZXQifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3BlYy5tZW1vcnlRdW90YSIsIm5hbWUiOiJtZW1vcnkgcXVvdGEiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5tZXRhZGF0YS5jcmVhdGlvblRpbWVzdGFtcCIsIm5hbWUiOiJhZ2UiLCJ0eXBlIjoiZGF0ZSJ9XSwibmFtZSI6InYyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkRFUFJFQ0FURUQgLSBNZW1jYWNoZWQgYnVja2V0cyBhcmUgbm93IGRlcHJlY2F0ZWQgaW4gQ291Y2hiYXNlIFNlcnZlciBhbmQgc2hvdWxkIG5vdCBiZSB1c2VkLCB0aGV5IHdpbGwgYmUgcmVtb3ZlZCBpbiBhIGZ1dHVyZSByZWxlYXNlLlxuVGhlIENvdWNoYmFzZU1lbWNhY2hlZEJ1Y2tldCByZXNvdXJjZSBkZWZpbmVzIGEgc2V0IG9mIGRvY3VtZW50cyBpbiBDb3VjaGJhc2Ugc2VydmVyLlxuQSBDb3VjaGJhc2UgY2xpZW50IGNvbm5lY3RzIHRvIGFuZCBvcGVyYXRlcyBvbiBhIGJ1Y2tldCwgd2hpY2ggcHJvdmlkZXMgaW5kZXBlbmRlbnRcbm1hbmFnZW1lbnQgb2YgYSBzZXQgZG9jdW1lbnRzIGFuZCBhIHNlY3VyaXR5IGJvdW5kYXJ5IGZvciByb2xlIGJhc2VkIGFjY2VzcyBjb250cm9sLlxuQSBDb3VjaGJhc2VFcGhlbWVyYWxCdWNrZXQgcHJvdmlkZXMgaW4tbWVtb3J5IG9ubHkgc3RvcmFnZSBmb3IgZG9jdW1lbnRzIGNvbnRhaW5lZCBieSBpdC4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVmYXVsdCI6e30sImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlTWVtY2FjaGVkQnVja2V0U3BlYyBpcyB0aGUgc3BlY2lmaWNhdGlvbiBmb3IgYSBNZW1jYWNoZWQgYnVja2V0XG5yZXNvdXJjZSwgYW5kIGFsbG93cyB0aGUgYnVja2V0IHRvIGJlIGN1c3RvbWl6ZWQuIiwicHJvcGVydGllcyI6eyJlbmFibGVGbHVzaCI6eyJkZXNjcmlwdGlvbiI6IkVuYWJsZUZsdXNoIGRlZmluZXMgd2hldGhlciBhIGNsaWVudCBjYW4gZGVsZXRlIGFsbCBkb2N1bWVudHMgaW4gYSBidWNrZXQuXG5UaGlzIGZpZWxkIGRlZmF1bHRzIHRvIGZhbHNlLiIsInR5cGUiOiJib29sZWFuIn0sIm1lbW9yeVF1b3RhIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwiZGVmYXVsdCI6IjEwME1pIiwiZGVzY3JpcHRpb24iOiJNZW1vcnlRdW90YSBpcyBhIG1lbW9yeSBsaW1pdCB0byB0aGUgc2l6ZSBvZiBhIGJ1Y2tldC4gVGhlIG1lbW9yeSBxdW90YVxuaXMgZGVmaW5lZCBwZXIgQ291Y2hiYXNlIHBvZCBydW5uaW5nIHRoZSBkYXRhIHNlcnZpY2UuICBUaGlzIGZpZWxkIGRlZmF1bHRzIHRvLCBhbmQgbXVzdFxuYmUgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRvIDEwME1pLiAgTW9yZSBpbmZvOlxuaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtcmVzb3VyY2VzLWNvbnRhaW5lcnMvI3Jlc291cmNlLXVuaXRzLWluLWt1YmVybmV0ZXMiLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ0eXBlIjoic3RyaW5nIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBpcyB0aGUgbmFtZSBvZiB0aGUgYnVja2V0IHdpdGhpbiBDb3VjaGJhc2Ugc2VydmVyLiAgQnkgZGVmYXVsdCB0aGUgT3BlcmF0b3JcbndpbGwgdXNlIHRoZSBgbWV0YWRhdGEubmFtZWAgZmllbGQgdG8gZGVmaW5lIHRoZSBidWNrZXQgbmFtZS4gIFRoZSBgbWV0YWRhdGEubmFtZWBcbmZpZWxkIG9ubHkgc3VwcG9ydHMgYSBzdWJzZXQgb2YgdGhlIHN1cHBvcnRlZCBjaGFyYWN0ZXIgc2V0LiAgV2hlbiBzcGVjaWZpZWQsIHRoaXNcbmZpZWxkIG92ZXJyaWRlcyBgbWV0YWRhdGEubmFtZWAuICBMZWdhbCBidWNrZXQgbmFtZXMgaGF2ZSBhIG1heGltdW0gbGVuZ3RoIG9mIDEwMFxuY2hhcmFjdGVycyBhbmQgbWF5IGJlIGNvbXBvc2VkIG9mIGFueSBjaGFyYWN0ZXIgZnJvbSBcImEtelwiLCBcIkEtWlwiLCBcIjAtOVwiIGFuZCBcIi1fJVxcLlwiLiIsIm1heExlbmd0aCI6MTAwLCJwYXR0ZXJuIjoiXlthLXpBLVowLTktXyVcXC5dezEsMTAwfSQiLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWV9XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuOC4wIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZW1pZ3JhdGlvbnJlcGxpY2F0aW9ucy5jb3VjaGJhc2UuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJjb3VjaGJhc2UuY29tIiwibmFtZXMiOnsia2luZCI6IkNvdWNoYmFzZU1pZ3JhdGlvblJlcGxpY2F0aW9uIiwibGlzdEtpbmQiOiJDb3VjaGJhc2VNaWdyYXRpb25SZXBsaWNhdGlvbkxpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2VtaWdyYXRpb25yZXBsaWNhdGlvbnMiLCJzaW5ndWxhciI6ImNvdWNoYmFzZW1pZ3JhdGlvbnJlcGxpY2F0aW9uIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7Impzb25QYXRoIjoiLnNwZWMuYnVja2V0IiwibmFtZSI6ImJ1Y2tldCIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLnNwZWMucmVtb3RlQnVja2V0IiwibmFtZSI6InJlbW90ZSBidWNrZXQiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zcGVjLnBhdXNlZCIsIm5hbWUiOiJwYXVzZWQiLCJ0eXBlIjoiYm9vbGVhbiJ9LHsianNvblBhdGgiOiIubWV0YWRhdGEuY3JlYXRpb25UaW1lc3RhbXAiLCJuYW1lIjoiYWdlIiwidHlwZSI6ImRhdGUifV0sIm5hbWUiOiJ2MiIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJUaGUgQ291Y2hiYXNlU2NvcGVNaWdyYXRpb24gcmVzb3VyY2UgcmVwcmVzZW50cyB0aGUgdXNlIG9mIHRoZSBzcGVjaWFsIG1pZ3JhdGlvbiBtYXBwaW5nXG53aXRoaW4gWERDUiB0byB0YWtlIGEgZmlsdGVyZWQgbGlzdCBmcm9tIHRoZSBkZWZhdWx0IHNjb3BlIGFuZCBjb2xsZWN0aW9uIG9mIHRoZSBzb3VyY2UgYnVja2V0LFxucmVwbGljYXRlIGl0IHRvIG5hbWVkIHNjb3BlcyBhbmQgY29sbGVjdGlvbnMgd2l0aGluIHRoZSB0YXJnZXQgYnVja2V0LlxuVGhlIGJ1Y2tldC10by1idWNrZXQgcmVwbGljYXRpb24gY2Fubm90IGR1cGxpY2F0ZSBhbnkgdXNlZCBieSB0aGUgQ291Y2hiYXNlUmVwbGljYXRpb24gcmVzb3VyY2UsXG5hcyB0aGVzZSB0d28gdHlwZXMgb2YgcmVwbGljYXRpb24gYXJlIG11dHVhbGx5IGV4Y2x1c2l2ZSBiZXR3ZWVuIGJ1Y2tldHMuXG5odHRwczovL2RvY3MuY291Y2hiYXNlLmNvbS9zZXJ2ZXIvY3VycmVudC9sZWFybi9jbHVzdGVycy1hbmQtYXZhaWxhYmlsaXR5L3hkY3Itd2l0aC1zY29wZXMtYW5kLWNvbGxlY3Rpb25zLmh0bWwjbWlncmF0aW9uIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LlxuU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kXG5tYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuXG5TZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by5cbkNhbm5vdCBiZSB1cGRhdGVkLlxuSW4gQ2FtZWxDYXNlLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJtaWdyYXRpb25NYXBwaW5nIjp7ImRlc2NyaXB0aW9uIjoiVGhlIG1pZ3JhdGlvbiBtYXBwaW5ncyB0byB1c2UsIHNob3VsZCBuZXZlciBiZSBlbXB0eSBhcyB0aGF0IGlzIGp1c3QgYW4gaW1wbGljaXQgYnVja2V0LXRvLWJ1Y2tldCByZXBsaWNhdGlvbiB0aGVuLiIsInByb3BlcnRpZXMiOnsibWFwcGluZ3MiOnsiZGVzY3JpcHRpb24iOiJUaGUgbWlncmF0aW9uIG1hcHBpbmdzIHRvIHVzZSwgc2hvdWxkIG5ldmVyIGJlIGVtcHR5IGFzIHRoYXQgaXMganVzdCBhbiBpbXBsaWNpdCBidWNrZXQtdG8tYnVja2V0IHJlcGxpY2F0aW9uIHRoZW4uIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJJbmRpY2F0ZXMgd2hldGhlciB0aGlzIGlzIHVzaW5nIG1pZ3JhdGlvbiBtYXBwaW5nIG9yIG5vdC5cblRoaXMgaXMgb25seSB2YWxpZCB3aGVuIHVzaW5nIHRoZSBkZWZhdWx0IHNjb3BlL2NvbGxlY3Rpb24uIiwicHJvcGVydGllcyI6eyJmaWx0ZXIiOnsiZGVmYXVsdCI6Il9kZWZhdWx0Ll9kZWZhdWx0IiwiZGVzY3JpcHRpb24iOiJBIGZpbHRlciB0byBzZWxlY3QgZnJvbSB0aGUgc291cmNlIGRlZmF1bHQgc2NvcGUgYW5kIGNvbGxlY3Rpb24uXG5EZWZhdWx0cyB0byBzZWxlY3QgZXZlcnl0aGluZyBpbiB0aGUgZGVmYXVsdCBzY29wZSBhbmQgY29sbGVjdGlvbi4iLCJ0eXBlIjoic3RyaW5nIn0sInRhcmdldEtleXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoiVGhlIGRlc3RpbmF0aW9uIG9mIG91ciBtaWdyYXRpb24sIG11c3QgYmUgYSBzY29wZSBhbmQgY29sbGVjdGlvbi4iLCJwcm9wZXJ0aWVzIjp7ImNvbGxlY3Rpb24iOnsiZGVzY3JpcHRpb24iOiJUaGUgb3B0aW9uYWwgY29sbGVjdGlvbiB3aXRoaW4gdGhlIHNjb3BlLiBNYXkgYmUgZW1wdHkgdG8ganVzdCB3b3JrIGF0IHNjb3BlIGxldmVsLiIsIm1heExlbmd0aCI6MjUxLCJtaW5MZW5ndGgiOjEsInBhdHRlcm4iOiJeKF9kZWZhdWx0fFthLXpBLVowLTlcXC1dW2EtekEtWjAtOVxcLSVfXXswLDI1MH0pJCIsInR5cGUiOiJzdHJpbmcifSwic2NvcGUiOnsiZGVzY3JpcHRpb24iOiJUaGUgc2NvcGUgdG8gdXNlLiIsIm1heExlbmd0aCI6MjUxLCJtaW5MZW5ndGgiOjEsInBhdHRlcm4iOiJeKF9kZWZhdWx0fFthLXpBLVowLTlcXC1dW2EtekEtWjAtOVxcLSVfXXswLDI1MH0pJCIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInNjb3BlIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInRhcmdldEtleXNwYWNlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJtYXBwaW5ncyJdLCJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJDb3VjaGJhc2VSZXBsaWNhdGlvblNwZWMgYWxsb3dzIGNvbmZpZ3VyYXRpb24gb2YgYW4gWERDUiByZXBsaWNhdGlvbi4iLCJwcm9wZXJ0aWVzIjp7ImJ1Y2tldCI6eyJkZXNjcmlwdGlvbiI6IkJ1Y2tldCBpcyB0aGUgc291cmNlIGJ1Y2tldCB0byByZXBsaWNhdGUgZnJvbS4gIFRoaXMgcmVmZXJzIHRvIHRoZSBDb3VjaGJhc2VcbmJ1Y2tldCBuYW1lLCBub3QgdGhlIHJlc291cmNlIG5hbWUgb2YgdGhlIGJ1Y2tldC4gIEEgYnVja2V0IHdpdGggdGhpcyBuYW1lIG11c3RcbmJlIGRlZmluZWQgb24gdGhpcyBjbHVzdGVyLiAgTGVnYWwgYnVja2V0IG5hbWVzIGhhdmUgYSBtYXhpbXVtIGxlbmd0aCBvZiAxMDBcbmNoYXJhY3RlcnMgYW5kIG1heSBiZSBjb21wb3NlZCBvZiBhbnkgY2hhcmFjdGVyIGZyb20gXCJhLXpcIiwgXCJBLVpcIiwgXCIwLTlcIiBhbmQgXCItXyVcXC5cIi4iLCJtYXhMZW5ndGgiOjEwMCwicGF0dGVybiI6Il5bYS16QS1aMC05LV8lXFwuXXsxLDEwMH0kIiwidHlwZSI6InN0cmluZyJ9LCJjb21wcmVzc2lvblR5cGUiOnsiZGVmYXVsdCI6IkF1dG8iLCJkZXNjcmlwdGlvbiI6IkNvbXByZXNzaW9uVHlwZSBpcyB0aGUgdHlwZSBvZiBjb21wcmVzc2lvbiB0byBhcHBseSB0byB0aGUgcmVwbGljYXRpb24uXG5XaGVuIE5vbmUsIG5vIGNvbXByZXNzaW9uIHdpbGwgYmUgYXBwbGllZCB0byBkb2N1bWVudHMgYXMgdGhleSBhcmVcbnRyYW5zZmVycmVkIGJldHdlZW4gY2x1c3RlcnMuICBXaGVuIEF1dG8sIENvdWNoYmFzZSBzZXJ2ZXIgd2lsbCBhdXRvbWF0aWNhbGx5XG5jb21wcmVzcyBkb2N1bWVudHMgYXMgdGhleSBhcmUgdHJhbnNmZXJyZWQgdG8gcmVkdWNlIGJhbmR3aWR0aCByZXF1aXJlbWVudHMuXG5UaGlzIGZpZWxkIG11c3QgYmUgb25lIG9mIFwiTm9uZVwiIG9yIFwiQXV0b1wiLCBkZWZhdWx0aW5nIHRvIFwiQXV0b1wiLiIsImVudW0iOlsiTm9uZSIsIkF1dG8iXSwidHlwZSI6InN0cmluZyJ9LCJmaWx0ZXJFeHByZXNzaW9uIjp7ImRlc2NyaXB0aW9uIjoiRmlsdGVyRXhwcmVzc2lvbiBhbGxvd3MgY2VydGFpbiBkb2N1bWVudHMgdG8gYmUgZmlsdGVyZWQgb3V0IG9mIHRoZSByZXBsaWNhdGlvbi4iLCJ0eXBlIjoic3RyaW5nIn0sInBhdXNlZCI6eyJkZXNjcmlwdGlvbiI6IlBhdXNlZCBhbGxvd3MgYSByZXBsaWNhdGlvbiB0byBiZSBzdG9wcGVkIGFuZCByZXN0YXJ0ZWQgd2l0aG91dCBoYXZpbmcgdG9cbnJlc3RhcnQgdGhlIHJlcGxpY2F0aW9uIGZyb20gdGhlIGJlZ2lubmluZy4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJyZW1vdGVCdWNrZXQiOnsiZGVzY3JpcHRpb24iOiJSZW1vdGVCdWNrZXQgaXMgdGhlIHJlbW90ZSBidWNrZXQgbmFtZSB0byBzeW5jaHJvbml6ZSB0by4gIFRoaXMgcmVmZXJzIHRvIHRoZVxuQ291Y2hiYXNlIGJ1Y2tldCBuYW1lLCBub3QgdGhlIHJlc291cmNlIG5hbWUgb2YgdGhlIGJ1Y2tldC4gIExlZ2FsIGJ1Y2tldCBuYW1lc1xuaGF2ZSBhIG1heGltdW0gbGVuZ3RoIG9mIDEwMCBjaGFyYWN0ZXJzIGFuZCBtYXkgYmUgY29tcG9zZWQgb2YgYW55IGNoYXJhY3RlciBmcm9tXG5cImEtelwiLCBcIkEtWlwiLCBcIjAtOVwiIGFuZCBcIi1fJVxcLlwiLiIsIm1heExlbmd0aCI6MTAwLCJwYXR0ZXJuIjoiXlthLXpBLVowLTktXyVcXC5dezEsMTAwfSQiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJidWNrZXQiLCJyZW1vdGVCdWNrZXQiXSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsibWlncmF0aW9uTWFwcGluZyIsInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlfV19fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuOC4wIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZWF1dG9zY2FsZXJzLmNvdWNoYmFzZS5jb20ifSwic3BlYyI6eyJncm91cCI6ImNvdWNoYmFzZS5jb20iLCJuYW1lcyI6eyJraW5kIjoiQ291Y2hiYXNlQXV0b3NjYWxlciIsImxpc3RLaW5kIjoiQ291Y2hiYXNlQXV0b3NjYWxlckxpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2VhdXRvc2NhbGVycyIsInNob3J0TmFtZXMiOlsiY2JhIl0sInNpbmd1bGFyIjoiY291Y2hiYXNlYXV0b3NjYWxlciJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zcGVjLnNpemUiLCJuYW1lIjoic2l6ZSIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLnNwZWMuc2VydmVycyIsIm5hbWUiOiJzZXJ2ZXJzIiwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUF1dG9zY2FsZXIgcHJvdmlkZXMgYW4gaW50ZXJmYWNlIGZvciB0aGUgS3ViZXJuZXRlcyBIb3Jpem9udGFsIFBvZCBBdXRvc2NhbGVyXG50byBpbnRlcmFjdCB3aXRoIHRoZSBDb3VjaGJhc2UgY2x1c3RlciBhbmQgcHJvdmlkZSBhdXRvc2NhbGluZy4gIFRoaXMgcmVzb3VyY2UgaXNcbm5vdCBkZWZpbmVkIGJ5IHRoZSBlbmQgdXNlciwgYW5kIGlzIG1hbmFnZWQgYnkgdGhlIE9wZXJhdG9yLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUF1dG9zY2FsZXJTcGVjIGFsbG93cyBjb250cm9sIG92ZXIgYW4gYXV0b3NjYWxpbmcgZ3JvdXAuIiwicHJvcGVydGllcyI6eyJzZXJ2ZXJzIjp7ImRlc2NyaXB0aW9uIjoiU2VydmVycyBzcGVjaWZpZXMgdGhlIHNlcnZlciBncm91cCB0aGF0IHRoaXMgYXV0b3NjYWxlciBiZWxvbmdzIHRvLiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJzaXplIjp7ImRlc2NyaXB0aW9uIjoiU2l6ZSBhbGxvd3MgdGhlIHNlcnZlciBncm91cCB0byBiZSBkeW5hbWljYWxseSBzY2FsZWQuIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifX0sInJlcXVpcmVkIjpbInNlcnZlcnMiLCJzaXplIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlQXV0b3NjYWxlclN0YXR1cyBwcm92aWRlcyBpbmZvcm1hdGlvbiB0byB0aGUgSFBBIHRvIGFzc2lzdCB3aXRoIHNjYWxpbmdcbnNlcnZlciBncm91cHMuIiwicHJvcGVydGllcyI6eyJsYWJlbFNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiTGFiZWxTZWxlY3RvciBhbGxvd3MgdGhlIEhQQSB0byBzZWxlY3QgcmVzb3VyY2VzIHRvIG1vbml0b3IgZm9yIHJlc291cmNlXG51dGlsaXphdGlvbiBpbiBvcmRlciB0byB0cmlnZ2VyIHNjYWxpbmcuIiwidHlwZSI6InN0cmluZyJ9LCJzaXplIjp7ImRlc2NyaXB0aW9uIjoiU2l6ZSBpcyB0aGUgY3VycmVudCBzaXplIG9mIHRoZSBzZXJ2ZXIgZ3JvdXAuIiwibWluaW11bSI6MSwidHlwZSI6ImludGVnZXIifX0sInJlcXVpcmVkIjpbImxhYmVsU2VsZWN0b3IiLCJzaXplIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic2NhbGUiOnsibGFiZWxTZWxlY3RvclBhdGgiOiIuc3RhdHVzLmxhYmVsU2VsZWN0b3IiLCJzcGVjUmVwbGljYXNQYXRoIjoiLnNwZWMuc2l6ZSIsInN0YXR1c1JlcGxpY2FzUGF0aCI6Ii5zdGF0dXMuc2l6ZSJ9LCJzdGF0dXMiOnt9fX1dfX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuOC4wIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZWNvbGxlY3Rpb25ncm91cHMuY291Y2hiYXNlLmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiY291Y2hiYXNlLmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJDb3VjaGJhc2VDb2xsZWN0aW9uR3JvdXAiLCJsaXN0S2luZCI6IkNvdWNoYmFzZUNvbGxlY3Rpb25Hcm91cExpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2Vjb2xsZWN0aW9uZ3JvdXBzIiwic2luZ3VsYXIiOiJjb3VjaGJhc2Vjb2xsZWN0aW9uZ3JvdXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7Im5hbWUiOiJ2MiIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJDb3VjaGJhc2VDb2xsZWN0aW9uR3JvdXAgcmVwcmVzZW50IHRoZSBmaW5lc3QgZ3JhaW5lZCBzaXplIG9mIGRhdGEgc3RvcmFnZSBpbiBDb3VjaGJhc2UuXG5Db2xsZWN0aW9ucyBjb250YWluIGFsbCBkb2N1bWVudHMgYW5kIGluZGV4ZXMgaW4gdGhlIHN5c3RlbS4gIENvbGxlY3Rpb25zIGFsc28gZm9ybVxudGhlIGZpbmVzdCBncmFpbiBiYXNpcyBmb3Igcm9sZS1iYXNlZCBhY2Nlc3MgY29udHJvbCAoUkJBQykgYW5kIGNyb3NzLWRhdGFjZW50ZXJcbnJlcGxpY2F0aW9uIChYRENSKS4gIEluIG9yZGVyIHRvIGJlIGNvbnNpZGVyZWQgYnkgdGhlIE9wZXJhdG9yLCBldmVyeSBjb2xsZWN0aW9uIGdyb3VwXG5tdXN0IGJlIHJlZmVyZW5jZWQgYnkgYSBgQ291Y2hiYXNlU2NvcGVgIG9yIGBDb3VjaGJhc2VTY29wZUdyb3VwYCByZXNvdXJjZS4gIFVubGlrZSB0aGVcbkNvdWNoYmFzZUNvbGxlY3Rpb24gcmVzb3VyY2UsIGEgY29sbGVjdGlvbiBncm91cCByZXByZXNlbnRzIG11bHRpcGxlIGNvbGxlY3Rpb25zLCB3aXRoXG5jb21tb24gY29uZmlndXJhdGlvbiBwYXJhbWV0ZXJzLCB0byBiZSBleHByZXNzZWQgYXMgYSBzaW5nbGUgcmVzb3VyY2UsIG1pbmltaXppbmcgcmVxdWlyZWRcbmNvbmZpZ3VyYXRpb24gYW5kIEt1YmVybmV0ZXMgQVBJIHRyYWZmaWMuICBJdCBhbHNvIGZvcm1zIHRoZSBiYXNpcyBvZiBDb3VjaGJhc2UgUkJBQ1xuc2VjdXJpdHkgYm91bmRhcmllcy4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgdGhlIHJlc291cmNlLiIsInByb3BlcnRpZXMiOnsiaGlzdG9yeSI6eyJkZXNjcmlwdGlvbiI6Ikhpc3RvcnkgZGVmaW5lcyB3aGV0aGVyIGNoYW5nZSBoaXN0b3J5IGlzIHJldGFpbmVkIGZvciB0aGUgY29sbGVjdGlvbi5cbklmIHRoaXMgZmllbGQgaXMgc2V0LCBpdCB3aWxsIG92ZXJyaWRlIHRoZSBoaXN0b3J5UmV0ZW50aW9uLmNvbGxlY3Rpb25EZWZhdWx0IGJ1Y2tldCBsZXZlbCB2YWx1ZS5cblRoaXMgaXMgb25seSBzdXBwb3J0ZWQgd2l0aCBzdG9yYWdlQmFja2VuZD1tYWdtYSBhdCB0aGUgYnVja2V0IGxldmVsLiIsInR5cGUiOiJib29sZWFuIn0sIm1heFRUTCI6eyJkZXNjcmlwdGlvbiI6Ik1heFRUTCBkZWZpbmVzIGhvdyBsb25nIGEgZG9jdW1lbnQgaXMgcGVybWl0dGVkIHRvIGV4aXN0IGZvciwgd2l0aG91dFxubW9kaWZpY2F0aW9uLCB1bnRpbCBpdCBpcyBhdXRvbWF0aWNhbGx5IGRlbGV0ZWQuICBUaGlzIGZpZWxkIHRha2VzIHByZWNlZGVuY2Ugb3ZlclxuYW55IFRUTCBkZWZpbmVkIGF0IHRoZSBidWNrZXQgbGV2ZWwuICBUaGlzIGlzIGEgZGVmYXVsdCwgYW5kIG1heGltdW1cbnRpbWUtdG8tbGl2ZSBhbmQgbWF5IGJlIHNldCB0byBhIGxvd2VyIHZhbHVlIGJ5IHRoZSBjbGllbnQuICBJZiB0aGUgY2xpZW50IHNwZWNpZmllc1xuYSBoaWdoZXIgdmFsdWUsIHRoZW4gaXQgaXMgdHJ1bmNhdGVkIHRvIHRoZSBtYXhpbXVtIGR1cmFiaWxpdHkuICBEb2N1bWVudHMgYXJlXG5yZW1vdmVkIGJ5IENvdWNoYmFzZSwgYWZ0ZXIgdGhleSBoYXZlIGV4cGlyZWQsIHdoZW4gZWl0aGVyIGFjY2Vzc2VkLCB0aGUgZXhwaXJ5XG5wYWdlciBpcyBydW4sIG9yIHRoZSBidWNrZXQgaXMgY29tcGFjdGVkLiAgV2hlbiBzZXQgdG8gMCwgdGhlbiBkb2N1bWVudHMgYXJlIG5vdFxuZXhwaXJlZCBieSBkZWZhdWx0LiAgVGhpcyBmaWVsZCBtdXN0IGVpdGhlciBiZSBhIGR1cmF0aW9uIGluIHRoZSByYW5nZSAwLTIxNDc0ODM2NDhzIG9yIFwiLTFcIixcbmRlZmF1bHRpbmcgdG8gMC4gSWYgc2V0IHRvIFwiLTFcIiwgdGhlIGNvbGxlY3Rpb24ncyBidWNrZXQgd2lsbCBiZSBwcmV2ZW50ZWQgZnJvbSBzZXR0aW5nIGFcbmRlZmF1bHQgZXhwaXJhdGlvbiBvbiB0aGUgY29sbGVjdGlvbidzIGRvY3VtZW50cy4gTW9yZSBpbmZvOlxuaHR0cHM6Ly9nb2xhbmcub3JnL3BrZy90aW1lLyNQYXJzZUR1cmF0aW9uIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lcyI6eyJkZXNjcmlwdGlvbiI6Ik5hbWVzIHNwZWNpZmllcyB0aGUgbmFtZXMgb2YgdGhlIGNvbGxlY3Rpb25zLiAgVW5saWtlIENvdWNoYmFzZUNvbGxlY3Rpb24sIHdoaWNoXG5zcGVjaWZpZXMgYSBzaW5nbGUgY29sbGVjdGlvbiwgYSBjb2xsZWN0aW9uIGdyb3VwIHNwZWNpZmllcyBtdWx0aXBsZSwgYW5kIHRoZVxuY29sbGVjdGlvbiBncm91cCBtdXN0IHNwZWNpZnkgYXQgbGVhc3Qgb25lIGNvbGxlY3Rpb24gbmFtZS5cbkFueSBjb2xsZWN0aW9uIG5hbWVzIHNwZWNpZmllZCBtdXN0IGJlIHVuaXF1ZS5cbkNvbGxlY3Rpb24gbmFtZXMgbXVzdCBiZSAxLTI1MSBjaGFyYWN0ZXJzIGluIGxlbmd0aCwgY29udGFpbiBvbmx5IFthLXpBLVowLTlfLSVdXG5hbmQgbm90IHN0YXJ0IHdpdGggZWl0aGVyIF8gb3IgJS4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IlNjb3BlT3JDb2xsZWN0aW9uTmFtZSBpcyBhIGdlbmVyaWMgdHlwZSB0byBjYXB0dXJlIGEgdmFsaWRcbnNjb3BlIG9yIGNvbGxlY3Rpb24gbmFtZS4gIFRoZXNlIG11c3QgY29uc2lzdCBvZiAxLTI1MSBjaGFyYWN0ZXJzLFxuaW5jbHVkZSBvbmx5IEEtWiwgYS16LCAwLTksIC0sIF8gb3IgJSwgYW5kIG11c3Qgbm90IHN0YXJ0IHdpdGhcbl8gKHdoaWNoIGlzIGFuIGludGVybmFsIG1hcmtlcikgb3IgJSAod2hpY2ggaXMgcHJvYmFibHkgYW4gZXNjYXBlXG5jaGFyYWN0ZXIgaW4gbGFuZ3VhZ2UgWCkuIiwibWF4TGVuZ3RoIjoyNTEsIm1pbkxlbmd0aCI6MSwicGF0dGVybiI6Il5bYS16QS1aMC05XFwtXVthLXpBLVowLTlcXC0lX117MCwyNTB9JCIsInR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6InNldCJ9fSwicmVxdWlyZWQiOlsibmFtZXMiXSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWV9XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuOC4wIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZWNvbGxlY3Rpb25zLmNvdWNoYmFzZS5jb20ifSwic3BlYyI6eyJncm91cCI6ImNvdWNoYmFzZS5jb20iLCJuYW1lcyI6eyJraW5kIjoiQ291Y2hiYXNlQ29sbGVjdGlvbiIsImxpc3RLaW5kIjoiQ291Y2hiYXNlQ29sbGVjdGlvbkxpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2Vjb2xsZWN0aW9ucyIsInNpbmd1bGFyIjoiY291Y2hiYXNlY29sbGVjdGlvbiJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUNvbGxlY3Rpb24gcmVwcmVzZW50IHRoZSBmaW5lc3QgZ3JhaW5lZCBzaXplIG9mIGRhdGEgc3RvcmFnZSBpbiBDb3VjaGJhc2UuXG5Db2xsZWN0aW9ucyBjb250YWluIGFsbCBkb2N1bWVudHMgYW5kIGluZGV4ZXMgaW4gdGhlIHN5c3RlbS4gIENvbGxlY3Rpb25zIGFsc28gZm9ybVxudGhlIGZpbmVzdCBncmFpbiBiYXNpcyBmb3Igcm9sZS1iYXNlZCBhY2Nlc3MgY29udHJvbCAoUkJBQykgYW5kIGNyb3NzLWRhdGFjZW50ZXJcbnJlcGxpY2F0aW9uIChYRENSKS4gIEluIG9yZGVyIHRvIGJlIGNvbnNpZGVyZWQgYnkgdGhlIE9wZXJhdG9yLCBldmVyeSBjb2xsZWN0aW9uXG5tdXN0IGJlIHJlZmVyZW5jZWQgYnkgYSBgQ291Y2hiYXNlU2NvcGVgIG9yIGBDb3VjaGJhc2VTY29wZUdyb3VwYCByZXNvdXJjZS4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVmYXVsdCI6e30sImRlc2NyaXB0aW9uIjoiU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIHRoZSByZXNvdXJjZS4iLCJwcm9wZXJ0aWVzIjp7Imhpc3RvcnkiOnsiZGVzY3JpcHRpb24iOiJIaXN0b3J5IGRlZmluZXMgd2hldGhlciBjaGFuZ2UgaGlzdG9yeSBpcyByZXRhaW5lZCBmb3IgdGhlIGNvbGxlY3Rpb24uXG5JZiB0aGlzIGZpZWxkIGlzIHNldCwgaXQgd2lsbCBvdmVycmlkZSB0aGUgaGlzdG9yeVJldGVudGlvbi5jb2xsZWN0aW9uRGVmYXVsdCBidWNrZXQgbGV2ZWwgdmFsdWUuXG5UaGlzIGlzIG9ubHkgc3VwcG9ydGVkIHdpdGggc3RvcmFnZUJhY2tlbmQ9bWFnbWEgYXQgdGhlIGJ1Y2tldCBsZXZlbC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJtYXhUVEwiOnsiZGVzY3JpcHRpb24iOiJNYXhUVEwgZGVmaW5lcyBob3cgbG9uZyBhIGRvY3VtZW50IGlzIHBlcm1pdHRlZCB0byBleGlzdCBmb3IsIHdpdGhvdXRcbm1vZGlmaWNhdGlvbiwgdW50aWwgaXQgaXMgYXV0b21hdGljYWxseSBkZWxldGVkLiAgVGhpcyBmaWVsZCB0YWtlcyBwcmVjZWRlbmNlIG92ZXJcbmFueSBUVEwgZGVmaW5lZCBhdCB0aGUgYnVja2V0IGxldmVsLiAgVGhpcyBpcyBhIGRlZmF1bHQsIGFuZCBtYXhpbXVtXG50aW1lLXRvLWxpdmUgYW5kIG1heSBiZSBzZXQgdG8gYSBsb3dlciB2YWx1ZSBieSB0aGUgY2xpZW50LiAgSWYgdGhlIGNsaWVudCBzcGVjaWZpZXNcbmEgaGlnaGVyIHZhbHVlLCB0aGVuIGl0IGlzIHRydW5jYXRlZCB0byB0aGUgbWF4aW11bSBkdXJhYmlsaXR5LiAgRG9jdW1lbnRzIGFyZVxucmVtb3ZlZCBieSBDb3VjaGJhc2UsIGFmdGVyIHRoZXkgaGF2ZSBleHBpcmVkLCB3aGVuIGVpdGhlciBhY2Nlc3NlZCwgdGhlIGV4cGlyeVxucGFnZXIgaXMgcnVuLCBvciB0aGUgYnVja2V0IGlzIGNvbXBhY3RlZC4gIFdoZW4gc2V0IHRvIDAsIHRoZW4gZG9jdW1lbnRzIGFyZSBub3RcbmV4cGlyZWQgYnkgZGVmYXVsdC4gIFRoaXMgZmllbGQgbXVzdCBlaXRoZXIgYmUgYSBkdXJhdGlvbiBpbiB0aGUgcmFuZ2UgMC0yMTQ3NDgzNjQ4cyBvciBcIi0xXCIsXG5kZWZhdWx0aW5nIHRvIDAuIElmIHNldCB0byBcIi0xXCIsIHRoZSBjb2xsZWN0aW9uJ3MgYnVja2V0IHdpbGwgYmUgcHJldmVudGVkIGZyb20gc2V0dGluZyBhXG5kZWZhdWx0IGV4cGlyYXRpb24gb24gdGhlIGNvbGxlY3Rpb24ncyBkb2N1bWVudHMuIE1vcmUgaW5mbzpcbmh0dHBzOi8vZ29sYW5nLm9yZy9wa2cvdGltZS8jUGFyc2VEdXJhdGlvbiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgc3BlY2lmaWVzIHRoZSBuYW1lIG9mIHRoZSBjb2xsZWN0aW9uLiAgQnkgZGVmYXVsdCwgdGhlIG1ldGFkYXRhLm5hbWUgaXNcbnVzZWQgdG8gZGVmaW5lIHRoZSBjb2xsZWN0aW9uIG5hbWUsIGhvd2V2ZXIsIGR1ZSB0byB0aGUgbGltaXRlZCBjaGFyYWN0ZXIgc2V0LFxudGhpcyBmaWVsZCBjYW4gYmUgdXNlZCB0byBvdmVycmlkZSB0aGUgZGVmYXVsdCBhbmQgcHJvdmlkZSB0aGUgZnVsbCBmdW5jdGlvbmFsaXR5LlxuQWRkaXRpb25hbGx5IHRoZSBgbWV0YWRhdGEubmFtZWAgZmllbGQgaXMgYSBETlMgbGFiZWwsIGFuZCB0aHVzIGxpbWl0ZWQgdG8gNjNcbmNoYXJhY3RlcnMsIHRoaXMgZmllbGQgbXVzdCBiZSB1c2VkIGlmIHRoZSBuYW1lIGlzIGxvbmdlciB0aGFuIHRoaXMgbGltaXQuXG5Db2xsZWN0aW9uIG5hbWVzIG11c3QgYmUgMS0yNTEgY2hhcmFjdGVycyBpbiBsZW5ndGgsIGNvbnRhaW4gb25seSBbYS16QS1aMC05Xy0lXVxuYW5kIG5vdCBzdGFydCB3aXRoIGVpdGhlciBfIG9yICUuIiwibWF4TGVuZ3RoIjoyNTEsIm1pbkxlbmd0aCI6MSwicGF0dGVybiI6Il5bYS16QS1aMC05XFwtXVthLXpBLVowLTlcXC0lX117MCwyNTB9JCIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZX1dfX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuOC4wIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZXJvbGViaW5kaW5ncy5jb3VjaGJhc2UuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJjb3VjaGJhc2UuY29tIiwibmFtZXMiOnsia2luZCI6IkNvdWNoYmFzZVJvbGVCaW5kaW5nIiwibGlzdEtpbmQiOiJDb3VjaGJhc2VSb2xlQmluZGluZ0xpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2Vyb2xlYmluZGluZ3MiLCJzaW5ndWxhciI6ImNvdWNoYmFzZXJvbGViaW5kaW5nIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjIiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlUm9sZUJpbmRpbmcgYWxsb3dzIGFzc29jaWF0aW9uIG9mIENvdWNoYmFzZSB1c2VycyB3aXRoIGdyb3Vwcy4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJDb3VjaGJhc2VSb2xlQmluZGluZ1NwZWMgZGVmaW5lcyB0aGUgZ3JvdXAgb2Ygc3ViamVjdHMgaS5lLiB1c2VycywgYW5kIHRoZVxucm9sZSBpLmUuIGdyb3VwIHRoZXkgYXJlIGEgbWVtYmVyIG9mLiIsInByb3BlcnRpZXMiOnsicm9sZVJlZiI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUdyb3VwIGJlaW5nIGJvdW5kIHRvIHN1YmplY3RzLiIsInByb3BlcnRpZXMiOnsia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgb2Ygcm9sZSB0byB1c2UgZm9yIGJpbmRpbmcuIiwiZW51bSI6WyJDb3VjaGJhc2VHcm91cCJdLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHJvbGUgcmVzb3VyY2UgdG8gdXNlIGZvciBiaW5kaW5nLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImtpbmQiLCJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3ViamVjdHMiOnsiZGVzY3JpcHRpb24iOiJMaXN0IG9mIHVzZXJzIHRvIGJpbmQgYSByb2xlIHRvLiIsIml0ZW1zIjp7InByb3BlcnRpZXMiOnsia2luZCI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZSB1c2VyL2dyb3VwIGtpbmQuIiwiZW51bSI6WyJDb3VjaGJhc2VVc2VyIl0sInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgQ291Y2hiYXNlIHVzZXIgcmVzb3VyY2UuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsia2luZCIsIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbInJvbGVSZWYiLCJzdWJqZWN0cyJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZX1dfX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuOC4wIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZXNjb3Blcy5jb3VjaGJhc2UuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJjb3VjaGJhc2UuY29tIiwibmFtZXMiOnsia2luZCI6IkNvdWNoYmFzZVNjb3BlIiwibGlzdEtpbmQiOiJDb3VjaGJhc2VTY29wZUxpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2VzY29wZXMiLCJzaW5ndWxhciI6ImNvdWNoYmFzZXNjb3BlIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjIiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlU2NvcGUgcmVwcmVzZW50cyBhIGxvZ2ljYWwgdW5pdCBvZiBkYXRhIHN0b3JhZ2UgdGhhdCBzaXRzIGJldHdlZW4gYnVja2V0cyBhbmRcbmNvbGxlY3Rpb25zIGUuZy4gYSBidWNrZXQgbWF5IGNvbnRhaW4gbXVsdGlwbGUgc2NvcGVzLCBhbmQgYSBzY29wZSBtYXkgY29udGFpbiBtdWx0aXBsZVxuY29sbGVjdGlvbnMuICBBdCBwcmVzZW50LCBzY29wZXMgYXJlIG5vdCBuZXN0ZWQsIHNvIHByb3ZpZGUgb25seSBhIHNpbmdsZSBsZXZlbCBvZlxuYWJzdHJhY3Rpb24uICBTY29wZXMgcHJvdmlkZSBhIGNvYXJzZXIgZ3JhaW5lZCBiYXNpcyBmb3Igcm9sZS1iYXNlZCBhY2Nlc3MgY29udHJvbCAoUkJBQylcbmFuZCBjcm9zcy1kYXRhY2VudGVyIHJlcGxpY2F0aW9uIChYRENSKSB0aGFuIGNvbGxlY3Rpb25zLCBidXQgZmluZXIgdGhhdCBidWNrZXRzLlxuSW4gb3JkZXIgdG8gYmUgY29uc2lkZXJlZCBieSB0aGUgT3BlcmF0b3IsIGEgc2NvcGUgbXVzdCBiZSByZWZlcmVuY2VkIGJ5IGVpdGhlciBhXG5gQ291Y2hiYXNlQnVja2V0YCBvciBgQ291Y2hiYXNlRXBoZW1lcmFsQnVja2V0YCByZXNvdXJjZS4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVmYXVsdCI6e30sImRlc2NyaXB0aW9uIjoiU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIHRoZSByZXNvdXJjZS4iLCJwcm9wZXJ0aWVzIjp7ImNvbGxlY3Rpb25zIjp7ImRlc2NyaXB0aW9uIjoiQ29sbGVjdGlvbnMgZGVmaW5lcyBob3cgdG8gY29sbGF0ZSBjb2xsZWN0aW9ucyBpbmNsdWRlZCBpbiB0aGlzIHNjb3BlIG9yIHNjb3BlIGdyb3VwLlxuQW55IG9mIHRoZSBwcm92aWRlZCBtZXRob2RzIG1heSBiZSB1c2VkIHRvIGNvbGxhdGUgYSBzZXQgb2YgY29sbGVjdGlvbnMgdG9cbm1hbmFnZS4gIENvbGxhdGVkIGNvbGxlY3Rpb25zIG11c3QgaGF2ZSB1bmlxdWUgbmFtZXMsIG90aGVyd2lzZSBpdCBpc1xuY29uc2lkZXJlZCBhbWJpZ3VvdXMsIGFuZCBhbiBlcnJvciBjb25kaXRpb24uIiwicHJvcGVydGllcyI6eyJtYW5hZ2VkIjp7ImRlc2NyaXB0aW9uIjoiTWFuYWdlZCBpbmRpY2F0ZXMgd2hldGhlciBjb2xsZWN0aW9ucyB3aXRoaW4gdGhpcyBzY29wZSBhcmUgbWFuYWdlZC5cbklmIG5vdCB0aGVuIHlvdSBjYW4gZHluYW1pY2FsbHkgY3JlYXRlIGFuZCBkZWxldGUgY29sbGVjdGlvbnMgd2l0aFxudGhlIENvdWNoYmFzZSBVSSBvciBTREtzLiIsInR5cGUiOiJib29sZWFuIn0sInByZXNlcnZlRGVmYXVsdENvbGxlY3Rpb24iOnsiZGVzY3JpcHRpb24iOiJQcmVzZXJ2ZURlZmF1bHRDb2xsZWN0aW9uIGluZGljYXRlcyB3aGV0aGVyIHRoZSBPcGVyYXRvciBzaG91bGQgbWFuYWdlIHRoZVxuZGVmYXVsdCBjb2xsZWN0aW9uIHdpdGhpbiB0aGUgZGVmYXVsdCBzY29wZS4gIFRoZSBkZWZhdWx0IGNvbGxlY3Rpb24gY2FuXG5iZSBkZWxldGVkLCBidXQgY2FuIG5vdCBiZSByZWNyZWF0ZWQgYnkgQ291Y2hiYXNlIFNlcnZlci4gIEJ5IHNldHRpbmcgdGhpc1xuZmllbGQgdG8gYHRydWVgLCB0aGUgT3BlcmF0b3Igd2lsbCBpbXBsaWNpdGx5IG1hbmFnZSB0aGUgZGVmYXVsdCBjb2xsZWN0aW9uXG53aXRoaW4gdGhlIGRlZmF1bHQgc2NvcGUuICBUaGUgZGVmYXVsdCBjb2xsZWN0aW9uIGNhbm5vdCBiZSBtb2RpZmllZCBhbmRcbndpbGwgaGF2ZSBubyBkb2N1bWVudCB0aW1lLXRvLWxpdmUgKFRUTCkuICBXaGVuIHNldCB0byBgZmFsc2VgLCB0aGUgb3BlcmF0b3JcbndpbGwgbm90IG1hbmFnZSB0aGUgZGVmYXVsdCBjb2xsZWN0aW9uLCB3aGljaCB3aWxsIGJlIGRlbGV0ZWQgYW5kIGNhbm5vdCBiZVxudXNlZCBvciByZWNyZWF0ZWQuIiwidHlwZSI6ImJvb2xlYW4ifSwicmVzb3VyY2VzIjp7ImRlc2NyaXB0aW9uIjoiUmVzb3VyY2VzIGlzIGFuIGV4cGxpY2l0IGxpc3Qgb2YgbmFtZWQgcmVzb3VyY2VzIHRoYXQgd2lsbCBiZSBjb25zaWRlcmVkXG5mb3IgaW5jbHVzaW9uIGluIHRoaXMgc2NvcGUgb3Igc2NvcGVzLiAgSWYgYSByZXNvdXJjZSByZWZlcmVuY2UgZG9lc24ndFxubWF0Y2ggYSByZXNvdXJjZSwgdGhlbiBubyBlcnJvciBjb25kaXRpb25zIGFyZSByYWlzZWQgZHVlIHRvIHVuZGVmaW5lZFxucmVzb3VyY2UgY3JlYXRpb24gb3JkZXJpbmcgYW5kIGV2ZW50dWFsIGNvbnNpc3RlbmN5LiIsIml0ZW1zIjp7InByb3BlcnRpZXMiOnsia2luZCI6eyJkZWZhdWx0IjoiQ291Y2hiYXNlQ29sbGVjdGlvbiIsImRlc2NyaXB0aW9uIjoiS2luZCBpbmRpY2F0ZXMgdGhlIGtpbmQgb2YgcmVzb3VyY2UgdGhhdCBpcyBiZWluZyByZWZlcmVuY2VkLiAgQSBzY29wZVxuY2FuIG9ubHkgcmVmZXJlbmNlIGBDb3VjaGJhc2VDb2xsZWN0aW9uYCBhbmQgYENvdWNoYmFzZUNvbGxlY3Rpb25Hcm91cGBcbnJlc291cmNlIGtpbmRzLiAgVGhpcyBmaWVsZCBkZWZhdWx0cyB0byBgQ291Y2hiYXNlQ29sbGVjdGlvbmAgaWYgbm90XG5zcGVjaWZpZWQuIiwiZW51bSI6WyJDb3VjaGJhc2VDb2xsZWN0aW9uIiwiQ291Y2hiYXNlQ29sbGVjdGlvbkdyb3VwIl0sInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIEt1YmVybmV0ZXMgcmVzb3VyY2UgbmFtZSB0aGF0IGlzIGJlaW5nIHJlZmVyZW5jZWQuXG5MZWdhbCBjb2xsZWN0aW9uIG5hbWVzIGhhdmUgYSBtYXhpbXVtIGxlbmd0aCBvZiAyNTFcbmNoYXJhY3RlcnMgYW5kIG1heSBiZSBjb21wb3NlZCBvZiBhbnkgY2hhcmFjdGVyIGZyb20gXCJhLXpcIiwgXCJBLVpcIiwgXCIwLTlcIiBhbmQgXCJfLSVcIi4iLCJtYXhMZW5ndGgiOjI1MSwibWluTGVuZ3RoIjoxLCJwYXR0ZXJuIjoiXlthLXpBLVowLTlcXC1dW2EtekEtWjAtOVxcLSVfXXswLDI1MH0kIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlNlbGVjdG9yIGFsbG93cyByZXNvdXJjZXMgdG8gYmUgaW1wbGljaXRseSBjb25zaWRlcmVkIGZvciBpbmNsdXNpb24gaW4gdGhpc1xuc2NvcGUgb3Igc2NvcGVzLiAgTW9yZSBpbmZvOlxuaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvcmVmZXJlbmNlL2dlbmVyYXRlZC9rdWJlcm5ldGVzLWFwaS92MS4yOC8jbGFiZWxzZWxlY3Rvci12MS1tZXRhIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0XG5yZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpY1xubWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzXG5tYXAgaXMgZXF1aXZhbGVudCB0byBhbiBlbGVtZW50IG9mIG1hdGNoRXhwcmVzc2lvbnMsIHdob3NlIGtleSBmaWVsZCBpcyBcImtleVwiLCB0aGVcbm9wZXJhdG9yIGlzIFwiSW5cIiwgYW5kIHRoZSB2YWx1ZXMgYXJyYXkgY29udGFpbnMgb25seSBcInZhbHVlXCIuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifX0sInR5cGUiOiJvYmplY3QifSwiZGVmYXVsdFNjb3BlIjp7ImRlc2NyaXB0aW9uIjoiRGVmYXVsdFNjb3BlIGluZGljYXRlcyB3aGV0aGVyIHRoaXMgcmVzb3VyY2UgcmVwcmVzZW50cyB0aGUgZGVmYXVsdCBzY29wZVxuZm9yIGEgYnVja2V0LiAgV2hlbiBzZXQgdG8gYHRydWVgLCB0aGlzIGFsbG93cyB0aGUgdXNlciB0byByZWZlciB0byBhbmRcbm1hbmFnZSBjb2xsZWN0aW9ucyB3aXRoaW4gdGhlIGRlZmF1bHQgc2NvcGUuICBXaGVuIG5vdCBkZWZpbmVkLCB0aGUgT3BlcmF0b3JcbndpbGwgaW1wbGljaXRseSBtYW5hZ2UgdGhlIGRlZmF1bHQgc2NvcGUgYXMgdGhlIGRlZmF1bHQgc2NvcGUgY2FuIG5vdCBiZVxuZGVsZXRlZCBmcm9tIENvdWNoYmFzZSBTZXJ2ZXIuICBUaGUgT3BlcmF0b3IgZGVmaW5lZCBkZWZhdWx0IHNjb3BlIHdpbGxcbmFsc28gaGF2ZSB0aGUgYHBlcnNpc3REZWZhdWx0Q29sbGVjdGlvbmAgZmxhZyBzZXQgdG8gYHRydWVgLiAgT25seSBvbmVcbmRlZmF1bHQgc2NvcGUgaXMgcGVybWl0dGVkIHRvIGJlIGNvbnRhaW5lZCBpbiBhIGJ1Y2tldC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBzcGVjaWZpZXMgdGhlIG5hbWUgb2YgdGhlIHNjb3BlLiAgQnkgZGVmYXVsdCwgdGhlIG1ldGFkYXRhLm5hbWUgaXNcbnVzZWQgdG8gZGVmaW5lIHRoZSBzY29wZSBuYW1lLCBob3dldmVyLCBkdWUgdG8gdGhlIGxpbWl0ZWQgY2hhcmFjdGVyIHNldCxcbnRoaXMgZmllbGQgY2FuIGJlIHVzZWQgdG8gb3ZlcnJpZGUgdGhlIGRlZmF1bHQgYW5kIHByb3ZpZGUgdGhlIGZ1bGwgZnVuY3Rpb25hbGl0eS5cbkFkZGl0aW9uYWxseSB0aGUgYG1ldGFkYXRhLm5hbWVgIGZpZWxkIGlzIGEgRE5TIGxhYmVsLCBhbmQgdGh1cyBsaW1pdGVkIHRvIDYzXG5jaGFyYWN0ZXJzLCB0aGlzIGZpZWxkIG11c3QgYmUgdXNlZCBpZiB0aGUgbmFtZSBpcyBsb25nZXIgdGhhbiB0aGlzIGxpbWl0LlxuU2NvcGUgbmFtZXMgbXVzdCBiZSAxLTI1MSBjaGFyYWN0ZXJzIGluIGxlbmd0aCwgY29udGFpbiBvbmx5IFthLXpBLVowLTlfLSVdXG5hbmQgbm90IHN0YXJ0IHdpdGggZWl0aGVyIF8gb3IgJS4iLCJtYXhMZW5ndGgiOjI1MSwibWluTGVuZ3RoIjoxLCJwYXR0ZXJuIjoiXlthLXpBLVowLTlcXC1dW2EtekEtWjAtOVxcLSVfXXswLDI1MH0kIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlfV19fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuOC4wIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZXVzZXJzLmNvdWNoYmFzZS5jb20ifSwic3BlYyI6eyJncm91cCI6ImNvdWNoYmFzZS5jb20iLCJuYW1lcyI6eyJraW5kIjoiQ291Y2hiYXNlVXNlciIsImxpc3RLaW5kIjoiQ291Y2hiYXNlVXNlckxpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2V1c2VycyIsInNpbmd1bGFyIjoiY291Y2hiYXNldXNlciJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZVVzZXIgYWxsb3dzIHRoZSBhdXRvbWF0aW9uIG9mIENvdWNoYmFzZSB1c2VyIG1hbmFnZW1lbnQuIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LlxuU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kXG5tYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuXG5TZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by5cbkNhbm5vdCBiZSB1cGRhdGVkLlxuSW4gQ2FtZWxDYXNlLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlVXNlclNwZWMgYWxsb3dzIHRoZSBzcGVjaWZpY2F0aW9uIG9mIENvdWNoYmFzZSB1c2VyIGNvbmZpZ3VyYXRpb24uIiwicHJvcGVydGllcyI6eyJhdXRoRG9tYWluIjp7ImRlc2NyaXB0aW9uIjoiVGhlIGRvbWFpbiB3aGljaCBwcm92aWRlcyB1c2VyIGF1dGhlbnRpY2F0aW9uLiIsImVudW0iOlsibG9jYWwiLCJleHRlcm5hbCJdLCJ0eXBlIjoic3RyaW5nIn0sImF1dGhTZWNyZXQiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIEt1YmVybmV0ZXMgc2VjcmV0IHdpdGggcGFzc3dvcmQgZm9yIENvdWNoYmFzZSBkb21haW4uIiwidHlwZSI6InN0cmluZyJ9LCJmdWxsTmFtZSI6eyJkZXNjcmlwdGlvbiI6IkZ1bGwgTmFtZSBvZiBDb3VjaGJhc2UgdXNlci4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJVc2VybmFtZSBvZiB0aGUgY291Y2hiYXNlIHVzZXIuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiYXV0aERvbWFpbiJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZX1dfX0=
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.connect.redhat.com/couchbase/cloud-native-gateway@sha256:50bbc00cce14ec968c9b8e9ef06a6c5bd2860d38d973cf7af7271d4ff66fe9cc
  name: couchbase-cloud-native-gateway
- image: registry.connect.redhat.com/couchbase/exporter@sha256:de3bacf8233553452db1d9cec7c98b28d12c41aa025d830d6b7c5de0da9723b1
  name: couchbase-metrics
- image: registry.connect.redhat.com/couchbase/operator-backup@sha256:382511f532b0206d2bb0cecc8f91b055809b5ccf89136b6d37d55a40e266812f
  name: couchbase-backup
- image: registry.connect.redhat.com/couchbase/operator-bundle@sha256:f1484bba6741d972b707155068fe43a23038b68a8e184e345e3666e7ccfdfdc6
  name: ""
- image: registry.connect.redhat.com/couchbase/operator@sha256:df61928b064014d851c6e7dff6dcd63a433a27fa5623254b6e389c3eea170e36
  name: couchbase-operator
- image: registry.connect.redhat.com/couchbase/server@sha256:033c0b2b8eb12ac63a158754dce20d9787a470c77252c60bd4d9e11f5b2dbc7a
  name: couchbase-server
- image: registry.connect.redhat.com/couchbase/server@sha256:437cd5aa05ff057b17f47d2500dec7cefca21682eb0f4badff4538dc164bc1a7
  name: couchbase-server-7_6_3_4
- image: registry.connect.redhat.com/couchbase/server@sha256:4e0d41b559c5d536aa06709457d6c788fd039b0c915c14f2d429213bdfeff824
  name: couchbase-server-7_2_6_2
- image: registry.connect.redhat.com/couchbase/server@sha256:643272bd58b0b584863400d281f1dcb147099c7f2120a947347be4b1f97391a7
  name: couchbase-server-7_6_2_3
schema: olm.bundle
---
image: registry.connect.redhat.com/couchbase/operator-bundle@sha256:66bd3eba0b68c317fe128c6713488cb6374f9647095768d3f7eed8120bf02e77
name: couchbase-operator.v2.8.0-2
package: couchbase-enterprise-certified
properties:
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseAutoscaler
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseBackup
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseBackupRestore
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseBucket
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseCluster
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseCollection
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseCollectionGroup
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseEphemeralBucket
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseGroup
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseMemcachedBucket
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseMigrationReplication
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseReplication
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseRoleBinding
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseScope
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseScopeGroup
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseUser
    version: v2
- type: olm.package
  value:
    packageName: couchbase-enterprise-certified
    version: 2.8.0-2
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuOC4wIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZW1lbWNhY2hlZGJ1Y2tldHMuY291Y2hiYXNlLmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiY291Y2hiYXNlLmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJDb3VjaGJhc2VNZW1jYWNoZWRCdWNrZXQiLCJsaXN0S2luZCI6IkNvdWNoYmFzZU1lbWNhY2hlZEJ1Y2tldExpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2VtZW1jYWNoZWRidWNrZXRzIiwic2luZ3VsYXIiOiJjb3VjaGJhc2VtZW1jYWNoZWRidWNrZXQifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3BlYy5tZW1vcnlRdW90YSIsIm5hbWUiOiJtZW1vcnkgcXVvdGEiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5tZXRhZGF0YS5jcmVhdGlvblRpbWVzdGFtcCIsIm5hbWUiOiJhZ2UiLCJ0eXBlIjoiZGF0ZSJ9XSwibmFtZSI6InYyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkRFUFJFQ0FURUQgLSBNZW1jYWNoZWQgYnVja2V0cyBhcmUgbm93IGRlcHJlY2F0ZWQgaW4gQ291Y2hiYXNlIFNlcnZlciBhbmQgc2hvdWxkIG5vdCBiZSB1c2VkLCB0aGV5IHdpbGwgYmUgcmVtb3ZlZCBpbiBhIGZ1dHVyZSByZWxlYXNlLlxuVGhlIENvdWNoYmFzZU1lbWNhY2hlZEJ1Y2tldCByZXNvdXJjZSBkZWZpbmVzIGEgc2V0IG9mIGRvY3VtZW50cyBpbiBDb3VjaGJhc2Ugc2VydmVyLlxuQSBDb3VjaGJhc2UgY2xpZW50IGNvbm5lY3RzIHRvIGFuZCBvcGVyYXRlcyBvbiBhIGJ1Y2tldCwgd2hpY2ggcHJvdmlkZXMgaW5kZXBlbmRlbnRcbm1hbmFnZW1lbnQgb2YgYSBzZXQgZG9jdW1lbnRzIGFuZCBhIHNlY3VyaXR5IGJvdW5kYXJ5IGZvciByb2xlIGJhc2VkIGFjY2VzcyBjb250cm9sLlxuQSBDb3VjaGJhc2VFcGhlbWVyYWxCdWNrZXQgcHJvdmlkZXMgaW4tbWVtb3J5IG9ubHkgc3RvcmFnZSBmb3IgZG9jdW1lbnRzIGNvbnRhaW5lZCBieSBpdC4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVmYXVsdCI6e30sImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlTWVtY2FjaGVkQnVja2V0U3BlYyBpcyB0aGUgc3BlY2lmaWNhdGlvbiBmb3IgYSBNZW1jYWNoZWQgYnVja2V0XG5yZXNvdXJjZSwgYW5kIGFsbG93cyB0aGUgYnVja2V0IHRvIGJlIGN1c3RvbWl6ZWQuIiwicHJvcGVydGllcyI6eyJlbmFibGVGbHVzaCI6eyJkZXNjcmlwdGlvbiI6IkVuYWJsZUZsdXNoIGRlZmluZXMgd2hldGhlciBhIGNsaWVudCBjYW4gZGVsZXRlIGFsbCBkb2N1bWVudHMgaW4gYSBidWNrZXQuXG5UaGlzIGZpZWxkIGRlZmF1bHRzIHRvIGZhbHNlLiIsInR5cGUiOiJib29sZWFuIn0sIm1lbW9yeVF1b3RhIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwiZGVmYXVsdCI6IjEwME1pIiwiZGVzY3JpcHRpb24iOiJNZW1vcnlRdW90YSBpcyBhIG1lbW9yeSBsaW1pdCB0byB0aGUgc2l6ZSBvZiBhIGJ1Y2tldC4gVGhlIG1lbW9yeSBxdW90YVxuaXMgZGVmaW5lZCBwZXIgQ291Y2hiYXNlIHBvZCBydW5uaW5nIHRoZSBkYXRhIHNlcnZpY2UuICBUaGlzIGZpZWxkIGRlZmF1bHRzIHRvLCBhbmQgbXVzdFxuYmUgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRvIDEwME1pLiAgTW9yZSBpbmZvOlxuaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtcmVzb3VyY2VzLWNvbnRhaW5lcnMvI3Jlc291cmNlLXVuaXRzLWluLWt1YmVybmV0ZXMiLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ0eXBlIjoic3RyaW5nIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBpcyB0aGUgbmFtZSBvZiB0aGUgYnVja2V0IHdpdGhpbiBDb3VjaGJhc2Ugc2VydmVyLiAgQnkgZGVmYXVsdCB0aGUgT3BlcmF0b3JcbndpbGwgdXNlIHRoZSBgbWV0YWRhdGEubmFtZWAgZmllbGQgdG8gZGVmaW5lIHRoZSBidWNrZXQgbmFtZS4gIFRoZSBgbWV0YWRhdGEubmFtZWBcbmZpZWxkIG9ubHkgc3VwcG9ydHMgYSBzdWJzZXQgb2YgdGhlIHN1cHBvcnRlZCBjaGFyYWN0ZXIgc2V0LiAgV2hlbiBzcGVjaWZpZWQsIHRoaXNcbmZpZWxkIG92ZXJyaWRlcyBgbWV0YWRhdGEubmFtZWAuICBMZWdhbCBidWNrZXQgbmFtZXMgaGF2ZSBhIG1heGltdW0gbGVuZ3RoIG9mIDEwMFxuY2hhcmFjdGVycyBhbmQgbWF5IGJlIGNvbXBvc2VkIG9mIGFueSBjaGFyYWN0ZXIgZnJvbSBcImEtelwiLCBcIkEtWlwiLCBcIjAtOVwiIGFuZCBcIi1fJVxcLlwiLiIsIm1heExlbmd0aCI6MTAwLCJwYXR0ZXJuIjoiXlthLXpBLVowLTktXyVcXC5dezEsMTAwfSQiLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWV9XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuOC4wIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZW1pZ3JhdGlvbnJlcGxpY2F0aW9ucy5jb3VjaGJhc2UuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJjb3VjaGJhc2UuY29tIiwibmFtZXMiOnsia2luZCI6IkNvdWNoYmFzZU1pZ3JhdGlvblJlcGxpY2F0aW9uIiwibGlzdEtpbmQiOiJDb3VjaGJhc2VNaWdyYXRpb25SZXBsaWNhdGlvbkxpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2VtaWdyYXRpb25yZXBsaWNhdGlvbnMiLCJzaW5ndWxhciI6ImNvdWNoYmFzZW1pZ3JhdGlvbnJlcGxpY2F0aW9uIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7Impzb25QYXRoIjoiLnNwZWMuYnVja2V0IiwibmFtZSI6ImJ1Y2tldCIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLnNwZWMucmVtb3RlQnVja2V0IiwibmFtZSI6InJlbW90ZSBidWNrZXQiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zcGVjLnBhdXNlZCIsIm5hbWUiOiJwYXVzZWQiLCJ0eXBlIjoiYm9vbGVhbiJ9LHsianNvblBhdGgiOiIubWV0YWRhdGEuY3JlYXRpb25UaW1lc3RhbXAiLCJuYW1lIjoiYWdlIiwidHlwZSI6ImRhdGUifV0sIm5hbWUiOiJ2MiIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJUaGUgQ291Y2hiYXNlU2NvcGVNaWdyYXRpb24gcmVzb3VyY2UgcmVwcmVzZW50cyB0aGUgdXNlIG9mIHRoZSBzcGVjaWFsIG1pZ3JhdGlvbiBtYXBwaW5nXG53aXRoaW4gWERDUiB0byB0YWtlIGEgZmlsdGVyZWQgbGlzdCBmcm9tIHRoZSBkZWZhdWx0IHNjb3BlIGFuZCBjb2xsZWN0aW9uIG9mIHRoZSBzb3VyY2UgYnVja2V0LFxucmVwbGljYXRlIGl0IHRvIG5hbWVkIHNjb3BlcyBhbmQgY29sbGVjdGlvbnMgd2l0aGluIHRoZSB0YXJnZXQgYnVja2V0LlxuVGhlIGJ1Y2tldC10by1idWNrZXQgcmVwbGljYXRpb24gY2Fubm90IGR1cGxpY2F0ZSBhbnkgdXNlZCBieSB0aGUgQ291Y2hiYXNlUmVwbGljYXRpb24gcmVzb3VyY2UsXG5hcyB0aGVzZSB0d28gdHlwZXMgb2YgcmVwbGljYXRpb24gYXJlIG11dHVhbGx5IGV4Y2x1c2l2ZSBiZXR3ZWVuIGJ1Y2tldHMuXG5odHRwczovL2RvY3MuY291Y2hiYXNlLmNvbS9zZXJ2ZXIvY3VycmVudC9sZWFybi9jbHVzdGVycy1hbmQtYXZhaWxhYmlsaXR5L3hkY3Itd2l0aC1zY29wZXMtYW5kLWNvbGxlY3Rpb25zLmh0bWwjbWlncmF0aW9uIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LlxuU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kXG5tYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuXG5TZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by5cbkNhbm5vdCBiZSB1cGRhdGVkLlxuSW4gQ2FtZWxDYXNlLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJtaWdyYXRpb25NYXBwaW5nIjp7ImRlc2NyaXB0aW9uIjoiVGhlIG1pZ3JhdGlvbiBtYXBwaW5ncyB0byB1c2UsIHNob3VsZCBuZXZlciBiZSBlbXB0eSBhcyB0aGF0IGlzIGp1c3QgYW4gaW1wbGljaXQgYnVja2V0LXRvLWJ1Y2tldCByZXBsaWNhdGlvbiB0aGVuLiIsInByb3BlcnRpZXMiOnsibWFwcGluZ3MiOnsiZGVzY3JpcHRpb24iOiJUaGUgbWlncmF0aW9uIG1hcHBpbmdzIHRvIHVzZSwgc2hvdWxkIG5ldmVyIGJlIGVtcHR5IGFzIHRoYXQgaXMganVzdCBhbiBpbXBsaWNpdCBidWNrZXQtdG8tYnVja2V0IHJlcGxpY2F0aW9uIHRoZW4uIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJJbmRpY2F0ZXMgd2hldGhlciB0aGlzIGlzIHVzaW5nIG1pZ3JhdGlvbiBtYXBwaW5nIG9yIG5vdC5cblRoaXMgaXMgb25seSB2YWxpZCB3aGVuIHVzaW5nIHRoZSBkZWZhdWx0IHNjb3BlL2NvbGxlY3Rpb24uIiwicHJvcGVydGllcyI6eyJmaWx0ZXIiOnsiZGVmYXVsdCI6Il9kZWZhdWx0Ll9kZWZhdWx0IiwiZGVzY3JpcHRpb24iOiJBIGZpbHRlciB0byBzZWxlY3QgZnJvbSB0aGUgc291cmNlIGRlZmF1bHQgc2NvcGUgYW5kIGNvbGxlY3Rpb24uXG5EZWZhdWx0cyB0byBzZWxlY3QgZXZlcnl0aGluZyBpbiB0aGUgZGVmYXVsdCBzY29wZSBhbmQgY29sbGVjdGlvbi4iLCJ0eXBlIjoic3RyaW5nIn0sInRhcmdldEtleXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoiVGhlIGRlc3RpbmF0aW9uIG9mIG91ciBtaWdyYXRpb24sIG11c3QgYmUgYSBzY29wZSBhbmQgY29sbGVjdGlvbi4iLCJwcm9wZXJ0aWVzIjp7ImNvbGxlY3Rpb24iOnsiZGVzY3JpcHRpb24iOiJUaGUgb3B0aW9uYWwgY29sbGVjdGlvbiB3aXRoaW4gdGhlIHNjb3BlLiBNYXkgYmUgZW1wdHkgdG8ganVzdCB3b3JrIGF0IHNjb3BlIGxldmVsLiIsIm1heExlbmd0aCI6MjUxLCJtaW5MZW5ndGgiOjEsInBhdHRlcm4iOiJeKF9kZWZhdWx0fFthLXpBLVowLTlcXC1dW2EtekEtWjAtOVxcLSVfXXswLDI1MH0pJCIsInR5cGUiOiJzdHJpbmcifSwic2NvcGUiOnsiZGVzY3JpcHRpb24iOiJUaGUgc2NvcGUgdG8gdXNlLiIsIm1heExlbmd0aCI6MjUxLCJtaW5MZW5ndGgiOjEsInBhdHRlcm4iOiJeKF9kZWZhdWx0fFthLXpBLVowLTlcXC1dW2EtekEtWjAtOVxcLSVfXXswLDI1MH0pJCIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInNjb3BlIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInRhcmdldEtleXNwYWNlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJtYXBwaW5ncyJdLCJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJDb3VjaGJhc2VSZXBsaWNhdGlvblNwZWMgYWxsb3dzIGNvbmZpZ3VyYXRpb24gb2YgYW4gWERDUiByZXBsaWNhdGlvbi4iLCJwcm9wZXJ0aWVzIjp7ImJ1Y2tldCI6eyJkZXNjcmlwdGlvbiI6IkJ1Y2tldCBpcyB0aGUgc291cmNlIGJ1Y2tldCB0byByZXBsaWNhdGUgZnJvbS4gIFRoaXMgcmVmZXJzIHRvIHRoZSBDb3VjaGJhc2VcbmJ1Y2tldCBuYW1lLCBub3QgdGhlIHJlc291cmNlIG5hbWUgb2YgdGhlIGJ1Y2tldC4gIEEgYnVja2V0IHdpdGggdGhpcyBuYW1lIG11c3RcbmJlIGRlZmluZWQgb24gdGhpcyBjbHVzdGVyLiAgTGVnYWwgYnVja2V0IG5hbWVzIGhhdmUgYSBtYXhpbXVtIGxlbmd0aCBvZiAxMDBcbmNoYXJhY3RlcnMgYW5kIG1heSBiZSBjb21wb3NlZCBvZiBhbnkgY2hhcmFjdGVyIGZyb20gXCJhLXpcIiwgXCJBLVpcIiwgXCIwLTlcIiBhbmQgXCItXyVcXC5cIi4iLCJtYXhMZW5ndGgiOjEwMCwicGF0dGVybiI6Il5bYS16QS1aMC05LV8lXFwuXXsxLDEwMH0kIiwidHlwZSI6InN0cmluZyJ9LCJjb21wcmVzc2lvblR5cGUiOnsiZGVmYXVsdCI6IkF1dG8iLCJkZXNjcmlwdGlvbiI6IkNvbXByZXNzaW9uVHlwZSBpcyB0aGUgdHlwZSBvZiBjb21wcmVzc2lvbiB0byBhcHBseSB0byB0aGUgcmVwbGljYXRpb24uXG5XaGVuIE5vbmUsIG5vIGNvbXByZXNzaW9uIHdpbGwgYmUgYXBwbGllZCB0byBkb2N1bWVudHMgYXMgdGhleSBhcmVcbnRyYW5zZmVycmVkIGJldHdlZW4gY2x1c3RlcnMuICBXaGVuIEF1dG8sIENvdWNoYmFzZSBzZXJ2ZXIgd2lsbCBhdXRvbWF0aWNhbGx5XG5jb21wcmVzcyBkb2N1bWVudHMgYXMgdGhleSBhcmUgdHJhbnNmZXJyZWQgdG8gcmVkdWNlIGJhbmR3aWR0aCByZXF1aXJlbWVudHMuXG5UaGlzIGZpZWxkIG11c3QgYmUgb25lIG9mIFwiTm9uZVwiIG9yIFwiQXV0b1wiLCBkZWZhdWx0aW5nIHRvIFwiQXV0b1wiLiIsImVudW0iOlsiTm9uZSIsIkF1dG8iXSwidHlwZSI6InN0cmluZyJ9LCJmaWx0ZXJFeHByZXNzaW9uIjp7ImRlc2NyaXB0aW9uIjoiRmlsdGVyRXhwcmVzc2lvbiBhbGxvd3MgY2VydGFpbiBkb2N1bWVudHMgdG8gYmUgZmlsdGVyZWQgb3V0IG9mIHRoZSByZXBsaWNhdGlvbi4iLCJ0eXBlIjoic3RyaW5nIn0sInBhdXNlZCI6eyJkZXNjcmlwdGlvbiI6IlBhdXNlZCBhbGxvd3MgYSByZXBsaWNhdGlvbiB0byBiZSBzdG9wcGVkIGFuZCByZXN0YXJ0ZWQgd2l0aG91dCBoYXZpbmcgdG9cbnJlc3RhcnQgdGhlIHJlcGxpY2F0aW9uIGZyb20gdGhlIGJlZ2lubmluZy4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJyZW1vdGVCdWNrZXQiOnsiZGVzY3JpcHRpb24iOiJSZW1vdGVCdWNrZXQgaXMgdGhlIHJlbW90ZSBidWNrZXQgbmFtZSB0byBzeW5jaHJvbml6ZSB0by4gIFRoaXMgcmVmZXJzIHRvIHRoZVxuQ291Y2hiYXNlIGJ1Y2tldCBuYW1lLCBub3QgdGhlIHJlc291cmNlIG5hbWUgb2YgdGhlIGJ1Y2tldC4gIExlZ2FsIGJ1Y2tldCBuYW1lc1xuaGF2ZSBhIG1heGltdW0gbGVuZ3RoIG9mIDEwMCBjaGFyYWN0ZXJzIGFuZCBtYXkgYmUgY29tcG9zZWQgb2YgYW55IGNoYXJhY3RlciBmcm9tXG5cImEtelwiLCBcIkEtWlwiLCBcIjAtOVwiIGFuZCBcIi1fJVxcLlwiLiIsIm1heExlbmd0aCI6MTAwLCJwYXR0ZXJuIjoiXlthLXpBLVowLTktXyVcXC5dezEsMTAwfSQiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJidWNrZXQiLCJyZW1vdGVCdWNrZXQiXSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsibWlncmF0aW9uTWFwcGluZyIsInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlfV19fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuOC4wIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZWF1dG9zY2FsZXJzLmNvdWNoYmFzZS5jb20ifSwic3BlYyI6eyJncm91cCI6ImNvdWNoYmFzZS5jb20iLCJuYW1lcyI6eyJraW5kIjoiQ291Y2hiYXNlQXV0b3NjYWxlciIsImxpc3RLaW5kIjoiQ291Y2hiYXNlQXV0b3NjYWxlckxpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2VhdXRvc2NhbGVycyIsInNob3J0TmFtZXMiOlsiY2JhIl0sInNpbmd1bGFyIjoiY291Y2hiYXNlYXV0b3NjYWxlciJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zcGVjLnNpemUiLCJuYW1lIjoic2l6ZSIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLnNwZWMuc2VydmVycyIsIm5hbWUiOiJzZXJ2ZXJzIiwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUF1dG9zY2FsZXIgcHJvdmlkZXMgYW4gaW50ZXJmYWNlIGZvciB0aGUgS3ViZXJuZXRlcyBIb3Jpem9udGFsIFBvZCBBdXRvc2NhbGVyXG50byBpbnRlcmFjdCB3aXRoIHRoZSBDb3VjaGJhc2UgY2x1c3RlciBhbmQgcHJvdmlkZSBhdXRvc2NhbGluZy4gIFRoaXMgcmVzb3VyY2UgaXNcbm5vdCBkZWZpbmVkIGJ5IHRoZSBlbmQgdXNlciwgYW5kIGlzIG1hbmFnZWQgYnkgdGhlIE9wZXJhdG9yLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUF1dG9zY2FsZXJTcGVjIGFsbG93cyBjb250cm9sIG92ZXIgYW4gYXV0b3NjYWxpbmcgZ3JvdXAuIiwicHJvcGVydGllcyI6eyJzZXJ2ZXJzIjp7ImRlc2NyaXB0aW9uIjoiU2VydmVycyBzcGVjaWZpZXMgdGhlIHNlcnZlciBncm91cCB0aGF0IHRoaXMgYXV0b3NjYWxlciBiZWxvbmdzIHRvLiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJzaXplIjp7ImRlc2NyaXB0aW9uIjoiU2l6ZSBhbGxvd3MgdGhlIHNlcnZlciBncm91cCB0byBiZSBkeW5hbWljYWxseSBzY2FsZWQuIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifX0sInJlcXVpcmVkIjpbInNlcnZlcnMiLCJzaXplIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlQXV0b3NjYWxlclN0YXR1cyBwcm92aWRlcyBpbmZvcm1hdGlvbiB0byB0aGUgSFBBIHRvIGFzc2lzdCB3aXRoIHNjYWxpbmdcbnNlcnZlciBncm91cHMuIiwicHJvcGVydGllcyI6eyJsYWJlbFNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiTGFiZWxTZWxlY3RvciBhbGxvd3MgdGhlIEhQQSB0byBzZWxlY3QgcmVzb3VyY2VzIHRvIG1vbml0b3IgZm9yIHJlc291cmNlXG51dGlsaXphdGlvbiBpbiBvcmRlciB0byB0cmlnZ2VyIHNjYWxpbmcuIiwidHlwZSI6InN0cmluZyJ9LCJzaXplIjp7ImRlc2NyaXB0aW9uIjoiU2l6ZSBpcyB0aGUgY3VycmVudCBzaXplIG9mIHRoZSBzZXJ2ZXIgZ3JvdXAuIiwibWluaW11bSI6MSwidHlwZSI6ImludGVnZXIifX0sInJlcXVpcmVkIjpbImxhYmVsU2VsZWN0b3IiLCJzaXplIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic2NhbGUiOnsibGFiZWxTZWxlY3RvclBhdGgiOiIuc3RhdHVzLmxhYmVsU2VsZWN0b3IiLCJzcGVjUmVwbGljYXNQYXRoIjoiLnNwZWMuc2l6ZSIsInN0YXR1c1JlcGxpY2FzUGF0aCI6Ii5zdGF0dXMuc2l6ZSJ9LCJzdGF0dXMiOnt9fX1dfX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuOC4wIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZWJhY2t1cHJlc3RvcmVzLmNvdWNoYmFzZS5jb20ifSwic3BlYyI6eyJncm91cCI6ImNvdWNoYmFzZS5jb20iLCJuYW1lcyI6eyJraW5kIjoiQ291Y2hiYXNlQmFja3VwUmVzdG9yZSIsImxpc3RLaW5kIjoiQ291Y2hiYXNlQmFja3VwUmVzdG9yZUxpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2ViYWNrdXByZXN0b3JlcyIsInNob3J0TmFtZXMiOlsiY2JyZXN0b3JlIl0sInNpbmd1bGFyIjoiY291Y2hiYXNlYmFja3VwcmVzdG9yZSJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zdGF0dXMuY2FwYWNpdHlVc2VkIiwibmFtZSI6ImNhcGFjaXR5IHVzZWQiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zdGF0dXMubGFzdFJ1biIsIm5hbWUiOiJsYXN0IHJ1biIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLnN0YXR1cy5sYXN0U3VjY2VzcyIsIm5hbWUiOiJsYXN0IHN1Y2Nlc3MiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zdGF0dXMuZHVyYXRpb24iLCJuYW1lIjoiZHVyYXRpb24iLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zdGF0dXMucnVubmluZyIsIm5hbWUiOiJydW5uaW5nIiwidHlwZSI6ImJvb2xlYW4ifSx7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6ImFnZSIsInR5cGUiOiJkYXRlIn1dLCJuYW1lIjoidjIiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlQmFja3VwUmVzdG9yZSBhbGxvd3MgdGhlIHJlc3RvcmF0aW9uIG9mIGFsbCBDb3VjaGJhc2UgY2x1c3RlciBkYXRhIGZyb21cbmEgQ291Y2hiYXNlQmFja3VwIHJlc291cmNlLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUJhY2t1cFJlc3RvcmVTcGVjIGFsbG93cyB0aGUgc3BlY2lmaWNhdGlvbiBvZiBkYXRhIHJlc3RvcmF0aW9uIHRvIGJlXG5jb25maWd1cmVkLiAgVGhpcyBpbmNsdWRlcyB0aGUgYmFja3VwIGFuZCByZXBvc2l0b3J5IHRvIHJlc3RvcmUgZGF0YSBmcm9tLCBhbmRcbnRoZSB0aW1lIHJhbmdlIG9mIGRhdGEgdG8gYmUgcmVzdG9yZWQuIiwicHJvcGVydGllcyI6eyJiYWNrb2ZmTGltaXQiOnsiZGVmYXVsdCI6MiwiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2YgdGltZXMgdGhlIHJlc3RvcmUgam9iIHNob3VsZCB0cnkgdG8gZXhlY3V0ZS4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sImJhY2t1cCI6eyJkZXNjcmlwdGlvbiI6IlRoZSBiYWNrdXAgcmVzb3VyY2UgbmFtZSBhc3NvY2lhdGVkIHdpdGggdGhpcyByZXN0b3JlLCBvciB0aGUgYmFja3VwIFBWQ1xubmFtZSB0byByZXN0b3JlIGZyb20uIiwidHlwZSI6InN0cmluZyJ9LCJidWNrZXRzIjp7ImRlc2NyaXB0aW9uIjoiREVQUkVDQVRFRCAtIGJ5IHNwZWMuZGF0YS5cblNwZWNpZmljIGJ1Y2tldHMgY2FuIGJlIGV4cGxpY2l0bHkgaW5jbHVkZWQgb3IgZXhjbHVkZWQgaW4gdGhlIHJlc3RvcmUsXG5hcyB3ZWxsIGFzIGJ1Y2tldCBtYXBwaW5ncy4gIFRoaXMgZmllbGQgaXMgbm93IGlnbm9yZWQuIiwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sImRhdGEiOnsiZGVzY3JpcHRpb24iOiJEYXRhIGFsbG93cyBjb250cm9sIG92ZXIgd2hhdCBrZXktdmFsdWUvZG9jdW1lbnQgZGF0YSBpcyBpbmNsdWRlZCBpbiB0aGVcbnJlc3RvcmUuICBCeSBkZWZhdWx0LCBhbGwgZGF0YSBpcyBpbmNsdWRlZC4iLCJwcm9wZXJ0aWVzIjp7ImV4Y2x1ZGUiOnsiZGVzY3JpcHRpb24iOiJFeGNsdWRlIGRlZmluZXMgdGhlIGJ1Y2tldHMsIHNjb3BlcyBvciBjb2xsZWN0aW9ucyB0aGF0IGFyZSBleGNsdWRlZCBmcm9tIHRoZSBiYWNrdXAuXG5XaGVuIHRoaXMgZmllbGQgaXMgc2V0LCBpdCBpbXBsaWVzIHRoYXQgYnkgZGVmYXVsdCBldmVyeXRoaW5nIHdpbGwgYmUgYmFja2VkIHVwLFxuYW5kIGRhdGEgaXRlbXMgY2FuIGJlIGV4cGxpY2l0bHkgZXhjbHVkZWQuICBZb3UgbWF5IGRlZmluZSBhbiBleGNsdXNpb24gYXMgYSBidWNrZXRcbi0tIGBteS1idWNrZXRgLCBhIHNjb3BlIC0tIGBteS1idWNrZXQubXktc2NvcGVgLCBvciBhIGNvbGxlY3Rpb24gLS0gYG15LWJ1Y2tldC5teS1zY29wZS5teS1jb2xsZWN0aW9uYC5cbkJ1Y2tldHMgbWF5IGNvbnRhaW4gcGVyaW9kcywgYW5kIHRoZXJlZm9yZSBtdXN0IGJlIGVzY2FwZWQgLS0gYG15XFwuYnVja2V0Lm15LXNjb3BlYCwgYXNcbnBlcmlvZCBpcyB0aGUgc2VwYXJhdG9yIHVzZWQgdG8gZGVsaW1pdCBzY29wZXMgYW5kIGNvbGxlY3Rpb25zLiAgRXhjbHVkZWQgZGF0YSBjYW5ub3Qgb3ZlcmxhcFxuZS5nLiBzcGVjaWZ5aW5nIGBteS1idWNrZXRgIGFuZCBgbXktYnVja2V0Lm15LXNjb3BlYCBpcyBpbGxlZ2FsLiAgVGhpcyBmaWVsZCBjYW5ub3RcbmJlIHVzZWQgYXQgdGhlIHNhbWUgdGltZSBhcyBpbmNsdWRlZCBpdGVtcy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkJ1Y2tldFNjb3BlT3JDb2xsZWN0aW9uTmFtZVdpdGhEZWZhdWx0cyBpcyB0aGUgbmFtZSBvZiBhIGZ1bGx5IHF1YWxpZmVkIGJ1Y2tldCwgc2NvcGUgb3IgY29sbGVjdGlvbi5cblRoZSBfZGVmYXVsdCBzY29wZSBhbmQgY29sbGVjdGlvbiBhcmUgdmFsaWQgZm9yIHRoaXMgdHlwZS5cbkFzIHRoZXNlIG5hbWVzIGFyZSBwZXJpb2Qgc2VwYXJhdGVkLCBhbmQgYnVja2V0cyBjYW4gY29udGFpbiBwZXJpb2RzLCB0aGUgbGF0dGVyIG5lZWRcbnRvIGJlIGVzY2FwZWQuICBUaGlzIHNwZWNpZmljYXRpb24gaXMgYmFzZWQgb24gY2JiYWNrdXBtZ3IuIiwicGF0dGVybiI6Il4oPzpbYS16QS1aMC05XFwtXyVdfFxcXFwuKXsxLDEwMH0oXFwuX2RlZmF1bHQoXFwuX2RlZmF1bHQpP3xcXC5bYS16QS1aMC05XFwtXVthLXpBLVowLTlcXC0lX117MCwyOX0oXFwuW2EtekEtWjAtOVxcLV1bYS16QS1aMC05XFwtJV9dezAsMjl9KT8pPyQiLCJ0eXBlIjoic3RyaW5nIn0sIm1pbkl0ZW1zIjoxLCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoic2V0In0sImZpbHRlcktleXMiOnsiZGVzY3JpcHRpb24iOiJGaWx0ZXJLZXlzIG9ubHkgcmVzdG9yZXMgZG9jdW1lbnRzIHdob3NlIG5hbWVzIG1hdGNoIHRoZSBwcm92aWRlZCByZWd1bGFyIGV4cHJlc3Npb24uIiwidHlwZSI6InN0cmluZyJ9LCJmaWx0ZXJWYWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJGaWx0ZXJWYWx1ZXMgb25seSByZXN0b3JlcyBkb2N1bWVudHMgd2hvc2UgdmFsdWVzIG1hdGNoIHRoZSBwcm92aWRlZCByZWd1bGFyIGV4cHJlc3Npb24uIiwidHlwZSI6InN0cmluZyJ9LCJpbmNsdWRlIjp7ImRlc2NyaXB0aW9uIjoiSW5jbHVkZSBkZWZpbmVzIHRoZSBidWNrZXRzLCBzY29wZXMgb3IgY29sbGVjdGlvbnMgdGhhdCBhcmUgaW5jbHVkZWQgaW4gdGhlIHJlc3RvcmUuXG5XaGVuIHRoaXMgZmllbGQgaXMgc2V0LCBpdCBpbXBsaWVzIHRoYXQgYnkgZGVmYXVsdCBub3RoaW5nIHdpbGwgYmUgcmVzdG9yZWQsXG5hbmQgZGF0YSBpdGVtcyBtdXN0IGJlIGV4cGxpY2l0bHkgaW5jbHVkZWQuICBZb3UgbWF5IGRlZmluZSBhbiBpbmNsdXNpb24gYXMgYSBidWNrZXRcbi0tIGBteS1idWNrZXRgLCBhIHNjb3BlIC0tIGBteS1idWNrZXQubXktc2NvcGVgLCBvciBhIGNvbGxlY3Rpb24gLS0gYG15LWJ1Y2tldC5teS1zY29wZS5teS1jb2xsZWN0aW9uYC5cbkJ1Y2tldHMgbWF5IGNvbnRhaW4gcGVyaW9kcywgYW5kIHRoZXJlZm9yZSBtdXN0IGJlIGVzY2FwZWQgLS0gYG15XFwuYnVja2V0Lm15LXNjb3BlYCwgYXNcbnBlcmlvZCBpcyB0aGUgc2VwYXJhdG9yIHVzZWQgdG8gZGVsaW1pdCBzY29wZXMgYW5kIGNvbGxlY3Rpb25zLiAgSW5jbHVkZWQgZGF0YSBjYW5ub3Qgb3ZlcmxhcFxuZS5nLiBzcGVjaWZ5aW5nIGBteS1idWNrZXRgIGFuZCBgbXktYnVja2V0Lm15LXNjb3BlYCBpcyBpbGxlZ2FsLiAgVGhpcyBmaWVsZCBjYW5ub3RcbmJlIHVzZWQgYXQgdGhlIHNhbWUgdGltZSBhcyBleGNsdWRlZCBpdGVtcy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkJ1Y2tldFNjb3BlT3JDb2xsZWN0aW9uTmFtZVdpdGhEZWZhdWx0cyBpcyB0aGUgbmFtZSBvZiBhIGZ1bGx5IHF1YWxpZmVkIGJ1Y2tldCwgc2NvcGUgb3IgY29sbGVjdGlvbi5cblRoZSBfZGVmYXVsdCBzY29wZSBhbmQgY29sbGVjdGlvbiBhcmUgdmFsaWQgZm9yIHRoaXMgdHlwZS5cbkFzIHRoZXNlIG5hbWVzIGFyZSBwZXJpb2Qgc2VwYXJhdGVkLCBhbmQgYnVja2V0cyBjYW4gY29udGFpbiBwZXJpb2RzLCB0aGUgbGF0dGVyIG5lZWRcbnRvIGJlIGVzY2FwZWQuICBUaGlzIHNwZWNpZmljYXRpb24gaXMgYmFzZWQgb24gY2JiYWNrdXBtZ3IuIiwicGF0dGVybiI6Il4oPzpbYS16QS1aMC05XFwtXyVdfFxcXFwuKXsxLDEwMH0oXFwuX2RlZmF1bHQoXFwuX2RlZmF1bHQpP3xcXC5bYS16QS1aMC05XFwtXVthLXpBLVowLTlcXC0lX117MCwyOX0oXFwuW2EtekEtWjAtOVxcLV1bYS16QS1aMC05XFwtJV9dezAsMjl9KT8pPyQiLCJ0eXBlIjoic3RyaW5nIn0sIm1pbkl0ZW1zIjoxLCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoic2V0In0sIm1hcCI6eyJkZXNjcmlwdGlvbiI6Ik1hcCBhbGxvd3MgZGF0YSBpdGVtcyBpbiB0aGUgcmVzdG9yZSB0byBiZSByZW1hcHBlZCB0byBhIGRpZmZlcmVudCBuYW1lZCBjb250YWluZXIuXG5CdWNrZXRzIGNhbiBiZSByZW1hcHBlZCB0byBvdGhlciBidWNrZXRzIGUuZy4gXCJzb3VyY2U9dGFyZ2V0XCIsIHNjb3BlcyBhbmQgY29sbGVjdGlvbnNcbmNhbiBiZSByZW1hcHBlZCB0byBvdGhlciBzY29wZXMgYW5kIGNvbGxlY3Rpb25zIHdpdGhpbiB0aGUgc2FtZSBidWNrZXQgb25seSBlLmcuXG5cImJ1Y2tldC5zY29wZT1idWNrZXQub3RoZXJcIiBvciBcImJ1Y2tldC5zY29wZS5jb2xsZWN0aW9uPWJ1Y2tldC5zY29wZS5vdGhlclwiLiAgTWFwXG5zb3VyY2VzIG1heSBvbmx5IGJlIHNwZWNpZmllZCBvbmNlLCBhbmQgbWF5IG5vdCBvdmVybGFwLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiUmVzdG9yZU1hcHBpbmcgYWxsb3dzIGRhdGEgdG8gYmUgbWlncmF0ZWQgb24gcmVzdG9yZS4iLCJwcm9wZXJ0aWVzIjp7InNvdXJjZSI6eyJkZXNjcmlwdGlvbiI6IlNvdXJjZSBkZWZpbmVzIHRoZSBkYXRhIHNvdXJjZSBvZiB0aGUgbWFwcGluZywgdGhpcyBtYXkgYmUgZWl0aGVyXG5hIGJ1Y2tldCwgc2NvcGUgb3IgY29sbGVjdGlvbi4iLCJwYXR0ZXJuIjoiXig/OlthLXpBLVowLTlcXC1fJV18XFxcXC4pezEsMTAwfShcXC5fZGVmYXVsdChcXC5fZGVmYXVsdCk/fFxcLlthLXpBLVowLTlcXC1dW2EtekEtWjAtOVxcLSVfXXswLDI5fShcXC5bYS16QS1aMC05XFwtXVthLXpBLVowLTlcXC0lX117MCwyOX0pPyk/JCIsInR5cGUiOiJzdHJpbmcifSwidGFyZ2V0Ijp7ImRlc2NyaXB0aW9uIjoiVGFyZ2V0IGRlZmluZXMgdGhlIGRhdGEgdGFyZ2V0IG9mIHRoZSBtYXBwaW5nLCB0aGlzIG1heSBiZSBlaXRoZXJcbmEgYnVja2V0LCBzY29wZSBvciBjb2xsZWN0aW9uLCBhbmQgbXVzdCByZWZlciB0byB0aGUgc2FtZSB0eXBlXG5hcyB0aGUgcmVzdG9yZSBzb3VyY2UuIiwicGF0dGVybiI6Il4oPzpbYS16QS1aMC05XFwtXyVdfFxcXFwuKXsxLDEwMH0oXFwuX2RlZmF1bHQoXFwuX2RlZmF1bHQpP3xcXC5bYS16QS1aMC05XFwtXVthLXpBLVowLTlcXC0lX117MCwyOX0oXFwuW2EtekEtWjAtOVxcLV1bYS16QS1aMC05XFwtJV9dezAsMjl9KT8pPyQiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJzb3VyY2UiLCJ0YXJnZXQiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC1tYXAta2V5cyI6WyJzb3VyY2UiXSwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6Im1hcCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJlbmQiOnsiZGVzY3JpcHRpb24iOiJFbmQgZGVub3RlcyB0aGUgbGFzdCBiYWNrdXAgdG8gcmVzdG9yZSBmcm9tLiAgT21pdHRpbmcgdGhpcyBmaWVsZCB3aWxsIG9ubHlcbnJlc3RvcmUgdGhlIGJhY2t1cCByZWZlcmVuY2VkIGJ5IHN0YXJ0LiAgVGhpcyBtYXkgYmUgc3BlY2lmaWVkIGFzXG5hbiBpbnRlZ2VyIGluZGV4IChzdGFydGluZyBmcm9tIDEpLCBhIHN0cmluZyBzcGVjaWZ5aW5nIGEgc2hvcnQgZGF0ZVxuREQtTU0tWVlZWSwgdGhlIGJhY2t1cCBuYW1lLCBvciBvbmUgb2YgZWl0aGVyIGBzdGFydGAgb3IgYG9sZGVzdGAga2V5d29yZHMuIiwicHJvcGVydGllcyI6eyJpbnQiOnsiZGVzY3JpcHRpb24iOiJJbnQgcmVmZXJlbmNlcyBhIHJlbGF0aXZlIGJhY2t1cCBieSBpbmRleC4iLCJtaW5pbXVtIjoxLCJ0eXBlIjoiaW50ZWdlciJ9LCJzdHIiOnsiZGVzY3JpcHRpb24iOiJTdHIgcmVmZXJlbmNlcyBhbiBhYnNvbHV0ZSBiYWNrdXAgYnkgbmFtZS4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImZvcmNlVXBkYXRlcyI6eyJkZXNjcmlwdGlvbiI6IkZvcmNlcyBkYXRhIGluIHRoZSBDb3VjaGJhc2UgY2x1c3RlciB0byBiZSBvdmVyd3JpdHRlbiBldmVuIGlmIHRoZSBkYXRhIGluIHRoZSBjbHVzdGVyIGlzIG5ld2VyLlxuQnkgZGVmYXVsdCwgdGhlIHN5c3RlbSBkb2VzIG5vdCBmb3JjZSB1cGRhdGVzLFxuYW5kIGFsbCB1cGRhdGVzIHVzZSBDb3VjaGJhc2UncyBjb25mbGljdCByZXNvbHV0aW9uIG1lY2hhbmlzbSB0byBlbnN1cmVcbnRoYXQgaWYgbmV3ZXIgZGF0YSBleGlzdHMgb24gdGhlIGNsdXN0ZXIsXG5vbGRlciByZXN0b3JlZCBkYXRhIGRvZXMgbm90IG92ZXJ3cml0ZSBpdC5cbkhvd2V2ZXIsIGlmIGBjb3VjaGJhc2ViYWNrdXByZXN0b3Jlcy5zcGVjLmZvcmNlVXBkYXRlc2AgaXMgdHJ1ZSxcbnRoZW4gdGhlIGJhY2t1cCByZWNvcmQgd2lsbCBfYWx3YXlzXyBvdmVyd3JpdGUgdGhlIGNsdXN0ZXIgcmVjb3JkLFxucmVnYXJkbGVzcyBvZiBDb3VjaGJhc2UncyBjb25mbGljdCByZXNvbHV0aW9uLiIsInR5cGUiOiJib29sZWFuIn0sImxvZ1JldGVudGlvbiI6eyJkZWZhdWx0IjoiMTY4aCIsImRlc2NyaXB0aW9uIjoiTnVtYmVyIG9mIGhvdXJzIHRvIGhvbGQgcmVzdG9yZSBzY3JpcHQgbG9ncyBmb3IsIGV2ZXJ5dGhpbmcgb2xkZXIgd2lsbCBiZSBkZWxldGVkLlxuTW9yZSBpbmZvOlxuaHR0cHM6Ly9nb2xhbmcub3JnL3BrZy90aW1lLyNQYXJzZUR1cmF0aW9uIiwidHlwZSI6InN0cmluZyJ9LCJvYmplY3RTdG9yZSI6eyJkZXNjcmlwdGlvbiI6IlRoZSByZW1vdGUgZGVzdGluYXRpb24gZm9yIGJhY2t1cC4iLCJwcm9wZXJ0aWVzIjp7ImVuZHBvaW50Ijp7ImRlc2NyaXB0aW9uIjoiRW5kcG9pbnQgY29udGFpbnMgdGhlIGNvbmZpZ3VyYXRpb24gZm9yIGNvbm5lY3RpbmcgdG8gYSBjdXN0b20gQXp1cmUvUzMvR0NQIGNvbXBsaWFudCBvYmplY3Qgc3RvcmUuXG5JZiBzZXQgd2lsbCBvdmVycmlkZSBgQ291Y2hiYXNlQ2x1c3Rlci5zcGVjLmJhY2t1cC5vYmplY3RFbmRwb2ludGBcblNlZSBodHRwczovL2RvY3MuY291Y2hiYXNlLmNvbS9zZXJ2ZXIvY3VycmVudC9iYWNrdXAtcmVzdG9yZS9jYmJhY2t1cG1nci1jbG91ZC5odG1sI2NvbXBhdGlibGUtb2JqZWN0LXN0b3JlcyIsInByb3BlcnRpZXMiOnsic2VjcmV0Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIG5hbWUgb2YgdGhlIHNlY3JldCwgaW4gdGhpcyBuYW1lc3BhY2UsIHRoYXQgY29udGFpbnMgdGhlIENBIGNlcnRpZmljYXRlIGZvciB2ZXJpZmljYXRpb24gb2YgYSBUTFMgZW5kcG9pbnRcblRoZSBzZWNyZXQgbXVzdCBoYXZlIHRoZSBrZXkgd2l0aCB0aGUgbmFtZSBcInRscy5jcnRcIiIsInR5cGUiOiJzdHJpbmcifSwidXJsIjp7ImRlc2NyaXB0aW9uIjoiVGhlIGhvc3QvYWRkcmVzcyBvZiB0aGUgY3VzdG9tIG9iamVjdCBlbmRwb2ludC4iLCJ0eXBlIjoic3RyaW5nIn0sInVzZVZpcnR1YWxQYXRoIjp7ImRlc2NyaXB0aW9uIjoiVXNlVmlydHVhbFBhdGggd2lsbCBmb3JjZSB0aGUgQVdTIFNESyB0byB1c2UgdGhlIG5ldyB2aXJ0dWFsIHN0eWxlIHBhdGhzXG53aGljaCBhcmUgb2Z0ZW4gcmVxdWlyZWQgYnkgUzMgY29tcGF0aWJsZSBvYmplY3Qgc3RvcmVzLiIsInR5cGUiOiJib29sZWFuIn19LCJ0eXBlIjoib2JqZWN0In0sInNlY3JldCI6eyJkZXNjcmlwdGlvbiI6Ik9ialN0b3JlU2VjcmV0IG11c3QgY29udGFpbiB0d28gZmllbGRzLCBhY2Nlc3Mta2V5LWlkLCBzZWNyZXQtYWNjZXNzLWtleSBhbmQgb3B0aW9uYWxseSBlaXRoZXIgcmVnaW9uIG9yIHJlZnJlc2gtdG9rZW4uXG5UaGVzZSBjb3JyZXNwb25kIHRvIHRoZSBmaWVsZHMgdXNlZCBieSBjYmJhY2t1cG1nclxuaHR0cHM6Ly9kb2NzLmNvdWNoYmFzZS5jb20vc2VydmVyL2N1cnJlbnQvYmFja3VwLXJlc3RvcmUvY2JiYWNrdXBtZ3ItYmFja3VwLmh0bWwjb3B0aW9uYWwtMiIsInR5cGUiOiJzdHJpbmcifSwidXJpIjp7ImRlc2NyaXB0aW9uIjoiVVJJIGlzIGEgcmVmZXJlbmNlIHRvIGEgcmVtb3RlIG9iamVjdCBzdG9yZS5cblRoaXMgaXMgdGhlIHByZWZpeCBvZiB0aGUgb2JqZWN0IHN0b3JlIGFuZCB0aGUgYnVja2V0IG5hbWUuXG5pLmUgczM6Ly9idWNrZXQsIGF6Oi8vYnVja2V0IG9yIGdzOi8vYnVja2V0LiIsInBhdHRlcm4iOiJeKGF6fHMzfGdzKTovLy57Myx9JCIsInR5cGUiOiJzdHJpbmcifSwidXNlSUFNIjp7ImRlc2NyaXB0aW9uIjoiV2hldGhlciB0byBhbGxvdyB0aGUgYmFja3VwIFNESyB0byBhdHRlbXB0IHRvIGF1dGhlbnRpY2F0ZVxudXNpbmcgdGhlIGluc3RhbmNlIG1ldGFkYXRhIGFwaS5cbklmIHNldCwgd2lsbCBvdmVycmlkZSBgQ291Y2hiYXNlQ2x1c3Rlci5zcGVjLmJhY2t1cC51c2VJQU1gLiIsInR5cGUiOiJib29sZWFuIn19LCJ0eXBlIjoib2JqZWN0In0sIm92ZXJ3cml0ZVVzZXJzIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6Ik92ZXJ3cml0ZXMgdGhlIGFscmVhZHkgZXhpc3RpbmcgdXNlcnMgaW4gdGhlIGNsdXN0ZXIgd2hlbiAgdXNlciByZXN0b3JhdGlvbiBpcyBlbmFibGVkIChzcGVjLnNlcnZpY2VzLnVzZXJzKS5cblRoZSBkZWZhdWx0IGJlaGF2aW9yIG9mIGJhY2t1cC9yZXN0b3JlIG9mIHVzZXJzIGlzIHRvIHNraXAgYWxyZWFkeSBleGlzdGluZyB1c2Vycy5cblRoaXMgaXMgb25seSBhdmFpbGFibGUgZm9yIENvdWNoYmFzZSBTZXJ2ZXIgNy42IGFuZCBsYXRlci5cblRoaXMgZmllbGQgZGVmYXVsdHMgdG8gYGZhbHNlYC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJyZXBvIjp7ImRlc2NyaXB0aW9uIjoiUmVwbyBpcyB0aGUgYmFja3VwIGZvbGRlciB0byByZXN0b3JlIGZyb20uICBJZiBubyByZXBvc2l0b3J5IGlzIHNwZWNpZmllZCxcbnRoZSBiYWNrdXAgY29udGFpbmVyIHdpbGwgY2hvb3NlIHRoZSBsYXRlc3QuIiwidHlwZSI6InN0cmluZyJ9LCJzM2J1Y2tldCI6eyJkZXNjcmlwdGlvbiI6IkRFUFJFQ0FURUQgLSBieSBzcGVjLm9iamVjdFN0b3JlLnVyaVxuTmFtZSBvZiBTMyBidWNrZXQgdG8gcmVzdG9yZSBmcm9tLiBJZiBub24tZW1wdHkgdGhpcyBvdmVycmlkZXMgbG9jYWwgYmFja3VwLiIsInBhdHRlcm4iOiJeczM6Ly9bYS16MC05LVxcLlxcL117Myw2M30kIiwidHlwZSI6InN0cmluZyJ9LCJzZXJ2aWNlcyI6eyJkZWZhdWx0Ijp7fSwiZGVzY3JpcHRpb24iOiJUaGlzIGxpc3QgYWNjZXB0cyBhIGNlcnRhaW4gc2V0IG9mIHBhcmFtZXRlcnMgdGhhdCB3aWxsIGRpc2FibGUgdGhhdCBkYXRhIGFuZCBwcmV2ZW50IGl0IGJlaW5nIHJlc3RvcmVkLiIsInByb3BlcnRpZXMiOnsiYW5hbHl0aWNzIjp7ImRlZmF1bHQiOnRydWUsImRlc2NyaXB0aW9uIjoiQW5hbHl0aWNzIHJlc3RvcmVzIGFuYWx5dGljcyBkYXRhc2V0cyBmcm9tIHRoZSBiYWNrdXAuICBUaGlzIGZpZWxkXG5kZWZhdWx0cyB0byB0cnVlLiIsInR5cGUiOiJib29sZWFuIn0sImJ1Y2tldENvbmZpZyI6eyJkZXNjcmlwdGlvbiI6IkJ1Y2tldENvbmZpZyByZXN0b3JlcyBhbGwgYnVja2V0IGNvbmZpZ3VyYXRpb24gc2V0dGluZ3MuXG5JZiB5b3UgYXJlIHJlc3RvcmluZyB0byBjbHVzdGVyIHdpdGggbWFuYWdlZCBidWNrZXRzLCB0aGVuIHRoaXNcbm9wdGlvbiBtYXkgY29uZmxpY3Qgd2l0aCBleGlzdGluZyBidWNrZXQgc2V0dGluZ3MsIGFuZCB0aGUgcmVzdWx0c1xuYXJlIHVuZGVmaW5lZCwgc28gYXZvaWQgdXNlLiAgVGhpcyBvcHRpb24gaXMgaW50ZW5kZWQgZm9yIHVzZVxud2l0aCB1bm1hbmFnZWQgYnVja2V0cy4gIE5vdGUgdGhhdCBidWNrZXQgZHVyYWJpbGl0eSBzZXR0aW5ncyBhcmVcbm5vdCByZXN0b3JlZCBpbiB2ZXJzaW9ucyBsZXNzIHRoYW4gYW5kIGVxdWFsIHRvIDEuMS4wLCBhbmQgd2lsbFxubmVlZCB0byBiZSBtYW51YWxseSBhcHBsaWVkLiAgVGhpcyBmaWVsZCBkZWZhdWx0cyB0byBmYWxzZS4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJidWNrZXRRdWVyeSI6eyJkZWZhdWx0Ijp0cnVlLCJkZXNjcmlwdGlvbiI6IkJ1Y2tldFF1ZXJ5IGVuYWJsZXMgdGhlIGJhY2t1cCBvZiBxdWVyeSBtZXRhZGF0YSBmb3IgYWxsIGJ1Y2tldHMuXG5UaGlzIGZpZWxkIGRlZmF1bHRzIHRvIGB0cnVlYC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJjbHVzdGVyQW5hbHl0aWNzIjp7ImRlZmF1bHQiOnRydWUsImRlc2NyaXB0aW9uIjoiQ2x1c3RlckFuYWx5dGljcyBlbmFibGVzIHRoZSBiYWNrdXAgb2YgY2x1c3Rlci13aWRlIGFuYWx5dGljcyBkYXRhLCBmb3IgZXhhbXBsZSBzeW5vbnltcy5cblRoaXMgZmllbGQgZGVmYXVsdHMgdG8gYHRydWVgLiIsInR5cGUiOiJib29sZWFuIn0sImNsdXN0ZXJRdWVyeSI6eyJkZWZhdWx0Ijp0cnVlLCJkZXNjcmlwdGlvbiI6IkNsdXN0ZXJRdWVyeSBlbmFibGVzIHRoZSBiYWNrdXAgb2YgY2x1c3RlciBsZXZlbCBxdWVyeSBtZXRhZGF0YS5cblRoaXMgZmllbGQgZGVmYXVsdHMgdG8gYHRydWVgLiIsInR5cGUiOiJib29sZWFuIn0sImRhdGEiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJEYXRhIHJlc3RvcmVzIGRvY3VtZW50IGRhdGEgZnJvbSB0aGUgYmFja3VwLiAgVGhpcyBmaWVsZCBkZWZhdWx0c1xudG8gdHJ1ZS4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJldmVudGluZyI6eyJkZWZhdWx0Ijp0cnVlLCJkZXNjcmlwdGlvbiI6IkV2ZW50aW5nIHJlc3RvcmVzIGV2ZW50aW5nIGZ1bmN0aW9ucyBmcm9tIHRoZSBiYWNrdXAuICBUaGlzIGZpZWxkXG5kZWZhdWx0cyB0byB0cnVlLiIsInR5cGUiOiJib29sZWFuIn0sImZ0QWxpYXMiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJGVEFsaWFzIHJlc3RvcmVzIGZ1bGwtdGV4dCBzZWFyY2ggYWxpYXNlcyBmcm9tIHRoZSBiYWNrdXAuICBUaGlzXG5maWVsZCBkZWZhdWx0cyB0byB0cnVlLiIsInR5cGUiOiJib29sZWFuIn0sImZ0SW5kZXgiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJGVEluZGV4IHJlc3RvcmVzIGZ1bGwtdGV4dCBzZWFyY2ggaW5kZXhlcyBmcm9tIHRoZSBiYWNrdXAuICBUaGlzXG5maWVsZCBkZWZhdWx0cyB0byB0cnVlLiIsInR5cGUiOiJib29sZWFuIn0sImdzaUluZGV4Ijp7ImRlZmF1bHQiOnRydWUsImRlc2NyaXB0aW9uIjoiR1NJSW5kZXggcmVzdG9yZXMgZG9jdW1lbnQgaW5kZXhlcyBmcm9tIHRoZSBiYWNrdXAuICBUaGlzIGZpZWxkXG5kZWZhdWx0cyB0byB0cnVlLiIsInR5cGUiOiJib29sZWFuIn0sInVzZXJzIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IlVzZXJzIHJlc3RvcmVzIGNsdXN0ZXIgbGV2ZWwgdXNlcnMsIGluY2x1ZGluZyB0aGVpciByb2xlcyBhbmQgcGVybWlzc2lvbnMuIFRoaXMgaXNcbm9ubHkgYXZhaWxhYmxlIGZvciBDb3VjaGJhc2UgU2VydmVyIDcuNiBhbmQgbGF0ZXIuIFRoaXMgZmllbGQgZGVmYXVsdHMgdG8gYGZhbHNlYC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJ2aWV3cyI6eyJkZWZhdWx0Ijp0cnVlLCJkZXNjcmlwdGlvbiI6IlZpZXdzIHJlc3RvcmVzIHZpZXdzIGZyb20gdGhlIGJhY2t1cC4gIFRoaXMgZmllbGQgZGVmYXVsdHMgdG8gdHJ1ZS4iLCJ0eXBlIjoiYm9vbGVhbiJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzdGFnaW5nVm9sdW1lIjp7ImRlZmF1bHQiOnsic2l6ZSI6IjIwR2kifSwiZGVzY3JpcHRpb24iOiJTdGFnaW5nVm9sdW1lIGNvbnRhaW5zIGNvbmZpZ3VyYXRpb24gcmVsYXRlZCB0byB0aGVcbmVwaGVtZXJhbCB2b2x1bWUgdXNlZCBhcyBzdGFnaW5nIHdoZW4gcmVzdG9yaW5nIGZyb20gYSBjbG91ZCBiYWNrdXAuIiwicHJvcGVydGllcyI6eyJzaXplIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwiZGVmYXVsdCI6IjIwR2kiLCJkZXNjcmlwdGlvbiI6IlNpemUgYWxsb3dzIHRoZSBzcGVjaWZpY2F0aW9uIG9mIGEgc3RhZ2luZyB2b2x1bWUuIE1vcmUgaW5mbzpcbmh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLXJlc291cmNlcy1jb250YWluZXJzLyNyZXNvdXJjZS11bml0cy1pbi1rdWJlcm5ldGVzXG5UaGUgZXBoZW1lcmFsIHZvbHVtZSB3aWxsIG9ubHkgYmUgdXNlZCB3aGVuIHJlc3RvcmluZyBmcm9tIGEgY2xvdWQgcHJvdmlkZXIsXG5pZiB0aGUgYmFja3VwIGpvYiB3YXMgY3JlYXRlZCB1c2luZyBlcGhlbWVyYWwgc3RvcmFnZS5cbk90aGVyd2lzZSB0aGUgcmVzdG9yZSBqb2Igd2lsbCBzaGFyZSBhIHN0YWdpbmcgdm9sdW1lIHdpdGggdGhlIGJhY2t1cCBqb2IuIiwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwidHlwZSI6InN0cmluZyIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwic3RvcmFnZUNsYXNzTmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgU3RvcmFnZUNsYXNzIHRvIHVzZS4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInN0YXJ0Ijp7ImRlc2NyaXB0aW9uIjoiU3RhcnQgZGVub3RlcyB0aGUgZmlyc3QgYmFja3VwIHRvIHJlc3RvcmUgZnJvbS4gIFRoaXMgbWF5IGJlIHNwZWNpZmllZCBhc1xuYW4gaW50ZWdlciBpbmRleCAoc3RhcnRpbmcgZnJvbSAxKSwgYSBzdHJpbmcgc3BlY2lmeWluZyBhIHNob3J0IGRhdGVcbkRELU1NLVlZWVksIHRoZSBiYWNrdXAgbmFtZSwgb3Igb25lIG9mIGVpdGhlciBgc3RhcnRgIG9yIGBvbGRlc3RgIGtleXdvcmRzLiIsInByb3BlcnRpZXMiOnsiaW50Ijp7ImRlc2NyaXB0aW9uIjoiSW50IHJlZmVyZW5jZXMgYSByZWxhdGl2ZSBiYWNrdXAgYnkgaW5kZXguIiwibWluaW11bSI6MSwidHlwZSI6ImludGVnZXIifSwic3RyIjp7ImRlc2NyaXB0aW9uIjoiU3RyIHJlZmVyZW5jZXMgYW4gYWJzb2x1dGUgYmFja3VwIGJ5IG5hbWUuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0aHJlYWRzIjp7ImRlZmF1bHQiOjEsImRlc2NyaXB0aW9uIjoiSG93IG1hbnkgdGhyZWFkcyB0byB1c2UgZHVyaW5nIHRoZSByZXN0b3JlLiIsIm1pbmltdW0iOjEsInR5cGUiOiJpbnRlZ2VyIn0sInR0bFNlY29uZHNBZnRlckZpbmlzaGVkIjp7ImRlc2NyaXB0aW9uIjoiTnVtYmVyIG9mIHNlY29uZHMgdG8gZWxhcHNlIGJlZm9yZSBhIGNvbXBsZXRlZCBqb2IgaXMgZGVsZXRlZC4iLCJmb3JtYXQiOiJpbnQzMiIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUJhY2t1cFJlc3RvcmVTdGF0dXMgcHJvdmlkZXMgc3RhdHVzIGluZGljYXRpb25zIG9mIGEgcmVzdG9yZSBmcm9tXG5iYWNrdXAuICBUaGlzIGluY2x1ZGVzIHdoZXRoZXIgb3Igbm90IHRoZSByZXN0b3JlIGlzIHJ1bm5pbmcsIHdoZXRoZXIgdGhlXG5yZXN0b3JlIHN1Y2NlZWQgb3Igbm90LCBhbmQgdGhlIGR1cmF0aW9uIHRoZSByZXN0b3JlIHRvb2suIiwicHJvcGVydGllcyI6eyJhcmNoaXZlIjp7ImRlc2NyaXB0aW9uIjoiTG9jYXRpb24gb2YgQmFja3VwIEFyY2hpdmUuIiwidHlwZSI6InN0cmluZyJ9LCJiYWNrdXBzIjp7ImRlc2NyaXB0aW9uIjoiQmFja3VwcyBnaXZlcyB1cyBhIGZ1bGwgbGlzdCBvZiBhbGwgYmFja3Vwc1xuYW5kIHRoZWlyIHJlc3BlY3RpdmUgcmVwb3NpdG9yeSBsb2NhdGlvbnMuIiwiaXRlbXMiOnsicHJvcGVydGllcyI6eyJmdWxsIjp7ImRlc2NyaXB0aW9uIjoiRnVsbCBiYWNrdXAgaW5zaWRlIHRoZSByZXBvc2l0b3J5LiIsInR5cGUiOiJzdHJpbmcifSwiaW5jcmVtZW50YWxzIjp7ImRlc2NyaXB0aW9uIjoiSW5jcmVtZW50YWwgYmFja3VwcyBpbnNpZGUgdGhlIHJlcG9zaXRvcnkuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIHJlcG9zaXRvcnkuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJkdXJhdGlvbiI6eyJkZXNjcmlwdGlvbiI6IkR1cmF0aW9uIHRlbGxzIHVzIGhvdyBsb25nIHRoZSBsYXN0IHJlc3RvcmUgdG9vay4gIE1vcmUgaW5mbzpcbmh0dHBzOi8vZ29sYW5nLm9yZy9wa2cvdGltZS8jUGFyc2VEdXJhdGlvbiIsInR5cGUiOiJzdHJpbmcifSwiZmFpbGVkIjp7ImRlc2NyaXB0aW9uIjoiRmFpbGVkIGluZGljYXRlcyB3aGV0aGVyIHRoZSBtb3N0IHJlY2VudCByZXN0b3JlIGhhcyBmYWlsZWQuIiwidHlwZSI6ImJvb2xlYW4ifSwiam9iIjp7ImRlc2NyaXB0aW9uIjoiREVQUkVDQVRFRCAtIGZpZWxkIG1heSBubyBsb25nZXIgYmUgcG9wdWxhdGVkLlxuSm9iIHRlbGxzIHVzIHdoaWNoIGpvYiBpcyBydW5uaW5nL3JhbiBsYXN0LiIsInR5cGUiOiJzdHJpbmcifSwibGFzdEZhaWx1cmUiOnsiZGVzY3JpcHRpb24iOiJMYXN0RmFpbHVyZSB0ZWxscyB1cyB0aGUgdGltZSB0aGUgbGFzdCBmYWlsZWQgcmVzdG9yZSBmYWlsZWQuIiwiZm9ybWF0IjoiZGF0ZS10aW1lIiwidHlwZSI6InN0cmluZyJ9LCJsYXN0UnVuIjp7ImRlc2NyaXB0aW9uIjoiTGFzdFJ1biB0ZWxscyB1cyB0aGUgdGltZSB0aGUgbGFzdCByZXN0b3JlIGpvYiBzdGFydGVkLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibGFzdFN1Y2Nlc3MiOnsiZGVzY3JpcHRpb24iOiJMYXN0U3VjY2VzcyBnaXZlcyB1cyB0aGUgdGltZSB0aGUgbGFzdCBzdWNjZXNzZnVsIHJlc3RvcmUgZmluaXNoZWQuIiwiZm9ybWF0IjoiZGF0ZS10aW1lIiwidHlwZSI6InN0cmluZyJ9LCJvdXRwdXQiOnsiZGVzY3JpcHRpb24iOiJERVBSRUNBVEVEIC0gZmllbGQgbWF5IG5vIGxvbmdlciBiZSBwb3B1bGF0ZWQuXG5PdXRwdXQgcmVwb3J0cyB1c2VmdWwgaW5mb3JtYXRpb24gZnJvbSB0aGUgYmFja3VwIHByb2Nlc3MuIiwidHlwZSI6InN0cmluZyJ9LCJwb2QiOnsiZGVzY3JpcHRpb24iOiJERVBSRUNBVEVEIC0gZmllbGQgbWF5IG5vIGxvbmdlciBiZSBwb3B1bGF0ZWQuXG5Qb2QgdGVsbHMgdXMgd2hpY2ggcG9kIGlzIHJ1bm5pbmcvcmFuIGxhc3QuIiwidHlwZSI6InN0cmluZyJ9LCJyZXBvIjp7ImRlc2NyaXB0aW9uIjoiUmVwbyBpcyB3aGVyZSB3ZSBhcmUgY3VycmVudGx5IHBlcmZvcm1pbmcgb3BlcmF0aW9ucy4iLCJ0eXBlIjoic3RyaW5nIn0sInJ1bm5pbmciOnsiZGVzY3JpcHRpb24iOiJSdW5uaW5nIGluZGljYXRlcyB3aGV0aGVyIGEgcmVzdG9yZSBpcyBjdXJyZW50bHkgYmVpbmcgcGVyZm9ybWVkLiIsInR5cGUiOiJib29sZWFuIn19LCJyZXF1aXJlZCI6WyJmYWlsZWQiLCJydW5uaW5nIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlfV19fQ==
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuOC4wIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZWNvbGxlY3Rpb25ncm91cHMuY291Y2hiYXNlLmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiY291Y2hiYXNlLmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJDb3VjaGJhc2VDb2xsZWN0aW9uR3JvdXAiLCJsaXN0S2luZCI6IkNvdWNoYmFzZUNvbGxlY3Rpb25Hcm91cExpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2Vjb2xsZWN0aW9uZ3JvdXBzIiwic2luZ3VsYXIiOiJjb3VjaGJhc2Vjb2xsZWN0aW9uZ3JvdXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7Im5hbWUiOiJ2MiIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJDb3VjaGJhc2VDb2xsZWN0aW9uR3JvdXAgcmVwcmVzZW50IHRoZSBmaW5lc3QgZ3JhaW5lZCBzaXplIG9mIGRhdGEgc3RvcmFnZSBpbiBDb3VjaGJhc2UuXG5Db2xsZWN0aW9ucyBjb250YWluIGFsbCBkb2N1bWVudHMgYW5kIGluZGV4ZXMgaW4gdGhlIHN5c3RlbS4gIENvbGxlY3Rpb25zIGFsc28gZm9ybVxudGhlIGZpbmVzdCBncmFpbiBiYXNpcyBmb3Igcm9sZS1iYXNlZCBhY2Nlc3MgY29udHJvbCAoUkJBQykgYW5kIGNyb3NzLWRhdGFjZW50ZXJcbnJlcGxpY2F0aW9uIChYRENSKS4gIEluIG9yZGVyIHRvIGJlIGNvbnNpZGVyZWQgYnkgdGhlIE9wZXJhdG9yLCBldmVyeSBjb2xsZWN0aW9uIGdyb3VwXG5tdXN0IGJlIHJlZmVyZW5jZWQgYnkgYSBgQ291Y2hiYXNlU2NvcGVgIG9yIGBDb3VjaGJhc2VTY29wZUdyb3VwYCByZXNvdXJjZS4gIFVubGlrZSB0aGVcbkNvdWNoYmFzZUNvbGxlY3Rpb24gcmVzb3VyY2UsIGEgY29sbGVjdGlvbiBncm91cCByZXByZXNlbnRzIG11bHRpcGxlIGNvbGxlY3Rpb25zLCB3aXRoXG5jb21tb24gY29uZmlndXJhdGlvbiBwYXJhbWV0ZXJzLCB0byBiZSBleHByZXNzZWQgYXMgYSBzaW5nbGUgcmVzb3VyY2UsIG1pbmltaXppbmcgcmVxdWlyZWRcbmNvbmZpZ3VyYXRpb24gYW5kIEt1YmVybmV0ZXMgQVBJIHRyYWZmaWMuICBJdCBhbHNvIGZvcm1zIHRoZSBiYXNpcyBvZiBDb3VjaGJhc2UgUkJBQ1xuc2VjdXJpdHkgYm91bmRhcmllcy4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgdGhlIHJlc291cmNlLiIsInByb3BlcnRpZXMiOnsiaGlzdG9yeSI6eyJkZXNjcmlwdGlvbiI6Ikhpc3RvcnkgZGVmaW5lcyB3aGV0aGVyIGNoYW5nZSBoaXN0b3J5IGlzIHJldGFpbmVkIGZvciB0aGUgY29sbGVjdGlvbi5cbklmIHRoaXMgZmllbGQgaXMgc2V0LCBpdCB3aWxsIG92ZXJyaWRlIHRoZSBoaXN0b3J5UmV0ZW50aW9uLmNvbGxlY3Rpb25EZWZhdWx0IGJ1Y2tldCBsZXZlbCB2YWx1ZS5cblRoaXMgaXMgb25seSBzdXBwb3J0ZWQgd2l0aCBzdG9yYWdlQmFja2VuZD1tYWdtYSBhdCB0aGUgYnVja2V0IGxldmVsLiIsInR5cGUiOiJib29sZWFuIn0sIm1heFRUTCI6eyJkZXNjcmlwdGlvbiI6Ik1heFRUTCBkZWZpbmVzIGhvdyBsb25nIGEgZG9jdW1lbnQgaXMgcGVybWl0dGVkIHRvIGV4aXN0IGZvciwgd2l0aG91dFxubW9kaWZpY2F0aW9uLCB1bnRpbCBpdCBpcyBhdXRvbWF0aWNhbGx5IGRlbGV0ZWQuICBUaGlzIGZpZWxkIHRha2VzIHByZWNlZGVuY2Ugb3ZlclxuYW55IFRUTCBkZWZpbmVkIGF0IHRoZSBidWNrZXQgbGV2ZWwuICBUaGlzIGlzIGEgZGVmYXVsdCwgYW5kIG1heGltdW1cbnRpbWUtdG8tbGl2ZSBhbmQgbWF5IGJlIHNldCB0byBhIGxvd2VyIHZhbHVlIGJ5IHRoZSBjbGllbnQuICBJZiB0aGUgY2xpZW50IHNwZWNpZmllc1xuYSBoaWdoZXIgdmFsdWUsIHRoZW4gaXQgaXMgdHJ1bmNhdGVkIHRvIHRoZSBtYXhpbXVtIGR1cmFiaWxpdHkuICBEb2N1bWVudHMgYXJlXG5yZW1vdmVkIGJ5IENvdWNoYmFzZSwgYWZ0ZXIgdGhleSBoYXZlIGV4cGlyZWQsIHdoZW4gZWl0aGVyIGFjY2Vzc2VkLCB0aGUgZXhwaXJ5XG5wYWdlciBpcyBydW4sIG9yIHRoZSBidWNrZXQgaXMgY29tcGFjdGVkLiAgV2hlbiBzZXQgdG8gMCwgdGhlbiBkb2N1bWVudHMgYXJlIG5vdFxuZXhwaXJlZCBieSBkZWZhdWx0LiAgVGhpcyBmaWVsZCBtdXN0IGVpdGhlciBiZSBhIGR1cmF0aW9uIGluIHRoZSByYW5nZSAwLTIxNDc0ODM2NDhzIG9yIFwiLTFcIixcbmRlZmF1bHRpbmcgdG8gMC4gSWYgc2V0IHRvIFwiLTFcIiwgdGhlIGNvbGxlY3Rpb24ncyBidWNrZXQgd2lsbCBiZSBwcmV2ZW50ZWQgZnJvbSBzZXR0aW5nIGFcbmRlZmF1bHQgZXhwaXJhdGlvbiBvbiB0aGUgY29sbGVjdGlvbidzIGRvY3VtZW50cy4gTW9yZSBpbmZvOlxuaHR0cHM6Ly9nb2xhbmcub3JnL3BrZy90aW1lLyNQYXJzZUR1cmF0aW9uIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lcyI6eyJkZXNjcmlwdGlvbiI6Ik5hbWVzIHNwZWNpZmllcyB0aGUgbmFtZXMgb2YgdGhlIGNvbGxlY3Rpb25zLiAgVW5saWtlIENvdWNoYmFzZUNvbGxlY3Rpb24sIHdoaWNoXG5zcGVjaWZpZXMgYSBzaW5nbGUgY29sbGVjdGlvbiwgYSBjb2xsZWN0aW9uIGdyb3VwIHNwZWNpZmllcyBtdWx0aXBsZSwgYW5kIHRoZVxuY29sbGVjdGlvbiBncm91cCBtdXN0IHNwZWNpZnkgYXQgbGVhc3Qgb25lIGNvbGxlY3Rpb24gbmFtZS5cbkFueSBjb2xsZWN0aW9uIG5hbWVzIHNwZWNpZmllZCBtdXN0IGJlIHVuaXF1ZS5cbkNvbGxlY3Rpb24gbmFtZXMgbXVzdCBiZSAxLTI1MSBjaGFyYWN0ZXJzIGluIGxlbmd0aCwgY29udGFpbiBvbmx5IFthLXpBLVowLTlfLSVdXG5hbmQgbm90IHN0YXJ0IHdpdGggZWl0aGVyIF8gb3IgJS4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IlNjb3BlT3JDb2xsZWN0aW9uTmFtZSBpcyBhIGdlbmVyaWMgdHlwZSB0byBjYXB0dXJlIGEgdmFsaWRcbnNjb3BlIG9yIGNvbGxlY3Rpb24gbmFtZS4gIFRoZXNlIG11c3QgY29uc2lzdCBvZiAxLTI1MSBjaGFyYWN0ZXJzLFxuaW5jbHVkZSBvbmx5IEEtWiwgYS16LCAwLTksIC0sIF8gb3IgJSwgYW5kIG11c3Qgbm90IHN0YXJ0IHdpdGhcbl8gKHdoaWNoIGlzIGFuIGludGVybmFsIG1hcmtlcikgb3IgJSAod2hpY2ggaXMgcHJvYmFibHkgYW4gZXNjYXBlXG5jaGFyYWN0ZXIgaW4gbGFuZ3VhZ2UgWCkuIiwibWF4TGVuZ3RoIjoyNTEsIm1pbkxlbmd0aCI6MSwicGF0dGVybiI6Il5bYS16QS1aMC05XFwtXVthLXpBLVowLTlcXC0lX117MCwyNTB9JCIsInR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6InNldCJ9fSwicmVxdWlyZWQiOlsibmFtZXMiXSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWV9XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuOC4wIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZWNvbGxlY3Rpb25zLmNvdWNoYmFzZS5jb20ifSwic3BlYyI6eyJncm91cCI6ImNvdWNoYmFzZS5jb20iLCJuYW1lcyI6eyJraW5kIjoiQ291Y2hiYXNlQ29sbGVjdGlvbiIsImxpc3RLaW5kIjoiQ291Y2hiYXNlQ29sbGVjdGlvbkxpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2Vjb2xsZWN0aW9ucyIsInNpbmd1bGFyIjoiY291Y2hiYXNlY29sbGVjdGlvbiJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUNvbGxlY3Rpb24gcmVwcmVzZW50IHRoZSBmaW5lc3QgZ3JhaW5lZCBzaXplIG9mIGRhdGEgc3RvcmFnZSBpbiBDb3VjaGJhc2UuXG5Db2xsZWN0aW9ucyBjb250YWluIGFsbCBkb2N1bWVudHMgYW5kIGluZGV4ZXMgaW4gdGhlIHN5c3RlbS4gIENvbGxlY3Rpb25zIGFsc28gZm9ybVxudGhlIGZpbmVzdCBncmFpbiBiYXNpcyBmb3Igcm9sZS1iYXNlZCBhY2Nlc3MgY29udHJvbCAoUkJBQykgYW5kIGNyb3NzLWRhdGFjZW50ZXJcbnJlcGxpY2F0aW9uIChYRENSKS4gIEluIG9yZGVyIHRvIGJlIGNvbnNpZGVyZWQgYnkgdGhlIE9wZXJhdG9yLCBldmVyeSBjb2xsZWN0aW9uXG5tdXN0IGJlIHJlZmVyZW5jZWQgYnkgYSBgQ291Y2hiYXNlU2NvcGVgIG9yIGBDb3VjaGJhc2VTY29wZUdyb3VwYCByZXNvdXJjZS4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVmYXVsdCI6e30sImRlc2NyaXB0aW9uIjoiU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIHRoZSByZXNvdXJjZS4iLCJwcm9wZXJ0aWVzIjp7Imhpc3RvcnkiOnsiZGVzY3JpcHRpb24iOiJIaXN0b3J5IGRlZmluZXMgd2hldGhlciBjaGFuZ2UgaGlzdG9yeSBpcyByZXRhaW5lZCBmb3IgdGhlIGNvbGxlY3Rpb24uXG5JZiB0aGlzIGZpZWxkIGlzIHNldCwgaXQgd2lsbCBvdmVycmlkZSB0aGUgaGlzdG9yeVJldGVudGlvbi5jb2xsZWN0aW9uRGVmYXVsdCBidWNrZXQgbGV2ZWwgdmFsdWUuXG5UaGlzIGlzIG9ubHkgc3VwcG9ydGVkIHdpdGggc3RvcmFnZUJhY2tlbmQ9bWFnbWEgYXQgdGhlIGJ1Y2tldCBsZXZlbC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJtYXhUVEwiOnsiZGVzY3JpcHRpb24iOiJNYXhUVEwgZGVmaW5lcyBob3cgbG9uZyBhIGRvY3VtZW50IGlzIHBlcm1pdHRlZCB0byBleGlzdCBmb3IsIHdpdGhvdXRcbm1vZGlmaWNhdGlvbiwgdW50aWwgaXQgaXMgYXV0b21hdGljYWxseSBkZWxldGVkLiAgVGhpcyBmaWVsZCB0YWtlcyBwcmVjZWRlbmNlIG92ZXJcbmFueSBUVEwgZGVmaW5lZCBhdCB0aGUgYnVja2V0IGxldmVsLiAgVGhpcyBpcyBhIGRlZmF1bHQsIGFuZCBtYXhpbXVtXG50aW1lLXRvLWxpdmUgYW5kIG1heSBiZSBzZXQgdG8gYSBsb3dlciB2YWx1ZSBieSB0aGUgY2xpZW50LiAgSWYgdGhlIGNsaWVudCBzcGVjaWZpZXNcbmEgaGlnaGVyIHZhbHVlLCB0aGVuIGl0IGlzIHRydW5jYXRlZCB0byB0aGUgbWF4aW11bSBkdXJhYmlsaXR5LiAgRG9jdW1lbnRzIGFyZVxucmVtb3ZlZCBieSBDb3VjaGJhc2UsIGFmdGVyIHRoZXkgaGF2ZSBleHBpcmVkLCB3aGVuIGVpdGhlciBhY2Nlc3NlZCwgdGhlIGV4cGlyeVxucGFnZXIgaXMgcnVuLCBvciB0aGUgYnVja2V0IGlzIGNvbXBhY3RlZC4gIFdoZW4gc2V0IHRvIDAsIHRoZW4gZG9jdW1lbnRzIGFyZSBub3RcbmV4cGlyZWQgYnkgZGVmYXVsdC4gIFRoaXMgZmllbGQgbXVzdCBlaXRoZXIgYmUgYSBkdXJhdGlvbiBpbiB0aGUgcmFuZ2UgMC0yMTQ3NDgzNjQ4cyBvciBcIi0xXCIsXG5kZWZhdWx0aW5nIHRvIDAuIElmIHNldCB0byBcIi0xXCIsIHRoZSBjb2xsZWN0aW9uJ3MgYnVja2V0IHdpbGwgYmUgcHJldmVudGVkIGZyb20gc2V0dGluZyBhXG5kZWZhdWx0IGV4cGlyYXRpb24gb24gdGhlIGNvbGxlY3Rpb24ncyBkb2N1bWVudHMuIE1vcmUgaW5mbzpcbmh0dHBzOi8vZ29sYW5nLm9yZy9wa2cvdGltZS8jUGFyc2VEdXJhdGlvbiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgc3BlY2lmaWVzIHRoZSBuYW1lIG9mIHRoZSBjb2xsZWN0aW9uLiAgQnkgZGVmYXVsdCwgdGhlIG1ldGFkYXRhLm5hbWUgaXNcbnVzZWQgdG8gZGVmaW5lIHRoZSBjb2xsZWN0aW9uIG5hbWUsIGhvd2V2ZXIsIGR1ZSB0byB0aGUgbGltaXRlZCBjaGFyYWN0ZXIgc2V0LFxudGhpcyBmaWVsZCBjYW4gYmUgdXNlZCB0byBvdmVycmlkZSB0aGUgZGVmYXVsdCBhbmQgcHJvdmlkZSB0aGUgZnVsbCBmdW5jdGlvbmFsaXR5LlxuQWRkaXRpb25hbGx5IHRoZSBgbWV0YWRhdGEubmFtZWAgZmllbGQgaXMgYSBETlMgbGFiZWwsIGFuZCB0aHVzIGxpbWl0ZWQgdG8gNjNcbmNoYXJhY3RlcnMsIHRoaXMgZmllbGQgbXVzdCBiZSB1c2VkIGlmIHRoZSBuYW1lIGlzIGxvbmdlciB0aGFuIHRoaXMgbGltaXQuXG5Db2xsZWN0aW9uIG5hbWVzIG11c3QgYmUgMS0yNTEgY2hhcmFjdGVycyBpbiBsZW5ndGgsIGNvbnRhaW4gb25seSBbYS16QS1aMC05Xy0lXVxuYW5kIG5vdCBzdGFydCB3aXRoIGVpdGhlciBfIG9yICUuIiwibWF4TGVuZ3RoIjoyNTEsIm1pbkxlbmd0aCI6MSwicGF0dGVybiI6Il5bYS16QS1aMC05XFwtXVthLXpBLVowLTlcXC0lX117MCwyNTB9JCIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZX1dfX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuOC4wIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZXJvbGViaW5kaW5ncy5jb3VjaGJhc2UuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJjb3VjaGJhc2UuY29tIiwibmFtZXMiOnsia2luZCI6IkNvdWNoYmFzZVJvbGVCaW5kaW5nIiwibGlzdEtpbmQiOiJDb3VjaGJhc2VSb2xlQmluZGluZ0xpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2Vyb2xlYmluZGluZ3MiLCJzaW5ndWxhciI6ImNvdWNoYmFzZXJvbGViaW5kaW5nIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjIiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlUm9sZUJpbmRpbmcgYWxsb3dzIGFzc29jaWF0aW9uIG9mIENvdWNoYmFzZSB1c2VycyB3aXRoIGdyb3Vwcy4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJDb3VjaGJhc2VSb2xlQmluZGluZ1NwZWMgZGVmaW5lcyB0aGUgZ3JvdXAgb2Ygc3ViamVjdHMgaS5lLiB1c2VycywgYW5kIHRoZVxucm9sZSBpLmUuIGdyb3VwIHRoZXkgYXJlIGEgbWVtYmVyIG9mLiIsInByb3BlcnRpZXMiOnsicm9sZVJlZiI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUdyb3VwIGJlaW5nIGJvdW5kIHRvIHN1YmplY3RzLiIsInByb3BlcnRpZXMiOnsia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgb2Ygcm9sZSB0byB1c2UgZm9yIGJpbmRpbmcuIiwiZW51bSI6WyJDb3VjaGJhc2VHcm91cCJdLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHJvbGUgcmVzb3VyY2UgdG8gdXNlIGZvciBiaW5kaW5nLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImtpbmQiLCJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3ViamVjdHMiOnsiZGVzY3JpcHRpb24iOiJMaXN0IG9mIHVzZXJzIHRvIGJpbmQgYSByb2xlIHRvLiIsIml0ZW1zIjp7InByb3BlcnRpZXMiOnsia2luZCI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZSB1c2VyL2dyb3VwIGtpbmQuIiwiZW51bSI6WyJDb3VjaGJhc2VVc2VyIl0sInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgQ291Y2hiYXNlIHVzZXIgcmVzb3VyY2UuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsia2luZCIsIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbInJvbGVSZWYiLCJzdWJqZWN0cyJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZX1dfX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuOC4wIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZXVzZXJzLmNvdWNoYmFzZS5jb20ifSwic3BlYyI6eyJncm91cCI6ImNvdWNoYmFzZS5jb20iLCJuYW1lcyI6eyJraW5kIjoiQ291Y2hiYXNlVXNlciIsImxpc3RLaW5kIjoiQ291Y2hiYXNlVXNlckxpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2V1c2VycyIsInNpbmd1bGFyIjoiY291Y2hiYXNldXNlciJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZVVzZXIgYWxsb3dzIHRoZSBhdXRvbWF0aW9uIG9mIENvdWNoYmFzZSB1c2VyIG1hbmFnZW1lbnQuIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LlxuU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kXG5tYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuXG5TZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by5cbkNhbm5vdCBiZSB1cGRhdGVkLlxuSW4gQ2FtZWxDYXNlLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlVXNlclNwZWMgYWxsb3dzIHRoZSBzcGVjaWZpY2F0aW9uIG9mIENvdWNoYmFzZSB1c2VyIGNvbmZpZ3VyYXRpb24uIiwicHJvcGVydGllcyI6eyJhdXRoRG9tYWluIjp7ImRlc2NyaXB0aW9uIjoiVGhlIGRvbWFpbiB3aGljaCBwcm92aWRlcyB1c2VyIGF1dGhlbnRpY2F0aW9uLiIsImVudW0iOlsibG9jYWwiLCJleHRlcm5hbCJdLCJ0eXBlIjoic3RyaW5nIn0sImF1dGhTZWNyZXQiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIEt1YmVybmV0ZXMgc2VjcmV0IHdpdGggcGFzc3dvcmQgZm9yIENvdWNoYmFzZSBkb21haW4uIiwidHlwZSI6InN0cmluZyJ9LCJmdWxsTmFtZSI6eyJkZXNjcmlwdGlvbiI6IkZ1bGwgTmFtZSBvZiBDb3VjaGJhc2UgdXNlci4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJVc2VybmFtZSBvZiB0aGUgY291Y2hiYXNlIHVzZXIuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiYXV0aERvbWFpbiJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZX1dfX0=
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.connect.redhat.com/couchbase/cloud-native-gateway@sha256:50bbc00cce14ec968c9b8e9ef06a6c5bd2860d38d973cf7af7271d4ff66fe9cc
  name: couchbase-cloud-native-gateway
- image: registry.connect.redhat.com/couchbase/exporter@sha256:de3bacf8233553452db1d9cec7c98b28d12c41aa025d830d6b7c5de0da9723b1
  name: couchbase-metrics
- image: registry.connect.redhat.com/couchbase/operator-backup@sha256:382511f532b0206d2bb0cecc8f91b055809b5ccf89136b6d37d55a40e266812f
  name: couchbase-backup
- image: registry.connect.redhat.com/couchbase/operator-bundle@sha256:66bd3eba0b68c317fe128c6713488cb6374f9647095768d3f7eed8120bf02e77
  name: ""
- image: registry.connect.redhat.com/couchbase/operator@sha256:df61928b064014d851c6e7dff6dcd63a433a27fa5623254b6e389c3eea170e36
  name: couchbase-operator
- image: registry.connect.redhat.com/couchbase/server@sha256:033c0b2b8eb12ac63a158754dce20d9787a470c77252c60bd4d9e11f5b2dbc7a
  name: couchbase-server
- image: registry.connect.redhat.com/couchbase/server@sha256:437cd5aa05ff057b17f47d2500dec7cefca21682eb0f4badff4538dc164bc1a7
  name: couchbase-server-7_6_3_4
- image: registry.connect.redhat.com/couchbase/server@sha256:4e0d41b559c5d536aa06709457d6c788fd039b0c915c14f2d429213bdfeff824
  name: couchbase-server-7_2_6_2
- image: registry.connect.redhat.com/couchbase/server@sha256:643272bd58b0b584863400d281f1dcb147099c7f2120a947347be4b1f97391a7
  name: couchbase-server-7_6_2_3
schema: olm.bundle
---
image: registry.connect.redhat.com/couchbase/operator-bundle@sha256:2dc8147fab1178a5e3c6e6fca468d654beecd6b186513772a4ec849ea81e10b0
name: couchbase-operator.v2.8.1-1
package: couchbase-enterprise-certified
properties:
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseAutoscaler
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseBackup
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseBackupRestore
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseBucket
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseCluster
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseCollection
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseCollectionGroup
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseEphemeralBucket
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseGroup
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseMemcachedBucket
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseMigrationReplication
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseReplication
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseRoleBinding
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseScope
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseScopeGroup
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseUser
    version: v2
- type: olm.package
  value:
    packageName: couchbase-enterprise-certified
    version: 2.8.1-1
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuOC4xIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZW1lbWNhY2hlZGJ1Y2tldHMuY291Y2hiYXNlLmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiY291Y2hiYXNlLmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJDb3VjaGJhc2VNZW1jYWNoZWRCdWNrZXQiLCJsaXN0S2luZCI6IkNvdWNoYmFzZU1lbWNhY2hlZEJ1Y2tldExpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2VtZW1jYWNoZWRidWNrZXRzIiwic2luZ3VsYXIiOiJjb3VjaGJhc2VtZW1jYWNoZWRidWNrZXQifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3BlYy5tZW1vcnlRdW90YSIsIm5hbWUiOiJtZW1vcnkgcXVvdGEiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5tZXRhZGF0YS5jcmVhdGlvblRpbWVzdGFtcCIsIm5hbWUiOiJhZ2UiLCJ0eXBlIjoiZGF0ZSJ9XSwibmFtZSI6InYyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkRFUFJFQ0FURUQgLSBNZW1jYWNoZWQgYnVja2V0cyBhcmUgbm93IGRlcHJlY2F0ZWQgaW4gQ291Y2hiYXNlIFNlcnZlciBhbmQgc2hvdWxkIG5vdCBiZSB1c2VkLCB0aGV5IHdpbGwgYmUgcmVtb3ZlZCBpbiBhIGZ1dHVyZSByZWxlYXNlLlxuVGhlIENvdWNoYmFzZU1lbWNhY2hlZEJ1Y2tldCByZXNvdXJjZSBkZWZpbmVzIGEgc2V0IG9mIGRvY3VtZW50cyBpbiBDb3VjaGJhc2Ugc2VydmVyLlxuQSBDb3VjaGJhc2UgY2xpZW50IGNvbm5lY3RzIHRvIGFuZCBvcGVyYXRlcyBvbiBhIGJ1Y2tldCwgd2hpY2ggcHJvdmlkZXMgaW5kZXBlbmRlbnRcbm1hbmFnZW1lbnQgb2YgYSBzZXQgZG9jdW1lbnRzIGFuZCBhIHNlY3VyaXR5IGJvdW5kYXJ5IGZvciByb2xlIGJhc2VkIGFjY2VzcyBjb250cm9sLlxuQSBDb3VjaGJhc2VFcGhlbWVyYWxCdWNrZXQgcHJvdmlkZXMgaW4tbWVtb3J5IG9ubHkgc3RvcmFnZSBmb3IgZG9jdW1lbnRzIGNvbnRhaW5lZCBieSBpdC4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVmYXVsdCI6e30sImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlTWVtY2FjaGVkQnVja2V0U3BlYyBpcyB0aGUgc3BlY2lmaWNhdGlvbiBmb3IgYSBNZW1jYWNoZWQgYnVja2V0XG5yZXNvdXJjZSwgYW5kIGFsbG93cyB0aGUgYnVja2V0IHRvIGJlIGN1c3RvbWl6ZWQuIiwicHJvcGVydGllcyI6eyJlbmFibGVGbHVzaCI6eyJkZXNjcmlwdGlvbiI6IkVuYWJsZUZsdXNoIGRlZmluZXMgd2hldGhlciBhIGNsaWVudCBjYW4gZGVsZXRlIGFsbCBkb2N1bWVudHMgaW4gYSBidWNrZXQuXG5UaGlzIGZpZWxkIGRlZmF1bHRzIHRvIGZhbHNlLiIsInR5cGUiOiJib29sZWFuIn0sIm1lbW9yeVF1b3RhIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwiZGVmYXVsdCI6IjEwME1pIiwiZGVzY3JpcHRpb24iOiJNZW1vcnlRdW90YSBpcyBhIG1lbW9yeSBsaW1pdCB0byB0aGUgc2l6ZSBvZiBhIGJ1Y2tldC4gVGhlIG1lbW9yeSBxdW90YVxuaXMgZGVmaW5lZCBwZXIgQ291Y2hiYXNlIHBvZCBydW5uaW5nIHRoZSBkYXRhIHNlcnZpY2UuICBUaGlzIGZpZWxkIGRlZmF1bHRzIHRvLCBhbmQgbXVzdFxuYmUgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRvIDEwME1pLiAgTW9yZSBpbmZvOlxuaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtcmVzb3VyY2VzLWNvbnRhaW5lcnMvI3Jlc291cmNlLXVuaXRzLWluLWt1YmVybmV0ZXMiLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ0eXBlIjoic3RyaW5nIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBpcyB0aGUgbmFtZSBvZiB0aGUgYnVja2V0IHdpdGhpbiBDb3VjaGJhc2Ugc2VydmVyLiAgQnkgZGVmYXVsdCB0aGUgT3BlcmF0b3JcbndpbGwgdXNlIHRoZSBgbWV0YWRhdGEubmFtZWAgZmllbGQgdG8gZGVmaW5lIHRoZSBidWNrZXQgbmFtZS4gIFRoZSBgbWV0YWRhdGEubmFtZWBcbmZpZWxkIG9ubHkgc3VwcG9ydHMgYSBzdWJzZXQgb2YgdGhlIHN1cHBvcnRlZCBjaGFyYWN0ZXIgc2V0LiAgV2hlbiBzcGVjaWZpZWQsIHRoaXNcbmZpZWxkIG92ZXJyaWRlcyBgbWV0YWRhdGEubmFtZWAuICBMZWdhbCBidWNrZXQgbmFtZXMgaGF2ZSBhIG1heGltdW0gbGVuZ3RoIG9mIDEwMFxuY2hhcmFjdGVycyBhbmQgbWF5IGJlIGNvbXBvc2VkIG9mIGFueSBjaGFyYWN0ZXIgZnJvbSBcImEtelwiLCBcIkEtWlwiLCBcIjAtOVwiIGFuZCBcIi1fJVxcLlwiLiIsIm1heExlbmd0aCI6MTAwLCJwYXR0ZXJuIjoiXlthLXpBLVowLTktXyVcXC5dezEsMTAwfSQiLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWV9XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuOC4xIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZW1pZ3JhdGlvbnJlcGxpY2F0aW9ucy5jb3VjaGJhc2UuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJjb3VjaGJhc2UuY29tIiwibmFtZXMiOnsia2luZCI6IkNvdWNoYmFzZU1pZ3JhdGlvblJlcGxpY2F0aW9uIiwibGlzdEtpbmQiOiJDb3VjaGJhc2VNaWdyYXRpb25SZXBsaWNhdGlvbkxpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2VtaWdyYXRpb25yZXBsaWNhdGlvbnMiLCJzaW5ndWxhciI6ImNvdWNoYmFzZW1pZ3JhdGlvbnJlcGxpY2F0aW9uIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7Impzb25QYXRoIjoiLnNwZWMuYnVja2V0IiwibmFtZSI6ImJ1Y2tldCIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLnNwZWMucmVtb3RlQnVja2V0IiwibmFtZSI6InJlbW90ZSBidWNrZXQiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zcGVjLnBhdXNlZCIsIm5hbWUiOiJwYXVzZWQiLCJ0eXBlIjoiYm9vbGVhbiJ9LHsianNvblBhdGgiOiIubWV0YWRhdGEuY3JlYXRpb25UaW1lc3RhbXAiLCJuYW1lIjoiYWdlIiwidHlwZSI6ImRhdGUifV0sIm5hbWUiOiJ2MiIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJUaGUgQ291Y2hiYXNlU2NvcGVNaWdyYXRpb24gcmVzb3VyY2UgcmVwcmVzZW50cyB0aGUgdXNlIG9mIHRoZSBzcGVjaWFsIG1pZ3JhdGlvbiBtYXBwaW5nXG53aXRoaW4gWERDUiB0byB0YWtlIGEgZmlsdGVyZWQgbGlzdCBmcm9tIHRoZSBkZWZhdWx0IHNjb3BlIGFuZCBjb2xsZWN0aW9uIG9mIHRoZSBzb3VyY2UgYnVja2V0LFxucmVwbGljYXRlIGl0IHRvIG5hbWVkIHNjb3BlcyBhbmQgY29sbGVjdGlvbnMgd2l0aGluIHRoZSB0YXJnZXQgYnVja2V0LlxuVGhlIGJ1Y2tldC10by1idWNrZXQgcmVwbGljYXRpb24gY2Fubm90IGR1cGxpY2F0ZSBhbnkgdXNlZCBieSB0aGUgQ291Y2hiYXNlUmVwbGljYXRpb24gcmVzb3VyY2UsXG5hcyB0aGVzZSB0d28gdHlwZXMgb2YgcmVwbGljYXRpb24gYXJlIG11dHVhbGx5IGV4Y2x1c2l2ZSBiZXR3ZWVuIGJ1Y2tldHMuXG5odHRwczovL2RvY3MuY291Y2hiYXNlLmNvbS9zZXJ2ZXIvY3VycmVudC9sZWFybi9jbHVzdGVycy1hbmQtYXZhaWxhYmlsaXR5L3hkY3Itd2l0aC1zY29wZXMtYW5kLWNvbGxlY3Rpb25zLmh0bWwjbWlncmF0aW9uIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LlxuU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kXG5tYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuXG5TZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by5cbkNhbm5vdCBiZSB1cGRhdGVkLlxuSW4gQ2FtZWxDYXNlLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJtaWdyYXRpb25NYXBwaW5nIjp7ImRlc2NyaXB0aW9uIjoiVGhlIG1pZ3JhdGlvbiBtYXBwaW5ncyB0byB1c2UsIHNob3VsZCBuZXZlciBiZSBlbXB0eSBhcyB0aGF0IGlzIGp1c3QgYW4gaW1wbGljaXQgYnVja2V0LXRvLWJ1Y2tldCByZXBsaWNhdGlvbiB0aGVuLiIsInByb3BlcnRpZXMiOnsibWFwcGluZ3MiOnsiZGVzY3JpcHRpb24iOiJUaGUgbWlncmF0aW9uIG1hcHBpbmdzIHRvIHVzZSwgc2hvdWxkIG5ldmVyIGJlIGVtcHR5IGFzIHRoYXQgaXMganVzdCBhbiBpbXBsaWNpdCBidWNrZXQtdG8tYnVja2V0IHJlcGxpY2F0aW9uIHRoZW4uIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJJbmRpY2F0ZXMgd2hldGhlciB0aGlzIGlzIHVzaW5nIG1pZ3JhdGlvbiBtYXBwaW5nIG9yIG5vdC5cblRoaXMgaXMgb25seSB2YWxpZCB3aGVuIHVzaW5nIHRoZSBkZWZhdWx0IHNjb3BlL2NvbGxlY3Rpb24uIiwicHJvcGVydGllcyI6eyJmaWx0ZXIiOnsiZGVmYXVsdCI6Il9kZWZhdWx0Ll9kZWZhdWx0IiwiZGVzY3JpcHRpb24iOiJBIGZpbHRlciB0byBzZWxlY3QgZnJvbSB0aGUgc291cmNlIGRlZmF1bHQgc2NvcGUgYW5kIGNvbGxlY3Rpb24uXG5EZWZhdWx0cyB0byBzZWxlY3QgZXZlcnl0aGluZyBpbiB0aGUgZGVmYXVsdCBzY29wZSBhbmQgY29sbGVjdGlvbi4iLCJ0eXBlIjoic3RyaW5nIn0sInRhcmdldEtleXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoiVGhlIGRlc3RpbmF0aW9uIG9mIG91ciBtaWdyYXRpb24sIG11c3QgYmUgYSBzY29wZSBhbmQgY29sbGVjdGlvbi4iLCJwcm9wZXJ0aWVzIjp7ImNvbGxlY3Rpb24iOnsiZGVzY3JpcHRpb24iOiJUaGUgb3B0aW9uYWwgY29sbGVjdGlvbiB3aXRoaW4gdGhlIHNjb3BlLiBNYXkgYmUgZW1wdHkgdG8ganVzdCB3b3JrIGF0IHNjb3BlIGxldmVsLiIsIm1heExlbmd0aCI6MjUxLCJtaW5MZW5ndGgiOjEsInBhdHRlcm4iOiJeKF9kZWZhdWx0fFthLXpBLVowLTlcXC1dW2EtekEtWjAtOVxcLSVfXXswLDI1MH0pJCIsInR5cGUiOiJzdHJpbmcifSwic2NvcGUiOnsiZGVzY3JpcHRpb24iOiJUaGUgc2NvcGUgdG8gdXNlLiIsIm1heExlbmd0aCI6MjUxLCJtaW5MZW5ndGgiOjEsInBhdHRlcm4iOiJeKF9kZWZhdWx0fFthLXpBLVowLTlcXC1dW2EtekEtWjAtOVxcLSVfXXswLDI1MH0pJCIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInNjb3BlIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInRhcmdldEtleXNwYWNlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJtYXBwaW5ncyJdLCJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJDb3VjaGJhc2VSZXBsaWNhdGlvblNwZWMgYWxsb3dzIGNvbmZpZ3VyYXRpb24gb2YgYW4gWERDUiByZXBsaWNhdGlvbi4iLCJwcm9wZXJ0aWVzIjp7ImJ1Y2tldCI6eyJkZXNjcmlwdGlvbiI6IkJ1Y2tldCBpcyB0aGUgc291cmNlIGJ1Y2tldCB0byByZXBsaWNhdGUgZnJvbS4gIFRoaXMgcmVmZXJzIHRvIHRoZSBDb3VjaGJhc2VcbmJ1Y2tldCBuYW1lLCBub3QgdGhlIHJlc291cmNlIG5hbWUgb2YgdGhlIGJ1Y2tldC4gIEEgYnVja2V0IHdpdGggdGhpcyBuYW1lIG11c3RcbmJlIGRlZmluZWQgb24gdGhpcyBjbHVzdGVyLiAgTGVnYWwgYnVja2V0IG5hbWVzIGhhdmUgYSBtYXhpbXVtIGxlbmd0aCBvZiAxMDBcbmNoYXJhY3RlcnMgYW5kIG1heSBiZSBjb21wb3NlZCBvZiBhbnkgY2hhcmFjdGVyIGZyb20gXCJhLXpcIiwgXCJBLVpcIiwgXCIwLTlcIiBhbmQgXCItXyVcXC5cIi4iLCJtYXhMZW5ndGgiOjEwMCwicGF0dGVybiI6Il5bYS16QS1aMC05LV8lXFwuXXsxLDEwMH0kIiwidHlwZSI6InN0cmluZyJ9LCJjb21wcmVzc2lvblR5cGUiOnsiZGVmYXVsdCI6IkF1dG8iLCJkZXNjcmlwdGlvbiI6IkNvbXByZXNzaW9uVHlwZSBpcyB0aGUgdHlwZSBvZiBjb21wcmVzc2lvbiB0byBhcHBseSB0byB0aGUgcmVwbGljYXRpb24uXG5XaGVuIE5vbmUsIG5vIGNvbXByZXNzaW9uIHdpbGwgYmUgYXBwbGllZCB0byBkb2N1bWVudHMgYXMgdGhleSBhcmVcbnRyYW5zZmVycmVkIGJldHdlZW4gY2x1c3RlcnMuICBXaGVuIEF1dG8sIENvdWNoYmFzZSBzZXJ2ZXIgd2lsbCBhdXRvbWF0aWNhbGx5XG5jb21wcmVzcyBkb2N1bWVudHMgYXMgdGhleSBhcmUgdHJhbnNmZXJyZWQgdG8gcmVkdWNlIGJhbmR3aWR0aCByZXF1aXJlbWVudHMuXG5UaGlzIGZpZWxkIG11c3QgYmUgb25lIG9mIFwiTm9uZVwiIG9yIFwiQXV0b1wiLCBkZWZhdWx0aW5nIHRvIFwiQXV0b1wiLiIsImVudW0iOlsiTm9uZSIsIkF1dG8iXSwidHlwZSI6InN0cmluZyJ9LCJmaWx0ZXJFeHByZXNzaW9uIjp7ImRlc2NyaXB0aW9uIjoiRmlsdGVyRXhwcmVzc2lvbiBhbGxvd3MgY2VydGFpbiBkb2N1bWVudHMgdG8gYmUgZmlsdGVyZWQgb3V0IG9mIHRoZSByZXBsaWNhdGlvbi4iLCJ0eXBlIjoic3RyaW5nIn0sInBhdXNlZCI6eyJkZXNjcmlwdGlvbiI6IlBhdXNlZCBhbGxvd3MgYSByZXBsaWNhdGlvbiB0byBiZSBzdG9wcGVkIGFuZCByZXN0YXJ0ZWQgd2l0aG91dCBoYXZpbmcgdG9cbnJlc3RhcnQgdGhlIHJlcGxpY2F0aW9uIGZyb20gdGhlIGJlZ2lubmluZy4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJyZW1vdGVCdWNrZXQiOnsiZGVzY3JpcHRpb24iOiJSZW1vdGVCdWNrZXQgaXMgdGhlIHJlbW90ZSBidWNrZXQgbmFtZSB0byBzeW5jaHJvbml6ZSB0by4gIFRoaXMgcmVmZXJzIHRvIHRoZVxuQ291Y2hiYXNlIGJ1Y2tldCBuYW1lLCBub3QgdGhlIHJlc291cmNlIG5hbWUgb2YgdGhlIGJ1Y2tldC4gIExlZ2FsIGJ1Y2tldCBuYW1lc1xuaGF2ZSBhIG1heGltdW0gbGVuZ3RoIG9mIDEwMCBjaGFyYWN0ZXJzIGFuZCBtYXkgYmUgY29tcG9zZWQgb2YgYW55IGNoYXJhY3RlciBmcm9tXG5cImEtelwiLCBcIkEtWlwiLCBcIjAtOVwiIGFuZCBcIi1fJVxcLlwiLiIsIm1heExlbmd0aCI6MTAwLCJwYXR0ZXJuIjoiXlthLXpBLVowLTktXyVcXC5dezEsMTAwfSQiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJidWNrZXQiLCJyZW1vdGVCdWNrZXQiXSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsibWlncmF0aW9uTWFwcGluZyIsInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlfV19fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuOC4xIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZWF1dG9zY2FsZXJzLmNvdWNoYmFzZS5jb20ifSwic3BlYyI6eyJncm91cCI6ImNvdWNoYmFzZS5jb20iLCJuYW1lcyI6eyJraW5kIjoiQ291Y2hiYXNlQXV0b3NjYWxlciIsImxpc3RLaW5kIjoiQ291Y2hiYXNlQXV0b3NjYWxlckxpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2VhdXRvc2NhbGVycyIsInNob3J0TmFtZXMiOlsiY2JhIl0sInNpbmd1bGFyIjoiY291Y2hiYXNlYXV0b3NjYWxlciJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zcGVjLnNpemUiLCJuYW1lIjoic2l6ZSIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLnNwZWMuc2VydmVycyIsIm5hbWUiOiJzZXJ2ZXJzIiwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUF1dG9zY2FsZXIgcHJvdmlkZXMgYW4gaW50ZXJmYWNlIGZvciB0aGUgS3ViZXJuZXRlcyBIb3Jpem9udGFsIFBvZCBBdXRvc2NhbGVyXG50byBpbnRlcmFjdCB3aXRoIHRoZSBDb3VjaGJhc2UgY2x1c3RlciBhbmQgcHJvdmlkZSBhdXRvc2NhbGluZy4gIFRoaXMgcmVzb3VyY2UgaXNcbm5vdCBkZWZpbmVkIGJ5IHRoZSBlbmQgdXNlciwgYW5kIGlzIG1hbmFnZWQgYnkgdGhlIE9wZXJhdG9yLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUF1dG9zY2FsZXJTcGVjIGFsbG93cyBjb250cm9sIG92ZXIgYW4gYXV0b3NjYWxpbmcgZ3JvdXAuIiwicHJvcGVydGllcyI6eyJzZXJ2ZXJzIjp7ImRlc2NyaXB0aW9uIjoiU2VydmVycyBzcGVjaWZpZXMgdGhlIHNlcnZlciBncm91cCB0aGF0IHRoaXMgYXV0b3NjYWxlciBiZWxvbmdzIHRvLiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJzaXplIjp7ImRlc2NyaXB0aW9uIjoiU2l6ZSBhbGxvd3MgdGhlIHNlcnZlciBncm91cCB0byBiZSBkeW5hbWljYWxseSBzY2FsZWQuIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifX0sInJlcXVpcmVkIjpbInNlcnZlcnMiLCJzaXplIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlQXV0b3NjYWxlclN0YXR1cyBwcm92aWRlcyBpbmZvcm1hdGlvbiB0byB0aGUgSFBBIHRvIGFzc2lzdCB3aXRoIHNjYWxpbmdcbnNlcnZlciBncm91cHMuIiwicHJvcGVydGllcyI6eyJsYWJlbFNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiTGFiZWxTZWxlY3RvciBhbGxvd3MgdGhlIEhQQSB0byBzZWxlY3QgcmVzb3VyY2VzIHRvIG1vbml0b3IgZm9yIHJlc291cmNlXG51dGlsaXphdGlvbiBpbiBvcmRlciB0byB0cmlnZ2VyIHNjYWxpbmcuIiwidHlwZSI6InN0cmluZyJ9LCJzaXplIjp7ImRlc2NyaXB0aW9uIjoiU2l6ZSBpcyB0aGUgY3VycmVudCBzaXplIG9mIHRoZSBzZXJ2ZXIgZ3JvdXAuIiwibWluaW11bSI6MSwidHlwZSI6ImludGVnZXIifX0sInJlcXVpcmVkIjpbImxhYmVsU2VsZWN0b3IiLCJzaXplIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic2NhbGUiOnsibGFiZWxTZWxlY3RvclBhdGgiOiIuc3RhdHVzLmxhYmVsU2VsZWN0b3IiLCJzcGVjUmVwbGljYXNQYXRoIjoiLnNwZWMuc2l6ZSIsInN0YXR1c1JlcGxpY2FzUGF0aCI6Ii5zdGF0dXMuc2l6ZSJ9LCJzdGF0dXMiOnt9fX1dfX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuOC4xIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZWJhY2t1cHMuY291Y2hiYXNlLmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiY291Y2hiYXNlLmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJDb3VjaGJhc2VCYWNrdXAiLCJsaXN0S2luZCI6IkNvdWNoYmFzZUJhY2t1cExpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2ViYWNrdXBzIiwic2hvcnROYW1lcyI6WyJjYmJhY2t1cCJdLCJzaW5ndWxhciI6ImNvdWNoYmFzZWJhY2t1cCJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zcGVjLnN0cmF0ZWd5IiwibmFtZSI6InN0cmF0ZWd5IiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIuc3BlYy5zaXplIiwibmFtZSI6InZvbHVtZSBzaXplIiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIuc3RhdHVzLmNhcGFjaXR5VXNlZCIsIm5hbWUiOiJjYXBhY2l0eSB1c2VkIiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIuc3RhdHVzLmxhc3RSdW4iLCJuYW1lIjoibGFzdCBydW4iLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zdGF0dXMubGFzdFN1Y2Nlc3MiLCJuYW1lIjoibGFzdCBzdWNjZXNzIiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIuc3RhdHVzLnJ1bm5pbmciLCJuYW1lIjoicnVubmluZyIsInR5cGUiOiJib29sZWFuIn0seyJqc29uUGF0aCI6Ii5tZXRhZGF0YS5jcmVhdGlvblRpbWVzdGFtcCIsIm5hbWUiOiJhZ2UiLCJ0eXBlIjoiZGF0ZSJ9XSwibmFtZSI6InYyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUJhY2t1cCBhbGxvd3MgYXV0b21hdGljIGJhY2t1cCBvZiBhbGwgZGF0YSBmcm9tIGEgQ291Y2hiYXNlIGNsdXN0ZXJcbmludG8gcGVyc2lzdGVudCBzdG9yYWdlLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUJhY2t1cFNwZWMgaXMgYWxsb3dzIHRoZSBzcGVjaWZpY2F0aW9uIG9mIGhvdyBhIENvdWNoYmFzZSBiYWNrdXAgaXNcbmNvbmZpZ3VyZWQsIGluY2x1ZGluZyB3aGVuIGJhY2t1cHMgYXJlIHBlcmZvcm1lZCwgaG93IGxvbmcgdGhleSBhcmUgcmV0YWluZWRcbmZvciwgYW5kIHdoZXJlIHRoZXkgYXJlIGJhY2tlZCB1cCB0by4iLCJwcm9wZXJ0aWVzIjp7ImF1dG9TY2FsaW5nIjp7ImRlc2NyaXB0aW9uIjoiQXV0b1NjYWxpbmcgYWxsb3dzIHRoZSB2b2x1bWUgc2l6ZSB0byBiZSBkeW5hbWljYWxseSBpbmNyZWFzZWQuXG5XaGVuIHNwZWNpZmllZCwgdGhlIGJhY2t1cCB2b2x1bWUgd2lsbCBzdGFydCB3aXRoIGFuIGluaXRpYWwgc2l6ZVxuYXMgZGVmaW5lZCBieSBgc3BlYy5zaXplYCwgYW5kIGluY3JlYXNlIGFzIHJlcXVpcmVkLiIsInByb3BlcnRpZXMiOnsiaW5jcmVtZW50UGVyY2VudCI6eyJkZWZhdWx0IjoyMCwiZGVzY3JpcHRpb24iOiJJbmNyZW1lbnRQZXJjZW50IGNvbnRyb2xzIGhvdyBtdWNoIHRoZSB2b2x1bWUgaXMgaW5jcmVhc2VkIGVhY2ggdGltZSB0aGVcbnRocmVzaG9sZCBpcyBleGNlZWRlZCwgdXB0byBhIG1heGltdW0gYXMgZGVmaW5lZCBieSB0aGUgbGltaXQuXG5UaGlzIGZpZWxkIGRlZmF1bHRzIHRvIDIwIGlmIG5vdCBzcGVjaWZpZWQuIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwibGltaXQiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJkZXNjcmlwdGlvbiI6IkxpbWl0IGltcG9zZXMgYSBoYXJkIGxpbWl0IG9uIHRoZSBzaXplIHdlIGNhbiBhdXRvc2NhbGUgdG8uICBXaGVuIG5vdFxuc3BlY2lmaWVkIG5vIGJvdW5kcyBhcmUgaW1wb3NlZC4gTW9yZSBpbmZvOlxuaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtcmVzb3VyY2VzLWNvbnRhaW5lcnMvI3Jlc291cmNlLXVuaXRzLWluLWt1YmVybmV0ZXMiLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ0eXBlIjoic3RyaW5nIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJ0aHJlc2hvbGRQZXJjZW50Ijp7ImRlZmF1bHQiOjIwLCJkZXNjcmlwdGlvbiI6IlRocmVzaG9sZFBlcmNlbnQgZGV0ZXJtaW5lcyB0aGUgcG9pbnQgYXQgd2hpY2ggYSB2b2x1bWUgaXMgYXV0b3NjYWxlZC5cblRoaXMgcmVwcmVzZW50cyB0aGUgcGVyY2VudGFnZSBvZiBmcmVlIHNwYWNlIHJlbWFpbmluZyBvbiB0aGUgdm9sdW1lLFxud2hlbiBsZXNzIHRoYW4gdGhpcyB0aHJlc2hvbGQsIGl0IHdpbGwgdHJpZ2dlciBhIHZvbHVtZSBleHBhbnNpb24uXG5Gb3IgZXhhbXBsZSwgaWYgdGhlIHZvbHVtZSBpcyAxMDBHaSwgYW5kIHRoZSB0aHJlc2hvbGQgMjAlLCB0aGVuIGEgcmVzaXplXG53aWxsIGJlIHRyaWdnZXJlZCB3aGVuIHRoZSB1c2VkIGNhcGFjaXR5IGV4Y2VlZHMgODBHaSwgYW5kIGZyZWUgc3BhY2UgaXNcbmxlc3MgdGhhbiAyMEdpLiAgVGhpcyBmaWVsZCBkZWZhdWx0cyB0byAyMCBpZiBub3Qgc3BlY2lmaWVkLiIsIm1heGltdW0iOjk5LCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9fSwidHlwZSI6Im9iamVjdCJ9LCJiYWNrb2ZmTGltaXQiOnsiZGVmYXVsdCI6MiwiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2YgdGltZXMgYSBiYWNrdXAgam9iIHNob3VsZCB0cnkgdG8gZXhlY3V0ZS5cbk9uY2UgaXQgaGl0cyB0aGUgQmFja29mZkxpbWl0IGl0IHdpbGwgbm90IHJ1biB1bnRpbCB0aGUgbmV4dCBzY2hlZHVsZWQgam9iLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwiYmFja3VwUmV0ZW50aW9uIjp7ImRlZmF1bHQiOiI3MjBoIiwiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2YgaG91cnMgdG8gaG9sZCBiYWNrdXBzIGZvciwgZXZlcnl0aGluZyBvbGRlciB3aWxsIGJlIGRlbGV0ZWQuICBNb3JlIGluZm86XG5odHRwczovL2dvbGFuZy5vcmcvcGtnL3RpbWUvI1BhcnNlRHVyYXRpb24iLCJ0eXBlIjoic3RyaW5nIn0sImRhdGEiOnsiZGVzY3JpcHRpb24iOiJEYXRhIGFsbG93cyBjb250cm9sIG92ZXIgd2hhdCBrZXktdmFsdWUvZG9jdW1lbnQgZGF0YSBpcyBpbmNsdWRlZCBpbiB0aGVcbmJhY2t1cC4gIEJ5IGRlZmF1bHQsIGFsbCBkYXRhIGlzIGluY2x1ZGVkLiAgTW9kaWZpY2F0aW9uc1xudG8gdGhpcyBmaWVsZCB3aWxsIG9ubHkgdGFrZSBlZmZlY3Qgb24gdGhlIG5leHQgZnVsbCBiYWNrdXAuIiwicHJvcGVydGllcyI6eyJleGNsdWRlIjp7ImRlc2NyaXB0aW9uIjoiRXhjbHVkZSBkZWZpbmVzIHRoZSBidWNrZXRzLCBzY29wZXMgb3IgY29sbGVjdGlvbnMgdGhhdCBhcmUgZXhjbHVkZWQgZnJvbSB0aGUgYmFja3VwLlxuV2hlbiB0aGlzIGZpZWxkIGlzIHNldCwgaXQgaW1wbGllcyB0aGF0IGJ5IGRlZmF1bHQgZXZlcnl0aGluZyB3aWxsIGJlIGJhY2tlZCB1cCxcbmFuZCBkYXRhIGl0ZW1zIGNhbiBiZSBleHBsaWNpdGx5IGV4Y2x1ZGVkLiAgWW91IG1heSBkZWZpbmUgYW4gZXhjbHVzaW9uIGFzIGEgYnVja2V0XG4tLSBgbXktYnVja2V0YCwgYSBzY29wZSAtLSBgbXktYnVja2V0Lm15LXNjb3BlYCwgb3IgYSBjb2xsZWN0aW9uIC0tIGBteS1idWNrZXQubXktc2NvcGUubXktY29sbGVjdGlvbmAuXG5CdWNrZXRzIG1heSBjb250YWluIHBlcmlvZHMsIGFuZCB0aGVyZWZvcmUgbXVzdCBiZSBlc2NhcGVkIC0tIGBteVxcLmJ1Y2tldC5teS1zY29wZWAsIGFzXG5wZXJpb2QgaXMgdGhlIHNlcGFyYXRvciB1c2VkIHRvIGRlbGltaXQgc2NvcGVzIGFuZCBjb2xsZWN0aW9ucy4gIEV4Y2x1ZGVkIGRhdGEgY2Fubm90IG92ZXJsYXBcbmUuZy4gc3BlY2lmeWluZyBgbXktYnVja2V0YCBhbmQgYG15LWJ1Y2tldC5teS1zY29wZWAgaXMgaWxsZWdhbC4gIFRoaXMgZmllbGQgY2Fubm90XG5iZSB1c2VkIGF0IHRoZSBzYW1lIHRpbWUgYXMgaW5jbHVkZWQgaXRlbXMuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJCdWNrZXRTY29wZU9yQ29sbGVjdGlvbk5hbWVXaXRoRGVmYXVsdHMgaXMgdGhlIG5hbWUgb2YgYSBmdWxseSBxdWFsaWZlZCBidWNrZXQsIHNjb3BlIG9yIGNvbGxlY3Rpb24uXG5UaGUgX2RlZmF1bHQgc2NvcGUgYW5kIGNvbGxlY3Rpb24gYXJlIHZhbGlkIGZvciB0aGlzIHR5cGUuXG5BcyB0aGVzZSBuYW1lcyBhcmUgcGVyaW9kIHNlcGFyYXRlZCwgYW5kIGJ1Y2tldHMgY2FuIGNvbnRhaW4gcGVyaW9kcywgdGhlIGxhdHRlciBuZWVkXG50byBiZSBlc2NhcGVkLiAgVGhpcyBzcGVjaWZpY2F0aW9uIGlzIGJhc2VkIG9uIGNiYmFja3VwbWdyLiIsInBhdHRlcm4iOiJeKD86W2EtekEtWjAtOVxcLV8lXXxcXFxcLil7MSwxMDB9KFxcLl9kZWZhdWx0KFxcLl9kZWZhdWx0KT98XFwuW2EtekEtWjAtOVxcLV1bYS16QS1aMC05XFwtJV9dezAsMjl9KFxcLlthLXpBLVowLTlcXC1dW2EtekEtWjAtOVxcLSVfXXswLDI5fSk/KT8kIiwidHlwZSI6InN0cmluZyJ9LCJtaW5JdGVtcyI6MSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6InNldCJ9LCJpbmNsdWRlIjp7ImRlc2NyaXB0aW9uIjoiSW5jbHVkZSBkZWZpbmVzIHRoZSBidWNrZXRzLCBzY29wZXMgb3IgY29sbGVjdGlvbnMgdGhhdCBhcmUgaW5jbHVkZWQgaW4gdGhlIGJhY2t1cC5cbldoZW4gdGhpcyBmaWVsZCBpcyBzZXQsIGl0IGltcGxpZXMgdGhhdCBieSBkZWZhdWx0IG5vdGhpbmcgd2lsbCBiZSBiYWNrZWQgdXAsXG5hbmQgZGF0YSBpdGVtcyBtdXN0IGJlIGV4cGxpY2l0bHkgaW5jbHVkZWQuICBZb3UgbWF5IGRlZmluZSBhbiBpbmNsdXNpb24gYXMgYSBidWNrZXRcbi0tIGBteS1idWNrZXRgLCBhIHNjb3BlIC0tIGBteS1idWNrZXQubXktc2NvcGVgLCBvciBhIGNvbGxlY3Rpb24gLS0gYG15LWJ1Y2tldC5teS1zY29wZS5teS1jb2xsZWN0aW9uYC5cbkJ1Y2tldHMgbWF5IGNvbnRhaW4gcGVyaW9kcywgYW5kIHRoZXJlZm9yZSBtdXN0IGJlIGVzY2FwZWQgLS0gYG15XFwuYnVja2V0Lm15LXNjb3BlYCwgYXNcbnBlcmlvZCBpcyB0aGUgc2VwYXJhdG9yIHVzZWQgdG8gZGVsaW1pdCBzY29wZXMgYW5kIGNvbGxlY3Rpb25zLiAgSW5jbHVkZWQgZGF0YSBjYW5ub3Qgb3ZlcmxhcFxuZS5nLiBzcGVjaWZ5aW5nIGBteS1idWNrZXRgIGFuZCBgbXktYnVja2V0Lm15LXNjb3BlYCBpcyBpbGxlZ2FsLiAgVGhpcyBmaWVsZCBjYW5ub3RcbmJlIHVzZWQgYXQgdGhlIHNhbWUgdGltZSBhcyBleGNsdWRlZCBpdGVtcy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkJ1Y2tldFNjb3BlT3JDb2xsZWN0aW9uTmFtZVdpdGhEZWZhdWx0cyBpcyB0aGUgbmFtZSBvZiBhIGZ1bGx5IHF1YWxpZmVkIGJ1Y2tldCwgc2NvcGUgb3IgY29sbGVjdGlvbi5cblRoZSBfZGVmYXVsdCBzY29wZSBhbmQgY29sbGVjdGlvbiBhcmUgdmFsaWQgZm9yIHRoaXMgdHlwZS5cbkFzIHRoZXNlIG5hbWVzIGFyZSBwZXJpb2Qgc2VwYXJhdGVkLCBhbmQgYnVja2V0cyBjYW4gY29udGFpbiBwZXJpb2RzLCB0aGUgbGF0dGVyIG5lZWRcbnRvIGJlIGVzY2FwZWQuICBUaGlzIHNwZWNpZmljYXRpb24gaXMgYmFzZWQgb24gY2JiYWNrdXBtZ3IuIiwicGF0dGVybiI6Il4oPzpbYS16QS1aMC05XFwtXyVdfFxcXFwuKXsxLDEwMH0oXFwuX2RlZmF1bHQoXFwuX2RlZmF1bHQpP3xcXC5bYS16QS1aMC05XFwtXVthLXpBLVowLTlcXC0lX117MCwyOX0oXFwuW2EtekEtWjAtOVxcLV1bYS16QS1aMC05XFwtJV9dezAsMjl9KT8pPyQiLCJ0eXBlIjoic3RyaW5nIn0sIm1pbkl0ZW1zIjoxLCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoic2V0In19LCJ0eXBlIjoib2JqZWN0In0sImRlZmF1bHRSZWNvdmVyeU1ldGhvZCI6eyJkZWZhdWx0Ijoibm9uZSIsImRlc2NyaXB0aW9uIjoiRGVmYXVsdFJlY292ZXJ5TWV0aG9kIHNwZWNpZmllcyBob3cgY2JiYWNrdXBtZ3Igc2hvdWxkXG5yZWNvdmVyIGZyb20gYnJva2VuIGJhY2t1cC9yZXN0b3JlIGF0dGVtcHRzLiIsImVudW0iOlsibm9uZSIsInJlc3VtZSIsInB1cmdlIl0sInR5cGUiOiJzdHJpbmcifSwiZXBoZW1lcmFsVm9sdW1lIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IkVwaGVtZXJhbFZvbHVtZSBzZXRzIGJhY2t1cCB0byB1c2UgYW4gZXBoZW1lcmFsIHZvbHVtZSBpbnN0ZWFkXG5vZiBhIHBlcnNpc3RlbnQgdm9sdW1lLiBUaGlzIGlzIHVzZWQgd2hlbiBiYWNraW5nIHVwIHRvIGEgcmVtb3RlXG5jbG91ZCBwcm92aWRlciwgd2hlcmUgYSBwZXJzaXN0ZW50IHZvbHVtZSBpcyBub3QgbmVlZGVkLiIsInR5cGUiOiJib29sZWFuIn0sImZhaWxlZEpvYnNIaXN0b3J5TGltaXQiOnsiZGVmYXVsdCI6MywiZGVzY3JpcHRpb24iOiJBbW91bnQgb2YgZmFpbGVkIGpvYnMgdG8ga2VlcC4iLCJmb3JtYXQiOiJpbnQzMiIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sImZ1bGwiOnsiZGVzY3JpcHRpb24iOiJGdWxsIGlzIHRoZSBzY2hlZHVsZSBvbiB3aGVuIHRvIHRha2UgZnVsbCBiYWNrdXBzLlxuVXNlZCBpbiBGdWxsL0luY3JlbWVudGFsIGFuZCBGdWxsT25seSBiYWNrdXAgc3RyYXRlZ2llcy4iLCJwcm9wZXJ0aWVzIjp7InNjaGVkdWxlIjp7ImRlc2NyaXB0aW9uIjoiU2NoZWR1bGUgdGFrZXMgYSBjcm9uIHNjaGVkdWxlIGluIHN0cmluZyBmb3JtYXQuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsic2NoZWR1bGUiXSwidHlwZSI6Im9iamVjdCJ9LCJpbmNyZW1lbnRhbCI6eyJkZXNjcmlwdGlvbiI6IkluY3JlbWVudGFsIGlzIHRoZSBzY2hlZHVsZSBvbiB3aGVuIHRvIHRha2UgaW5jcmVtZW50YWwgYmFja3Vwcy5cblVzZWQgaW4gRnVsbC9JbmNyZW1lbnRhbCBiYWNrdXAgc3RyYXRlZ2llcy4iLCJwcm9wZXJ0aWVzIjp7InNjaGVkdWxlIjp7ImRlc2NyaXB0aW9uIjoiU2NoZWR1bGUgdGFrZXMgYSBjcm9uIHNjaGVkdWxlIGluIHN0cmluZyBmb3JtYXQuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsic2NoZWR1bGUiXSwidHlwZSI6Im9iamVjdCJ9LCJsb2dSZXRlbnRpb24iOnsiZGVmYXVsdCI6IjE2OGgiLCJkZXNjcmlwdGlvbiI6Ik51bWJlciBvZiBob3VycyB0byBob2xkIHNjcmlwdCBsb2dzIGZvciwgZXZlcnl0aGluZyBvbGRlciB3aWxsIGJlIGRlbGV0ZWQuICBNb3JlIGluZm86XG5odHRwczovL2dvbGFuZy5vcmcvcGtnL3RpbWUvI1BhcnNlRHVyYXRpb24iLCJ0eXBlIjoic3RyaW5nIn0sIm9iamVjdFN0b3JlIjp7ImRlc2NyaXB0aW9uIjoiT2JqZWN0U3RvcmUgYWxsb3dzIGZvciBiYWNraW5nIHVwIHRvIGEgcmVtb3RlIGNsb3VkIHN0b3JhZ2UuIiwicHJvcGVydGllcyI6eyJlbmRwb2ludCI6eyJkZXNjcmlwdGlvbiI6IkVuZHBvaW50IGNvbnRhaW5zIHRoZSBjb25maWd1cmF0aW9uIGZvciBjb25uZWN0aW5nIHRvIGEgY3VzdG9tIEF6dXJlL1MzL0dDUCBjb21wbGlhbnQgb2JqZWN0IHN0b3JlLlxuSWYgc2V0IHdpbGwgb3ZlcnJpZGUgYENvdWNoYmFzZUNsdXN0ZXIuc3BlYy5iYWNrdXAub2JqZWN0RW5kcG9pbnRgXG5TZWUgaHR0cHM6Ly9kb2NzLmNvdWNoYmFzZS5jb20vc2VydmVyL2N1cnJlbnQvYmFja3VwLXJlc3RvcmUvY2JiYWNrdXBtZ3ItY2xvdWQuaHRtbCNjb21wYXRpYmxlLW9iamVjdC1zdG9yZXMiLCJwcm9wZXJ0aWVzIjp7InNlY3JldCI6eyJkZXNjcmlwdGlvbiI6IlRoZSBuYW1lIG9mIHRoZSBzZWNyZXQsIGluIHRoaXMgbmFtZXNwYWNlLCB0aGF0IGNvbnRhaW5zIHRoZSBDQSBjZXJ0aWZpY2F0ZSBmb3IgdmVyaWZpY2F0aW9uIG9mIGEgVExTIGVuZHBvaW50XG5UaGUgc2VjcmV0IG11c3QgaGF2ZSB0aGUga2V5IHdpdGggdGhlIG5hbWUgXCJ0bHMuY3J0XCIiLCJ0eXBlIjoic3RyaW5nIn0sInVybCI6eyJkZXNjcmlwdGlvbiI6IlRoZSBob3N0L2FkZHJlc3Mgb2YgdGhlIGN1c3RvbSBvYmplY3QgZW5kcG9pbnQuIiwidHlwZSI6InN0cmluZyJ9LCJ1c2VWaXJ0dWFsUGF0aCI6eyJkZXNjcmlwdGlvbiI6IlVzZVZpcnR1YWxQYXRoIHdpbGwgZm9yY2UgdGhlIEFXUyBTREsgdG8gdXNlIHRoZSBuZXcgdmlydHVhbCBzdHlsZSBwYXRoc1xud2hpY2ggYXJlIG9mdGVuIHJlcXVpcmVkIGJ5IFMzIGNvbXBhdGlibGUgb2JqZWN0IHN0b3Jlcy4iLCJ0eXBlIjoiYm9vbGVhbiJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzZWNyZXQiOnsiZGVzY3JpcHRpb24iOiJPYmpTdG9yZVNlY3JldCBtdXN0IGNvbnRhaW4gdHdvIGZpZWxkcywgYWNjZXNzLWtleS1pZCwgc2VjcmV0LWFjY2Vzcy1rZXkgYW5kIG9wdGlvbmFsbHkgZWl0aGVyIHJlZ2lvbiBvciByZWZyZXNoLXRva2VuLlxuVGhlc2UgY29ycmVzcG9uZCB0byB0aGUgZmllbGRzIHVzZWQgYnkgY2JiYWNrdXBtZ3Jcbmh0dHBzOi8vZG9jcy5jb3VjaGJhc2UuY29tL3NlcnZlci9jdXJyZW50L2JhY2t1cC1yZXN0b3JlL2NiYmFja3VwbWdyLWJhY2t1cC5odG1sI29wdGlvbmFsLTIiLCJ0eXBlIjoic3RyaW5nIn0sInVyaSI6eyJkZXNjcmlwdGlvbiI6IlVSSSBpcyBhIHJlZmVyZW5jZSB0byBhIHJlbW90ZSBvYmplY3Qgc3RvcmUuXG5UaGlzIGlzIHRoZSBwcmVmaXggb2YgdGhlIG9iamVjdCBzdG9yZSBhbmQgdGhlIGJ1Y2tldCBuYW1lLlxuaS5lIHMzOi8vYnVja2V0LCBhejovL2J1Y2tldCBvciBnczovL2J1Y2tldC4iLCJwYXR0ZXJuIjoiXihhenxzM3xncyk6Ly8uezMsfSQiLCJ0eXBlIjoic3RyaW5nIn0sInVzZUlBTSI6eyJkZXNjcmlwdGlvbiI6IldoZXRoZXIgdG8gYWxsb3cgdGhlIGJhY2t1cCBTREsgdG8gYXR0ZW1wdCB0byBhdXRoZW50aWNhdGVcbnVzaW5nIHRoZSBpbnN0YW5jZSBtZXRhZGF0YSBhcGkuXG5JZiBzZXQsIHdpbGwgb3ZlcnJpZGUgYENvdWNoYmFzZUNsdXN0ZXIuc3BlYy5iYWNrdXAudXNlSUFNYC4iLCJ0eXBlIjoiYm9vbGVhbiJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzM2J1Y2tldCI6eyJkZXNjcmlwdGlvbiI6IkRFUFJFQ0FURUQgLSBieSBzcGVjLm9iamVjdFN0b3JlLnVyaVxuTmFtZSBvZiBTMyBidWNrZXQgdG8gYmFja3VwIHRvLiBJZiBub24tZW1wdHkgdGhpcyBvdmVycmlkZXMgbG9jYWwgYmFja3VwLiIsInBhdHRlcm4iOiJeczM6Ly9bYS16MC05LVxcLlxcL117Myw2M30kIiwidHlwZSI6InN0cmluZyJ9LCJzZXJ2aWNlcyI6eyJkZWZhdWx0Ijp7fSwiZGVzY3JpcHRpb24iOiJTZXJ2aWNlcyBhbGxvd3MgY29udHJvbCBvdmVyIHdoYXQgc2VydmljZXMgYXJlIGluY2x1ZGVkIGluIHRoZSBiYWNrdXAuXG5CeSBkZWZhdWx0LCBhbGwgc2VydmljZSBkYXRhIGFuZCBtZXRhZGF0YSBhcmUgaW5jbHVkZWQgYXBhcnQgZnJvbSB1c2Vycy5cbk1vZGlmaWNhdGlvbnMgdG8gdGhpcyBmaWVsZCB3aWxsIG9ubHkgdGFrZSBlZmZlY3Qgb24gdGhlIG5leHQgZnVsbCBiYWNrdXAuIiwicHJvcGVydGllcyI6eyJhbmFseXRpY3MiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJBbmFseXRpY3MgZW5hYmxlcyB0aGUgYmFja3VwIG9mIGFuYWx5dGljcyBkYXRhLlxuVGhpcyBmaWVsZCBkZWZhdWx0cyB0byBgdHJ1ZWAuIiwidHlwZSI6ImJvb2xlYW4ifSwiYnVja2V0Q29uZmlnIjp7ImRlZmF1bHQiOnRydWUsImRlc2NyaXB0aW9uIjoiQnVja2V0Q29uZmlnIGVuYWJsZXMgdGhlIGJhY2t1cCBvZiBidWNrZXQgY29uZmlndXJhdGlvbi5cblRoaXMgZmllbGQgZGVmYXVsdHMgdG8gYHRydWVgLiIsInR5cGUiOiJib29sZWFuIn0sImJ1Y2tldFF1ZXJ5Ijp7ImRlZmF1bHQiOnRydWUsImRlc2NyaXB0aW9uIjoiQnVja2V0UXVlcnkgZW5hYmxlcyB0aGUgYmFja3VwIG9mIHF1ZXJ5IG1ldGFkYXRhIGZvciBhbGwgYnVja2V0cy5cblRoaXMgZmllbGQgZGVmYXVsdHMgdG8gYHRydWVgLiIsInR5cGUiOiJib29sZWFuIn0sImNsdXN0ZXJBbmFseXRpY3MiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJDbHVzdGVyQW5hbHl0aWNzIGVuYWJsZXMgdGhlIGJhY2t1cCBvZiBjbHVzdGVyLXdpZGUgYW5hbHl0aWNzIGRhdGEsIGZvciBleGFtcGxlIHN5bm9ueW1zLlxuVGhpcyBmaWVsZCBkZWZhdWx0cyB0byBgdHJ1ZWAuIiwidHlwZSI6ImJvb2xlYW4ifSwiY2x1c3RlclF1ZXJ5Ijp7ImRlZmF1bHQiOnRydWUsImRlc2NyaXB0aW9uIjoiQ2x1c3RlclF1ZXJ5IGVuYWJsZXMgdGhlIGJhY2t1cCBvZiBjbHVzdGVyIGxldmVsIHF1ZXJ5IG1ldGFkYXRhLlxuVGhpcyBmaWVsZCBkZWZhdWx0cyB0byBgdHJ1ZWAuIiwidHlwZSI6ImJvb2xlYW4ifSwiZGF0YSI6eyJkZWZhdWx0Ijp0cnVlLCJkZXNjcmlwdGlvbiI6IkRhdGEgZW5hYmxlcyB0aGUgYmFja3VwIG9mIGtleS12YWx1ZSBkYXRhL2RvY3VtZW50cyBmb3IgYWxsIGJ1Y2tldHMuXG5UaGlzIGNhbiBiZSBmdXJ0aGVyIHJlZmluZWQgd2l0aCB0aGUgY291Y2hiYXNlYmFja3Vwcy5zcGVjLmRhdGEgY29uZmlndXJhdGlvbi5cblRoaXMgZmllbGQgZGVmYXVsdHMgdG8gYHRydWVgLiIsInR5cGUiOiJib29sZWFuIn0sImV2ZW50aW5nIjp7ImRlZmF1bHQiOnRydWUsImRlc2NyaXB0aW9uIjoiRXZlbnRpbmcgZW5hYmxlcyB0aGUgYmFja3VwIG9mIGV2ZW50aW5nIHNlcnZpY2UgbWV0YWRhdGEuXG5UaGlzIGZpZWxkIGRlZmF1bHRzIHRvIGB0cnVlYC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJmdHNBbGlhc2VzIjp7ImRlZmF1bHQiOnRydWUsImRlc2NyaXB0aW9uIjoiRlRTQWxpYXNlcyBlbmFibGVzIHRoZSBiYWNrdXAgb2YgZnVsbC10ZXh0IHNlYXJjaCBhbGlhcyBkZWZpbml0aW9ucy5cblRoaXMgZmllbGQgZGVmYXVsdHMgdG8gYHRydWVgLiIsInR5cGUiOiJib29sZWFuIn0sImZ0c0luZGV4ZXMiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJGVFNJbmRleGVzIGVuYWJsZXMgdGhlIGJhY2t1cCBvZiBmdWxsLXRleHQgc2VhcmNoIGluZGV4IGRlZmluaXRpb25zIGZvciBhbGwgYnVja2V0cy5cblRoaXMgZmllbGQgZGVmYXVsdHMgdG8gYHRydWVgLiIsInR5cGUiOiJib29sZWFuIn0sImdzSW5kZXhlcyI6eyJkZWZhdWx0Ijp0cnVlLCJkZXNjcmlwdGlvbiI6IkdTSW5kZXhlcyBlbmFibGVzIHRoZSBiYWNrdXAgb2YgZ2xvYmFsIHNlY29uZGFyeSBpbmRleCBkZWZpbml0aW9ucyBmb3IgYWxsIGJ1Y2tldHMuXG5UaGlzIGZpZWxkIGRlZmF1bHRzIHRvIGB0cnVlYC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJ1c2VycyI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJVc2VycyBlbmFibGVzIHRoZSBiYWNrdXAgb2YgdXNlcnMgaW5jbHVkaW5nIHRoZWlyIHJvbGVzIGFuZCBwZXJtaXNzaW9ucy4gVGhpcyBpc1xub25seSBhdmFpbGFibGUgZm9yIENvdWNoYmFzZSBTZXJ2ZXIgNy42IGFuZCBsYXRlci4gVGhpcyBmaWVsZCBkZWZhdWx0cyB0byBgZmFsc2VgLiIsInR5cGUiOiJib29sZWFuIn0sInZpZXdzIjp7ImRlZmF1bHQiOnRydWUsImRlc2NyaXB0aW9uIjoiVmlld3MgZW5hYmxlcyB0aGUgYmFja3VwIG9mIHZpZXcgZGVmaW5pdGlvbnMgZm9yIGFsbCBidWNrZXRzLlxuVGhpcyBmaWVsZCBkZWZhdWx0cyB0byBgdHJ1ZWAuIiwidHlwZSI6ImJvb2xlYW4ifX0sInR5cGUiOiJvYmplY3QifSwic2l6ZSI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sImRlZmF1bHQiOiIyMEdpIiwiZGVzY3JpcHRpb24iOiJTaXplIGFsbG93cyB0aGUgc3BlY2lmaWNhdGlvbiBvZiBhIGJhY2t1cCBwZXJzaXN0ZW50IHZvbHVtZSwgd2hlbiB1c2luZ1xudm9sdW1lIGJhc2VkIGJhY2t1cC4gTW9yZSBpbmZvOlxuaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtcmVzb3VyY2VzLWNvbnRhaW5lcnMvI3Jlc291cmNlLXVuaXRzLWluLWt1YmVybmV0ZXMiLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ0eXBlIjoic3RyaW5nIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJzdG9yYWdlQ2xhc3NOYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiBTdG9yYWdlQ2xhc3MgdG8gdXNlLiIsInR5cGUiOiJzdHJpbmcifSwic3RyYXRlZ3kiOnsiZGVmYXVsdCI6ImZ1bGxfaW5jcmVtZW50YWwiLCJkZXNjcmlwdGlvbiI6IlN0cmF0ZWd5IGRlZmluZXMgaG93IHRvIHBlcmZvcm0gYmFja3Vwcy4gIGBmdWxsX29ubHlgIHdpbGwgb25seSBwZXJmb3JtIGZ1bGxcbmJhY2t1cHMsIGFuZCB5b3UgbXVzdCBkZWZpbmUgYSBzY2hlZHVsZSBpbiB0aGUgYHNwZWMuZnVsbGAgZmllbGQuICBgZnVsbF9pbmNyZW1lbnRhbGBcbndpbGwgcGVyZm9ybSBwZXJpb2RpYyBmdWxsIGJhY2t1cHMsIGFuZCBpbmNyZW1lbnRhbCBiYWNrdXBzIGluIGJldHdlZW4uICBZb3UgbXVzdFxuZGVmaW5lIGZ1bGwgYW5kIGluY3JlbWVudGFsIHNjaGVkdWxlcyBpbiB0aGUgYHNwZWMuZnVsbGAgYW5kIGBzcGVjLmluY3JlbWVudGFsYCBmaWVsZHNcbnJlc3BlY3RpdmVseS4gIENhcmUgc2hvdWxkIGJlIHRha2VuIHRvIGVuc3VyZSBmdWxsIGFuZCBpbmNyZW1lbnRhbCBzY2hlZHVsZXMgZG8gbm90XG5vdmVybGFwLCB0YWtpbmcgaW50byBhY2NvdW50IHRoZSBiYWNrdXAgdGltZSwgYXMgdGhpcyB3aWxsIGNhdXNlIGZhaWx1cmVzIGFzIHRoZSBqb2JzXG5hdHRlbXB0IHRvIG1vdW50IHRoZSBzYW1lIGJhY2t1cCB2b2x1bWUuIFRvIGNhdXNlIGEgYmFja3VwIHRvIG9jY3VyIGltbWVkaWF0ZWx5IHVzZSBgaW1tZWRpYXRlX2luY3JlbWVudGFsYFxub3IgYGltbWVkaWF0ZV9mdWxsYCBmb3IgaW5jcmVtZW50YWwgb3IgZnVsbCBiYWNrdXBzIHJlc3BlY3RpdmVseS5cblRoaXMgZmllbGQgZGVmYXVsdCB0byBgZnVsbF9pbmNyZW1lbnRhbGAuXG5JbmZvOiBodHRwczovL2RvY3MuY291Y2hiYXNlLmNvbS9zZXJ2ZXIvY3VycmVudC9iYWNrdXAtcmVzdG9yZS9jYmJhY2t1cG1nci1zdHJhdGVnaWVzLmh0bWwiLCJlbnVtIjpbImZ1bGxfaW5jcmVtZW50YWwiLCJmdWxsX29ubHkiLCJpbW1lZGlhdGVfaW5jcmVtZW50YWwiLCJpbW1lZGlhdGVfZnVsbCJdLCJ0eXBlIjoic3RyaW5nIn0sInN1Y2Nlc3NmdWxKb2JzSGlzdG9yeUxpbWl0Ijp7ImRlZmF1bHQiOjMsImRlc2NyaXB0aW9uIjoiQW1vdW50IG9mIHN1Y2Nlc3NmdWwgam9icyB0byBrZWVwLiIsImZvcm1hdCI6ImludDMyIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwidGhyZWFkcyI6eyJkZWZhdWx0IjoxLCJkZXNjcmlwdGlvbiI6IkhvdyBtYW55IHRocmVhZHMgdG8gdXNlIGR1cmluZyB0aGUgYmFja3VwLiAgVGhpcyBmaWVsZCBkZWZhdWx0cyB0byAxLiIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sInR0bFNlY29uZHNBZnRlckZpbmlzaGVkIjp7ImRlc2NyaXB0aW9uIjoiQW1vdW50IG9mIHRpbWUgdG8gZWxhcHNlIGJlZm9yZSBhIGNvbXBsZXRlZCBqb2IgaXMgZGVsZXRlZC4iLCJmb3JtYXQiOiJpbnQzMiIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUJhY2t1cFN0YXR1cyBwcm92aWRlcyBzdGF0dXMgbm90aWZpY2F0aW9ucyBhYm91dCB0aGUgQ291Y2hiYXNlIGJhY2t1cFxuaW5jbHVkaW5nIHdoZW4gdGhlIGxhc3QgYmFja3VwIG9jY3VycmVkLCB3aGV0aGVyIGlzIHN1Y2NlZWRlZCBvciBub3QsIHRoZSBydW5cbnRpbWUgb2YgdGhlIGJhY2t1cCBhbmQgdGhlIHNpemUgb2YgdGhlIGJhY2t1cC4iLCJwcm9wZXJ0aWVzIjp7ImFyY2hpdmUiOnsiZGVzY3JpcHRpb24iOiJMb2NhdGlvbiBvZiBCYWNrdXAgQXJjaGl2ZS4iLCJ0eXBlIjoic3RyaW5nIn0sImJhY2t1cHMiOnsiZGVzY3JpcHRpb24iOiJCYWNrdXBzIGdpdmVzIHVzIGEgZnVsbCBsaXN0IG9mIGFsbCBiYWNrdXBzXG5hbmQgdGhlaXIgcmVzcGVjdGl2ZSByZXBvc2l0b3J5IGxvY2F0aW9ucy4iLCJpdGVtcyI6eyJwcm9wZXJ0aWVzIjp7ImZ1bGwiOnsiZGVzY3JpcHRpb24iOiJGdWxsIGJhY2t1cCBpbnNpZGUgdGhlIHJlcG9zaXRvcnkuIiwidHlwZSI6InN0cmluZyJ9LCJpbmNyZW1lbnRhbHMiOnsiZGVzY3JpcHRpb24iOiJJbmNyZW1lbnRhbCBiYWNrdXBzIGluc2lkZSB0aGUgcmVwb3NpdG9yeS4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcmVwb3NpdG9yeS4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sImNhcGFjaXR5VXNlZCI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sImRlc2NyaXB0aW9uIjoiQ2FwYWNpdHlVc2VkIHRlbGxzIHVzIGhvdyBtdWNoIG9mIHRoZSBQVkMgd2UgYXJlIHVzaW5nLiBNb3JlIGluZm86XG5odHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9jb25maWd1cmF0aW9uL21hbmFnZS1yZXNvdXJjZXMtY29udGFpbmVycy8jcmVzb3VyY2UtdW5pdHMtaW4ta3ViZXJuZXRlcyIsInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsInR5cGUiOiJzdHJpbmciLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sImNyb25qb2IiOnsiZGVzY3JpcHRpb24iOiJERVBSRUNBVEVEIC0gZmllbGQgbWF5IG5vIGxvbmdlciBiZSBwb3B1bGF0ZWQuXG5Dcm9uam9iIHRlbGxzIHVzIHdoaWNoIENyb25qb2IgdGhlIGpvYiBiZWxvbmdzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwiZHVyYXRpb24iOnsiZGVzY3JpcHRpb24iOiJEdXJhdGlvbiB0ZWxscyB1cyBob3cgbG9uZyB0aGUgbGFzdCBiYWNrdXAgdG9vay4gIE1vcmUgaW5mbzpcbmh0dHBzOi8vZ29sYW5nLm9yZy9wa2cvdGltZS8jUGFyc2VEdXJhdGlvbiIsInR5cGUiOiJzdHJpbmcifSwiZmFpbGVkIjp7ImRlc2NyaXB0aW9uIjoiRmFpbGVkIGluZGljYXRlcyB3aGV0aGVyIHRoZSBtb3N0IHJlY2VudCBiYWNrdXAgaGFzIGZhaWxlZC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJqb2IiOnsiZGVzY3JpcHRpb24iOiJERVBSRUNBVEVEIC0gZmllbGQgbWF5IG5vIGxvbmdlciBiZSBwb3B1bGF0ZWQuXG5Kb2IgdGVsbHMgdXMgd2hpY2ggam9iIGlzIHJ1bm5pbmcvcmFuIGxhc3QuIiwidHlwZSI6InN0cmluZyJ9LCJsYXN0RmFpbHVyZSI6eyJkZXNjcmlwdGlvbiI6Ikxhc3RGYWlsdXJlIHRlbGxzIHVzIHRoZSB0aW1lIHRoZSBsYXN0IGZhaWxlZCBiYWNrdXAgZmFpbGVkLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibGFzdFJ1biI6eyJkZXNjcmlwdGlvbiI6Ikxhc3RSdW4gdGVsbHMgdXMgdGhlIHRpbWUgdGhlIGxhc3QgYmFja3VwIGpvYiBzdGFydGVkLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibGFzdFN1Y2Nlc3MiOnsiZGVzY3JpcHRpb24iOiJMYXN0U3VjY2VzcyBnaXZlcyB1cyB0aGUgdGltZSB0aGUgbGFzdCBzdWNjZXNzZnVsIGJhY2t1cCBmaW5pc2hlZC4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sIm91dHB1dCI6eyJkZXNjcmlwdGlvbiI6IkRFUFJFQ0FURUQgLSBmaWVsZCBtYXkgbm8gbG9uZ2VyIGJlIHBvcHVsYXRlZC5cbk91dHB1dCByZXBvcnRzIHVzZWZ1bCBpbmZvcm1hdGlvbiBmcm9tIHRoZSBiYWNrdXBfc2NyaXB0LiIsInR5cGUiOiJzdHJpbmcifSwicG9kIjp7ImRlc2NyaXB0aW9uIjoiREVQUkVDQVRFRCAtIGZpZWxkIG1heSBubyBsb25nZXIgYmUgcG9wdWxhdGVkLlxuUG9kIHRlbGxzIHVzIHdoaWNoIHBvZCBpcyBydW5uaW5nL3JhbiBsYXN0LiIsInR5cGUiOiJzdHJpbmcifSwicmVwbyI6eyJkZXNjcmlwdGlvbiI6IlJlcG8gaXMgd2hlcmUgd2UgYXJlIGN1cnJlbnRseSBwZXJmb3JtaW5nIG9wZXJhdGlvbnMuIiwidHlwZSI6InN0cmluZyJ9LCJydW5uaW5nIjp7ImRlc2NyaXB0aW9uIjoiUnVubmluZyBpbmRpY2F0ZXMgd2hldGhlciBhIGJhY2t1cCBpcyBjdXJyZW50bHkgYmVpbmcgcGVyZm9ybWVkLiIsInR5cGUiOiJib29sZWFuIn19LCJyZXF1aXJlZCI6WyJmYWlsZWQiLCJydW5uaW5nIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlfV19fQ==
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuOC4xIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZWNvbGxlY3Rpb25ncm91cHMuY291Y2hiYXNlLmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiY291Y2hiYXNlLmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJDb3VjaGJhc2VDb2xsZWN0aW9uR3JvdXAiLCJsaXN0S2luZCI6IkNvdWNoYmFzZUNvbGxlY3Rpb25Hcm91cExpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2Vjb2xsZWN0aW9uZ3JvdXBzIiwic2luZ3VsYXIiOiJjb3VjaGJhc2Vjb2xsZWN0aW9uZ3JvdXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7Im5hbWUiOiJ2MiIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJDb3VjaGJhc2VDb2xsZWN0aW9uR3JvdXAgcmVwcmVzZW50IHRoZSBmaW5lc3QgZ3JhaW5lZCBzaXplIG9mIGRhdGEgc3RvcmFnZSBpbiBDb3VjaGJhc2UuXG5Db2xsZWN0aW9ucyBjb250YWluIGFsbCBkb2N1bWVudHMgYW5kIGluZGV4ZXMgaW4gdGhlIHN5c3RlbS4gIENvbGxlY3Rpb25zIGFsc28gZm9ybVxudGhlIGZpbmVzdCBncmFpbiBiYXNpcyBmb3Igcm9sZS1iYXNlZCBhY2Nlc3MgY29udHJvbCAoUkJBQykgYW5kIGNyb3NzLWRhdGFjZW50ZXJcbnJlcGxpY2F0aW9uIChYRENSKS4gIEluIG9yZGVyIHRvIGJlIGNvbnNpZGVyZWQgYnkgdGhlIE9wZXJhdG9yLCBldmVyeSBjb2xsZWN0aW9uIGdyb3VwXG5tdXN0IGJlIHJlZmVyZW5jZWQgYnkgYSBgQ291Y2hiYXNlU2NvcGVgIG9yIGBDb3VjaGJhc2VTY29wZUdyb3VwYCByZXNvdXJjZS4gIFVubGlrZSB0aGVcbkNvdWNoYmFzZUNvbGxlY3Rpb24gcmVzb3VyY2UsIGEgY29sbGVjdGlvbiBncm91cCByZXByZXNlbnRzIG11bHRpcGxlIGNvbGxlY3Rpb25zLCB3aXRoXG5jb21tb24gY29uZmlndXJhdGlvbiBwYXJhbWV0ZXJzLCB0byBiZSBleHByZXNzZWQgYXMgYSBzaW5nbGUgcmVzb3VyY2UsIG1pbmltaXppbmcgcmVxdWlyZWRcbmNvbmZpZ3VyYXRpb24gYW5kIEt1YmVybmV0ZXMgQVBJIHRyYWZmaWMuICBJdCBhbHNvIGZvcm1zIHRoZSBiYXNpcyBvZiBDb3VjaGJhc2UgUkJBQ1xuc2VjdXJpdHkgYm91bmRhcmllcy4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgdGhlIHJlc291cmNlLiIsInByb3BlcnRpZXMiOnsiaGlzdG9yeSI6eyJkZXNjcmlwdGlvbiI6Ikhpc3RvcnkgZGVmaW5lcyB3aGV0aGVyIGNoYW5nZSBoaXN0b3J5IGlzIHJldGFpbmVkIGZvciB0aGUgY29sbGVjdGlvbi5cbklmIHRoaXMgZmllbGQgaXMgc2V0LCBpdCB3aWxsIG92ZXJyaWRlIHRoZSBoaXN0b3J5UmV0ZW50aW9uLmNvbGxlY3Rpb25EZWZhdWx0IGJ1Y2tldCBsZXZlbCB2YWx1ZS5cblRoaXMgaXMgb25seSBzdXBwb3J0ZWQgd2l0aCBzdG9yYWdlQmFja2VuZD1tYWdtYSBhdCB0aGUgYnVja2V0IGxldmVsLiIsInR5cGUiOiJib29sZWFuIn0sIm1heFRUTCI6eyJkZXNjcmlwdGlvbiI6Ik1heFRUTCBkZWZpbmVzIGhvdyBsb25nIGEgZG9jdW1lbnQgaXMgcGVybWl0dGVkIHRvIGV4aXN0IGZvciwgd2l0aG91dFxubW9kaWZpY2F0aW9uLCB1bnRpbCBpdCBpcyBhdXRvbWF0aWNhbGx5IGRlbGV0ZWQuICBUaGlzIGZpZWxkIHRha2VzIHByZWNlZGVuY2Ugb3ZlclxuYW55IFRUTCBkZWZpbmVkIGF0IHRoZSBidWNrZXQgbGV2ZWwuICBUaGlzIGlzIGEgZGVmYXVsdCwgYW5kIG1heGltdW1cbnRpbWUtdG8tbGl2ZSBhbmQgbWF5IGJlIHNldCB0byBhIGxvd2VyIHZhbHVlIGJ5IHRoZSBjbGllbnQuICBJZiB0aGUgY2xpZW50IHNwZWNpZmllc1xuYSBoaWdoZXIgdmFsdWUsIHRoZW4gaXQgaXMgdHJ1bmNhdGVkIHRvIHRoZSBtYXhpbXVtIGR1cmFiaWxpdHkuICBEb2N1bWVudHMgYXJlXG5yZW1vdmVkIGJ5IENvdWNoYmFzZSwgYWZ0ZXIgdGhleSBoYXZlIGV4cGlyZWQsIHdoZW4gZWl0aGVyIGFjY2Vzc2VkLCB0aGUgZXhwaXJ5XG5wYWdlciBpcyBydW4sIG9yIHRoZSBidWNrZXQgaXMgY29tcGFjdGVkLiAgV2hlbiBzZXQgdG8gMCwgdGhlbiBkb2N1bWVudHMgYXJlIG5vdFxuZXhwaXJlZCBieSBkZWZhdWx0LiAgVGhpcyBmaWVsZCBtdXN0IGVpdGhlciBiZSBhIGR1cmF0aW9uIGluIHRoZSByYW5nZSAwLTIxNDc0ODM2NDhzIG9yIFwiLTFcIixcbmRlZmF1bHRpbmcgdG8gMC4gSWYgc2V0IHRvIFwiLTFcIiwgdGhlIGNvbGxlY3Rpb24ncyBidWNrZXQgd2lsbCBiZSBwcmV2ZW50ZWQgZnJvbSBzZXR0aW5nIGFcbmRlZmF1bHQgZXhwaXJhdGlvbiBvbiB0aGUgY29sbGVjdGlvbidzIGRvY3VtZW50cy4gV2hpbGUgdGhpcyBmaWVsZCBjYW4gYmUgY2hhbmdlZCBvbiB0aGUgQ1JELFxuaXQgd2lsbCBub3QgYmUgdXBkYXRlZCBvbiB0aGUgY29sbGVjdGlvbiBpZiB0aGUgQ291Y2hiYXNlIFNlcnZlciB2ZXJzaW9uIGlzIHByZSA3LjYuMC5cbk1vcmUgaW5mbzogaHR0cHM6Ly9nb2xhbmcub3JnL3BrZy90aW1lLyNQYXJzZUR1cmF0aW9uLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZXMiOnsiZGVzY3JpcHRpb24iOiJOYW1lcyBzcGVjaWZpZXMgdGhlIG5hbWVzIG9mIHRoZSBjb2xsZWN0aW9ucy4gIFVubGlrZSBDb3VjaGJhc2VDb2xsZWN0aW9uLCB3aGljaFxuc3BlY2lmaWVzIGEgc2luZ2xlIGNvbGxlY3Rpb24sIGEgY29sbGVjdGlvbiBncm91cCBzcGVjaWZpZXMgbXVsdGlwbGUsIGFuZCB0aGVcbmNvbGxlY3Rpb24gZ3JvdXAgbXVzdCBzcGVjaWZ5IGF0IGxlYXN0IG9uZSBjb2xsZWN0aW9uIG5hbWUuXG5BbnkgY29sbGVjdGlvbiBuYW1lcyBzcGVjaWZpZWQgbXVzdCBiZSB1bmlxdWUuXG5Db2xsZWN0aW9uIG5hbWVzIG11c3QgYmUgMS0yNTEgY2hhcmFjdGVycyBpbiBsZW5ndGgsIGNvbnRhaW4gb25seSBbYS16QS1aMC05Xy0lXVxuYW5kIG5vdCBzdGFydCB3aXRoIGVpdGhlciBfIG9yICUuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJTY29wZU9yQ29sbGVjdGlvbk5hbWUgaXMgYSBnZW5lcmljIHR5cGUgdG8gY2FwdHVyZSBhIHZhbGlkXG5zY29wZSBvciBjb2xsZWN0aW9uIG5hbWUuICBUaGVzZSBtdXN0IGNvbnNpc3Qgb2YgMS0yNTEgY2hhcmFjdGVycyxcbmluY2x1ZGUgb25seSBBLVosIGEteiwgMC05LCAtLCBfIG9yICUsIGFuZCBtdXN0IG5vdCBzdGFydCB3aXRoXG5fICh3aGljaCBpcyBhbiBpbnRlcm5hbCBtYXJrZXIpIG9yICUgKHdoaWNoIGlzIHByb2JhYmx5IGFuIGVzY2FwZVxuY2hhcmFjdGVyIGluIGxhbmd1YWdlIFgpLiIsIm1heExlbmd0aCI6MjUxLCJtaW5MZW5ndGgiOjEsInBhdHRlcm4iOiJeW2EtekEtWjAtOVxcLV1bYS16QS1aMC05XFwtJV9dezAsMjUwfSQiLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJzZXQifX0sInJlcXVpcmVkIjpbIm5hbWVzIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlfV19fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuOC4xIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZWNvbGxlY3Rpb25zLmNvdWNoYmFzZS5jb20ifSwic3BlYyI6eyJncm91cCI6ImNvdWNoYmFzZS5jb20iLCJuYW1lcyI6eyJraW5kIjoiQ291Y2hiYXNlQ29sbGVjdGlvbiIsImxpc3RLaW5kIjoiQ291Y2hiYXNlQ29sbGVjdGlvbkxpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2Vjb2xsZWN0aW9ucyIsInNpbmd1bGFyIjoiY291Y2hiYXNlY29sbGVjdGlvbiJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUNvbGxlY3Rpb24gcmVwcmVzZW50IHRoZSBmaW5lc3QgZ3JhaW5lZCBzaXplIG9mIGRhdGEgc3RvcmFnZSBpbiBDb3VjaGJhc2UuXG5Db2xsZWN0aW9ucyBjb250YWluIGFsbCBkb2N1bWVudHMgYW5kIGluZGV4ZXMgaW4gdGhlIHN5c3RlbS4gIENvbGxlY3Rpb25zIGFsc28gZm9ybVxudGhlIGZpbmVzdCBncmFpbiBiYXNpcyBmb3Igcm9sZS1iYXNlZCBhY2Nlc3MgY29udHJvbCAoUkJBQykgYW5kIGNyb3NzLWRhdGFjZW50ZXJcbnJlcGxpY2F0aW9uIChYRENSKS4gIEluIG9yZGVyIHRvIGJlIGNvbnNpZGVyZWQgYnkgdGhlIE9wZXJhdG9yLCBldmVyeSBjb2xsZWN0aW9uXG5tdXN0IGJlIHJlZmVyZW5jZWQgYnkgYSBgQ291Y2hiYXNlU2NvcGVgIG9yIGBDb3VjaGJhc2VTY29wZUdyb3VwYCByZXNvdXJjZS4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVmYXVsdCI6e30sImRlc2NyaXB0aW9uIjoiU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIHRoZSByZXNvdXJjZS4iLCJwcm9wZXJ0aWVzIjp7Imhpc3RvcnkiOnsiZGVzY3JpcHRpb24iOiJIaXN0b3J5IGRlZmluZXMgd2hldGhlciBjaGFuZ2UgaGlzdG9yeSBpcyByZXRhaW5lZCBmb3IgdGhlIGNvbGxlY3Rpb24uXG5JZiB0aGlzIGZpZWxkIGlzIHNldCwgaXQgd2lsbCBvdmVycmlkZSB0aGUgaGlzdG9yeVJldGVudGlvbi5jb2xsZWN0aW9uRGVmYXVsdCBidWNrZXQgbGV2ZWwgdmFsdWUuXG5UaGlzIGlzIG9ubHkgc3VwcG9ydGVkIHdpdGggc3RvcmFnZUJhY2tlbmQ9bWFnbWEgYXQgdGhlIGJ1Y2tldCBsZXZlbC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJtYXhUVEwiOnsiZGVzY3JpcHRpb24iOiJNYXhUVEwgZGVmaW5lcyBob3cgbG9uZyBhIGRvY3VtZW50IGlzIHBlcm1pdHRlZCB0byBleGlzdCBmb3IsIHdpdGhvdXRcbm1vZGlmaWNhdGlvbiwgdW50aWwgaXQgaXMgYXV0b21hdGljYWxseSBkZWxldGVkLiAgVGhpcyBmaWVsZCB0YWtlcyBwcmVjZWRlbmNlIG92ZXJcbmFueSBUVEwgZGVmaW5lZCBhdCB0aGUgYnVja2V0IGxldmVsLiAgVGhpcyBpcyBhIGRlZmF1bHQsIGFuZCBtYXhpbXVtXG50aW1lLXRvLWxpdmUgYW5kIG1heSBiZSBzZXQgdG8gYSBsb3dlciB2YWx1ZSBieSB0aGUgY2xpZW50LiAgSWYgdGhlIGNsaWVudCBzcGVjaWZpZXNcbmEgaGlnaGVyIHZhbHVlLCB0aGVuIGl0IGlzIHRydW5jYXRlZCB0byB0aGUgbWF4aW11bSBkdXJhYmlsaXR5LiAgRG9jdW1lbnRzIGFyZVxucmVtb3ZlZCBieSBDb3VjaGJhc2UsIGFmdGVyIHRoZXkgaGF2ZSBleHBpcmVkLCB3aGVuIGVpdGhlciBhY2Nlc3NlZCwgdGhlIGV4cGlyeVxucGFnZXIgaXMgcnVuLCBvciB0aGUgYnVja2V0IGlzIGNvbXBhY3RlZC4gIFdoZW4gc2V0IHRvIDAsIHRoZW4gZG9jdW1lbnRzIGFyZSBub3RcbmV4cGlyZWQgYnkgZGVmYXVsdC4gIFRoaXMgZmllbGQgbXVzdCBlaXRoZXIgYmUgYSBkdXJhdGlvbiBpbiB0aGUgcmFuZ2UgMC0yMTQ3NDgzNjQ4cyBvciBcIi0xXCIsXG5kZWZhdWx0aW5nIHRvIDAuIElmIHNldCB0byBcIi0xXCIsIHRoZSBjb2xsZWN0aW9uJ3MgYnVja2V0IHdpbGwgYmUgcHJldmVudGVkIGZyb20gc2V0dGluZyBhXG5kZWZhdWx0IGV4cGlyYXRpb24gb24gdGhlIGNvbGxlY3Rpb24ncyBkb2N1bWVudHMuIFdoaWxlIHRoaXMgZmllbGQgY2FuIGJlIGNoYW5nZWQgb24gdGhlIENSRCxcbml0IHdpbGwgbm90IGJlIHVwZGF0ZWQgb24gdGhlIGNvbGxlY3Rpb24gaWYgdGhlIENvdWNoYmFzZSBTZXJ2ZXIgdmVyc2lvbiBpcyBwcmUgNy42LjAuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ29sYW5nLm9yZy9wa2cvdGltZS8jUGFyc2VEdXJhdGlvbi4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIHNwZWNpZmllcyB0aGUgbmFtZSBvZiB0aGUgY29sbGVjdGlvbi4gIEJ5IGRlZmF1bHQsIHRoZSBtZXRhZGF0YS5uYW1lIGlzXG51c2VkIHRvIGRlZmluZSB0aGUgY29sbGVjdGlvbiBuYW1lLCBob3dldmVyLCBkdWUgdG8gdGhlIGxpbWl0ZWQgY2hhcmFjdGVyIHNldCxcbnRoaXMgZmllbGQgY2FuIGJlIHVzZWQgdG8gb3ZlcnJpZGUgdGhlIGRlZmF1bHQgYW5kIHByb3ZpZGUgdGhlIGZ1bGwgZnVuY3Rpb25hbGl0eS5cbkFkZGl0aW9uYWxseSB0aGUgYG1ldGFkYXRhLm5hbWVgIGZpZWxkIGlzIGEgRE5TIGxhYmVsLCBhbmQgdGh1cyBsaW1pdGVkIHRvIDYzXG5jaGFyYWN0ZXJzLCB0aGlzIGZpZWxkIG11c3QgYmUgdXNlZCBpZiB0aGUgbmFtZSBpcyBsb25nZXIgdGhhbiB0aGlzIGxpbWl0LlxuQ29sbGVjdGlvbiBuYW1lcyBtdXN0IGJlIDEtMjUxIGNoYXJhY3RlcnMgaW4gbGVuZ3RoLCBjb250YWluIG9ubHkgW2EtekEtWjAtOV8tJV1cbmFuZCBub3Qgc3RhcnQgd2l0aCBlaXRoZXIgXyBvciAlLiIsIm1heExlbmd0aCI6MjUxLCJtaW5MZW5ndGgiOjEsInBhdHRlcm4iOiJeW2EtekEtWjAtOVxcLV1bYS16QS1aMC05XFwtJV9dezAsMjUwfSQiLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWV9XX19
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuOC4xIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZXJvbGViaW5kaW5ncy5jb3VjaGJhc2UuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJjb3VjaGJhc2UuY29tIiwibmFtZXMiOnsia2luZCI6IkNvdWNoYmFzZVJvbGVCaW5kaW5nIiwibGlzdEtpbmQiOiJDb3VjaGJhc2VSb2xlQmluZGluZ0xpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2Vyb2xlYmluZGluZ3MiLCJzaW5ndWxhciI6ImNvdWNoYmFzZXJvbGViaW5kaW5nIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjIiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlUm9sZUJpbmRpbmcgYWxsb3dzIGFzc29jaWF0aW9uIG9mIENvdWNoYmFzZSB1c2VycyB3aXRoIGdyb3Vwcy4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJDb3VjaGJhc2VSb2xlQmluZGluZ1NwZWMgZGVmaW5lcyB0aGUgZ3JvdXAgb2Ygc3ViamVjdHMgaS5lLiB1c2VycywgYW5kIHRoZVxucm9sZSBpLmUuIGdyb3VwIHRoZXkgYXJlIGEgbWVtYmVyIG9mLiIsInByb3BlcnRpZXMiOnsicm9sZVJlZiI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUdyb3VwIGJlaW5nIGJvdW5kIHRvIHN1YmplY3RzLiIsInByb3BlcnRpZXMiOnsia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgb2Ygcm9sZSB0byB1c2UgZm9yIGJpbmRpbmcuIiwiZW51bSI6WyJDb3VjaGJhc2VHcm91cCJdLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHJvbGUgcmVzb3VyY2UgdG8gdXNlIGZvciBiaW5kaW5nLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImtpbmQiLCJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3ViamVjdHMiOnsiZGVzY3JpcHRpb24iOiJMaXN0IG9mIHVzZXJzIHRvIGJpbmQgYSByb2xlIHRvLiIsIml0ZW1zIjp7InByb3BlcnRpZXMiOnsia2luZCI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZSB1c2VyL2dyb3VwIGtpbmQuIiwiZW51bSI6WyJDb3VjaGJhc2VVc2VyIl0sInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgQ291Y2hiYXNlIHVzZXIgcmVzb3VyY2UuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsia2luZCIsIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbInJvbGVSZWYiLCJzdWJqZWN0cyJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZX1dfX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuOC4xIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZXVzZXJzLmNvdWNoYmFzZS5jb20ifSwic3BlYyI6eyJncm91cCI6ImNvdWNoYmFzZS5jb20iLCJuYW1lcyI6eyJraW5kIjoiQ291Y2hiYXNlVXNlciIsImxpc3RLaW5kIjoiQ291Y2hiYXNlVXNlckxpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2V1c2VycyIsInNpbmd1bGFyIjoiY291Y2hiYXNldXNlciJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZVVzZXIgYWxsb3dzIHRoZSBhdXRvbWF0aW9uIG9mIENvdWNoYmFzZSB1c2VyIG1hbmFnZW1lbnQuIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LlxuU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kXG5tYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuXG5TZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by5cbkNhbm5vdCBiZSB1cGRhdGVkLlxuSW4gQ2FtZWxDYXNlLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlVXNlclNwZWMgYWxsb3dzIHRoZSBzcGVjaWZpY2F0aW9uIG9mIENvdWNoYmFzZSB1c2VyIGNvbmZpZ3VyYXRpb24uIiwicHJvcGVydGllcyI6eyJhdXRoRG9tYWluIjp7ImRlc2NyaXB0aW9uIjoiVGhlIGRvbWFpbiB3aGljaCBwcm92aWRlcyB1c2VyIGF1dGhlbnRpY2F0aW9uLiIsImVudW0iOlsibG9jYWwiLCJleHRlcm5hbCJdLCJ0eXBlIjoic3RyaW5nIn0sImF1dGhTZWNyZXQiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIEt1YmVybmV0ZXMgc2VjcmV0IHdpdGggcGFzc3dvcmQgZm9yIENvdWNoYmFzZSBkb21haW4uIiwidHlwZSI6InN0cmluZyJ9LCJmdWxsTmFtZSI6eyJkZXNjcmlwdGlvbiI6IkZ1bGwgTmFtZSBvZiBDb3VjaGJhc2UgdXNlci4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJVc2VybmFtZSBvZiB0aGUgY291Y2hiYXNlIHVzZXIuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiYXV0aERvbWFpbiJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZX1dfX0=
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.connect.redhat.com/couchbase/cloud-native-gateway@sha256:50bbc00cce14ec968c9b8e9ef06a6c5bd2860d38d973cf7af7271d4ff66fe9cc
  name: couchbase-cloud-native-gateway
- image: registry.connect.redhat.com/couchbase/exporter@sha256:de3bacf8233553452db1d9cec7c98b28d12c41aa025d830d6b7c5de0da9723b1
  name: couchbase-metrics
- image: registry.connect.redhat.com/couchbase/operator-backup@sha256:382511f532b0206d2bb0cecc8f91b055809b5ccf89136b6d37d55a40e266812f
  name: couchbase-backup
- image: registry.connect.redhat.com/couchbase/operator-bundle@sha256:2dc8147fab1178a5e3c6e6fca468d654beecd6b186513772a4ec849ea81e10b0
  name: ""
- image: registry.connect.redhat.com/couchbase/operator@sha256:52a11164a9cc79588790765af7a74ebad14ae75e81681a23bb65bd393bf42096
  name: couchbase-operator
- image: registry.connect.redhat.com/couchbase/server@sha256:033c0b2b8eb12ac63a158754dce20d9787a470c77252c60bd4d9e11f5b2dbc7a
  name: couchbase-server
- image: registry.connect.redhat.com/couchbase/server@sha256:437cd5aa05ff057b17f47d2500dec7cefca21682eb0f4badff4538dc164bc1a7
  name: couchbase-server-7_6_3_4
- image: registry.connect.redhat.com/couchbase/server@sha256:4e0d41b559c5d536aa06709457d6c788fd039b0c915c14f2d429213bdfeff824
  name: couchbase-server-7_2_6_2
- image: registry.connect.redhat.com/couchbase/server@sha256:643272bd58b0b584863400d281f1dcb147099c7f2120a947347be4b1f97391a7
  name: couchbase-server-7_6_2_3
schema: olm.bundle
---
image: registry.connect.redhat.com/couchbase/operator-bundle@sha256:29a44046aa2cf273798b5a58ce3c674e51d5e923b7b6798322a8c365e79ad28a
name: couchbase-operator.v2.8.1-2
package: couchbase-enterprise-certified
properties:
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseAutoscaler
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseBackup
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseBackupRestore
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseBucket
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseCluster
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseCollection
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseCollectionGroup
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseEphemeralBucket
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseGroup
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseMemcachedBucket
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseMigrationReplication
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseReplication
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseRoleBinding
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseScope
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseScopeGroup
    version: v2
- type: olm.gvk
  value:
    group: couchbase.com
    kind: CouchbaseUser
    version: v2
- type: olm.package
  value:
    packageName: couchbase-enterprise-certified
    version: 2.8.1-2
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuOC4xIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZW1lbWNhY2hlZGJ1Y2tldHMuY291Y2hiYXNlLmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiY291Y2hiYXNlLmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJDb3VjaGJhc2VNZW1jYWNoZWRCdWNrZXQiLCJsaXN0S2luZCI6IkNvdWNoYmFzZU1lbWNhY2hlZEJ1Y2tldExpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2VtZW1jYWNoZWRidWNrZXRzIiwic2luZ3VsYXIiOiJjb3VjaGJhc2VtZW1jYWNoZWRidWNrZXQifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3BlYy5tZW1vcnlRdW90YSIsIm5hbWUiOiJtZW1vcnkgcXVvdGEiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5tZXRhZGF0YS5jcmVhdGlvblRpbWVzdGFtcCIsIm5hbWUiOiJhZ2UiLCJ0eXBlIjoiZGF0ZSJ9XSwibmFtZSI6InYyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkRFUFJFQ0FURUQgLSBNZW1jYWNoZWQgYnVja2V0cyBhcmUgbm93IGRlcHJlY2F0ZWQgaW4gQ291Y2hiYXNlIFNlcnZlciBhbmQgc2hvdWxkIG5vdCBiZSB1c2VkLCB0aGV5IHdpbGwgYmUgcmVtb3ZlZCBpbiBhIGZ1dHVyZSByZWxlYXNlLlxuVGhlIENvdWNoYmFzZU1lbWNhY2hlZEJ1Y2tldCByZXNvdXJjZSBkZWZpbmVzIGEgc2V0IG9mIGRvY3VtZW50cyBpbiBDb3VjaGJhc2Ugc2VydmVyLlxuQSBDb3VjaGJhc2UgY2xpZW50IGNvbm5lY3RzIHRvIGFuZCBvcGVyYXRlcyBvbiBhIGJ1Y2tldCwgd2hpY2ggcHJvdmlkZXMgaW5kZXBlbmRlbnRcbm1hbmFnZW1lbnQgb2YgYSBzZXQgZG9jdW1lbnRzIGFuZCBhIHNlY3VyaXR5IGJvdW5kYXJ5IGZvciByb2xlIGJhc2VkIGFjY2VzcyBjb250cm9sLlxuQSBDb3VjaGJhc2VFcGhlbWVyYWxCdWNrZXQgcHJvdmlkZXMgaW4tbWVtb3J5IG9ubHkgc3RvcmFnZSBmb3IgZG9jdW1lbnRzIGNvbnRhaW5lZCBieSBpdC4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVmYXVsdCI6e30sImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlTWVtY2FjaGVkQnVja2V0U3BlYyBpcyB0aGUgc3BlY2lmaWNhdGlvbiBmb3IgYSBNZW1jYWNoZWQgYnVja2V0XG5yZXNvdXJjZSwgYW5kIGFsbG93cyB0aGUgYnVja2V0IHRvIGJlIGN1c3RvbWl6ZWQuIiwicHJvcGVydGllcyI6eyJlbmFibGVGbHVzaCI6eyJkZXNjcmlwdGlvbiI6IkVuYWJsZUZsdXNoIGRlZmluZXMgd2hldGhlciBhIGNsaWVudCBjYW4gZGVsZXRlIGFsbCBkb2N1bWVudHMgaW4gYSBidWNrZXQuXG5UaGlzIGZpZWxkIGRlZmF1bHRzIHRvIGZhbHNlLiIsInR5cGUiOiJib29sZWFuIn0sIm1lbW9yeVF1b3RhIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwiZGVmYXVsdCI6IjEwME1pIiwiZGVzY3JpcHRpb24iOiJNZW1vcnlRdW90YSBpcyBhIG1lbW9yeSBsaW1pdCB0byB0aGUgc2l6ZSBvZiBhIGJ1Y2tldC4gVGhlIG1lbW9yeSBxdW90YVxuaXMgZGVmaW5lZCBwZXIgQ291Y2hiYXNlIHBvZCBydW5uaW5nIHRoZSBkYXRhIHNlcnZpY2UuICBUaGlzIGZpZWxkIGRlZmF1bHRzIHRvLCBhbmQgbXVzdFxuYmUgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRvIDEwME1pLiAgTW9yZSBpbmZvOlxuaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtcmVzb3VyY2VzLWNvbnRhaW5lcnMvI3Jlc291cmNlLXVuaXRzLWluLWt1YmVybmV0ZXMiLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ0eXBlIjoic3RyaW5nIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBpcyB0aGUgbmFtZSBvZiB0aGUgYnVja2V0IHdpdGhpbiBDb3VjaGJhc2Ugc2VydmVyLiAgQnkgZGVmYXVsdCB0aGUgT3BlcmF0b3JcbndpbGwgdXNlIHRoZSBgbWV0YWRhdGEubmFtZWAgZmllbGQgdG8gZGVmaW5lIHRoZSBidWNrZXQgbmFtZS4gIFRoZSBgbWV0YWRhdGEubmFtZWBcbmZpZWxkIG9ubHkgc3VwcG9ydHMgYSBzdWJzZXQgb2YgdGhlIHN1cHBvcnRlZCBjaGFyYWN0ZXIgc2V0LiAgV2hlbiBzcGVjaWZpZWQsIHRoaXNcbmZpZWxkIG92ZXJyaWRlcyBgbWV0YWRhdGEubmFtZWAuICBMZWdhbCBidWNrZXQgbmFtZXMgaGF2ZSBhIG1heGltdW0gbGVuZ3RoIG9mIDEwMFxuY2hhcmFjdGVycyBhbmQgbWF5IGJlIGNvbXBvc2VkIG9mIGFueSBjaGFyYWN0ZXIgZnJvbSBcImEtelwiLCBcIkEtWlwiLCBcIjAtOVwiIGFuZCBcIi1fJVxcLlwiLiIsIm1heExlbmd0aCI6MTAwLCJwYXR0ZXJuIjoiXlthLXpBLVowLTktXyVcXC5dezEsMTAwfSQiLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWV9XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuOC4xIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZW1pZ3JhdGlvbnJlcGxpY2F0aW9ucy5jb3VjaGJhc2UuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJjb3VjaGJhc2UuY29tIiwibmFtZXMiOnsia2luZCI6IkNvdWNoYmFzZU1pZ3JhdGlvblJlcGxpY2F0aW9uIiwibGlzdEtpbmQiOiJDb3VjaGJhc2VNaWdyYXRpb25SZXBsaWNhdGlvbkxpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2VtaWdyYXRpb25yZXBsaWNhdGlvbnMiLCJzaW5ndWxhciI6ImNvdWNoYmFzZW1pZ3JhdGlvbnJlcGxpY2F0aW9uIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7Impzb25QYXRoIjoiLnNwZWMuYnVja2V0IiwibmFtZSI6ImJ1Y2tldCIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLnNwZWMucmVtb3RlQnVja2V0IiwibmFtZSI6InJlbW90ZSBidWNrZXQiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zcGVjLnBhdXNlZCIsIm5hbWUiOiJwYXVzZWQiLCJ0eXBlIjoiYm9vbGVhbiJ9LHsianNvblBhdGgiOiIubWV0YWRhdGEuY3JlYXRpb25UaW1lc3RhbXAiLCJuYW1lIjoiYWdlIiwidHlwZSI6ImRhdGUifV0sIm5hbWUiOiJ2MiIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJUaGUgQ291Y2hiYXNlU2NvcGVNaWdyYXRpb24gcmVzb3VyY2UgcmVwcmVzZW50cyB0aGUgdXNlIG9mIHRoZSBzcGVjaWFsIG1pZ3JhdGlvbiBtYXBwaW5nXG53aXRoaW4gWERDUiB0byB0YWtlIGEgZmlsdGVyZWQgbGlzdCBmcm9tIHRoZSBkZWZhdWx0IHNjb3BlIGFuZCBjb2xsZWN0aW9uIG9mIHRoZSBzb3VyY2UgYnVja2V0LFxucmVwbGljYXRlIGl0IHRvIG5hbWVkIHNjb3BlcyBhbmQgY29sbGVjdGlvbnMgd2l0aGluIHRoZSB0YXJnZXQgYnVja2V0LlxuVGhlIGJ1Y2tldC10by1idWNrZXQgcmVwbGljYXRpb24gY2Fubm90IGR1cGxpY2F0ZSBhbnkgdXNlZCBieSB0aGUgQ291Y2hiYXNlUmVwbGljYXRpb24gcmVzb3VyY2UsXG5hcyB0aGVzZSB0d28gdHlwZXMgb2YgcmVwbGljYXRpb24gYXJlIG11dHVhbGx5IGV4Y2x1c2l2ZSBiZXR3ZWVuIGJ1Y2tldHMuXG5odHRwczovL2RvY3MuY291Y2hiYXNlLmNvbS9zZXJ2ZXIvY3VycmVudC9sZWFybi9jbHVzdGVycy1hbmQtYXZhaWxhYmlsaXR5L3hkY3Itd2l0aC1zY29wZXMtYW5kLWNvbGxlY3Rpb25zLmh0bWwjbWlncmF0aW9uIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LlxuU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kXG5tYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuXG5TZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by5cbkNhbm5vdCBiZSB1cGRhdGVkLlxuSW4gQ2FtZWxDYXNlLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJtaWdyYXRpb25NYXBwaW5nIjp7ImRlc2NyaXB0aW9uIjoiVGhlIG1pZ3JhdGlvbiBtYXBwaW5ncyB0byB1c2UsIHNob3VsZCBuZXZlciBiZSBlbXB0eSBhcyB0aGF0IGlzIGp1c3QgYW4gaW1wbGljaXQgYnVja2V0LXRvLWJ1Y2tldCByZXBsaWNhdGlvbiB0aGVuLiIsInByb3BlcnRpZXMiOnsibWFwcGluZ3MiOnsiZGVzY3JpcHRpb24iOiJUaGUgbWlncmF0aW9uIG1hcHBpbmdzIHRvIHVzZSwgc2hvdWxkIG5ldmVyIGJlIGVtcHR5IGFzIHRoYXQgaXMganVzdCBhbiBpbXBsaWNpdCBidWNrZXQtdG8tYnVja2V0IHJlcGxpY2F0aW9uIHRoZW4uIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJJbmRpY2F0ZXMgd2hldGhlciB0aGlzIGlzIHVzaW5nIG1pZ3JhdGlvbiBtYXBwaW5nIG9yIG5vdC5cblRoaXMgaXMgb25seSB2YWxpZCB3aGVuIHVzaW5nIHRoZSBkZWZhdWx0IHNjb3BlL2NvbGxlY3Rpb24uIiwicHJvcGVydGllcyI6eyJmaWx0ZXIiOnsiZGVmYXVsdCI6Il9kZWZhdWx0Ll9kZWZhdWx0IiwiZGVzY3JpcHRpb24iOiJBIGZpbHRlciB0byBzZWxlY3QgZnJvbSB0aGUgc291cmNlIGRlZmF1bHQgc2NvcGUgYW5kIGNvbGxlY3Rpb24uXG5EZWZhdWx0cyB0byBzZWxlY3QgZXZlcnl0aGluZyBpbiB0aGUgZGVmYXVsdCBzY29wZSBhbmQgY29sbGVjdGlvbi4iLCJ0eXBlIjoic3RyaW5nIn0sInRhcmdldEtleXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoiVGhlIGRlc3RpbmF0aW9uIG9mIG91ciBtaWdyYXRpb24sIG11c3QgYmUgYSBzY29wZSBhbmQgY29sbGVjdGlvbi4iLCJwcm9wZXJ0aWVzIjp7ImNvbGxlY3Rpb24iOnsiZGVzY3JpcHRpb24iOiJUaGUgb3B0aW9uYWwgY29sbGVjdGlvbiB3aXRoaW4gdGhlIHNjb3BlLiBNYXkgYmUgZW1wdHkgdG8ganVzdCB3b3JrIGF0IHNjb3BlIGxldmVsLiIsIm1heExlbmd0aCI6MjUxLCJtaW5MZW5ndGgiOjEsInBhdHRlcm4iOiJeKF9kZWZhdWx0fFthLXpBLVowLTlcXC1dW2EtekEtWjAtOVxcLSVfXXswLDI1MH0pJCIsInR5cGUiOiJzdHJpbmcifSwic2NvcGUiOnsiZGVzY3JpcHRpb24iOiJUaGUgc2NvcGUgdG8gdXNlLiIsIm1heExlbmd0aCI6MjUxLCJtaW5MZW5ndGgiOjEsInBhdHRlcm4iOiJeKF9kZWZhdWx0fFthLXpBLVowLTlcXC1dW2EtekEtWjAtOVxcLSVfXXswLDI1MH0pJCIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInNjb3BlIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInRhcmdldEtleXNwYWNlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJtYXBwaW5ncyJdLCJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJDb3VjaGJhc2VSZXBsaWNhdGlvblNwZWMgYWxsb3dzIGNvbmZpZ3VyYXRpb24gb2YgYW4gWERDUiByZXBsaWNhdGlvbi4iLCJwcm9wZXJ0aWVzIjp7ImJ1Y2tldCI6eyJkZXNjcmlwdGlvbiI6IkJ1Y2tldCBpcyB0aGUgc291cmNlIGJ1Y2tldCB0byByZXBsaWNhdGUgZnJvbS4gIFRoaXMgcmVmZXJzIHRvIHRoZSBDb3VjaGJhc2VcbmJ1Y2tldCBuYW1lLCBub3QgdGhlIHJlc291cmNlIG5hbWUgb2YgdGhlIGJ1Y2tldC4gIEEgYnVja2V0IHdpdGggdGhpcyBuYW1lIG11c3RcbmJlIGRlZmluZWQgb24gdGhpcyBjbHVzdGVyLiAgTGVnYWwgYnVja2V0IG5hbWVzIGhhdmUgYSBtYXhpbXVtIGxlbmd0aCBvZiAxMDBcbmNoYXJhY3RlcnMgYW5kIG1heSBiZSBjb21wb3NlZCBvZiBhbnkgY2hhcmFjdGVyIGZyb20gXCJhLXpcIiwgXCJBLVpcIiwgXCIwLTlcIiBhbmQgXCItXyVcXC5cIi4iLCJtYXhMZW5ndGgiOjEwMCwicGF0dGVybiI6Il5bYS16QS1aMC05LV8lXFwuXXsxLDEwMH0kIiwidHlwZSI6InN0cmluZyJ9LCJjb21wcmVzc2lvblR5cGUiOnsiZGVmYXVsdCI6IkF1dG8iLCJkZXNjcmlwdGlvbiI6IkNvbXByZXNzaW9uVHlwZSBpcyB0aGUgdHlwZSBvZiBjb21wcmVzc2lvbiB0byBhcHBseSB0byB0aGUgcmVwbGljYXRpb24uXG5XaGVuIE5vbmUsIG5vIGNvbXByZXNzaW9uIHdpbGwgYmUgYXBwbGllZCB0byBkb2N1bWVudHMgYXMgdGhleSBhcmVcbnRyYW5zZmVycmVkIGJldHdlZW4gY2x1c3RlcnMuICBXaGVuIEF1dG8sIENvdWNoYmFzZSBzZXJ2ZXIgd2lsbCBhdXRvbWF0aWNhbGx5XG5jb21wcmVzcyBkb2N1bWVudHMgYXMgdGhleSBhcmUgdHJhbnNmZXJyZWQgdG8gcmVkdWNlIGJhbmR3aWR0aCByZXF1aXJlbWVudHMuXG5UaGlzIGZpZWxkIG11c3QgYmUgb25lIG9mIFwiTm9uZVwiIG9yIFwiQXV0b1wiLCBkZWZhdWx0aW5nIHRvIFwiQXV0b1wiLiIsImVudW0iOlsiTm9uZSIsIkF1dG8iXSwidHlwZSI6InN0cmluZyJ9LCJmaWx0ZXJFeHByZXNzaW9uIjp7ImRlc2NyaXB0aW9uIjoiRmlsdGVyRXhwcmVzc2lvbiBhbGxvd3MgY2VydGFpbiBkb2N1bWVudHMgdG8gYmUgZmlsdGVyZWQgb3V0IG9mIHRoZSByZXBsaWNhdGlvbi4iLCJ0eXBlIjoic3RyaW5nIn0sInBhdXNlZCI6eyJkZXNjcmlwdGlvbiI6IlBhdXNlZCBhbGxvd3MgYSByZXBsaWNhdGlvbiB0byBiZSBzdG9wcGVkIGFuZCByZXN0YXJ0ZWQgd2l0aG91dCBoYXZpbmcgdG9cbnJlc3RhcnQgdGhlIHJlcGxpY2F0aW9uIGZyb20gdGhlIGJlZ2lubmluZy4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJyZW1vdGVCdWNrZXQiOnsiZGVzY3JpcHRpb24iOiJSZW1vdGVCdWNrZXQgaXMgdGhlIHJlbW90ZSBidWNrZXQgbmFtZSB0byBzeW5jaHJvbml6ZSB0by4gIFRoaXMgcmVmZXJzIHRvIHRoZVxuQ291Y2hiYXNlIGJ1Y2tldCBuYW1lLCBub3QgdGhlIHJlc291cmNlIG5hbWUgb2YgdGhlIGJ1Y2tldC4gIExlZ2FsIGJ1Y2tldCBuYW1lc1xuaGF2ZSBhIG1heGltdW0gbGVuZ3RoIG9mIDEwMCBjaGFyYWN0ZXJzIGFuZCBtYXkgYmUgY29tcG9zZWQgb2YgYW55IGNoYXJhY3RlciBmcm9tXG5cImEtelwiLCBcIkEtWlwiLCBcIjAtOVwiIGFuZCBcIi1fJVxcLlwiLiIsIm1heExlbmd0aCI6MTAwLCJwYXR0ZXJuIjoiXlthLXpBLVowLTktXyVcXC5dezEsMTAwfSQiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJidWNrZXQiLCJyZW1vdGVCdWNrZXQiXSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsibWlncmF0aW9uTWFwcGluZyIsInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlfV19fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuOC4xIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZWF1dG9zY2FsZXJzLmNvdWNoYmFzZS5jb20ifSwic3BlYyI6eyJncm91cCI6ImNvdWNoYmFzZS5jb20iLCJuYW1lcyI6eyJraW5kIjoiQ291Y2hiYXNlQXV0b3NjYWxlciIsImxpc3RLaW5kIjoiQ291Y2hiYXNlQXV0b3NjYWxlckxpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2VhdXRvc2NhbGVycyIsInNob3J0TmFtZXMiOlsiY2JhIl0sInNpbmd1bGFyIjoiY291Y2hiYXNlYXV0b3NjYWxlciJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zcGVjLnNpemUiLCJuYW1lIjoic2l6ZSIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLnNwZWMuc2VydmVycyIsIm5hbWUiOiJzZXJ2ZXJzIiwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUF1dG9zY2FsZXIgcHJvdmlkZXMgYW4gaW50ZXJmYWNlIGZvciB0aGUgS3ViZXJuZXRlcyBIb3Jpem9udGFsIFBvZCBBdXRvc2NhbGVyXG50byBpbnRlcmFjdCB3aXRoIHRoZSBDb3VjaGJhc2UgY2x1c3RlciBhbmQgcHJvdmlkZSBhdXRvc2NhbGluZy4gIFRoaXMgcmVzb3VyY2UgaXNcbm5vdCBkZWZpbmVkIGJ5IHRoZSBlbmQgdXNlciwgYW5kIGlzIG1hbmFnZWQgYnkgdGhlIE9wZXJhdG9yLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUF1dG9zY2FsZXJTcGVjIGFsbG93cyBjb250cm9sIG92ZXIgYW4gYXV0b3NjYWxpbmcgZ3JvdXAuIiwicHJvcGVydGllcyI6eyJzZXJ2ZXJzIjp7ImRlc2NyaXB0aW9uIjoiU2VydmVycyBzcGVjaWZpZXMgdGhlIHNlcnZlciBncm91cCB0aGF0IHRoaXMgYXV0b3NjYWxlciBiZWxvbmdzIHRvLiIsIm1pbkxlbmd0aCI6MSwidHlwZSI6InN0cmluZyJ9LCJzaXplIjp7ImRlc2NyaXB0aW9uIjoiU2l6ZSBhbGxvd3MgdGhlIHNlcnZlciBncm91cCB0byBiZSBkeW5hbWljYWxseSBzY2FsZWQuIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifX0sInJlcXVpcmVkIjpbInNlcnZlcnMiLCJzaXplIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlQXV0b3NjYWxlclN0YXR1cyBwcm92aWRlcyBpbmZvcm1hdGlvbiB0byB0aGUgSFBBIHRvIGFzc2lzdCB3aXRoIHNjYWxpbmdcbnNlcnZlciBncm91cHMuIiwicHJvcGVydGllcyI6eyJsYWJlbFNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiTGFiZWxTZWxlY3RvciBhbGxvd3MgdGhlIEhQQSB0byBzZWxlY3QgcmVzb3VyY2VzIHRvIG1vbml0b3IgZm9yIHJlc291cmNlXG51dGlsaXphdGlvbiBpbiBvcmRlciB0byB0cmlnZ2VyIHNjYWxpbmcuIiwidHlwZSI6InN0cmluZyJ9LCJzaXplIjp7ImRlc2NyaXB0aW9uIjoiU2l6ZSBpcyB0aGUgY3VycmVudCBzaXplIG9mIHRoZSBzZXJ2ZXIgZ3JvdXAuIiwibWluaW11bSI6MSwidHlwZSI6ImludGVnZXIifX0sInJlcXVpcmVkIjpbImxhYmVsU2VsZWN0b3IiLCJzaXplIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic2NhbGUiOnsibGFiZWxTZWxlY3RvclBhdGgiOiIuc3RhdHVzLmxhYmVsU2VsZWN0b3IiLCJzcGVjUmVwbGljYXNQYXRoIjoiLnNwZWMuc2l6ZSIsInN0YXR1c1JlcGxpY2FzUGF0aCI6Ii5zdGF0dXMuc2l6ZSJ9LCJzdGF0dXMiOnt9fX1dfX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuOC4xIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZWNvbGxlY3Rpb25ncm91cHMuY291Y2hiYXNlLmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoiY291Y2hiYXNlLmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJDb3VjaGJhc2VDb2xsZWN0aW9uR3JvdXAiLCJsaXN0S2luZCI6IkNvdWNoYmFzZUNvbGxlY3Rpb25Hcm91cExpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2Vjb2xsZWN0aW9uZ3JvdXBzIiwic2luZ3VsYXIiOiJjb3VjaGJhc2Vjb2xsZWN0aW9uZ3JvdXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7Im5hbWUiOiJ2MiIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJDb3VjaGJhc2VDb2xsZWN0aW9uR3JvdXAgcmVwcmVzZW50IHRoZSBmaW5lc3QgZ3JhaW5lZCBzaXplIG9mIGRhdGEgc3RvcmFnZSBpbiBDb3VjaGJhc2UuXG5Db2xsZWN0aW9ucyBjb250YWluIGFsbCBkb2N1bWVudHMgYW5kIGluZGV4ZXMgaW4gdGhlIHN5c3RlbS4gIENvbGxlY3Rpb25zIGFsc28gZm9ybVxudGhlIGZpbmVzdCBncmFpbiBiYXNpcyBmb3Igcm9sZS1iYXNlZCBhY2Nlc3MgY29udHJvbCAoUkJBQykgYW5kIGNyb3NzLWRhdGFjZW50ZXJcbnJlcGxpY2F0aW9uIChYRENSKS4gIEluIG9yZGVyIHRvIGJlIGNvbnNpZGVyZWQgYnkgdGhlIE9wZXJhdG9yLCBldmVyeSBjb2xsZWN0aW9uIGdyb3VwXG5tdXN0IGJlIHJlZmVyZW5jZWQgYnkgYSBgQ291Y2hiYXNlU2NvcGVgIG9yIGBDb3VjaGJhc2VTY29wZUdyb3VwYCByZXNvdXJjZS4gIFVubGlrZSB0aGVcbkNvdWNoYmFzZUNvbGxlY3Rpb24gcmVzb3VyY2UsIGEgY29sbGVjdGlvbiBncm91cCByZXByZXNlbnRzIG11bHRpcGxlIGNvbGxlY3Rpb25zLCB3aXRoXG5jb21tb24gY29uZmlndXJhdGlvbiBwYXJhbWV0ZXJzLCB0byBiZSBleHByZXNzZWQgYXMgYSBzaW5nbGUgcmVzb3VyY2UsIG1pbmltaXppbmcgcmVxdWlyZWRcbmNvbmZpZ3VyYXRpb24gYW5kIEt1YmVybmV0ZXMgQVBJIHRyYWZmaWMuICBJdCBhbHNvIGZvcm1zIHRoZSBiYXNpcyBvZiBDb3VjaGJhc2UgUkJBQ1xuc2VjdXJpdHkgYm91bmRhcmllcy4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgdGhlIHJlc291cmNlLiIsInByb3BlcnRpZXMiOnsiaGlzdG9yeSI6eyJkZXNjcmlwdGlvbiI6Ikhpc3RvcnkgZGVmaW5lcyB3aGV0aGVyIGNoYW5nZSBoaXN0b3J5IGlzIHJldGFpbmVkIGZvciB0aGUgY29sbGVjdGlvbi5cbklmIHRoaXMgZmllbGQgaXMgc2V0LCBpdCB3aWxsIG92ZXJyaWRlIHRoZSBoaXN0b3J5UmV0ZW50aW9uLmNvbGxlY3Rpb25EZWZhdWx0IGJ1Y2tldCBsZXZlbCB2YWx1ZS5cblRoaXMgaXMgb25seSBzdXBwb3J0ZWQgd2l0aCBzdG9yYWdlQmFja2VuZD1tYWdtYSBhdCB0aGUgYnVja2V0IGxldmVsLiIsInR5cGUiOiJib29sZWFuIn0sIm1heFRUTCI6eyJkZXNjcmlwdGlvbiI6Ik1heFRUTCBkZWZpbmVzIGhvdyBsb25nIGEgZG9jdW1lbnQgaXMgcGVybWl0dGVkIHRvIGV4aXN0IGZvciwgd2l0aG91dFxubW9kaWZpY2F0aW9uLCB1bnRpbCBpdCBpcyBhdXRvbWF0aWNhbGx5IGRlbGV0ZWQuICBUaGlzIGZpZWxkIHRha2VzIHByZWNlZGVuY2Ugb3ZlclxuYW55IFRUTCBkZWZpbmVkIGF0IHRoZSBidWNrZXQgbGV2ZWwuICBUaGlzIGlzIGEgZGVmYXVsdCwgYW5kIG1heGltdW1cbnRpbWUtdG8tbGl2ZSBhbmQgbWF5IGJlIHNldCB0byBhIGxvd2VyIHZhbHVlIGJ5IHRoZSBjbGllbnQuICBJZiB0aGUgY2xpZW50IHNwZWNpZmllc1xuYSBoaWdoZXIgdmFsdWUsIHRoZW4gaXQgaXMgdHJ1bmNhdGVkIHRvIHRoZSBtYXhpbXVtIGR1cmFiaWxpdHkuICBEb2N1bWVudHMgYXJlXG5yZW1vdmVkIGJ5IENvdWNoYmFzZSwgYWZ0ZXIgdGhleSBoYXZlIGV4cGlyZWQsIHdoZW4gZWl0aGVyIGFjY2Vzc2VkLCB0aGUgZXhwaXJ5XG5wYWdlciBpcyBydW4sIG9yIHRoZSBidWNrZXQgaXMgY29tcGFjdGVkLiAgV2hlbiBzZXQgdG8gMCwgdGhlbiBkb2N1bWVudHMgYXJlIG5vdFxuZXhwaXJlZCBieSBkZWZhdWx0LiAgVGhpcyBmaWVsZCBtdXN0IGVpdGhlciBiZSBhIGR1cmF0aW9uIGluIHRoZSByYW5nZSAwLTIxNDc0ODM2NDhzIG9yIFwiLTFcIixcbmRlZmF1bHRpbmcgdG8gMC4gSWYgc2V0IHRvIFwiLTFcIiwgdGhlIGNvbGxlY3Rpb24ncyBidWNrZXQgd2lsbCBiZSBwcmV2ZW50ZWQgZnJvbSBzZXR0aW5nIGFcbmRlZmF1bHQgZXhwaXJhdGlvbiBvbiB0aGUgY29sbGVjdGlvbidzIGRvY3VtZW50cy4gV2hpbGUgdGhpcyBmaWVsZCBjYW4gYmUgY2hhbmdlZCBvbiB0aGUgQ1JELFxuaXQgd2lsbCBub3QgYmUgdXBkYXRlZCBvbiB0aGUgY29sbGVjdGlvbiBpZiB0aGUgQ291Y2hiYXNlIFNlcnZlciB2ZXJzaW9uIGlzIHByZSA3LjYuMC5cbk1vcmUgaW5mbzogaHR0cHM6Ly9nb2xhbmcub3JnL3BrZy90aW1lLyNQYXJzZUR1cmF0aW9uLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZXMiOnsiZGVzY3JpcHRpb24iOiJOYW1lcyBzcGVjaWZpZXMgdGhlIG5hbWVzIG9mIHRoZSBjb2xsZWN0aW9ucy4gIFVubGlrZSBDb3VjaGJhc2VDb2xsZWN0aW9uLCB3aGljaFxuc3BlY2lmaWVzIGEgc2luZ2xlIGNvbGxlY3Rpb24sIGEgY29sbGVjdGlvbiBncm91cCBzcGVjaWZpZXMgbXVsdGlwbGUsIGFuZCB0aGVcbmNvbGxlY3Rpb24gZ3JvdXAgbXVzdCBzcGVjaWZ5IGF0IGxlYXN0IG9uZSBjb2xsZWN0aW9uIG5hbWUuXG5BbnkgY29sbGVjdGlvbiBuYW1lcyBzcGVjaWZpZWQgbXVzdCBiZSB1bmlxdWUuXG5Db2xsZWN0aW9uIG5hbWVzIG11c3QgYmUgMS0yNTEgY2hhcmFjdGVycyBpbiBsZW5ndGgsIGNvbnRhaW4gb25seSBbYS16QS1aMC05Xy0lXVxuYW5kIG5vdCBzdGFydCB3aXRoIGVpdGhlciBfIG9yICUuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJTY29wZU9yQ29sbGVjdGlvbk5hbWUgaXMgYSBnZW5lcmljIHR5cGUgdG8gY2FwdHVyZSBhIHZhbGlkXG5zY29wZSBvciBjb2xsZWN0aW9uIG5hbWUuICBUaGVzZSBtdXN0IGNvbnNpc3Qgb2YgMS0yNTEgY2hhcmFjdGVycyxcbmluY2x1ZGUgb25seSBBLVosIGEteiwgMC05LCAtLCBfIG9yICUsIGFuZCBtdXN0IG5vdCBzdGFydCB3aXRoXG5fICh3aGljaCBpcyBhbiBpbnRlcm5hbCBtYXJrZXIpIG9yICUgKHdoaWNoIGlzIHByb2JhYmx5IGFuIGVzY2FwZVxuY2hhcmFjdGVyIGluIGxhbmd1YWdlIFgpLiIsIm1heExlbmd0aCI6MjUxLCJtaW5MZW5ndGgiOjEsInBhdHRlcm4iOiJeW2EtekEtWjAtOVxcLV1bYS16QS1aMC05XFwtJV9dezAsMjUwfSQiLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJzZXQifX0sInJlcXVpcmVkIjpbIm5hbWVzIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInNwZWMiXSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlfV19fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuOC4xIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZWNvbGxlY3Rpb25zLmNvdWNoYmFzZS5jb20ifSwic3BlYyI6eyJncm91cCI6ImNvdWNoYmFzZS5jb20iLCJuYW1lcyI6eyJraW5kIjoiQ291Y2hiYXNlQ29sbGVjdGlvbiIsImxpc3RLaW5kIjoiQ291Y2hiYXNlQ29sbGVjdGlvbkxpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2Vjb2xsZWN0aW9ucyIsInNpbmd1bGFyIjoiY291Y2hiYXNlY29sbGVjdGlvbiJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUNvbGxlY3Rpb24gcmVwcmVzZW50IHRoZSBmaW5lc3QgZ3JhaW5lZCBzaXplIG9mIGRhdGEgc3RvcmFnZSBpbiBDb3VjaGJhc2UuXG5Db2xsZWN0aW9ucyBjb250YWluIGFsbCBkb2N1bWVudHMgYW5kIGluZGV4ZXMgaW4gdGhlIHN5c3RlbS4gIENvbGxlY3Rpb25zIGFsc28gZm9ybVxudGhlIGZpbmVzdCBncmFpbiBiYXNpcyBmb3Igcm9sZS1iYXNlZCBhY2Nlc3MgY29udHJvbCAoUkJBQykgYW5kIGNyb3NzLWRhdGFjZW50ZXJcbnJlcGxpY2F0aW9uIChYRENSKS4gIEluIG9yZGVyIHRvIGJlIGNvbnNpZGVyZWQgYnkgdGhlIE9wZXJhdG9yLCBldmVyeSBjb2xsZWN0aW9uXG5tdXN0IGJlIHJlZmVyZW5jZWQgYnkgYSBgQ291Y2hiYXNlU2NvcGVgIG9yIGBDb3VjaGJhc2VTY29wZUdyb3VwYCByZXNvdXJjZS4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVmYXVsdCI6e30sImRlc2NyaXB0aW9uIjoiU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIHRoZSByZXNvdXJjZS4iLCJwcm9wZXJ0aWVzIjp7Imhpc3RvcnkiOnsiZGVzY3JpcHRpb24iOiJIaXN0b3J5IGRlZmluZXMgd2hldGhlciBjaGFuZ2UgaGlzdG9yeSBpcyByZXRhaW5lZCBmb3IgdGhlIGNvbGxlY3Rpb24uXG5JZiB0aGlzIGZpZWxkIGlzIHNldCwgaXQgd2lsbCBvdmVycmlkZSB0aGUgaGlzdG9yeVJldGVudGlvbi5jb2xsZWN0aW9uRGVmYXVsdCBidWNrZXQgbGV2ZWwgdmFsdWUuXG5UaGlzIGlzIG9ubHkgc3VwcG9ydGVkIHdpdGggc3RvcmFnZUJhY2tlbmQ9bWFnbWEgYXQgdGhlIGJ1Y2tldCBsZXZlbC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJtYXhUVEwiOnsiZGVzY3JpcHRpb24iOiJNYXhUVEwgZGVmaW5lcyBob3cgbG9uZyBhIGRvY3VtZW50IGlzIHBlcm1pdHRlZCB0byBleGlzdCBmb3IsIHdpdGhvdXRcbm1vZGlmaWNhdGlvbiwgdW50aWwgaXQgaXMgYXV0b21hdGljYWxseSBkZWxldGVkLiAgVGhpcyBmaWVsZCB0YWtlcyBwcmVjZWRlbmNlIG92ZXJcbmFueSBUVEwgZGVmaW5lZCBhdCB0aGUgYnVja2V0IGxldmVsLiAgVGhpcyBpcyBhIGRlZmF1bHQsIGFuZCBtYXhpbXVtXG50aW1lLXRvLWxpdmUgYW5kIG1heSBiZSBzZXQgdG8gYSBsb3dlciB2YWx1ZSBieSB0aGUgY2xpZW50LiAgSWYgdGhlIGNsaWVudCBzcGVjaWZpZXNcbmEgaGlnaGVyIHZhbHVlLCB0aGVuIGl0IGlzIHRydW5jYXRlZCB0byB0aGUgbWF4aW11bSBkdXJhYmlsaXR5LiAgRG9jdW1lbnRzIGFyZVxucmVtb3ZlZCBieSBDb3VjaGJhc2UsIGFmdGVyIHRoZXkgaGF2ZSBleHBpcmVkLCB3aGVuIGVpdGhlciBhY2Nlc3NlZCwgdGhlIGV4cGlyeVxucGFnZXIgaXMgcnVuLCBvciB0aGUgYnVja2V0IGlzIGNvbXBhY3RlZC4gIFdoZW4gc2V0IHRvIDAsIHRoZW4gZG9jdW1lbnRzIGFyZSBub3RcbmV4cGlyZWQgYnkgZGVmYXVsdC4gIFRoaXMgZmllbGQgbXVzdCBlaXRoZXIgYmUgYSBkdXJhdGlvbiBpbiB0aGUgcmFuZ2UgMC0yMTQ3NDgzNjQ4cyBvciBcIi0xXCIsXG5kZWZhdWx0aW5nIHRvIDAuIElmIHNldCB0byBcIi0xXCIsIHRoZSBjb2xsZWN0aW9uJ3MgYnVja2V0IHdpbGwgYmUgcHJldmVudGVkIGZyb20gc2V0dGluZyBhXG5kZWZhdWx0IGV4cGlyYXRpb24gb24gdGhlIGNvbGxlY3Rpb24ncyBkb2N1bWVudHMuIFdoaWxlIHRoaXMgZmllbGQgY2FuIGJlIGNoYW5nZWQgb24gdGhlIENSRCxcbml0IHdpbGwgbm90IGJlIHVwZGF0ZWQgb24gdGhlIGNvbGxlY3Rpb24gaWYgdGhlIENvdWNoYmFzZSBTZXJ2ZXIgdmVyc2lvbiBpcyBwcmUgNy42LjAuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ29sYW5nLm9yZy9wa2cvdGltZS8jUGFyc2VEdXJhdGlvbi4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIHNwZWNpZmllcyB0aGUgbmFtZSBvZiB0aGUgY29sbGVjdGlvbi4gIEJ5IGRlZmF1bHQsIHRoZSBtZXRhZGF0YS5uYW1lIGlzXG51c2VkIHRvIGRlZmluZSB0aGUgY29sbGVjdGlvbiBuYW1lLCBob3dldmVyLCBkdWUgdG8gdGhlIGxpbWl0ZWQgY2hhcmFjdGVyIHNldCxcbnRoaXMgZmllbGQgY2FuIGJlIHVzZWQgdG8gb3ZlcnJpZGUgdGhlIGRlZmF1bHQgYW5kIHByb3ZpZGUgdGhlIGZ1bGwgZnVuY3Rpb25hbGl0eS5cbkFkZGl0aW9uYWxseSB0aGUgYG1ldGFkYXRhLm5hbWVgIGZpZWxkIGlzIGEgRE5TIGxhYmVsLCBhbmQgdGh1cyBsaW1pdGVkIHRvIDYzXG5jaGFyYWN0ZXJzLCB0aGlzIGZpZWxkIG11c3QgYmUgdXNlZCBpZiB0aGUgbmFtZSBpcyBsb25nZXIgdGhhbiB0aGlzIGxpbWl0LlxuQ29sbGVjdGlvbiBuYW1lcyBtdXN0IGJlIDEtMjUxIGNoYXJhY3RlcnMgaW4gbGVuZ3RoLCBjb250YWluIG9ubHkgW2EtekEtWjAtOV8tJV1cbmFuZCBub3Qgc3RhcnQgd2l0aCBlaXRoZXIgXyBvciAlLiIsIm1heExlbmd0aCI6MjUxLCJtaW5MZW5ndGgiOjEsInBhdHRlcm4iOiJeW2EtekEtWjAtOVxcLV1bYS16QS1aMC05XFwtJV9dezAsMjUwfSQiLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWV9XX19
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuOC4xIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZXJvbGViaW5kaW5ncy5jb3VjaGJhc2UuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJjb3VjaGJhc2UuY29tIiwibmFtZXMiOnsia2luZCI6IkNvdWNoYmFzZVJvbGVCaW5kaW5nIiwibGlzdEtpbmQiOiJDb3VjaGJhc2VSb2xlQmluZGluZ0xpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2Vyb2xlYmluZGluZ3MiLCJzaW5ndWxhciI6ImNvdWNoYmFzZXJvbGViaW5kaW5nIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjIiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7ImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlUm9sZUJpbmRpbmcgYWxsb3dzIGFzc29jaWF0aW9uIG9mIENvdWNoYmFzZSB1c2VycyB3aXRoIGdyb3Vwcy4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJDb3VjaGJhc2VSb2xlQmluZGluZ1NwZWMgZGVmaW5lcyB0aGUgZ3JvdXAgb2Ygc3ViamVjdHMgaS5lLiB1c2VycywgYW5kIHRoZVxucm9sZSBpLmUuIGdyb3VwIHRoZXkgYXJlIGEgbWVtYmVyIG9mLiIsInByb3BlcnRpZXMiOnsicm9sZVJlZiI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZUdyb3VwIGJlaW5nIGJvdW5kIHRvIHN1YmplY3RzLiIsInByb3BlcnRpZXMiOnsia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgb2Ygcm9sZSB0byB1c2UgZm9yIGJpbmRpbmcuIiwiZW51bSI6WyJDb3VjaGJhc2VHcm91cCJdLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHJvbGUgcmVzb3VyY2UgdG8gdXNlIGZvciBiaW5kaW5nLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImtpbmQiLCJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwic3ViamVjdHMiOnsiZGVzY3JpcHRpb24iOiJMaXN0IG9mIHVzZXJzIHRvIGJpbmQgYSByb2xlIHRvLiIsIml0ZW1zIjp7InByb3BlcnRpZXMiOnsia2luZCI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZSB1c2VyL2dyb3VwIGtpbmQuIiwiZW51bSI6WyJDb3VjaGJhc2VVc2VyIl0sInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgQ291Y2hiYXNlIHVzZXIgcmVzb3VyY2UuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsia2luZCIsIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbInJvbGVSZWYiLCJzdWJqZWN0cyJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZX1dfX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29uZmlnLmNvdWNoYmFzZS5jb20vdmVyc2lvbiI6IjIuOC4xIiwiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwibmFtZSI6ImNvdWNoYmFzZXVzZXJzLmNvdWNoYmFzZS5jb20ifSwic3BlYyI6eyJncm91cCI6ImNvdWNoYmFzZS5jb20iLCJuYW1lcyI6eyJraW5kIjoiQ291Y2hiYXNlVXNlciIsImxpc3RLaW5kIjoiQ291Y2hiYXNlVXNlckxpc3QiLCJwbHVyYWwiOiJjb3VjaGJhc2V1c2VycyIsInNpbmd1bGFyIjoiY291Y2hiYXNldXNlciJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYyIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkNvdWNoYmFzZVVzZXIgYWxsb3dzIHRoZSBhdXRvbWF0aW9uIG9mIENvdWNoYmFzZSB1c2VyIG1hbmFnZW1lbnQuIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LlxuU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kXG5tYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuXG5TZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by5cbkNhbm5vdCBiZSB1cGRhdGVkLlxuSW4gQ2FtZWxDYXNlLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiQ291Y2hiYXNlVXNlclNwZWMgYWxsb3dzIHRoZSBzcGVjaWZpY2F0aW9uIG9mIENvdWNoYmFzZSB1c2VyIGNvbmZpZ3VyYXRpb24uIiwicHJvcGVydGllcyI6eyJhdXRoRG9tYWluIjp7ImRlc2NyaXB0aW9uIjoiVGhlIGRvbWFpbiB3aGljaCBwcm92aWRlcyB1c2VyIGF1dGhlbnRpY2F0aW9uLiIsImVudW0iOlsibG9jYWwiLCJleHRlcm5hbCJdLCJ0eXBlIjoic3RyaW5nIn0sImF1dGhTZWNyZXQiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIEt1YmVybmV0ZXMgc2VjcmV0IHdpdGggcGFzc3dvcmQgZm9yIENvdWNoYmFzZSBkb21haW4uIiwidHlwZSI6InN0cmluZyJ9LCJmdWxsTmFtZSI6eyJkZXNjcmlwdGlvbiI6IkZ1bGwgTmFtZSBvZiBDb3VjaGJhc2UgdXNlci4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJVc2VybmFtZSBvZiB0aGUgY291Y2hiYXNlIHVzZXIuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiYXV0aERvbWFpbiJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJzcGVjIl0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZX1dfX0=
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.connect.redhat.com/couchbase/cloud-native-gateway@sha256:50bbc00cce14ec968c9b8e9ef06a6c5bd2860d38d973cf7af7271d4ff66fe9cc
  name: couchbase-cloud-native-gateway
- image: registry.connect.redhat.com/couchbase/exporter@sha256:de3bacf8233553452db1d9cec7c98b28d12c41aa025d830d6b7c5de0da9723b1
  name: couchbase-metrics
- image: registry.connect.redhat.com/couchbase/operator-backup@sha256:382511f532b0206d2bb0cecc8f91b055809b5ccf89136b6d37d55a40e266812f
  name: couchbase-backup
- image: registry.connect.redhat.com/couchbase/operator-bundle@sha256:29a44046aa2cf273798b5a58ce3c674e51d5e923b7b6798322a8c365e79ad28a
  name: ""
- image: registry.connect.redhat.com/couchbase/operator@sha256:52a11164a9cc79588790765af7a74ebad14ae75e81681a23bb65bd393bf42096
  name: couchbase-operator
- image: registry.connect.redhat.com/couchbase/server@sha256:033c0b2b8eb12ac63a158754dce20d9787a470c77252c60bd4d9e11f5b2dbc7a
  name: couchbase-server
- image: registry.connect.redhat.com/couchbase/server@sha256:437cd5aa05ff057b17f47d2500dec7cefca21682eb0f4badff4538dc164bc1a7
  name: couchbase-server-7_6_3_4
- image: registry.connect.redhat.com/couchbase/server@sha256:4e0d41b559c5d536aa06709457d6c788fd039b0c915c14f2d429213bdfeff824
  name: couchbase-server-7_2_6_2
- image: registry.connect.redhat.com/couchbase/server@sha256:643272bd58b0b584863400d281f1dcb147099c7f2120a947347be4b1f97391a7
  name: couchbase-server-7_6_2_3
schema: olm.bundle

---
defaultChannel: v25.4
icon:
  base64data: 
  mediatype: image/png
name: nvidia-network-operator
schema: olm.package
---
entries:
- name: nvidia-network-operator.v25.4.0
name: stable
package: nvidia-network-operator
schema: olm.channel
---
entries:
- name: nvidia-network-operator.v24.10.1
name: v24.10
package: nvidia-network-operator
schema: olm.channel
---
entries:
- name: nvidia-network-operator.v24.10.0
name: v24.10.0
package: nvidia-network-operator
schema: olm.channel
---
entries:
- name: nvidia-network-operator.v24.7.0
name: v24.7.0
package: nvidia-network-operator
schema: olm.channel
---
entries:
- name: nvidia-network-operator.v24.7.1
name: v24.7.1
package: nvidia-network-operator
schema: olm.channel
---
entries:
- name: nvidia-network-operator.v25.1.0
name: v25.1
package: nvidia-network-operator
schema: olm.channel
---
entries:
- name: nvidia-network-operator.v25.4.0
name: v25.4
package: nvidia-network-operator
schema: olm.channel
---
image: registry.connect.redhat.com/nvidia-network-operator/nvidia-network-operator@sha256:8f7d44a0aca436228657966d94ab9424a5026454c8de393f587586e65c6c0f89
name: nvidia-network-operator.v24.10.0
package: nvidia-network-operator
properties:
- type: olm.gvk
  value:
    group: mellanox.com
    kind: HostDeviceNetwork
    version: v1alpha1
- type: olm.gvk
  value:
    group: mellanox.com
    kind: IPoIBNetwork
    version: v1alpha1
- type: olm.gvk
  value:
    group: mellanox.com
    kind: MacvlanNetwork
    version: v1alpha1
- type: olm.gvk
  value:
    group: mellanox.com
    kind: NicClusterPolicy
    version: v1alpha1
- type: olm.package
  value:
    packageName: nvidia-network-operator
    version: 24.10.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE2LjQifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJob3N0ZGV2aWNlbmV0d29ya3MubWVsbGFub3guY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJtZWxsYW5veC5jb20iLCJuYW1lcyI6eyJraW5kIjoiSG9zdERldmljZU5ldHdvcmsiLCJsaXN0S2luZCI6Ikhvc3REZXZpY2VOZXR3b3JrTGlzdCIsInBsdXJhbCI6Imhvc3RkZXZpY2VuZXR3b3JrcyIsInNpbmd1bGFyIjoiaG9zdGRldmljZW5ldHdvcmsifSwic2NvcGUiOiJDbHVzdGVyIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFnZSIsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJIb3N0RGV2aWNlTmV0d29yayBpcyB0aGUgU2NoZW1hIGZvciB0aGUgaG9zdGRldmljZW5ldHdvcmtzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgSG9zdERldmljZU5ldHdvcmsiLCJwcm9wZXJ0aWVzIjp7ImlwYW0iOnsiZGVzY3JpcHRpb24iOiJJUEFNIGNvbmZpZ3VyYXRpb24gdG8gYmUgdXNlZCBmb3IgdGhpcyBuZXR3b3JrIiwidHlwZSI6InN0cmluZyJ9LCJuZXR3b3JrTmFtZXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIG9mIHRoZSBOZXR3b3JrQXR0YWNobWVudERlZmluaXRpb24gY3VzdG9tIHJlc291cmNlIiwidHlwZSI6InN0cmluZyJ9LCJyZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIb3N0IGRldmljZSByZXNvdXJjZSBwb29sIG5hbWUiLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IkRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIEhvc3REZXZpY2VOZXR3b3JrIiwicHJvcGVydGllcyI6eyJhcHBsaWVkU3RhdGVzIjp7ImRlc2NyaXB0aW9uIjoiQXBwbGllZFN0YXRlcyBwcm92aWRlIGEgZmluZXIgdmlldyBvZiB0aGUgb2JzZXJ2ZWQgc3RhdGUiLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkFwcGxpZWRTdGF0ZSBkZWZpbmVzIGEgZmluZXItZ3JhaW5lZCB2aWV3IG9mIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBOaWNDbHVzdGVyUG9saWN5IiwicHJvcGVydGllcyI6eyJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBpcyBhIGh1bWFuIHJlYWRhYmxlIG1lc3NhZ2UgaW5kaWNhdGluZyBkZXRhaWxzIGFib3V0IHdoeVxudGhlIHN0YXRlIGlzIGluIHRoaXMgY29uZGl0aW9uIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgZGVwbG95ZWQgY29tcG9uZW50IHRoaXMgc3RhdGUgcmVmZXJzIHRvIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBzdGF0ZSBvZiB0aGUgZGVwbG95ZWQgY29tcG9uZW50LiAoXCJyZWFkeVwiLCBcIm5vdFJlYWR5XCIsIFwiaWdub3JlXCIsIFwiZXJyb3JcIikiLCJlbnVtIjpbInJlYWR5Iiwibm90UmVhZHkiLCJpZ25vcmUiLCJlcnJvciJdLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIiwic3RhdGUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwiaG9zdERldmljZU5ldHdvcmtBdHRhY2htZW50RGVmIjp7ImRlc2NyaXB0aW9uIjoiTmV0d29yayBhdHRhY2htZW50IGRlZmluaXRpb24gZ2VuZXJhdGVkIGZyb20gSG9zdERldmljZU5ldHdvcmtTcGVjIiwidHlwZSI6InN0cmluZyJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJJbmZvcm1hdGl2ZSBzdHJpbmcgaW4gY2FzZSB0aGUgb2JzZXJ2ZWQgc3RhdGUgaXMgZXJyb3IiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImRlc2NyaXB0aW9uIjoiUmVmbGVjdHMgdGhlIHN0YXRlIG9mIHRoZSBIb3N0RGV2aWNlTmV0d29yayIsImVudW0iOlsibm90UmVhZHkiLCJyZWFkeSIsImVycm9yIl0sInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInN0YXRlIl0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE2LjQifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJpcG9pYm5ldHdvcmtzLm1lbGxhbm94LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoibWVsbGFub3guY29tIiwibmFtZXMiOnsia2luZCI6IklQb0lCTmV0d29yayIsImxpc3RLaW5kIjoiSVBvSUJOZXR3b3JrTGlzdCIsInBsdXJhbCI6Imlwb2libmV0d29ya3MiLCJzaW5ndWxhciI6Imlwb2libmV0d29yayJ9LCJzY29wZSI6IkNsdXN0ZXIiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIubWV0YWRhdGEuY3JlYXRpb25UaW1lc3RhbXAiLCJuYW1lIjoiQWdlIiwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IklQb0lCTmV0d29yayBpcyB0aGUgU2NoZW1hIGZvciB0aGUgaXBvaWJuZXR3b3JrcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJEZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIElQb0lCTmV0d29yayIsInByb3BlcnRpZXMiOnsiaXBhbSI6eyJkZXNjcmlwdGlvbiI6IklQQU0gY29uZmlndXJhdGlvbiB0byBiZSB1c2VkIGZvciB0aGlzIG5ldHdvcmsuIiwidHlwZSI6InN0cmluZyJ9LCJtYXN0ZXIiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBob3N0IGludGVyZmFjZSB0byBlbnNsYXZlLiBEZWZhdWx0cyB0byBkZWZhdWx0IHJvdXRlIGludGVyZmFjZSIsInR5cGUiOiJzdHJpbmcifSwibmV0d29ya05hbWVzcGFjZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWVzcGFjZSBvZiB0aGUgTmV0d29ya0F0dGFjaG1lbnREZWZpbml0aW9uIGN1c3RvbSByZXNvdXJjZSIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiRGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgSVBvSUJOZXR3b3JrIiwicHJvcGVydGllcyI6eyJpcG9pYk5ldHdvcmtBdHRhY2htZW50RGVmIjp7ImRlc2NyaXB0aW9uIjoiTmV0d29yayBhdHRhY2htZW50IGRlZmluaXRpb24gZ2VuZXJhdGVkIGZyb20gSVBvSUJOZXR3b3JrU3BlYyIsInR5cGUiOiJzdHJpbmcifSwicmVhc29uIjp7ImRlc2NyaXB0aW9uIjoiSW5mb3JtYXRpdmUgc3RyaW5nIGluIGNhc2UgdGhlIG9ic2VydmVkIHN0YXRlIGlzIGVycm9yIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlJlZmxlY3RzIHRoZSBzdGF0ZSBvZiB0aGUgSVBvSUJOZXR3b3JrIiwiZW51bSI6WyJub3RSZWFkeSIsInJlYWR5IiwiZXJyb3IiXSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsic3RhdGUiXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE2LjQifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJtYWN2bGFubmV0d29ya3MubWVsbGFub3guY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJtZWxsYW5veC5jb20iLCJuYW1lcyI6eyJraW5kIjoiTWFjdmxhbk5ldHdvcmsiLCJsaXN0S2luZCI6Ik1hY3ZsYW5OZXR3b3JrTGlzdCIsInBsdXJhbCI6Im1hY3ZsYW5uZXR3b3JrcyIsInNpbmd1bGFyIjoibWFjdmxhbm5ldHdvcmsifSwic2NvcGUiOiJDbHVzdGVyIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFnZSIsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJNYWN2bGFuTmV0d29yayBpcyB0aGUgU2NoZW1hIGZvciB0aGUgbWFjdmxhbm5ldHdvcmtzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgTWFjdmxhbk5ldHdvcmtTcGVjIiwicHJvcGVydGllcyI6eyJpcGFtIjp7ImRlc2NyaXB0aW9uIjoiSVBBTSBjb25maWd1cmF0aW9uIHRvIGJlIHVzZWQgZm9yIHRoaXMgbmV0d29yay4iLCJ0eXBlIjoic3RyaW5nIn0sIm1hc3RlciI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGhvc3QgaW50ZXJmYWNlIHRvIGVuc2xhdmUuIERlZmF1bHRzIHRvIGRlZmF1bHQgcm91dGUgaW50ZXJmYWNlIiwidHlwZSI6InN0cmluZyJ9LCJtb2RlIjp7ImRlc2NyaXB0aW9uIjoiTW9kZSBvZiBpbnRlcmZhY2Ugb25lIG9mIFwiYnJpZGdlXCIsIFwicHJpdmF0ZVwiLCBcInZlcGFcIiwgXCJwYXNzdGhydVwiIiwiZW51bSI6WyJicmlkZ2UiLCJwcml2YXRlIiwidmVwYSIsInBhc3N0aHJ1Il0sInR5cGUiOiJzdHJpbmcifSwibXR1Ijp7ImRlc2NyaXB0aW9uIjoiTVRVIG9mIGludGVyZmFjZSB0byB0aGUgc3BlY2lmaWVkIHZhbHVlLiAwIGZvciBtYXN0ZXIncyBNVFUiLCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJuZXR3b3JrTmFtZXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIG9mIHRoZSBOZXR3b3JrQXR0YWNobWVudERlZmluaXRpb24gY3VzdG9tIHJlc291cmNlIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJEZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBNYWN2bGFuTmV0d29yayIsInByb3BlcnRpZXMiOnsibWFjdmxhbk5ldHdvcmtBdHRhY2htZW50RGVmIjp7ImRlc2NyaXB0aW9uIjoiTmV0d29yayBhdHRhY2htZW50IGRlZmluaXRpb24gZ2VuZXJhdGVkIGZyb20gTWFjdmxhbk5ldHdvcmtTcGVjIiwidHlwZSI6InN0cmluZyJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJJbmZvcm1hdGl2ZSBzdHJpbmcgaW4gY2FzZSB0aGUgb2JzZXJ2ZWQgc3RhdGUgaXMgZXJyb3IiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImRlc2NyaXB0aW9uIjoiUmVmbGVjdHMgdGhlIHN0YXRlIG9mIHRoZSBNYWN2bGFuTmV0d29yayIsImVudW0iOlsibm90UmVhZHkiLCJyZWFkeSIsImVycm9yIl0sInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInN0YXRlIl0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE2LjQifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJuaWNjbHVzdGVycG9saWNpZXMubWVsbGFub3guY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJtZWxsYW5veC5jb20iLCJuYW1lcyI6eyJraW5kIjoiTmljQ2x1c3RlclBvbGljeSIsImxpc3RLaW5kIjoiTmljQ2x1c3RlclBvbGljeUxpc3QiLCJwbHVyYWwiOiJuaWNjbHVzdGVycG9saWNpZXMiLCJzaG9ydE5hbWVzIjpbIm5jcCJdLCJzaW5ndWxhciI6Im5pY2NsdXN0ZXJwb2xpY3kifSwic2NvcGUiOiJDbHVzdGVyIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFnZSIsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJOaWNDbHVzdGVyUG9saWN5IGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBuaWNjbHVzdGVycG9saWNpZXMgQVBJIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LlxuU2VydmVycyBzaG91bGQgY29udmVydCByZWNvZ25pemVkIHNjaGVtYXMgdG8gdGhlIGxhdGVzdCBpbnRlcm5hbCB2YWx1ZSwgYW5kXG5tYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuXG5TZXJ2ZXJzIG1heSBpbmZlciB0aGlzIGZyb20gdGhlIGVuZHBvaW50IHRoZSBjbGllbnQgc3VibWl0cyByZXF1ZXN0cyB0by5cbkNhbm5vdCBiZSB1cGRhdGVkLlxuSW4gQ2FtZWxDYXNlLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kcyIsInR5cGUiOiJzdHJpbmcifSwibWV0YWRhdGEiOnsidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiRGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBOaWNDbHVzdGVyUG9saWN5IiwicHJvcGVydGllcyI6eyJkb2NhVGVsZW1ldHJ5U2VydmljZSI6eyJkZXNjcmlwdGlvbiI6IkRPQ0FUZWxlbWV0cnlTZXJ2aWNlIGV4cG9zZXMgdGVsZW1ldHJ5IGZyb20gTlZJRElBIG5ldHdvcmtpbmcgY29tcG9uZW50cyB0byBwcm9tZXRoZXVzLlxuU2VlOiBodHRwczovL2RvY3MubnZpZGlhLmNvbS9kb2NhL3Nkay9udmlkaWErZG9jYSt0ZWxlbWV0cnkrc2VydmljZStndWlkZS9pbmRleC5odG1sIiwicHJvcGVydGllcyI6eyJjb25maWciOnsiZGVzY3JpcHRpb24iOiJDb25maWcgY29udGFpbnMgY3VzdG9tIGNvbmZpZyBmb3IgdGhlIERPQ0FUZWxlbWV0cnlTZXJ2aWNlLlxuSWYgc2V0IG5vIGRlZmF1bHQgY29uZmlnIHdpbGwgYmUgZGVwbG95ZWQuIiwicHJvcGVydGllcyI6eyJmcm9tQ29uZmlnTWFwIjp7ImRlc2NyaXB0aW9uIjoiRnJvbUNvbmZpZ01hcCBzZXRzIHRoZSBjb25maWdNYXAgdGhlIERPQ0FUZWxlbWV0cnlTZXJ2aWNlIGdldHMgaXRzIGNvbmZpZ3VyYXRpb24gZnJvbS4gVGhlIENvbmZpZ01hcCBtdXN0IGJlIGluXG50aGUgc2FtZSBuYW1lc3BhY2UgYXMgdGhlIE5JQ0NsdXN0ZXJQb2xpY3kuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJjb250YWluZXJSZXNvdXJjZXMiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZVJlcXVpcmVtZW50cyBkZXNjcmliZXMgdGhlIGNvbXB1dGUgcmVzb3VyY2UgcmVxdWlyZW1lbnRzIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZVJlcXVpcmVtZW50cyBkZXNjcmliZXMgdGhlIGNvbXB1dGUgcmVzb3VyY2UgcmVxdWlyZW1lbnRzLiIsInByb3BlcnRpZXMiOnsibGltaXRzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJkZXNjcmlwdGlvbiI6IkxpbWl0cyBkZXNjcmliZXMgdGhlIG1heGltdW0gYW1vdW50IG9mIGNvbXB1dGUgcmVzb3VyY2VzIGFsbG93ZWQuXG5Nb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLXJlc291cmNlcy1jb250YWluZXJzLyIsInR5cGUiOiJvYmplY3QifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGNvbnRhaW5lciB0aGUgcmVxdWlyZW1lbnRzIGFyZSBzZXQgZm9yIiwidHlwZSI6InN0cmluZyJ9LCJyZXF1ZXN0cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwiZGVzY3JpcHRpb24iOiJSZXF1ZXN0cyBkZXNjcmliZXMgdGhlIG1pbmltdW0gYW1vdW50IG9mIGNvbXB1dGUgcmVzb3VyY2VzIHJlcXVpcmVkLlxuSWYgUmVxdWVzdHMgaXMgb21pdHRlZCBmb3IgYSBjb250YWluZXIsIGl0IGRlZmF1bHRzIHRvIExpbWl0cyBpZiB0aGF0IGlzIGV4cGxpY2l0bHkgc3BlY2lmaWVkLFxub3RoZXJ3aXNlIHRvIGFuIGltcGxlbWVudGF0aW9uLWRlZmluZWQgdmFsdWUuIFJlcXVlc3RzIGNhbm5vdCBleGNlZWQgTGltaXRzLlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9jb25maWd1cmF0aW9uL21hbmFnZS1yZXNvdXJjZXMtY29udGFpbmVycy8iLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sImltYWdlIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgaW1hZ2UiLCJwYXR0ZXJuIjoiW2EtekEtWjAtOVxcLV0rIiwidHlwZSI6InN0cmluZyJ9LCJpbWFnZVB1bGxTZWNyZXRzIjp7ImRlZmF1bHQiOltdLCJkZXNjcmlwdGlvbiI6IkltYWdlUHVsbFNlY3JldHMgaXMgYW4gb3B0aW9uYWwgbGlzdCBvZiByZWZlcmVuY2VzIHRvIHNlY3JldHMgaW4gdGhlIHNhbWVcbm5hbWVzcGFjZSB0byB1c2UgZm9yIHB1bGxpbmcgdGhlIGltYWdlIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwicmVwb3NpdG9yeSI6eyJkZXNjcmlwdGlvbiI6IkFkZHJlc3Mgb2YgdGhlIHJlZ2lzdHJ5IHRoYXQgc3RvcmVzIHRoZSBpbWFnZSIsInBhdHRlcm4iOiJbYS16QS1aMC05XFwuXFwtXFwvXSsiLCJ0eXBlIjoic3RyaW5nIn0sInZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJWZXJzaW9uIG9mIHRoZSBpbWFnZSB0byB1c2UiLCJwYXR0ZXJuIjoiW2EtekEtWjAtOVxcLi1dKyIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImltYWdlIiwicmVwb3NpdG9yeSIsInZlcnNpb24iXSwidHlwZSI6Im9iamVjdCJ9LCJpYkt1YmVybmV0ZXMiOnsiZGVzY3JpcHRpb24iOiJJQkt1YmVybmV0ZXMgcHJvdmlkZXMgYSBkYWVtb24gdGhhdCB3b3JrcyBpbiBjb25qdW5jdGlvbiB3aXRoIHRoZSBTUi1JT1YgTmV0d29yayBEZXZpY2UgUGx1Z2luLlxuSXQgYWN0cyBvbiBLdWJlcm5ldGVzIHBvZCBvYmplY3QgY2hhbmdlcyBhbmQgcmVhZHMgdGhlIHBvZCdzIG5ldHdvcmsgYW5ub3RhdGlvbi5cbkZyb20gdGhlcmUgaXQgZmV0Y2hlcyB0aGUgY29ycmVzcG9uZGluZyBuZXR3b3JrIENSRCBhbmQgcmVhZHMgdGhlIFBLZXkuXG5UaGlzIGlzIGRvbmUgaW4gb3JkZXIgdG8gYWRkIHRoZSBuZXdseSBnZW5lcmF0ZWQgR1VJRCBvciB0aGUgcHJlZGVmaW5lZCBHVUlEIGluIHRoZSBHVUlEIGZpZWxkIG9mIHRoZSBDUkQuXG5UaGlzIGlzIHRoZW4gcGFzc2VkIGluIGNuaS1hcmdzIHRvIHRoYXQgUEtleSBmb3IgcG9kcyB3aXRoIG1lbGxhbm94LmluZmluaWJhbmQuYXBwIGFubm90YXRpb24uXG5TZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9NZWxsYW5veC9pYi1rdWJlcm5ldGVzIiwicHJvcGVydGllcyI6eyJjb250YWluZXJSZXNvdXJjZXMiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZVJlcXVpcmVtZW50cyBkZXNjcmliZXMgdGhlIGNvbXB1dGUgcmVzb3VyY2UgcmVxdWlyZW1lbnRzIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZVJlcXVpcmVtZW50cyBkZXNjcmliZXMgdGhlIGNvbXB1dGUgcmVzb3VyY2UgcmVxdWlyZW1lbnRzLiIsInByb3BlcnRpZXMiOnsibGltaXRzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJkZXNjcmlwdGlvbiI6IkxpbWl0cyBkZXNjcmliZXMgdGhlIG1heGltdW0gYW1vdW50IG9mIGNvbXB1dGUgcmVzb3VyY2VzIGFsbG93ZWQuXG5Nb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLXJlc291cmNlcy1jb250YWluZXJzLyIsInR5cGUiOiJvYmplY3QifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGNvbnRhaW5lciB0aGUgcmVxdWlyZW1lbnRzIGFyZSBzZXQgZm9yIiwidHlwZSI6InN0cmluZyJ9LCJyZXF1ZXN0cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwiZGVzY3JpcHRpb24iOiJSZXF1ZXN0cyBkZXNjcmliZXMgdGhlIG1pbmltdW0gYW1vdW50IG9mIGNvbXB1dGUgcmVzb3VyY2VzIHJlcXVpcmVkLlxuSWYgUmVxdWVzdHMgaXMgb21pdHRlZCBmb3IgYSBjb250YWluZXIsIGl0IGRlZmF1bHRzIHRvIExpbWl0cyBpZiB0aGF0IGlzIGV4cGxpY2l0bHkgc3BlY2lmaWVkLFxub3RoZXJ3aXNlIHRvIGFuIGltcGxlbWVudGF0aW9uLWRlZmluZWQgdmFsdWUuIFJlcXVlc3RzIGNhbm5vdCBleGNlZWQgTGltaXRzLlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9jb25maWd1cmF0aW9uL21hbmFnZS1yZXNvdXJjZXMtY29udGFpbmVycy8iLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sImltYWdlIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgaW1hZ2UiLCJwYXR0ZXJuIjoiW2EtekEtWjAtOVxcLV0rIiwidHlwZSI6InN0cmluZyJ9LCJpbWFnZVB1bGxTZWNyZXRzIjp7ImRlZmF1bHQiOltdLCJkZXNjcmlwdGlvbiI6IkltYWdlUHVsbFNlY3JldHMgaXMgYW4gb3B0aW9uYWwgbGlzdCBvZiByZWZlcmVuY2VzIHRvIHNlY3JldHMgaW4gdGhlIHNhbWVcbm5hbWVzcGFjZSB0byB1c2UgZm9yIHB1bGxpbmcgdGhlIGltYWdlIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwicEtleUdVSURQb29sUmFuZ2VFbmQiOnsiZGVzY3JpcHRpb24iOiJUaGUgbGFzdCBndWlkIGluIHRoZSBwb29sIiwidHlwZSI6InN0cmluZyJ9LCJwS2V5R1VJRFBvb2xSYW5nZVN0YXJ0Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGZpcnN0IGd1aWQgaW4gdGhlIHBvb2wiLCJ0eXBlIjoic3RyaW5nIn0sInBlcmlvZGljVXBkYXRlU2Vjb25kcyI6eyJkZWZhdWx0Ijo1LCJkZXNjcmlwdGlvbiI6IkludGVydmFsIG9mIHVwZGF0ZXMgaW4gc2Vjb25kcyIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sInJlcG9zaXRvcnkiOnsiZGVzY3JpcHRpb24iOiJBZGRyZXNzIG9mIHRoZSByZWdpc3RyeSB0aGF0IHN0b3JlcyB0aGUgaW1hZ2UiLCJwYXR0ZXJuIjoiW2EtekEtWjAtOVxcLlxcLVxcL10rIiwidHlwZSI6InN0cmluZyJ9LCJ1Zm1TZWNyZXQiOnsiZGVzY3JpcHRpb24iOiJTZWNyZXQgY29udGFpbmluZyBjcmVkZW50aWFscyB0byBVRk0gc2VydmljZSIsInR5cGUiOiJzdHJpbmcifSwidmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IlZlcnNpb24gb2YgdGhlIGltYWdlIHRvIHVzZSIsInBhdHRlcm4iOiJbYS16QS1aMC05XFwuLV0rIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaW1hZ2UiLCJwS2V5R1VJRFBvb2xSYW5nZUVuZCIsInBLZXlHVUlEUG9vbFJhbmdlU3RhcnQiLCJyZXBvc2l0b3J5IiwidWZtU2VjcmV0IiwidmVyc2lvbiJdLCJ0eXBlIjoib2JqZWN0In0sIm5pY0ZlYXR1cmVEaXNjb3ZlcnkiOnsiZGVzY3JpcHRpb24iOiJOaWNGZWF0dXJlRGlzY292ZXJ5IHdvcmtzIHdpdGggTm9kZUZlYXR1cmVEaXNjb3ZlcnkgdG8gZXhwb3NlIGluZm9ybWF0aW9uIGFib3V0IE5WSURJQSBOSUNzLlxuaHR0cHM6Ly9naXRodWIuY29tL01lbGxhbm94L25pYy1mZWF0dXJlLWRpc2NvdmVyeSIsInByb3BlcnRpZXMiOnsiY29udGFpbmVyUmVzb3VyY2VzIjp7ImRlc2NyaXB0aW9uIjoiUmVzb3VyY2VSZXF1aXJlbWVudHMgZGVzY3JpYmVzIHRoZSBjb21wdXRlIHJlc291cmNlIHJlcXVpcmVtZW50cyIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiUmVzb3VyY2VSZXF1aXJlbWVudHMgZGVzY3JpYmVzIHRoZSBjb21wdXRlIHJlc291cmNlIHJlcXVpcmVtZW50cy4iLCJwcm9wZXJ0aWVzIjp7ImxpbWl0cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwiZGVzY3JpcHRpb24iOiJMaW1pdHMgZGVzY3JpYmVzIHRoZSBtYXhpbXVtIGFtb3VudCBvZiBjb21wdXRlIHJlc291cmNlcyBhbGxvd2VkLlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9jb25maWd1cmF0aW9uL21hbmFnZS1yZXNvdXJjZXMtY29udGFpbmVycy8iLCJ0eXBlIjoib2JqZWN0In0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBjb250YWluZXIgdGhlIHJlcXVpcmVtZW50cyBhcmUgc2V0IGZvciIsInR5cGUiOiJzdHJpbmcifSwicmVxdWVzdHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sImRlc2NyaXB0aW9uIjoiUmVxdWVzdHMgZGVzY3JpYmVzIHRoZSBtaW5pbXVtIGFtb3VudCBvZiBjb21wdXRlIHJlc291cmNlcyByZXF1aXJlZC5cbklmIFJlcXVlc3RzIGlzIG9taXR0ZWQgZm9yIGEgY29udGFpbmVyLCBpdCBkZWZhdWx0cyB0byBMaW1pdHMgaWYgdGhhdCBpcyBleHBsaWNpdGx5IHNwZWNpZmllZCxcbm90aGVyd2lzZSB0byBhbiBpbXBsZW1lbnRhdGlvbi1kZWZpbmVkIHZhbHVlLiBSZXF1ZXN0cyBjYW5ub3QgZXhjZWVkIExpbWl0cy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtcmVzb3VyY2VzLWNvbnRhaW5lcnMvIiwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJpbWFnZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGltYWdlIiwicGF0dGVybiI6IlthLXpBLVowLTlcXC1dKyIsInR5cGUiOiJzdHJpbmcifSwiaW1hZ2VQdWxsU2VjcmV0cyI6eyJkZWZhdWx0IjpbXSwiZGVzY3JpcHRpb24iOiJJbWFnZVB1bGxTZWNyZXRzIGlzIGFuIG9wdGlvbmFsIGxpc3Qgb2YgcmVmZXJlbmNlcyB0byBzZWNyZXRzIGluIHRoZSBzYW1lXG5uYW1lc3BhY2UgdG8gdXNlIGZvciBwdWxsaW5nIHRoZSBpbWFnZSIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sInJlcG9zaXRvcnkiOnsiZGVzY3JpcHRpb24iOiJBZGRyZXNzIG9mIHRoZSByZWdpc3RyeSB0aGF0IHN0b3JlcyB0aGUgaW1hZ2UiLCJwYXR0ZXJuIjoiW2EtekEtWjAtOVxcLlxcLVxcL10rIiwidHlwZSI6InN0cmluZyJ9LCJ2ZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiVmVyc2lvbiBvZiB0aGUgaW1hZ2UgdG8gdXNlIiwicGF0dGVybiI6IlthLXpBLVowLTlcXC4tXSsiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJpbWFnZSIsInJlcG9zaXRvcnkiLCJ2ZXJzaW9uIl0sInR5cGUiOiJvYmplY3QifSwibm9kZUFmZmluaXR5Ijp7ImRlc2NyaXB0aW9uIjoiTm9kZUFmZmluaXR5IHJ1bGVzIHRvIGluamVjdCB0byB0aGUgRGFlbW9uU2V0cyBvYmplY3RzIHRoYXQgYXJlIG1hbmFnZWQgYnkgdGhlIG9wZXJhdG9yIiwicHJvcGVydGllcyI6eyJwcmVmZXJyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbiI6eyJkZXNjcmlwdGlvbiI6IlRoZSBzY2hlZHVsZXIgd2lsbCBwcmVmZXIgdG8gc2NoZWR1bGUgcG9kcyB0byBub2RlcyB0aGF0IHNhdGlzZnlcbnRoZSBhZmZpbml0eSBleHByZXNzaW9ucyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCwgYnV0IGl0IG1heSBjaG9vc2VcbmEgbm9kZSB0aGF0IHZpb2xhdGVzIG9uZSBvciBtb3JlIG9mIHRoZSBleHByZXNzaW9ucy4gVGhlIG5vZGUgdGhhdCBpc1xubW9zdCBwcmVmZXJyZWQgaXMgdGhlIG9uZSB3aXRoIHRoZSBncmVhdGVzdCBzdW0gb2Ygd2VpZ2h0cywgaS5lLlxuZm9yIGVhY2ggbm9kZSB0aGF0IG1lZXRzIGFsbCBvZiB0aGUgc2NoZWR1bGluZyByZXF1aXJlbWVudHMgKHJlc291cmNlXG5yZXF1ZXN0LCByZXF1aXJlZER1cmluZ1NjaGVkdWxpbmcgYWZmaW5pdHkgZXhwcmVzc2lvbnMsIGV0Yy4pLFxuY29tcHV0ZSBhIHN1bSBieSBpdGVyYXRpbmcgdGhyb3VnaCB0aGUgZWxlbWVudHMgb2YgdGhpcyBmaWVsZCBhbmQgYWRkaW5nXG5cIndlaWdodFwiIHRvIHRoZSBzdW0gaWYgdGhlIG5vZGUgbWF0Y2hlcyB0aGUgY29ycmVzcG9uZGluZyBtYXRjaEV4cHJlc3Npb25zOyB0aGVcbm5vZGUocykgd2l0aCB0aGUgaGlnaGVzdCBzdW0gYXJlIHRoZSBtb3N0IHByZWZlcnJlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkFuIGVtcHR5IHByZWZlcnJlZCBzY2hlZHVsaW5nIHRlcm0gbWF0Y2hlcyBhbGwgb2JqZWN0cyB3aXRoIGltcGxpY2l0IHdlaWdodCAwXG4oaS5lLiBpdCdzIGEgbm8tb3ApLiBBIG51bGwgcHJlZmVycmVkIHNjaGVkdWxpbmcgdGVybSBtYXRjaGVzIG5vIG9iamVjdHMgKGkuZS4gaXMgYWxzbyBhIG5vLW9wKS4iLCJwcm9wZXJ0aWVzIjp7InByZWZlcmVuY2UiOnsiZGVzY3JpcHRpb24iOiJBIG5vZGUgc2VsZWN0b3IgdGVybSwgYXNzb2NpYXRlZCB3aXRoIHRoZSBjb3JyZXNwb25kaW5nIHdlaWdodC4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJBIGxpc3Qgb2Ygbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudHMgYnkgbm9kZSdzIGxhYmVscy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yXG50aGF0IHJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJSZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy5cblZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMsIERvZXNOb3RFeGlzdC4gR3QsIGFuZCBMdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6IkFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgR3Qgb3IgTHQsIHRoZSB2YWx1ZXNcbmFycmF5IG11c3QgaGF2ZSBhIHNpbmdsZSBlbGVtZW50LCB3aGljaCB3aWxsIGJlIGludGVycHJldGVkIGFzIGFuIGludGVnZXIuXG5UaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpYyBtZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaEZpZWxkcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGlzdCBvZiBub2RlIHNlbGVjdG9yIHJlcXVpcmVtZW50cyBieSBub2RlJ3MgZmllbGRzLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBub2RlIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3JcbnRoYXQgcmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJUaGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6IlJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cywgRG9lc05vdEV4aXN0LiBHdCwgYW5kIEx0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoiQW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBHdCBvciBMdCwgdGhlIHZhbHVlc1xuYXJyYXkgbXVzdCBoYXZlIGEgc2luZ2xlIGVsZW1lbnQsIHdoaWNoIHdpbGwgYmUgaW50ZXJwcmV0ZWQgYXMgYW4gaW50ZWdlci5cblRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljIG1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn0sIndlaWdodCI6eyJkZXNjcmlwdGlvbiI6IldlaWdodCBhc3NvY2lhdGVkIHdpdGggbWF0Y2hpbmcgdGhlIGNvcnJlc3BvbmRpbmcgbm9kZVNlbGVjdG9yVGVybSwgaW4gdGhlIHJhbmdlIDEtMTAwLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifX0sInJlcXVpcmVkIjpbInByZWZlcmVuY2UiLCJ3ZWlnaHQiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sInJlcXVpcmVkRHVyaW5nU2NoZWR1bGluZ0lnbm9yZWREdXJpbmdFeGVjdXRpb24iOnsiZGVzY3JpcHRpb24iOiJJZiB0aGUgYWZmaW5pdHkgcmVxdWlyZW1lbnRzIHNwZWNpZmllZCBieSB0aGlzIGZpZWxkIGFyZSBub3QgbWV0IGF0XG5zY2hlZHVsaW5nIHRpbWUsIHRoZSBwb2Qgd2lsbCBub3QgYmUgc2NoZWR1bGVkIG9udG8gdGhlIG5vZGUuXG5JZiB0aGUgYWZmaW5pdHkgcmVxdWlyZW1lbnRzIHNwZWNpZmllZCBieSB0aGlzIGZpZWxkIGNlYXNlIHRvIGJlIG1ldFxuYXQgc29tZSBwb2ludCBkdXJpbmcgcG9kIGV4ZWN1dGlvbiAoZS5nLiBkdWUgdG8gYW4gdXBkYXRlKSwgdGhlIHN5c3RlbVxubWF5IG9yIG1heSBub3QgdHJ5IHRvIGV2ZW50dWFsbHkgZXZpY3QgdGhlIHBvZCBmcm9tIGl0cyBub2RlLiIsInByb3BlcnRpZXMiOnsibm9kZVNlbGVjdG9yVGVybXMiOnsiZGVzY3JpcHRpb24iOiJSZXF1aXJlZC4gQSBsaXN0IG9mIG5vZGUgc2VsZWN0b3IgdGVybXMuIFRoZSB0ZXJtcyBhcmUgT1JlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbnVsbCBvciBlbXB0eSBub2RlIHNlbGVjdG9yIHRlcm0gbWF0Y2hlcyBubyBvYmplY3RzLiBUaGUgcmVxdWlyZW1lbnRzIG9mXG50aGVtIGFyZSBBTkRlZC5cblRoZSBUb3BvbG9neVNlbGVjdG9yVGVybSB0eXBlIGltcGxlbWVudHMgYSBzdWJzZXQgb2YgdGhlIE5vZGVTZWxlY3RvclRlcm0uIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoiQSBsaXN0IG9mIG5vZGUgc2VsZWN0b3IgcmVxdWlyZW1lbnRzIGJ5IG5vZGUncyBsYWJlbHMuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIG5vZGUgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvclxudGhhdCByZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoiUmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzLCBEb2VzTm90RXhpc3QuIEd0LCBhbmQgTHQuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJBbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCxcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEd0IG9yIEx0LCB0aGUgdmFsdWVzXG5hcnJheSBtdXN0IGhhdmUgYSBzaW5nbGUgZWxlbWVudCwgd2hpY2ggd2lsbCBiZSBpbnRlcnByZXRlZCBhcyBhbiBpbnRlZ2VyLlxuVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWMgbWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibWF0Y2hGaWVsZHMiOnsiZGVzY3JpcHRpb24iOiJBIGxpc3Qgb2Ygbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudHMgYnkgbm9kZSdzIGZpZWxkcy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yXG50aGF0IHJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJSZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy5cblZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMsIERvZXNOb3RFeGlzdC4gR3QsIGFuZCBMdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6IkFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgR3Qgb3IgTHQsIHRoZSB2YWx1ZXNcbmFycmF5IG11c3QgaGF2ZSBhIHNpbmdsZSBlbGVtZW50LCB3aGljaCB3aWxsIGJlIGludGVycHJldGVkIGFzIGFuIGludGVnZXIuXG5UaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpYyBtZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJyZXF1aXJlZCI6WyJub2RlU2VsZWN0b3JUZXJtcyJdLCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn19LCJ0eXBlIjoib2JqZWN0In0sIm52SXBhbSI6eyJkZXNjcmlwdGlvbiI6Ik52SXBhbSBpcyBhbiBJUEFNIHByb3ZpZGVyIHRoYXQgZHluYW1pY2FsbHkgYXNzaWducyBJUCBhZGRyZXNzZXMgd2l0aCBzcGVlZCBhbmQgcGVyZm9ybWFuY2UgaW4gbWluZC5cbk5vdGU6IE52SVBhbSByZXF1aXJlcyBjZXJ0aWZpY2F0ZSBtYW5hZ2VtZW50IGUuZy4gY2VydC1tYW5hZ2VyIG9yIE9wZW5TaGlmdCBjZXJ0IG1hbmFnZW1lbnQuXG5TZWUgaHR0cHM6Ly9naXRodWIuY29tL01lbGxhbm94L252aWRpYS1rOHMtaXBhbSIsInByb3BlcnRpZXMiOnsiY29udGFpbmVyUmVzb3VyY2VzIjp7ImRlc2NyaXB0aW9uIjoiUmVzb3VyY2VSZXF1aXJlbWVudHMgZGVzY3JpYmVzIHRoZSBjb21wdXRlIHJlc291cmNlIHJlcXVpcmVtZW50cyIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiUmVzb3VyY2VSZXF1aXJlbWVudHMgZGVzY3JpYmVzIHRoZSBjb21wdXRlIHJlc291cmNlIHJlcXVpcmVtZW50cy4iLCJwcm9wZXJ0aWVzIjp7ImxpbWl0cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwiZGVzY3JpcHRpb24iOiJMaW1pdHMgZGVzY3JpYmVzIHRoZSBtYXhpbXVtIGFtb3VudCBvZiBjb21wdXRlIHJlc291cmNlcyBhbGxvd2VkLlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9jb25maWd1cmF0aW9uL21hbmFnZS1yZXNvdXJjZXMtY29udGFpbmVycy8iLCJ0eXBlIjoib2JqZWN0In0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBjb250YWluZXIgdGhlIHJlcXVpcmVtZW50cyBhcmUgc2V0IGZvciIsInR5cGUiOiJzdHJpbmcifSwicmVxdWVzdHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sImRlc2NyaXB0aW9uIjoiUmVxdWVzdHMgZGVzY3JpYmVzIHRoZSBtaW5pbXVtIGFtb3VudCBvZiBjb21wdXRlIHJlc291cmNlcyByZXF1aXJlZC5cbklmIFJlcXVlc3RzIGlzIG9taXR0ZWQgZm9yIGEgY29udGFpbmVyLCBpdCBkZWZhdWx0cyB0byBMaW1pdHMgaWYgdGhhdCBpcyBleHBsaWNpdGx5IHNwZWNpZmllZCxcbm90aGVyd2lzZSB0byBhbiBpbXBsZW1lbnRhdGlvbi1kZWZpbmVkIHZhbHVlLiBSZXF1ZXN0cyBjYW5ub3QgZXhjZWVkIExpbWl0cy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtcmVzb3VyY2VzLWNvbnRhaW5lcnMvIiwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJlbmFibGVXZWJob29rIjp7ImRlc2NyaXB0aW9uIjoiRW5hYmxlIGRlcGxveW1lbnQgb2YgdGhlIHZhbGlkYXRpb24gd2ViaG9vayIsInR5cGUiOiJib29sZWFuIn0sImltYWdlIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgaW1hZ2UiLCJwYXR0ZXJuIjoiW2EtekEtWjAtOVxcLV0rIiwidHlwZSI6InN0cmluZyJ9LCJpbWFnZVB1bGxTZWNyZXRzIjp7ImRlZmF1bHQiOltdLCJkZXNjcmlwdGlvbiI6IkltYWdlUHVsbFNlY3JldHMgaXMgYW4gb3B0aW9uYWwgbGlzdCBvZiByZWZlcmVuY2VzIHRvIHNlY3JldHMgaW4gdGhlIHNhbWVcbm5hbWVzcGFjZSB0byB1c2UgZm9yIHB1bGxpbmcgdGhlIGltYWdlIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwicmVwb3NpdG9yeSI6eyJkZXNjcmlwdGlvbiI6IkFkZHJlc3Mgb2YgdGhlIHJlZ2lzdHJ5IHRoYXQgc3RvcmVzIHRoZSBpbWFnZSIsInBhdHRlcm4iOiJbYS16QS1aMC05XFwuXFwtXFwvXSsiLCJ0eXBlIjoic3RyaW5nIn0sInZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJWZXJzaW9uIG9mIHRoZSBpbWFnZSB0byB1c2UiLCJwYXR0ZXJuIjoiW2EtekEtWjAtOVxcLi1dKyIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImltYWdlIiwicmVwb3NpdG9yeSIsInZlcnNpb24iXSwidHlwZSI6Im9iamVjdCJ9LCJvZmVkRHJpdmVyIjp7ImRlc2NyaXB0aW9uIjoiT0ZFRERyaXZlciBpcyBhIHNwZWNpYWxpemVkIGRyaXZlciBmb3IgTlZJRElBIE5JQ3Mgd2hpY2ggY2FuIHJlcGxhY2UgdGhlIGluYm94IGRyaXZlciB0aGF0IGNvbWVzIHdpdGggYW4gT1MuXG5TZWUgaHR0cHM6Ly9uZXR3b3JrLm52aWRpYS5jb20vc3VwcG9ydC9tbG54LW9mZWQtbWF0cml4LyIsInByb3BlcnRpZXMiOnsiY2VydENvbmZpZyI6eyJkZXNjcmlwdGlvbiI6Ik9wdGlvbmFsOiBDdXN0b20gVExTIGNlcnRpZmljYXRlcyBjb25maWd1cmF0aW9uIGZvciBkcml2ZXIgY29udGFpbmVyIiwicHJvcGVydGllcyI6eyJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgQ29uZmlnTWFwIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJjb250YWluZXJSZXNvdXJjZXMiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZVJlcXVpcmVtZW50cyBkZXNjcmliZXMgdGhlIGNvbXB1dGUgcmVzb3VyY2UgcmVxdWlyZW1lbnRzIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZVJlcXVpcmVtZW50cyBkZXNjcmliZXMgdGhlIGNvbXB1dGUgcmVzb3VyY2UgcmVxdWlyZW1lbnRzLiIsInByb3BlcnRpZXMiOnsibGltaXRzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJkZXNjcmlwdGlvbiI6IkxpbWl0cyBkZXNjcmliZXMgdGhlIG1heGltdW0gYW1vdW50IG9mIGNvbXB1dGUgcmVzb3VyY2VzIGFsbG93ZWQuXG5Nb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLXJlc291cmNlcy1jb250YWluZXJzLyIsInR5cGUiOiJvYmplY3QifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGNvbnRhaW5lciB0aGUgcmVxdWlyZW1lbnRzIGFyZSBzZXQgZm9yIiwidHlwZSI6InN0cmluZyJ9LCJyZXF1ZXN0cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwiZGVzY3JpcHRpb24iOiJSZXF1ZXN0cyBkZXNjcmliZXMgdGhlIG1pbmltdW0gYW1vdW50IG9mIGNvbXB1dGUgcmVzb3VyY2VzIHJlcXVpcmVkLlxuSWYgUmVxdWVzdHMgaXMgb21pdHRlZCBmb3IgYSBjb250YWluZXIsIGl0IGRlZmF1bHRzIHRvIExpbWl0cyBpZiB0aGF0IGlzIGV4cGxpY2l0bHkgc3BlY2lmaWVkLFxub3RoZXJ3aXNlIHRvIGFuIGltcGxlbWVudGF0aW9uLWRlZmluZWQgdmFsdWUuIFJlcXVlc3RzIGNhbm5vdCBleGNlZWQgTGltaXRzLlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9jb25maWd1cmF0aW9uL21hbmFnZS1yZXNvdXJjZXMtY29udGFpbmVycy8iLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sImVudiI6eyJkZXNjcmlwdGlvbiI6Ikxpc3Qgb2YgZW52aXJvbm1lbnQgdmFyaWFibGVzIHRvIHNldCBpbiB0aGUgT0ZFRCBjb250YWluZXIuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJFbnZWYXIgcmVwcmVzZW50cyBhbiBlbnZpcm9ubWVudCB2YXJpYWJsZSBwcmVzZW50IGluIGEgQ29udGFpbmVyLiIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGVudmlyb25tZW50IHZhcmlhYmxlLiBNdXN0IGJlIGEgQ19JREVOVElGSUVSLiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJWYXJpYWJsZSByZWZlcmVuY2VzICQoVkFSX05BTUUpIGFyZSBleHBhbmRlZFxudXNpbmcgdGhlIHByZXZpb3VzbHkgZGVmaW5lZCBlbnZpcm9ubWVudCB2YXJpYWJsZXMgaW4gdGhlIGNvbnRhaW5lciBhbmRcbmFueSBzZXJ2aWNlIGVudmlyb25tZW50IHZhcmlhYmxlcy4gSWYgYSB2YXJpYWJsZSBjYW5ub3QgYmUgcmVzb2x2ZWQsXG50aGUgcmVmZXJlbmNlIGluIHRoZSBpbnB1dCBzdHJpbmcgd2lsbCBiZSB1bmNoYW5nZWQuIERvdWJsZSAkJCBhcmUgcmVkdWNlZFxudG8gYSBzaW5nbGUgJCwgd2hpY2ggYWxsb3dzIGZvciBlc2NhcGluZyB0aGUgJChWQVJfTkFNRSkgc3ludGF4OiBpLmUuXG5cIiQkKFZBUl9OQU1FKVwiIHdpbGwgcHJvZHVjZSB0aGUgc3RyaW5nIGxpdGVyYWwgXCIkKFZBUl9OQU1FKVwiLlxuRXNjYXBlZCByZWZlcmVuY2VzIHdpbGwgbmV2ZXIgYmUgZXhwYW5kZWQsIHJlZ2FyZGxlc3Mgb2Ygd2hldGhlciB0aGUgdmFyaWFibGVcbmV4aXN0cyBvciBub3QuXG5EZWZhdWx0cyB0byBcIlwiLiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVGcm9tIjp7ImRlc2NyaXB0aW9uIjoiU291cmNlIGZvciB0aGUgZW52aXJvbm1lbnQgdmFyaWFibGUncyB2YWx1ZS4gQ2Fubm90IGJlIHVzZWQgaWYgdmFsdWUgaXMgbm90IGVtcHR5LiIsInByb3BlcnRpZXMiOnsiY29uZmlnTWFwS2V5UmVmIjp7ImRlc2NyaXB0aW9uIjoiU2VsZWN0cyBhIGtleSBvZiBhIENvbmZpZ01hcC4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBrZXkgdG8gc2VsZWN0LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZWZhdWx0IjoiIiwiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZWZlcmVudC5cblRoaXMgZmllbGQgaXMgZWZmZWN0aXZlbHkgcmVxdWlyZWQsIGJ1dCBkdWUgdG8gYmFja3dhcmRzIGNvbXBhdGliaWxpdHkgaXNcbmFsbG93ZWQgdG8gYmUgZW1wdHkuIEluc3RhbmNlcyBvZiB0aGlzIHR5cGUgd2l0aCBhbiBlbXB0eSB2YWx1ZSBoZXJlIGFyZVxuYWxtb3N0IGNlcnRhaW5seSB3cm9uZy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzIiwidHlwZSI6InN0cmluZyJ9LCJvcHRpb25hbCI6eyJkZXNjcmlwdGlvbiI6IlNwZWNpZnkgd2hldGhlciB0aGUgQ29uZmlnTWFwIG9yIGl0cyBrZXkgbXVzdCBiZSBkZWZpbmVkIiwidHlwZSI6ImJvb2xlYW4ifX0sInJlcXVpcmVkIjpbImtleSJdLCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn0sImZpZWxkUmVmIjp7ImRlc2NyaXB0aW9uIjoiU2VsZWN0cyBhIGZpZWxkIG9mIHRoZSBwb2Q6IHN1cHBvcnRzIG1ldGFkYXRhLm5hbWUsIG1ldGFkYXRhLm5hbWVzcGFjZSwgYG1ldGFkYXRhLmxhYmVsc1snXHUwMDNjS0VZXHUwMDNlJ11gLCBgbWV0YWRhdGEuYW5ub3RhdGlvbnNbJ1x1MDAzY0tFWVx1MDAzZSddYCxcbnNwZWMubm9kZU5hbWUsIHNwZWMuc2VydmljZUFjY291bnROYW1lLCBzdGF0dXMuaG9zdElQLCBzdGF0dXMucG9kSVAsIHN0YXR1cy5wb2RJUHMuIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiVmVyc2lvbiBvZiB0aGUgc2NoZW1hIHRoZSBGaWVsZFBhdGggaXMgd3JpdHRlbiBpbiB0ZXJtcyBvZiwgZGVmYXVsdHMgdG8gXCJ2MVwiLiIsInR5cGUiOiJzdHJpbmcifSwiZmllbGRQYXRoIjp7ImRlc2NyaXB0aW9uIjoiUGF0aCBvZiB0aGUgZmllbGQgdG8gc2VsZWN0IGluIHRoZSBzcGVjaWZpZWQgQVBJIHZlcnNpb24uIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiZmllbGRQYXRoIl0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwicmVzb3VyY2VGaWVsZFJlZiI6eyJkZXNjcmlwdGlvbiI6IlNlbGVjdHMgYSByZXNvdXJjZSBvZiB0aGUgY29udGFpbmVyOiBvbmx5IHJlc291cmNlcyBsaW1pdHMgYW5kIHJlcXVlc3RzXG4obGltaXRzLmNwdSwgbGltaXRzLm1lbW9yeSwgbGltaXRzLmVwaGVtZXJhbC1zdG9yYWdlLCByZXF1ZXN0cy5jcHUsIHJlcXVlc3RzLm1lbW9yeSBhbmQgcmVxdWVzdHMuZXBoZW1lcmFsLXN0b3JhZ2UpIGFyZSBjdXJyZW50bHkgc3VwcG9ydGVkLiIsInByb3BlcnRpZXMiOnsiY29udGFpbmVyTmFtZSI6eyJkZXNjcmlwdGlvbiI6IkNvbnRhaW5lciBuYW1lOiByZXF1aXJlZCBmb3Igdm9sdW1lcywgb3B0aW9uYWwgZm9yIGVudiB2YXJzIiwidHlwZSI6InN0cmluZyJ9LCJkaXZpc29yIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwiZGVzY3JpcHRpb24iOiJTcGVjaWZpZXMgdGhlIG91dHB1dCBmb3JtYXQgb2YgdGhlIGV4cG9zZWQgcmVzb3VyY2VzLCBkZWZhdWx0cyB0byBcIjFcIiIsInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwicmVzb3VyY2UiOnsiZGVzY3JpcHRpb24iOiJSZXF1aXJlZDogcmVzb3VyY2UgdG8gc2VsZWN0IiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsicmVzb3VyY2UiXSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJzZWNyZXRLZXlSZWYiOnsiZGVzY3JpcHRpb24iOiJTZWxlY3RzIGEga2V5IG9mIGEgc2VjcmV0IGluIHRoZSBwb2QncyBuYW1lc3BhY2UiLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBrZXkgb2YgdGhlIHNlY3JldCB0byBzZWxlY3QgZnJvbS4gIE11c3QgYmUgYSB2YWxpZCBzZWNyZXQga2V5LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZWZhdWx0IjoiIiwiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZWZlcmVudC5cblRoaXMgZmllbGQgaXMgZWZmZWN0aXZlbHkgcmVxdWlyZWQsIGJ1dCBkdWUgdG8gYmFja3dhcmRzIGNvbXBhdGliaWxpdHkgaXNcbmFsbG93ZWQgdG8gYmUgZW1wdHkuIEluc3RhbmNlcyBvZiB0aGlzIHR5cGUgd2l0aCBhbiBlbXB0eSB2YWx1ZSBoZXJlIGFyZVxuYWxtb3N0IGNlcnRhaW5seSB3cm9uZy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbmFtZXMvI25hbWVzIiwidHlwZSI6InN0cmluZyJ9LCJvcHRpb25hbCI6eyJkZXNjcmlwdGlvbiI6IlNwZWNpZnkgd2hldGhlciB0aGUgU2VjcmV0IG9yIGl0cyBrZXkgbXVzdCBiZSBkZWZpbmVkIiwidHlwZSI6ImJvb2xlYW4ifX0sInJlcXVpcmVkIjpbImtleSJdLCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn19LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sImZvcmNlUHJlY29tcGlsZWQiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiRm9yY2VQcmVjb21waWxlZCBzcGVjaWZpZXMgaWYgb25seSBNT0ZFRCBwcmVjb21waWxlZCBpbWFnZXMgYXJlIGFsbG93ZWRcbklmIHNldCB0byBmYWxzZSBhbmQgcHJlY29tcGlsZWQgaW1hZ2UgZG9lcyBub3QgZXhpc3RzLCBNT0ZFRCBkcml2ZXJzIHdpbGwgYmUgY29tcGlsZWQgb24gTm9kZXNcbklmIHNldCB0byB0cnVlIGFuZCBwcmVjb21waWxlZCBpbWFnZSBkb2VzIG5vdCBleGlzdHMsIE9GRUQgc3RhdGUgd2lsbCBiZSBFcnJvci4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJpbWFnZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGltYWdlIiwicGF0dGVybiI6IlthLXpBLVowLTlcXC1dKyIsInR5cGUiOiJzdHJpbmcifSwiaW1hZ2VQdWxsU2VjcmV0cyI6eyJkZWZhdWx0IjpbXSwiZGVzY3JpcHRpb24iOiJJbWFnZVB1bGxTZWNyZXRzIGlzIGFuIG9wdGlvbmFsIGxpc3Qgb2YgcmVmZXJlbmNlcyB0byBzZWNyZXRzIGluIHRoZSBzYW1lXG5uYW1lc3BhY2UgdG8gdXNlIGZvciBwdWxsaW5nIHRoZSBpbWFnZSIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sImxpdmVuZXNzUHJvYmUiOnsiZGVzY3JpcHRpb24iOiJQb2QgbGl2ZW5lc3MgcHJvYmUgc2V0dGluZ3MiLCJwcm9wZXJ0aWVzIjp7ImluaXRpYWxEZWxheVNlY29uZHMiOnsiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2Ygc2Vjb25kcyBhZnRlciB0aGUgY29udGFpbmVyIGhhcyBzdGFydGVkIGJlZm9yZSB0aGUgcHJvYmUgaXMgaW5pdGlhdGVkIiwidHlwZSI6ImludGVnZXIifSwicGVyaW9kU2Vjb25kcyI6eyJkZXNjcmlwdGlvbiI6IkhvdyBvZnRlbiAoaW4gc2Vjb25kcykgdG8gcGVyZm9ybSB0aGUgcHJvYmUiLCJ0eXBlIjoiaW50ZWdlciJ9fSwicmVxdWlyZWQiOlsiaW5pdGlhbERlbGF5U2Vjb25kcyIsInBlcmlvZFNlY29uZHMiXSwidHlwZSI6Im9iamVjdCJ9LCJyZWFkaW5lc3NQcm9iZSI6eyJkZXNjcmlwdGlvbiI6IlBvZCByZWFkaW5lc3MgcHJvYmUgc2V0dGluZ3MiLCJwcm9wZXJ0aWVzIjp7ImluaXRpYWxEZWxheVNlY29uZHMiOnsiZGVzY3JpcHRpb24iOiJOdW1iZXIgb2Ygc2Vjb25kcyBhZnRlciB0aGUgY29udGFpbmVyIGhhcyBzdGFydGVkIGJlZm9yZSB0aGUgcHJvYmUgaXMgaW5pdGlhdGVkIiwidHlwZSI6ImludGVnZXIifSwicGVyaW9kU2Vjb25kcyI6eyJkZXNjcmlwdGlvbiI6IkhvdyBvZnRlbiAoaW4gc2Vjb25kcykgdG8gcGVyZm9ybSB0aGUgcHJvYmUiLCJ0eXBlIjoiaW50ZWdlciJ9fSwicmVxdWlyZWQiOlsiaW5pdGlhbERlbGF5U2Vjb25kcyIsInBlcmlvZFNlY29uZHMiXSwidHlwZSI6Im9iamVjdCJ9LCJyZXBvQ29uZmlnIjp7ImRlc2NyaXB0aW9uIjoiT3B0aW9uYWw6IEN1c3RvbSBwYWNrYWdlIHJlcG9zaXRvcnkgY29uZmlndXJhdGlvbiBmb3IgT0ZFRCBjb250YWluZXIiLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBDb25maWdNYXAiLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInJlcG9zaXRvcnkiOnsiZGVzY3JpcHRpb24iOiJBZGRyZXNzIG9mIHRoZSByZWdpc3RyeSB0aGF0IHN0b3JlcyB0aGUgaW1hZ2UiLCJwYXR0ZXJuIjoiW2EtekEtWjAtOVxcLlxcLVxcL10rIiwidHlwZSI6InN0cmluZyJ9LCJzdGFydHVwUHJvYmUiOnsiZGVzY3JpcHRpb24iOiJQb2Qgc3RhcnR1cCBwcm9iZSBzZXR0aW5ncyIsInByb3BlcnRpZXMiOnsiaW5pdGlhbERlbGF5U2Vjb25kcyI6eyJkZXNjcmlwdGlvbiI6Ik51bWJlciBvZiBzZWNvbmRzIGFmdGVyIHRoZSBjb250YWluZXIgaGFzIHN0YXJ0ZWQgYmVmb3JlIHRoZSBwcm9iZSBpcyBpbml0aWF0ZWQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJwZXJpb2RTZWNvbmRzIjp7ImRlc2NyaXB0aW9uIjoiSG93IG9mdGVuIChpbiBzZWNvbmRzKSB0byBwZXJmb3JtIHRoZSBwcm9iZSIsInR5cGUiOiJpbnRlZ2VyIn19LCJyZXF1aXJlZCI6WyJpbml0aWFsRGVsYXlTZWNvbmRzIiwicGVyaW9kU2Vjb25kcyJdLCJ0eXBlIjoib2JqZWN0In0sInRlcm1pbmF0aW9uR3JhY2VQZXJpb2RTZWNvbmRzIjp7ImRlZmF1bHQiOjMwMCwiZGVzY3JpcHRpb24iOiJUZXJtaW5hdGlvbkdyYWNlUGVyaW9kU2Vjb25kcyBzcGVjaWZpZXMgdGhlIGxlbmd0aCBvZiB0aW1lIGluIHNlY29uZHNcbnRvIHdhaXQgYmVmb3JlIGtpbGxpbmcgdGhlIE9GRUQgcG9kIG9uIHRlcm1pbmF0aW9uIiwiZm9ybWF0IjoiaW50NjQiLCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJ1cGdyYWRlUG9saWN5Ijp7ImRlc2NyaXB0aW9uIjoiT2ZlZCBhdXRvLXVwZ3JhZGUgc2V0dGluZ3MiLCJwcm9wZXJ0aWVzIjp7ImF1dG9VcGdyYWRlIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IkF1dG9VcGdyYWRlIGlzIGEgZ2xvYmFsIHN3aXRjaCBmb3IgYXV0b21hdGljIHVwZ3JhZGUgZmVhdHVyZVxuaWYgc2V0IHRvIGZhbHNlIGFsbCBvdGhlciBvcHRpb25zIGFyZSBpZ25vcmVkIiwidHlwZSI6ImJvb2xlYW4ifSwiZHJhaW4iOnsiZGVzY3JpcHRpb24iOiJUaGUgY29uZmlndXJhdGlvbiBmb3Igbm9kZSBkcmFpbiBkdXJpbmcgYXV0b21hdGljIHVwZ3JhZGUiLCJwcm9wZXJ0aWVzIjp7ImRlbGV0ZUVtcHR5RGlyIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IkRlbGV0ZUVtcHR5RGlyIGluZGljYXRlcyBpZiBzaG91bGQgY29udGludWUgZXZlbiBpZiB0aGVyZSBhcmUgcG9kcyB1c2luZyBlbXB0eURpclxuKGxvY2FsIGRhdGEgdGhhdCB3aWxsIGJlIGRlbGV0ZWQgd2hlbiB0aGUgbm9kZSBpcyBkcmFpbmVkKSIsInR5cGUiOiJib29sZWFuIn0sImVuYWJsZSI6eyJkZWZhdWx0Ijp0cnVlLCJkZXNjcmlwdGlvbiI6IkVuYWJsZSBpbmRpY2F0ZXMgaWYgbm9kZSBkcmFpbmluZyBpcyBhbGxvd2VkIGR1cmluZyB1cGdyYWRlIiwidHlwZSI6ImJvb2xlYW4ifSwiZm9yY2UiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiRm9yY2UgaW5kaWNhdGVzIGlmIGZvcmNlIGRyYWluaW5nIGlzIGFsbG93ZWQiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJwb2RTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IlBvZFNlbGVjdG9yIHNwZWNpZmllcyBhIGxhYmVsIHNlbGVjdG9yIHRvIGZpbHRlciBwb2RzIG9uIHRoZSBub2RlIHRoYXQgbmVlZCB0byBiZSBkcmFpbmVkXG5Gb3IgbW9yZSBkZXRhaWxzIG9uIGxhYmVsIHNlbGVjdG9ycywgc2VlOlxuaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvb3ZlcnZpZXcvd29ya2luZy13aXRoLW9iamVjdHMvbGFiZWxzLyNsYWJlbC1zZWxlY3RvcnMiLCJ0eXBlIjoic3RyaW5nIn0sInRpbWVvdXRTZWNvbmRzIjp7ImRlZmF1bHQiOjMwMCwiZGVzY3JpcHRpb24iOiJUaW1lb3V0U2Vjb25kIHNwZWNpZmllcyB0aGUgbGVuZ3RoIG9mIHRpbWUgaW4gc2Vjb25kcyB0byB3YWl0IGJlZm9yZSBnaXZpbmcgdXAgZHJhaW4sIHplcm8gbWVhbnMgaW5maW5pdGUiLCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9fSwidHlwZSI6Im9iamVjdCJ9LCJtYXhQYXJhbGxlbFVwZ3JhZGVzIjp7ImRlZmF1bHQiOjEsImRlc2NyaXB0aW9uIjoiTWF4UGFyYWxsZWxVcGdyYWRlcyBpbmRpY2F0ZXMgaG93IG1hbnkgbm9kZXMgY2FuIGJlIHVwZ3JhZGVkIGluIHBhcmFsbGVsXG4wIG1lYW5zIG5vIGxpbWl0LCBhbGwgbm9kZXMgd2lsbCBiZSB1cGdyYWRlZCBpbiBwYXJhbGxlbCIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sInNhZmVMb2FkIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IlNhZmVMb2FkIHR1cm4gb24gc2FmZSBkcml2ZXIgbG9hZGluZyAoY29yZG9uIGFuZCBkcmFpbiB0aGUgbm9kZSBiZWZvcmUgbG9hZGluZyB0aGUgZHJpdmVyKSIsInR5cGUiOiJib29sZWFuIn0sIndhaXRGb3JDb21wbGV0aW9uIjp7ImRlc2NyaXB0aW9uIjoiVGhlIGNvbmZpZ3VyYXRpb24gZm9yIHdhaXRpbmcgb24gcG9kcyBjb21wbGV0aW9ucyIsInByb3BlcnRpZXMiOnsicG9kU2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJQb2RTZWxlY3RvciBzcGVjaWZpZXMgYSBsYWJlbCBzZWxlY3RvciBmb3IgdGhlIHBvZHMgdG8gd2FpdCBmb3IgY29tcGxldGlvblxuRm9yIG1vcmUgZGV0YWlscyBvbiBsYWJlbCBzZWxlY3RvcnMsIHNlZTpcbmh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL292ZXJ2aWV3L3dvcmtpbmctd2l0aC1vYmplY3RzL2xhYmVscy8jbGFiZWwtc2VsZWN0b3JzIiwidHlwZSI6InN0cmluZyJ9LCJ0aW1lb3V0U2Vjb25kcyI6eyJkZWZhdWx0IjowLCJkZXNjcmlwdGlvbiI6IlRpbWVvdXRTZWNvbmQgc3BlY2lmaWVzIHRoZSBsZW5ndGggb2YgdGltZSBpbiBzZWNvbmRzXG50byB3YWl0IGJlZm9yZSBnaXZpbmcgdXAgb24gcG9kIHRlcm1pbmF0aW9uLCB6ZXJvIG1lYW5zIGluZmluaXRlIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwidmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IlZlcnNpb24gb2YgdGhlIGltYWdlIHRvIHVzZSIsInBhdHRlcm4iOiJbYS16QS1aMC05XFwuLV0rIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaW1hZ2UiLCJyZXBvc2l0b3J5IiwidmVyc2lvbiJdLCJ0eXBlIjoib2JqZWN0In0sInJkbWFTaGFyZWREZXZpY2VQbHVnaW4iOnsiZGVzY3JpcHRpb24iOiJSZG1hU2hhcmVkRGV2aWNlUGx1Z2luIG1hbmFnZXMgc3VwcG9ydCBJQiBhbmQgUm9DRSBIQ0FzIHRocm91Z2ggdGhlIEt1YmVybmV0ZXMgZGV2aWNlIHBsdWdpbiBmcmFtZXdvcmsuXG5UaGUgY29uZmlnIGZpZWxkIGlzIGEganNvbiByZXByZXNlbnRhdGlvbiBvZiB0aGUgUkRNQSBzaGFyZWQgZGV2aWNlIHBsdWdpbiBjb25maWd1cmF0aW9uLlxuU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9NZWxsYW5veC9rOHMtcmRtYS1zaGFyZWQtZGV2LXBsdWdpbiIsInByb3BlcnRpZXMiOnsiY29uZmlnIjp7ImRlc2NyaXB0aW9uIjoiQ29uZmlndXJhdGlvbiBmb3IgdGhlIGNvbXBvbmVudCBhcyBhIHN0cmluZyIsInR5cGUiOiJzdHJpbmcifSwiY29udGFpbmVyUmVzb3VyY2VzIjp7ImRlc2NyaXB0aW9uIjoiUmVzb3VyY2VSZXF1aXJlbWVudHMgZGVzY3JpYmVzIHRoZSBjb21wdXRlIHJlc291cmNlIHJlcXVpcmVtZW50cyIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiUmVzb3VyY2VSZXF1aXJlbWVudHMgZGVzY3JpYmVzIHRoZSBjb21wdXRlIHJlc291cmNlIHJlcXVpcmVtZW50cy4iLCJwcm9wZXJ0aWVzIjp7ImxpbWl0cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwiZGVzY3JpcHRpb24iOiJMaW1pdHMgZGVzY3JpYmVzIHRoZSBtYXhpbXVtIGFtb3VudCBvZiBjb21wdXRlIHJlc291cmNlcyBhbGxvd2VkLlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9jb25maWd1cmF0aW9uL21hbmFnZS1yZXNvdXJjZXMtY29udGFpbmVycy8iLCJ0eXBlIjoib2JqZWN0In0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBjb250YWluZXIgdGhlIHJlcXVpcmVtZW50cyBhcmUgc2V0IGZvciIsInR5cGUiOiJzdHJpbmcifSwicmVxdWVzdHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sImRlc2NyaXB0aW9uIjoiUmVxdWVzdHMgZGVzY3JpYmVzIHRoZSBtaW5pbXVtIGFtb3VudCBvZiBjb21wdXRlIHJlc291cmNlcyByZXF1aXJlZC5cbklmIFJlcXVlc3RzIGlzIG9taXR0ZWQgZm9yIGEgY29udGFpbmVyLCBpdCBkZWZhdWx0cyB0byBMaW1pdHMgaWYgdGhhdCBpcyBleHBsaWNpdGx5IHNwZWNpZmllZCxcbm90aGVyd2lzZSB0byBhbiBpbXBsZW1lbnRhdGlvbi1kZWZpbmVkIHZhbHVlLiBSZXF1ZXN0cyBjYW5ub3QgZXhjZWVkIExpbWl0cy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtcmVzb3VyY2VzLWNvbnRhaW5lcnMvIiwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJpbWFnZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGltYWdlIiwicGF0dGVybiI6IlthLXpBLVowLTlcXC1dKyIsInR5cGUiOiJzdHJpbmcifSwiaW1hZ2VQdWxsU2VjcmV0cyI6eyJkZWZhdWx0IjpbXSwiZGVzY3JpcHRpb24iOiJJbWFnZVB1bGxTZWNyZXRzIGlzIGFuIG9wdGlvbmFsIGxpc3Qgb2YgcmVmZXJlbmNlcyB0byBzZWNyZXRzIGluIHRoZSBzYW1lXG5uYW1lc3BhY2UgdG8gdXNlIGZvciBwdWxsaW5nIHRoZSBpbWFnZSIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sInJlcG9zaXRvcnkiOnsiZGVzY3JpcHRpb24iOiJBZGRyZXNzIG9mIHRoZSByZWdpc3RyeSB0aGF0IHN0b3JlcyB0aGUgaW1hZ2UiLCJwYXR0ZXJuIjoiW2EtekEtWjAtOVxcLlxcLVxcL10rIiwidHlwZSI6InN0cmluZyJ9LCJ1c2VDZGkiOnsiZGVzY3JpcHRpb24iOiJFbmFibGVzIHVzZSBvZiBjb250YWluZXIgZGV2aWNlIGludGVyZmFjZSAoQ0RJKVxuTk9URTogTlZJRElBIE5ldHdvcmsgT3BlcmF0b3IgZG9lcyBub3QgY29uZmlndXJlIGNvbnRhaW5lciBydW50aW1lIHRvIGVuYWJsZSBDREkuIiwidHlwZSI6ImJvb2xlYW4ifSwidmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IlZlcnNpb24gb2YgdGhlIGltYWdlIHRvIHVzZSIsInBhdHRlcm4iOiJbYS16QS1aMC05XFwuLV0rIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaW1hZ2UiLCJyZXBvc2l0b3J5IiwidmVyc2lvbiJdLCJ0eXBlIjoib2JqZWN0In0sInNlY29uZGFyeU5ldHdvcmsiOnsiZGVzY3JpcHRpb24iOiJTZWNvbmRhcnlOZXR3b3JrIFNwZWNpZmllcyBjb21wb25lbnRzIHRvIGRlcGxveSBpbiBvcmRlciB0byBmYWNpbGl0YXRlIGEgc2Vjb25kYXJ5IG5ldHdvcmsgaW4gS3ViZXJuZXRlcy5cbkl0IGNvbnNpc3RzIG9mIHRoZSBmb2xsb3dpbmcgb3B0aW9uYWxseSBkZXBsb3llZCBjb21wb25lbnRzOlxuLSBNdWx0dXMtQ05JOiBEZWxlZ2F0ZSBDTkkgcGx1Z2luIHRvIHN1cHBvcnQgc2Vjb25kYXJ5IG5ldHdvcmtzIGluIEt1YmVybmV0ZXNcbi0gQ05JIHBsdWdpbnM6IEN1cnJlbnRseSBvbmx5IGNvbnRhaW5lcm5ldHdvcmtpbmctcGx1Z2lucyBpcyBzdXBwb3J0ZWRcbi0gSVBBTSBDTkk6IEN1cnJlbnRseSBvbmx5IFdoZXJlYWJvdXQgSVBBTSBDTkkgaXMgc3VwcG9ydGVkIGFzIGEgcGFydCBvZiB0aGUgc2Vjb25kYXJ5TmV0d29yayBzZWN0aW9uLlxuLSBJUG9JQiBDTkk6IEFsbG93cyB0aGUgdXNlciB0byBjcmVhdGUgSVBvSUIgY2hpbGQgbGluayBhbmQgbW92ZSBpdCB0byB0aGUgcG9kIiwicHJvcGVydGllcyI6eyJjbmlQbHVnaW5zIjp7ImRlc2NyaXB0aW9uIjoiSW1hZ2UgaW5mb3JtYXRpb24gZm9yIENOSSBwbHVnaW5zIiwicHJvcGVydGllcyI6eyJjb250YWluZXJSZXNvdXJjZXMiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZVJlcXVpcmVtZW50cyBkZXNjcmliZXMgdGhlIGNvbXB1dGUgcmVzb3VyY2UgcmVxdWlyZW1lbnRzIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZVJlcXVpcmVtZW50cyBkZXNjcmliZXMgdGhlIGNvbXB1dGUgcmVzb3VyY2UgcmVxdWlyZW1lbnRzLiIsInByb3BlcnRpZXMiOnsibGltaXRzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJkZXNjcmlwdGlvbiI6IkxpbWl0cyBkZXNjcmliZXMgdGhlIG1heGltdW0gYW1vdW50IG9mIGNvbXB1dGUgcmVzb3VyY2VzIGFsbG93ZWQuXG5Nb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLXJlc291cmNlcy1jb250YWluZXJzLyIsInR5cGUiOiJvYmplY3QifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGNvbnRhaW5lciB0aGUgcmVxdWlyZW1lbnRzIGFyZSBzZXQgZm9yIiwidHlwZSI6InN0cmluZyJ9LCJyZXF1ZXN0cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwiZGVzY3JpcHRpb24iOiJSZXF1ZXN0cyBkZXNjcmliZXMgdGhlIG1pbmltdW0gYW1vdW50IG9mIGNvbXB1dGUgcmVzb3VyY2VzIHJlcXVpcmVkLlxuSWYgUmVxdWVzdHMgaXMgb21pdHRlZCBmb3IgYSBjb250YWluZXIsIGl0IGRlZmF1bHRzIHRvIExpbWl0cyBpZiB0aGF0IGlzIGV4cGxpY2l0bHkgc3BlY2lmaWVkLFxub3RoZXJ3aXNlIHRvIGFuIGltcGxlbWVudGF0aW9uLWRlZmluZWQgdmFsdWUuIFJlcXVlc3RzIGNhbm5vdCBleGNlZWQgTGltaXRzLlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9jb25maWd1cmF0aW9uL21hbmFnZS1yZXNvdXJjZXMtY29udGFpbmVycy8iLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sImltYWdlIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgaW1hZ2UiLCJwYXR0ZXJuIjoiW2EtekEtWjAtOVxcLV0rIiwidHlwZSI6InN0cmluZyJ9LCJpbWFnZVB1bGxTZWNyZXRzIjp7ImRlZmF1bHQiOltdLCJkZXNjcmlwdGlvbiI6IkltYWdlUHVsbFNlY3JldHMgaXMgYW4gb3B0aW9uYWwgbGlzdCBvZiByZWZlcmVuY2VzIHRvIHNlY3JldHMgaW4gdGhlIHNhbWVcbm5hbWVzcGFjZSB0byB1c2UgZm9yIHB1bGxpbmcgdGhlIGltYWdlIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwicmVwb3NpdG9yeSI6eyJkZXNjcmlwdGlvbiI6IkFkZHJlc3Mgb2YgdGhlIHJlZ2lzdHJ5IHRoYXQgc3RvcmVzIHRoZSBpbWFnZSIsInBhdHRlcm4iOiJbYS16QS1aMC05XFwuXFwtXFwvXSsiLCJ0eXBlIjoic3RyaW5nIn0sInZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJWZXJzaW9uIG9mIHRoZSBpbWFnZSB0byB1c2UiLCJwYXR0ZXJuIjoiW2EtekEtWjAtOVxcLi1dKyIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImltYWdlIiwicmVwb3NpdG9yeSIsInZlcnNpb24iXSwidHlwZSI6Im9iamVjdCJ9LCJpcGFtUGx1Z2luIjp7ImRlc2NyaXB0aW9uIjoiSW1hZ2UgaW5mb3JtYXRpb24gZm9yIElQQU0gcGx1Z2luIiwicHJvcGVydGllcyI6eyJjb250YWluZXJSZXNvdXJjZXMiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZVJlcXVpcmVtZW50cyBkZXNjcmliZXMgdGhlIGNvbXB1dGUgcmVzb3VyY2UgcmVxdWlyZW1lbnRzIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZVJlcXVpcmVtZW50cyBkZXNjcmliZXMgdGhlIGNvbXB1dGUgcmVzb3VyY2UgcmVxdWlyZW1lbnRzLiIsInByb3BlcnRpZXMiOnsibGltaXRzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJkZXNjcmlwdGlvbiI6IkxpbWl0cyBkZXNjcmliZXMgdGhlIG1heGltdW0gYW1vdW50IG9mIGNvbXB1dGUgcmVzb3VyY2VzIGFsbG93ZWQuXG5Nb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLXJlc291cmNlcy1jb250YWluZXJzLyIsInR5cGUiOiJvYmplY3QifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGNvbnRhaW5lciB0aGUgcmVxdWlyZW1lbnRzIGFyZSBzZXQgZm9yIiwidHlwZSI6InN0cmluZyJ9LCJyZXF1ZXN0cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwiZGVzY3JpcHRpb24iOiJSZXF1ZXN0cyBkZXNjcmliZXMgdGhlIG1pbmltdW0gYW1vdW50IG9mIGNvbXB1dGUgcmVzb3VyY2VzIHJlcXVpcmVkLlxuSWYgUmVxdWVzdHMgaXMgb21pdHRlZCBmb3IgYSBjb250YWluZXIsIGl0IGRlZmF1bHRzIHRvIExpbWl0cyBpZiB0aGF0IGlzIGV4cGxpY2l0bHkgc3BlY2lmaWVkLFxub3RoZXJ3aXNlIHRvIGFuIGltcGxlbWVudGF0aW9uLWRlZmluZWQgdmFsdWUuIFJlcXVlc3RzIGNhbm5vdCBleGNlZWQgTGltaXRzLlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9jb25maWd1cmF0aW9uL21hbmFnZS1yZXNvdXJjZXMtY29udGFpbmVycy8iLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sImltYWdlIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgaW1hZ2UiLCJwYXR0ZXJuIjoiW2EtekEtWjAtOVxcLV0rIiwidHlwZSI6InN0cmluZyJ9LCJpbWFnZVB1bGxTZWNyZXRzIjp7ImRlZmF1bHQiOltdLCJkZXNjcmlwdGlvbiI6IkltYWdlUHVsbFNlY3JldHMgaXMgYW4gb3B0aW9uYWwgbGlzdCBvZiByZWZlcmVuY2VzIHRvIHNlY3JldHMgaW4gdGhlIHNhbWVcbm5hbWVzcGFjZSB0byB1c2UgZm9yIHB1bGxpbmcgdGhlIGltYWdlIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwicmVwb3NpdG9yeSI6eyJkZXNjcmlwdGlvbiI6IkFkZHJlc3Mgb2YgdGhlIHJlZ2lzdHJ5IHRoYXQgc3RvcmVzIHRoZSBpbWFnZSIsInBhdHRlcm4iOiJbYS16QS1aMC05XFwuXFwtXFwvXSsiLCJ0eXBlIjoic3RyaW5nIn0sInZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJWZXJzaW9uIG9mIHRoZSBpbWFnZSB0byB1c2UiLCJwYXR0ZXJuIjoiW2EtekEtWjAtOVxcLi1dKyIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImltYWdlIiwicmVwb3NpdG9yeSIsInZlcnNpb24iXSwidHlwZSI6Im9iamVjdCJ9LCJpcG9pYiI6eyJkZXNjcmlwdGlvbiI6IkltYWdlIGluZm9ybWF0aW9uIGZvciBJUG9JQiBDTkkiLCJwcm9wZXJ0aWVzIjp7ImNvbnRhaW5lclJlc291cmNlcyI6eyJkZXNjcmlwdGlvbiI6IlJlc291cmNlUmVxdWlyZW1lbnRzIGRlc2NyaWJlcyB0aGUgY29tcHV0ZSByZXNvdXJjZSByZXF1aXJlbWVudHMiLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IlJlc291cmNlUmVxdWlyZW1lbnRzIGRlc2NyaWJlcyB0aGUgY29tcHV0ZSByZXNvdXJjZSByZXF1aXJlbWVudHMuIiwicHJvcGVydGllcyI6eyJsaW1pdHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sImRlc2NyaXB0aW9uIjoiTGltaXRzIGRlc2NyaWJlcyB0aGUgbWF4aW11bSBhbW91bnQgb2YgY29tcHV0ZSByZXNvdXJjZXMgYWxsb3dlZC5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtcmVzb3VyY2VzLWNvbnRhaW5lcnMvIiwidHlwZSI6Im9iamVjdCJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgY29udGFpbmVyIHRoZSByZXF1aXJlbWVudHMgYXJlIHNldCBmb3IiLCJ0eXBlIjoic3RyaW5nIn0sInJlcXVlc3RzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJkZXNjcmlwdGlvbiI6IlJlcXVlc3RzIGRlc2NyaWJlcyB0aGUgbWluaW11bSBhbW91bnQgb2YgY29tcHV0ZSByZXNvdXJjZXMgcmVxdWlyZWQuXG5JZiBSZXF1ZXN0cyBpcyBvbWl0dGVkIGZvciBhIGNvbnRhaW5lciwgaXQgZGVmYXVsdHMgdG8gTGltaXRzIGlmIHRoYXQgaXMgZXhwbGljaXRseSBzcGVjaWZpZWQsXG5vdGhlcndpc2UgdG8gYW4gaW1wbGVtZW50YXRpb24tZGVmaW5lZCB2YWx1ZS4gUmVxdWVzdHMgY2Fubm90IGV4Y2VlZCBMaW1pdHMuXG5Nb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLXJlc291cmNlcy1jb250YWluZXJzLyIsInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwiaW1hZ2UiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBpbWFnZSIsInBhdHRlcm4iOiJbYS16QS1aMC05XFwtXSsiLCJ0eXBlIjoic3RyaW5nIn0sImltYWdlUHVsbFNlY3JldHMiOnsiZGVmYXVsdCI6W10sImRlc2NyaXB0aW9uIjoiSW1hZ2VQdWxsU2VjcmV0cyBpcyBhbiBvcHRpb25hbCBsaXN0IG9mIHJlZmVyZW5jZXMgdG8gc2VjcmV0cyBpbiB0aGUgc2FtZVxubmFtZXNwYWNlIHRvIHVzZSBmb3IgcHVsbGluZyB0aGUgaW1hZ2UiLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJyZXBvc2l0b3J5Ijp7ImRlc2NyaXB0aW9uIjoiQWRkcmVzcyBvZiB0aGUgcmVnaXN0cnkgdGhhdCBzdG9yZXMgdGhlIGltYWdlIiwicGF0dGVybiI6IlthLXpBLVowLTlcXC5cXC1cXC9dKyIsInR5cGUiOiJzdHJpbmcifSwidmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IlZlcnNpb24gb2YgdGhlIGltYWdlIHRvIHVzZSIsInBhdHRlcm4iOiJbYS16QS1aMC05XFwuLV0rIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaW1hZ2UiLCJyZXBvc2l0b3J5IiwidmVyc2lvbiJdLCJ0eXBlIjoib2JqZWN0In0sIm11bHR1cyI6eyJkZXNjcmlwdGlvbiI6IkltYWdlIGFuZCBjb25maWd1cmF0aW9uIGluZm9ybWF0aW9uIGZvciBtdWx0dXMiLCJwcm9wZXJ0aWVzIjp7ImNvbmZpZyI6eyJkZXNjcmlwdGlvbiI6IkNvbmZpZ3VyYXRpb24gZm9yIHRoZSBjb21wb25lbnQgYXMgYSBzdHJpbmciLCJ0eXBlIjoic3RyaW5nIn0sImNvbnRhaW5lclJlc291cmNlcyI6eyJkZXNjcmlwdGlvbiI6IlJlc291cmNlUmVxdWlyZW1lbnRzIGRlc2NyaWJlcyB0aGUgY29tcHV0ZSByZXNvdXJjZSByZXF1aXJlbWVudHMiLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IlJlc291cmNlUmVxdWlyZW1lbnRzIGRlc2NyaWJlcyB0aGUgY29tcHV0ZSByZXNvdXJjZSByZXF1aXJlbWVudHMuIiwicHJvcGVydGllcyI6eyJsaW1pdHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sImRlc2NyaXB0aW9uIjoiTGltaXRzIGRlc2NyaWJlcyB0aGUgbWF4aW11bSBhbW91bnQgb2YgY29tcHV0ZSByZXNvdXJjZXMgYWxsb3dlZC5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtcmVzb3VyY2VzLWNvbnRhaW5lcnMvIiwidHlwZSI6Im9iamVjdCJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgY29udGFpbmVyIHRoZSByZXF1aXJlbWVudHMgYXJlIHNldCBmb3IiLCJ0eXBlIjoic3RyaW5nIn0sInJlcXVlc3RzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJkZXNjcmlwdGlvbiI6IlJlcXVlc3RzIGRlc2NyaWJlcyB0aGUgbWluaW11bSBhbW91bnQgb2YgY29tcHV0ZSByZXNvdXJjZXMgcmVxdWlyZWQuXG5JZiBSZXF1ZXN0cyBpcyBvbWl0dGVkIGZvciBhIGNvbnRhaW5lciwgaXQgZGVmYXVsdHMgdG8gTGltaXRzIGlmIHRoYXQgaXMgZXhwbGljaXRseSBzcGVjaWZpZWQsXG5vdGhlcndpc2UgdG8gYW4gaW1wbGVtZW50YXRpb24tZGVmaW5lZCB2YWx1ZS4gUmVxdWVzdHMgY2Fubm90IGV4Y2VlZCBMaW1pdHMuXG5Nb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLXJlc291cmNlcy1jb250YWluZXJzLyIsInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwiaW1hZ2UiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBpbWFnZSIsInBhdHRlcm4iOiJbYS16QS1aMC05XFwtXSsiLCJ0eXBlIjoic3RyaW5nIn0sImltYWdlUHVsbFNlY3JldHMiOnsiZGVmYXVsdCI6W10sImRlc2NyaXB0aW9uIjoiSW1hZ2VQdWxsU2VjcmV0cyBpcyBhbiBvcHRpb25hbCBsaXN0IG9mIHJlZmVyZW5jZXMgdG8gc2VjcmV0cyBpbiB0aGUgc2FtZVxubmFtZXNwYWNlIHRvIHVzZSBmb3IgcHVsbGluZyB0aGUgaW1hZ2UiLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJyZXBvc2l0b3J5Ijp7ImRlc2NyaXB0aW9uIjoiQWRkcmVzcyBvZiB0aGUgcmVnaXN0cnkgdGhhdCBzdG9yZXMgdGhlIGltYWdlIiwicGF0dGVybiI6IlthLXpBLVowLTlcXC5cXC1cXC9dKyIsInR5cGUiOiJzdHJpbmcifSwidmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IlZlcnNpb24gb2YgdGhlIGltYWdlIHRvIHVzZSIsInBhdHRlcm4iOiJbYS16QS1aMC05XFwuLV0rIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaW1hZ2UiLCJyZXBvc2l0b3J5IiwidmVyc2lvbiJdLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sInNyaW92RGV2aWNlUGx1Z2luIjp7ImRlc2NyaXB0aW9uIjoiU3Jpb3ZEZXZpY2VQbHVnaW4gbWFuYWdlcyBTUklPViB0aHJvdWdoIHRoZSBLdWJlcm5ldGVzIGRldmljZSBwbHVnaW4gZnJhbWV3b3JrLlxuVGhlIGNvbmZpZyBmaWVsZCBpcyBhIGpzb24gcmVwcmVzZW50YXRpb24gb2YgdGhlIFJETUEgc2hhcmVkIGRldmljZSBwbHVnaW4gY29uZmlndXJhdGlvbi5cblNlZSBodHRwczovL2dpdGh1Yi5jb20vazhzbmV0d29ya3BsdW1iaW5nd2cvc3Jpb3YtbmV0d29yay1kZXZpY2UtcGx1Z2luIiwicHJvcGVydGllcyI6eyJjb25maWciOnsiZGVzY3JpcHRpb24iOiJDb25maWd1cmF0aW9uIGZvciB0aGUgY29tcG9uZW50IGFzIGEgc3RyaW5nIiwidHlwZSI6InN0cmluZyJ9LCJjb250YWluZXJSZXNvdXJjZXMiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZVJlcXVpcmVtZW50cyBkZXNjcmliZXMgdGhlIGNvbXB1dGUgcmVzb3VyY2UgcmVxdWlyZW1lbnRzIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZVJlcXVpcmVtZW50cyBkZXNjcmliZXMgdGhlIGNvbXB1dGUgcmVzb3VyY2UgcmVxdWlyZW1lbnRzLiIsInByb3BlcnRpZXMiOnsibGltaXRzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJkZXNjcmlwdGlvbiI6IkxpbWl0cyBkZXNjcmliZXMgdGhlIG1heGltdW0gYW1vdW50IG9mIGNvbXB1dGUgcmVzb3VyY2VzIGFsbG93ZWQuXG5Nb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLXJlc291cmNlcy1jb250YWluZXJzLyIsInR5cGUiOiJvYmplY3QifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGNvbnRhaW5lciB0aGUgcmVxdWlyZW1lbnRzIGFyZSBzZXQgZm9yIiwidHlwZSI6InN0cmluZyJ9LCJyZXF1ZXN0cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwiZGVzY3JpcHRpb24iOiJSZXF1ZXN0cyBkZXNjcmliZXMgdGhlIG1pbmltdW0gYW1vdW50IG9mIGNvbXB1dGUgcmVzb3VyY2VzIHJlcXVpcmVkLlxuSWYgUmVxdWVzdHMgaXMgb21pdHRlZCBmb3IgYSBjb250YWluZXIsIGl0IGRlZmF1bHRzIHRvIExpbWl0cyBpZiB0aGF0IGlzIGV4cGxpY2l0bHkgc3BlY2lmaWVkLFxub3RoZXJ3aXNlIHRvIGFuIGltcGxlbWVudGF0aW9uLWRlZmluZWQgdmFsdWUuIFJlcXVlc3RzIGNhbm5vdCBleGNlZWQgTGltaXRzLlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9jb25maWd1cmF0aW9uL21hbmFnZS1yZXNvdXJjZXMtY29udGFpbmVycy8iLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sImltYWdlIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgaW1hZ2UiLCJwYXR0ZXJuIjoiW2EtekEtWjAtOVxcLV0rIiwidHlwZSI6InN0cmluZyJ9LCJpbWFnZVB1bGxTZWNyZXRzIjp7ImRlZmF1bHQiOltdLCJkZXNjcmlwdGlvbiI6IkltYWdlUHVsbFNlY3JldHMgaXMgYW4gb3B0aW9uYWwgbGlzdCBvZiByZWZlcmVuY2VzIHRvIHNlY3JldHMgaW4gdGhlIHNhbWVcbm5hbWVzcGFjZSB0byB1c2UgZm9yIHB1bGxpbmcgdGhlIGltYWdlIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwicmVwb3NpdG9yeSI6eyJkZXNjcmlwdGlvbiI6IkFkZHJlc3Mgb2YgdGhlIHJlZ2lzdHJ5IHRoYXQgc3RvcmVzIHRoZSBpbWFnZSIsInBhdHRlcm4iOiJbYS16QS1aMC05XFwuXFwtXFwvXSsiLCJ0eXBlIjoic3RyaW5nIn0sInVzZUNkaSI6eyJkZXNjcmlwdGlvbiI6IkVuYWJsZXMgdXNlIG9mIGNvbnRhaW5lciBkZXZpY2UgaW50ZXJmYWNlIChDREkpXG5OT1RFOiBOVklESUEgTmV0d29yayBPcGVyYXRvciBkb2VzIG5vdCBjb25maWd1cmUgY29udGFpbmVyIHJ1bnRpbWUgdG8gZW5hYmxlIENESS4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJ2ZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiVmVyc2lvbiBvZiB0aGUgaW1hZ2UgdG8gdXNlIiwicGF0dGVybiI6IlthLXpBLVowLTlcXC4tXSsiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJpbWFnZSIsInJlcG9zaXRvcnkiLCJ2ZXJzaW9uIl0sInR5cGUiOiJvYmplY3QifSwidG9sZXJhdGlvbnMiOnsiZGVzY3JpcHRpb24iOiJUb2xlcmF0aW9ucyB0byBpbmplY3QgdG8gdGhlIERhZW1vblNldHMgb2JqZWN0cyB0aGF0IGFyZSBtYW5hZ2VkIGJ5IHRoZSBvcGVyYXRvciIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiVGhlIHBvZCB0aGlzIFRvbGVyYXRpb24gaXMgYXR0YWNoZWQgdG8gdG9sZXJhdGVzIGFueSB0YWludCB0aGF0IG1hdGNoZXNcbnRoZSB0cmlwbGUgXHUwMDNja2V5LHZhbHVlLGVmZmVjdFx1MDAzZSB1c2luZyB0aGUgbWF0Y2hpbmcgb3BlcmF0b3IgXHUwMDNjb3BlcmF0b3JcdTAwM2UuIiwicHJvcGVydGllcyI6eyJlZmZlY3QiOnsiZGVzY3JpcHRpb24iOiJFZmZlY3QgaW5kaWNhdGVzIHRoZSB0YWludCBlZmZlY3QgdG8gbWF0Y2guIEVtcHR5IG1lYW5zIG1hdGNoIGFsbCB0YWludCBlZmZlY3RzLlxuV2hlbiBzcGVjaWZpZWQsIGFsbG93ZWQgdmFsdWVzIGFyZSBOb1NjaGVkdWxlLCBQcmVmZXJOb1NjaGVkdWxlIGFuZCBOb0V4ZWN1dGUuIiwidHlwZSI6InN0cmluZyJ9LCJrZXkiOnsiZGVzY3JpcHRpb24iOiJLZXkgaXMgdGhlIHRhaW50IGtleSB0aGF0IHRoZSB0b2xlcmF0aW9uIGFwcGxpZXMgdG8uIEVtcHR5IG1lYW5zIG1hdGNoIGFsbCB0YWludCBrZXlzLlxuSWYgdGhlIGtleSBpcyBlbXB0eSwgb3BlcmF0b3IgbXVzdCBiZSBFeGlzdHM7IHRoaXMgY29tYmluYXRpb24gbWVhbnMgdG8gbWF0Y2ggYWxsIHZhbHVlcyBhbmQgYWxsIGtleXMuIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Ik9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gdGhlIHZhbHVlLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBFeGlzdHMgYW5kIEVxdWFsLiBEZWZhdWx0cyB0byBFcXVhbC5cbkV4aXN0cyBpcyBlcXVpdmFsZW50IHRvIHdpbGRjYXJkIGZvciB2YWx1ZSwgc28gdGhhdCBhIHBvZCBjYW5cbnRvbGVyYXRlIGFsbCB0YWludHMgb2YgYSBwYXJ0aWN1bGFyIGNhdGVnb3J5LiIsInR5cGUiOiJzdHJpbmcifSwidG9sZXJhdGlvblNlY29uZHMiOnsiZGVzY3JpcHRpb24iOiJUb2xlcmF0aW9uU2Vjb25kcyByZXByZXNlbnRzIHRoZSBwZXJpb2Qgb2YgdGltZSB0aGUgdG9sZXJhdGlvbiAod2hpY2ggbXVzdCBiZVxub2YgZWZmZWN0IE5vRXhlY3V0ZSwgb3RoZXJ3aXNlIHRoaXMgZmllbGQgaXMgaWdub3JlZCkgdG9sZXJhdGVzIHRoZSB0YWludC4gQnkgZGVmYXVsdCxcbml0IGlzIG5vdCBzZXQsIHdoaWNoIG1lYW5zIHRvbGVyYXRlIHRoZSB0YWludCBmb3JldmVyIChkbyBub3QgZXZpY3QpLiBaZXJvIGFuZFxubmVnYXRpdmUgdmFsdWVzIHdpbGwgYmUgdHJlYXRlZCBhcyAwIChldmljdCBpbW1lZGlhdGVseSkgYnkgdGhlIHN5c3RlbS4iLCJmb3JtYXQiOiJpbnQ2NCIsInR5cGUiOiJpbnRlZ2VyIn0sInZhbHVlIjp7ImRlc2NyaXB0aW9uIjoiVmFsdWUgaXMgdGhlIHRhaW50IHZhbHVlIHRoZSB0b2xlcmF0aW9uIG1hdGNoZXMgdG8uXG5JZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzLCB0aGUgdmFsdWUgc2hvdWxkIGJlIGVtcHR5LCBvdGhlcndpc2UganVzdCBhIHJlZ3VsYXIgc3RyaW5nLiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IkRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIE5pY0NsdXN0ZXJQb2xpY3kiLCJwcm9wZXJ0aWVzIjp7ImFwcGxpZWRTdGF0ZXMiOnsiZGVzY3JpcHRpb24iOiJBcHBsaWVkU3RhdGVzIHByb3ZpZGUgYSBmaW5lciB2aWV3IG9mIHRoZSBvYnNlcnZlZCBzdGF0ZSIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQXBwbGllZFN0YXRlIGRlZmluZXMgYSBmaW5lci1ncmFpbmVkIHZpZXcgb2YgdGhlIG9ic2VydmVkIHN0YXRlIG9mIE5pY0NsdXN0ZXJQb2xpY3kiLCJwcm9wZXJ0aWVzIjp7Im1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJNZXNzYWdlIGlzIGEgaHVtYW4gcmVhZGFibGUgbWVzc2FnZSBpbmRpY2F0aW5nIGRldGFpbHMgYWJvdXQgd2h5XG50aGUgc3RhdGUgaXMgaW4gdGhpcyBjb25kaXRpb24iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBkZXBsb3llZCBjb21wb25lbnQgdGhpcyBzdGF0ZSByZWZlcnMgdG8iLCJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImRlc2NyaXB0aW9uIjoiVGhlIHN0YXRlIG9mIHRoZSBkZXBsb3llZCBjb21wb25lbnQuIChcInJlYWR5XCIsIFwibm90UmVhZHlcIiwgXCJpZ25vcmVcIiwgXCJlcnJvclwiKSIsImVudW0iOlsicmVhZHkiLCJub3RSZWFkeSIsImlnbm9yZSIsImVycm9yIl0sInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm5hbWUiLCJzdGF0ZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJJbmZvcm1hdGl2ZSBzdHJpbmcgaW4gY2FzZSB0aGUgb2JzZXJ2ZWQgc3RhdGUgaXMgZXJyb3IiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImRlc2NyaXB0aW9uIjoiUmVmbGVjdHMgdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIGNsdXN0ZXIgcG9saWN5IiwiZW51bSI6WyJpZ25vcmUiLCJub3RSZWFkeSIsInJlYWR5IiwiZXJyb3IiXSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsic3RhdGUiXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoib3BlcmF0b3JzLmNvcmVvcy5jb20vdjFhbHBoYTEiLCJraW5kIjoiQ2x1c3RlclNlcnZpY2VWZXJzaW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiYWxtLWV4YW1wbGVzIjoiW1xuICB7XG4gICAgXCJhcGlWZXJzaW9uXCI6IFwibWVsbGFub3guY29tL3YxYWxwaGExXCIsXG4gICAgXCJraW5kXCI6IFwiSG9zdERldmljZU5ldHdvcmtcIixcbiAgICBcIm1ldGFkYXRhXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcImV4YW1wbGUtaG9zdGRldmljZS1uZXR3b3JrXCJcbiAgICB9LFxuICAgIFwic3BlY1wiOiB7XG4gICAgICBcImlwYW1cIjogXCJ7XFxuICBcXFwidHlwZVxcXCI6IFxcXCJ3aGVyZWFib3V0c1xcXCIsXFxuICBcXFwicmFuZ2VcXFwiOiBcXFwiMTkyLjE2OC4zLjIyNS8yOFxcXCIsXFxuICBcXFwiZXhjbHVkZVxcXCI6IFtcXG4gICBcXFwiMTkyLjE2OC4zLjIyOS8zMFxcXCIsXFxuICAgXFxcIjE5Mi4xNjguMy4yMzYvMzJcXFwiXFxuICBdXFxufVxcblwiLFxuICAgICAgXCJuZXR3b3JrTmFtZXNwYWNlXCI6IFwiZGVmYXVsdFwiLFxuICAgICAgXCJyZXNvdXJjZU5hbWVcIjogXCJob3N0ZGV2XCJcbiAgICB9XG4gIH0sXG4gIHtcbiAgICBcImFwaVZlcnNpb25cIjogXCJtZWxsYW5veC5jb20vdjFhbHBoYTFcIixcbiAgICBcImtpbmRcIjogXCJJUG9JQk5ldHdvcmtcIixcbiAgICBcIm1ldGFkYXRhXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcImV4YW1wbGUtaXBvaWJuZXR3b3JrXCJcbiAgICB9LFxuICAgIFwic3BlY1wiOiB7XG4gICAgICBcImlwYW1cIjogXCJ7XFxuICBcXFwidHlwZVxcXCI6IFxcXCJ3aGVyZWFib3V0c1xcXCIsXFxuICBcXFwicmFuZ2VcXFwiOiBcXFwiMTkyLjE2OC42LjIyNS8yOFxcXCIsXFxuICBcXFwiZXhjbHVkZVxcXCI6IFtcXG4gICBcXFwiMTkyLjE2OC42LjIyOS8zMFxcXCIsXFxuICAgXFxcIjE5Mi4xNjguNi4yMzYvMzJcXFwiXFxuICBdXFxufVxcblwiLFxuICAgICAgXCJtYXN0ZXJcIjogXCJpYnMzZjFcIixcbiAgICAgIFwibmV0d29ya05hbWVzcGFjZVwiOiBcImRlZmF1bHRcIlxuICAgIH1cbiAgfSxcbiAge1xuICAgIFwiYXBpVmVyc2lvblwiOiBcIm1lbGxhbm94LmNvbS92MWFscGhhMVwiLFxuICAgIFwia2luZFwiOiBcIk1hY3ZsYW5OZXR3b3JrXCIsXG4gICAgXCJtZXRhZGF0YVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJleGFtcGxlLW1hY3ZsYW5uZXR3b3JrXCJcbiAgICB9LFxuICAgIFwic3BlY1wiOiB7XG4gICAgICBcImlwYW1cIjogXCJ7XFxuICBcXFwidHlwZVxcXCI6IFxcXCJ3aGVyZWFib3V0c1xcXCIsXFxuICBcXFwicmFuZ2VcXFwiOiBcXFwiMTkyLjE2OC4yLjIyNS8yNFxcXCIsXFxuICBcXFwiZXhjbHVkZVxcXCI6IFtcXG4gICBcXFwiMTkyLjE2OC4yLjIyOS8zMFxcXCIsXFxuICAgXFxcIjE5Mi4xNjguMi4yMzYvMzJcXFwiXFxuICBdXFxufVxcblwiLFxuICAgICAgXCJtYXN0ZXJcIjogXCJlbnMyZjBcIixcbiAgICAgIFwibW9kZVwiOiBcImJyaWRnZVwiLFxuICAgICAgXCJtdHVcIjogMTUwMCxcbiAgICAgIFwibmV0d29ya05hbWVzcGFjZVwiOiBcImRlZmF1bHRcIlxuICAgIH1cbiAgfSxcbiAge1xuICAgIFwiYXBpVmVyc2lvblwiOiBcIm1lbGxhbm94LmNvbS92MWFscGhhMVwiLFxuICAgIFwia2luZFwiOiBcIk5pY0NsdXN0ZXJQb2xpY3lcIixcbiAgICBcIm1ldGFkYXRhXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIm5pYy1jbHVzdGVyLXBvbGljeVwiXG4gICAgfSxcbiAgICBcInNwZWNcIjoge1xuICAgICAgXCJvZmVkRHJpdmVyXCI6IHtcbiAgICAgICAgXCJpbWFnZVwiOiBcImRvY2EtZHJpdmVyXCIsXG4gICAgICAgIFwibGl2ZW5lc3NQcm9iZVwiOiB7XG4gICAgICAgICAgXCJpbml0aWFsRGVsYXlTZWNvbmRzXCI6IDMwLFxuICAgICAgICAgIFwicGVyaW9kU2Vjb25kc1wiOiAzMFxuICAgICAgICB9LFxuICAgICAgICBcInJlYWRpbmVzc1Byb2JlXCI6IHtcbiAgICAgICAgICBcImluaXRpYWxEZWxheVNlY29uZHNcIjogMTAsXG4gICAgICAgICAgXCJwZXJpb2RTZWNvbmRzXCI6IDMwXG4gICAgICAgIH0sXG4gICAgICAgIFwicmVwb3NpdG9yeVwiOiBcIm52Y3IuaW8vbnZpZGlhL21lbGxhbm94XCIsXG4gICAgICAgIFwic3RhcnR1cFByb2JlXCI6IHtcbiAgICAgICAgICBcImluaXRpYWxEZWxheVNlY29uZHNcIjogMTAsXG4gICAgICAgICAgXCJwZXJpb2RTZWNvbmRzXCI6IDIwXG4gICAgICAgIH0sXG4gICAgICAgIFwidGVybWluYXRpb25HcmFjZVBlcmlvZFNlY29uZHNcIjogMzAwLFxuICAgICAgICBcInVwZ3JhZGVQb2xpY3lcIjoge1xuICAgICAgICAgIFwiYXV0b1VwZ3JhZGVcIjogdHJ1ZSxcbiAgICAgICAgICBcImRyYWluXCI6IHtcbiAgICAgICAgICAgIFwiZGVsZXRlRW1wdHlEaXJcIjogdHJ1ZSxcbiAgICAgICAgICAgIFwiZW5hYmxlXCI6IHRydWUsXG4gICAgICAgICAgICBcImZvcmNlXCI6IHRydWUsXG4gICAgICAgICAgICBcInBvZFNlbGVjdG9yXCI6IFwiXCIsXG4gICAgICAgICAgICBcInRpbWVvdXRTZWNvbmRzXCI6IDMwMFxuICAgICAgICAgIH0sXG4gICAgICAgICAgXCJtYXhQYXJhbGxlbFVwZ3JhZGVzXCI6IDFcbiAgICAgICAgfSxcbiAgICAgICAgXCJ2ZXJzaW9uXCI6IFwiMjQuMTAtMC43LjAuMC0wXCJcbiAgICAgIH0sXG4gICAgICBcInJkbWFTaGFyZWREZXZpY2VQbHVnaW5cIjoge1xuICAgICAgICBcImNvbmZpZ1wiOiBcIntcXG4gIFxcXCJjb25maWdMaXN0XFxcIjogW1xcbiAgICB7XFxuICAgICAgXFxcInJlc291cmNlTmFtZVxcXCI6IFxcXCJyZG1hX3NoYXJlZF9kZXZpY2VfYVxcXCIsXFxuICAgICAgXFxcInJkbWFIY2FNYXhcXFwiOiA2MyxcXG4gICAgICBcXFwic2VsZWN0b3JzXFxcIjoge1xcbiAgICAgICAgXFxcInZlbmRvcnNcXFwiOiBbXFxcIjE1YjNcXFwiXVxcbiAgICAgIH1cXG4gICAgfVxcbiAgXVxcbn1cXG5cIixcbiAgICAgICAgXCJpbWFnZVwiOiBcIms4cy1yZG1hLXNoYXJlZC1kZXYtcGx1Z2luXCIsXG4gICAgICAgIFwicmVwb3NpdG9yeVwiOiBcImdoY3IuaW8vbWVsbGFub3hcIixcbiAgICAgICAgXCJ2ZXJzaW9uXCI6IFwidjEuNS4yXCJcbiAgICAgIH1cbiAgICB9XG4gIH1cbl0iLCJjYXBhYmlsaXRpZXMiOiJCYXNpYyBJbnN0YWxsIiwiY29udGFpbmVySW1hZ2UiOiJudmNyLmlvL252aWRpYS9jbG91ZC1uYXRpdmUvbmV0d29yay1vcGVyYXRvckBzaGEyNTY6ZjI1OGU4NjY1ZDA5NGMwOTE1OTY1NDc1OWJjOWFlNDFmYmUwZjdmZmZlOTUxMzllYzAyOTY0NzU5YzNkOGE4NyIsImNyZWF0ZWRBdCI6IjIwMjQtMTEtMjZUMDk6NTg6NDZaIiwiZGVzY3JpcHRpb24iOiJEZXBsb3kgYW5kIG1hbmFnZSBOVklESUEgbmV0d29ya2luZyByZXNvdXJjZXMgaW4gS3ViZXJuZXRlcyIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vY25mIjoiZmFsc2UiLCJmZWF0dXJlcy5vcGVyYXRvcnMub3BlbnNoaWZ0LmlvL2NuaSI6InRydWUiLCJmZWF0dXJlcy5vcGVyYXRvcnMub3BlbnNoaWZ0LmlvL2NzaSI6ImZhbHNlIiwiZmVhdHVyZXMub3BlcmF0b3JzLm9wZW5zaGlmdC5pby9kaXNjb25uZWN0ZWQiOiJ0cnVlIiwiZmVhdHVyZXMub3BlcmF0b3JzLm9wZW5zaGlmdC5pby9maXBzLWNvbXBsaWFudCI6ImZhbHNlIiwiZmVhdHVyZXMub3BlcmF0b3JzLm9wZW5zaGlmdC5pby9wcm94eS1hd2FyZSI6InRydWUiLCJmZWF0dXJlcy5vcGVyYXRvcnMub3BlbnNoaWZ0LmlvL3Rscy1wcm9maWxlcyI6ImZhbHNlIiwiZmVhdHVyZXMub3BlcmF0b3JzLm9wZW5zaGlmdC5pby90b2tlbi1hdXRoLWF3cyI6ImZhbHNlIiwiZmVhdHVyZXMub3BlcmF0b3JzLm9wZW5zaGlmdC5pby90b2tlbi1hdXRoLWF6dXJlIjoiZmFsc2UiLCJmZWF0dXJlcy5vcGVyYXRvcnMub3BlbnNoaWZ0LmlvL3Rva2VuLWF1dGgtZ2NwIjoiZmFsc2UiLCJvcGVyYXRvcmZyYW1ld29yay5pby9zdWdnZXN0ZWQtbmFtZXNwYWNlIjoibnZpZGlhLW5ldHdvcmstb3BlcmF0b3IiLCJvcGVyYXRvcnMub3BlcmF0b3JmcmFtZXdvcmsuaW8vYnVpbGRlciI6Im9wZXJhdG9yLXNkay12MS4zMy4wIiwib3BlcmF0b3JzLm9wZXJhdG9yZnJhbWV3b3JrLmlvL3Byb2plY3RfbGF5b3V0IjoiZ28ua3ViZWJ1aWxkZXIuaW8vdjMiLCJwcm92aWRlciI6Ik5WSURJQSIsInJlcG9zaXRvcnkiOiJodHRwczovL2dpdGh1Yi5jb20vTWVsbGFub3gvbmV0d29yay1vcGVyYXRvci8iLCJzdXBwb3J0IjoiTlZJRElBIn0sImxhYmVscyI6eyJvcGVyYXRvcmZyYW1ld29yay5pby9hcmNoLmFtZDY0Ijoic3VwcG9ydGVkIiwib3BlcmF0b3JmcmFtZXdvcmsuaW8vYXJjaC5hcm02NCI6InN1cHBvcnRlZCJ9LCJuYW1lIjoibnZpZGlhLW5ldHdvcmstb3BlcmF0b3IudjI0LjEwLjAiLCJuYW1lc3BhY2UiOiJwbGFjZWhvbGRlciJ9LCJzcGVjIjp7ImFwaXNlcnZpY2VkZWZpbml0aW9ucyI6e30sImN1c3RvbXJlc291cmNlZGVmaW5pdGlvbnMiOnsib3duZWQiOlt7ImtpbmQiOiJIb3N0RGV2aWNlTmV0d29yayIsIm5hbWUiOiJob3N0ZGV2aWNlbmV0d29ya3MubWVsbGFub3guY29tIiwidmVyc2lvbiI6InYxYWxwaGExIn0seyJraW5kIjoiSVBvSUJOZXR3b3JrIiwibmFtZSI6Imlwb2libmV0d29ya3MubWVsbGFub3guY29tIiwidmVyc2lvbiI6InYxYWxwaGExIn0seyJraW5kIjoiTWFjdmxhbk5ldHdvcmsiLCJuYW1lIjoibWFjdmxhbm5ldHdvcmtzLm1lbGxhbm94LmNvbSIsInZlcnNpb24iOiJ2MWFscGhhMSJ9LHsia2luZCI6Ik5pY0NsdXN0ZXJQb2xpY3kiLCJuYW1lIjoibmljY2x1c3RlcnBvbGljaWVzLm1lbGxhbm94LmNvbSIsInZlcnNpb24iOiJ2MWFscGhhMSJ9XX0sImRlc2NyaXB0aW9uIjoiIyMgTlZJRElBIE5ldHdvcmsgT3BlcmF0b3JcblRoZSBOVklESUEgTmV0d29yayBPcGVyYXRvciBzaW1wbGlmaWVzIHRoZSBwcm92aXNpb25pbmcgYW5kIG1hbmFnZW1lbnQgb2YgTlZJRElBIG5ldHdvcmtpbmcgcmVzb3VyY2VzICBpbiBhIEt1YmVybmV0ZXMgY2x1c3Rlci4gVGhlIG9wZXJhdG9yIGF1dG9tYXRpY2FsbHkgaW5zdGFsbHMgdGhlIHJlcXVpcmVkIGhvc3QgbmV0d29ya2luZyBzb2Z0d2FyZSAtIGJyaW5naW5nIHRvZ2V0aGVyIGFsbCB0aGUgbmVlZGVkIGNvbXBvbmVudHMgdG8gcHJvdmlkZSBoaWdoLXNwZWVkIG5ldHdvcmsgY29ubmVjdGl2aXR5LiBUaGVzZSBjb21wb25lbnRzIGluY2x1ZGUgdGhlIE5WSURJQSBuZXR3b3JraW5nIGRyaXZlciwgS3ViZXJuZXRlcyBkZXZpY2UgcGx1Z2luLCBDTkkgcGx1Z2lucywgSVAgYWRkcmVzcyBtYW5hZ2VtZW50IChJUEFNKSBwbHVnaW4gYW5kIG90aGVycy5cblRoZSBOVklESUEgTmV0d29yayBPcGVyYXRvciB3b3JrcyBpbiBjb25qdW5jdGlvbiB3aXRoIHRoZSBOVklESUEgR1BVIE9wZXJhdG9yIHRvIGRlbGl2ZXIgaGlnaC10aHJvdWdocHV0LCBsb3ctbGF0ZW5jeSBuZXR3b3JraW5nIGZvciBzY2FsZS1vdXQsIEdQVSBjb21wdXRpbmcgY2x1c3RlcnMuXG5cblRoZSBOZXR3b3JrIE9wZXJhdG9yIHVzZXMgTm9kZSBGZWF0dXJlIERpc2NvdmVyeSAoTkZEKSBsYWJlbHMgaW4gb3JkZXIgdG8gcHJvcGVybHkgc2NoZWR1bGUgcmVzb3VyY2VzLlxuTm9kZXMgY2FuIGJlIGxhYmVsbGVkIG1hbnVhbGx5IG9yIHVzaW5nIHRoZSBORkQgT3BlcmF0b3IuIEFuIGV4YW1wbGUgb2YgYE5vZGVGZWF0dXJlRGlzY292ZXJ5YFxuY29uZmlndXJhdGlvbiBpcyBhdmFpbGFibGUgaW4gdGhlIGRvY3VtZW50YXRpb24uXG5UaGUgZm9sbG93aW5nIE5GRCBsYWJlbHMgYXJlIHVzZWQ6XG5gZmVhdHVyZS5ub2RlLmt1YmVybmV0ZXMuaW8vcGNpLTE1YjMucHJlc2VudGAgZm9yIG5vZGVzIGNvbnRhaW5pbmcgTlZJRElBIE5ldHdvcmtpbmcgaGFyZHdhcmUuXG5gZmVhdHVyZS5ub2RlLmt1YmVybmV0ZXMuaW8vcGNpLTEwZGUucHJlc2VudGAgZm9yIG5vZGVzIGNvbnRhaW5pbmcgTlZJRElBIEdQVSBoYXJkd2FyZS5cblxuVGhlIE5ldHdvcmsgT3BlcmF0b3IgaXMgb3Blbi1zb3VyY2UuIEZvciBtb3JlIGluZm9ybWF0aW9uIG9uIGNvbnRyaWJ1dGlvbnMgYW5kIHJlbGVhc2UgYXJ0aWZhY3RzLCBzZWUgdGhlIFtHaXRIdWIgcmVwb10oaHR0cHM6Ly9naXRodWIuY29tL01lbGxhbm94L25ldHdvcmstb3BlcmF0b3IvKVxuIiwiZGlzcGxheU5hbWUiOiJOVklESUEgTmV0d29yayBPcGVyYXRvciIsImljb24iOlt7ImJhc2U2NGRhdGEiOiJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBUEFBQUFDa0NBWUFBQUNwU3FOekFBQUFBWE5TUjBJQXJzNGM2UUFBQUFSblFVMUJBQUN4and2OFlRVUFBQUFKY0VoWmN3QUFGaVVBQUJZbEFVbFNKUEFBQUIzMVNVUkJWSGhlN1oxdGtCWEZ1Y2ZIVzJwaHl1aXVWN2tsbENKZ05GZTVrUVRVM0ZKVUZQTUpGVlBLcC9nQ1Njd1hGVEJKNVZhWjhHTGloNVNXdkpndmlSWUxtRTh4SlJpOVg4UUFDbFpTVVVFVVU4bE4zSVdrbEVwdVhRNVJJK1NsM0R1LzJYbVczdG1lN3A0NWM4NmVPZWY1YlUzdG1YUG1wYnVuLy8wOC9YVFB6RW5ETVpHaUtMWGtYOUwvaXFMVUVCV3dvdFFZRmJDaTFCanRBMDh3cjcwN0VEMzk5dEowVGNreTQxL25SMStic3lOZFU3S29CVmFVR3FNQ1ZwUWFvd0pXbEJxakFsYVVHcU1DVnBRYW93SldsQnFqQWxhVUdxTUNWcFFhb3dKV2xCcWpNN0hhVE9QWXdlaTk5OStJR244N0ZCMzVhQ2c2N2VTKzZOd3paaWYvc3h6NzU5SG82UEZEMGJHL042TERIKzZQanNUN0h2N2dqZlRYM2tCbllybFJBYmVRWS84NG1nanV3SiszSlFMa005K1pYRDVsU1hUYnJJM3BXaGp2eGNjWmJMd1VEUjdabFh5bVVlaFdWTUJ1Vk1BVmcwQmZQN3c1ZWh2UldnU2JwWXlBczd3VEMvbjFkemRGZzBkZjZqb3hxNERkcUlBcndCUXRWckVJVlFqWVJNUk1lcm9CRmJBYkZYQVRJTlk5ZjFnZnU3Tzd2SlkyajZvRkxHQ0pYMHVGWEdlcnJBSjJvd0l1QVpZMkVXNUJhMnRqN3BTN293VXpWNlZySitnLzdZTDBVL01nNUJjSDE5UlN5Q3BnTnlyZ0FqUWpCQVE1by8rNmFNb1pzNk8rU2RPaUtaOGNpVHkvL2VldHVmY0RuM1pLWDNSdXZOMjVwMThXVFQzanMvSG55NUw5eWtCRWU4L0JkZEVyZjF4ZjJsdVlDRlRBYmxUQUFaUVJMdUs3NUp4RnNXaXZqUzZkdkNoWnQxSDBodjZrSVRqcnVtanV1WGNsLzR0Q0hyYi9mblZ0K3NncVlEY3FZQWU0eU50ajRSWnhsYkd5dU1TSmhjMFJyVWt6VCtRNDY3VHB5Ym5tVExrci9TYWNBN0hsZi82M0QzUzhXNjBDZHFNQ3R0QTROaFQ5SkJaVnFIQVI2bFhuTFl1dW5yWThTTFFtVlR4U0I2czhkK3JkMFp6WUtoZnBPK05XWTQxZmlmdnpuWW9LMkkxT3BjeUFxN3orbDU4TEVpOWlYVEJqVmZTdHE0ZWlHeTljWFZpOFZTRnU4WTlldXo1Ni9iMXcxNWcrK00yZlhoZmRNZnVaU29ObVN2dFFDNXd5ZUdSblluVkRYTXBtTEc2V1ZqelVEdGY2bnJrN0NvbnlTT3gxYkhuaml4MDNWVk10c0p1ZUZ6QVJXYXp1bmtQcjBtL2N6T2lmSHkyZXRiRXlpMFdBakNFcHJLRWM4M2pzMnBLdXh2R0RwZnVvSjhWL0N5NWNsWGdJUmNDU1V4NmRnZ3JZVFU4TCtOMFA5a1ZQeFZZbnlPcWUyaDh0bUw0eXNicGxrVG5NM015QXBVT2dzODY1MVRtUkF5R3pIM09wMy83VHRtVFNTQkhLV09PWEQ2Nk4vdnQvSGtqWEpoWVZzSnVlRmZEdVA2eUxudi9OaW5UTlRSa1JDUFNsdVpsaDcrSE4xdkhYb2pPeHBMOWJaTjR6NlY5NDBXUFJwZisyS1AzR0Q0M2JFM0dmZXFMSGpGWEFibnBPd0IvOW94RTl0ZitMd1JGbVprb3R2SGh0b2I0dWxaNEpFN2psUGdHVW5VcUplSEcvUXlkbWxIR3A2UmNUR0N2cnhsZUJDdGhOVDBXaHNTb2JBaVBNd0JqcjdiTUdnc1dMa09nL2ZuL1A5TVJLdHRKNjRRMFErVjcyK1gzSjhKR1A0Zmp2eGQrdktkUy9iY2J6VU5wRHp3Z1lsM25ETHo0WFpFMndWamZGVnZmR21hdlRiOXkwVTdoWkVOZmkvOWdVM1g3cFJtOURnNGhKMy9NRityY3E0czZtQndROEhEMzMyeFhCL1YzRWUxc3NodEJnMVlFL2JZM1cvL0t6aFlTTDBCQUVzN2FxWXU3VUpkSDluOThiSkxUZEI5Y21RMmFocUlnN2w2N3VBeGZ0NzRwNG1kWGtnMlAvOU5kTGs4aHdDSWlWSU5JbDU5d1NDK0tFRUdRY21LbVgwL3V2aldaTlhsUnFqck1RT3A1YnRrOU1GNlNkSG9iMmdkMTByWURMQkdEbzg0YTR6VVdHbjJSdTlNd2NVZG9tY21EeGFFank5dkh4MFQ4YjBZOWV2YjRsSW43bnlNNmtYTnVGQ3RoTlY3clFyUlJ2YUYrYWNXUDYwVis3ZkdkaElaSitobkRLVHFqNHhNbjkwVDJYKzExZUNXd1ZtWDQ1ODZ6NWhTZUhLSzJqS3dVOEtlNWpGaEh2bEU5K05raTgyOTlaSGRTWHhvSXV1M0p2VTVNK3lrU05UZjRXdTdtMkoxMW00VHcwR09FTVI0Zi91ai85ckV3MFhTbGdLbTZSQU5ITXVPL3BBL0crK0k1ZlREUUdvY0VrSHlMaTBHbWVBb0w4WVd6Qm1jSGxJN1R4RXJiSFpSRGE3MWRhVDFjS09PbmJ6VnlacnZsNXpYdHorM0RVK01odjBSRUQwZHBtYjNBd1FjUkUwVVBFQ055VVFhQXB4QVBCVTdoejlqUHBtcC9RUmt4cEgxMDdqRVFrTjlRS0g0L2RUWjdtbU05SjBaeXAvc2tTazA3dHExUzhKazhmOEEvNzBEL0g4b1pFaWVtakZ4a2FVdkYySmwwcllLenduQ2wzcG10dUVsZDE2S0YwelE0TmdrK2NoOS8zUHdlNkxPOTlzQzhSVVI2aC9YT2diTzZabytMdEJycFd3REJuNnQzQmxYVG8vM1k1clRDVm5udUFYUno3UnlQYUUxdkJWdkhLSHphTWM0MFpqOTZ5LzlaZ2daRVBocWhDSDQ2bjR1MXN1bHJBVkZhbUdJWVFZb1d2dW1DWjF3b2pzbFpCQS9HVFg1OXdwWG4wRDhOTlJZSktOOHhjR1RSUkJWUzhuVTlYQ3hpSzlJVjlWcGp4Vlo4VnBqOWROR3BjQkVramswbENJODFDNkZnM3FIanJRZGNMR0NzY0dwR3V3Z29ueHhoOHFHVjlZWTcvOU50TEVzc2JPdFpOR1JTNU9hT01lQ21US29iT2xHSjB2WUNCbVZBOG16bUVFQ3Q4L1hSM2c0Q3IrM05QUTlBTUNEZTBnWkErYjhpa0V2clROQTVGeFR0eXM4UE82R3Z4RW5Kcm8xSWRQU0ZncXZIQ2l4OExHdUlKc2NMekxsanVkY3Q1QzRKN2FLcjFNRlIwLzMvdURlcnpTbithaHdRVVFlNVVJaWlHQlI2NXRYRkFyWEdiNkJFQmoxUTBuK1VVc01LdWZtd1NISnZsdnYrV2h1Q25nVSs1YkFVeW5UTWsybHltUHcyekp0OXFuWFZHZy9GZjg0YWloUmV0VlNHM21KNFJNSVJZVHBCK3JFdDhJUTBDVXhxNXRhK2R0OThCandFS25jN0pFekdMOUtjRkFtSThUOXJWaUZIZTZsYTNscDRTY0lqbEZMSkROamF1aVN1bzc3VW1UTUI0cmsxUGVKUTdvRUllQTBTandoVE41MzZ6dkZBRHd6bHdrVU1EWXVKV1k1RlZ5TlhUVXdLR0tsM3BwRy85NmJYSkd3UmR2UDd1UUxUK0Y2MjlFWjduVllmZUFVVi85MGV2elM4ODNKWDBkK2ZzQ0I1SE5oRWg2MXNncXFYbkJBeFl6cXZPZDQvbkFxNDBMd0J6OVExRDc3M0ZFb2ZlWkZDRVJGUkVnQVBTQUxqTXZEcW1hSCtYQmdLM1BIUUdWeDcwbTdIR2VrOXhOZlNrZ0xHY1BJa2lwTUlqWXQvVE54SVJ6OTNodGNUMGliKy9lMFp5ajIrelFrYTRpMmR0aXI0MWJ6RG9nUUZZM1IvR1ZyZW95eXhqeURRUUlWMlBVSGlpSm1sWG1xTm5IK3dPQ0NyMEdVOGh0d3J5S0p1ZkhsaWF2TUhmQjQwSHM4VDZUcHNXL2Z6M1llT3VuSnQzRHRQdkRuM0tCM25iODhkMXlYM0ZSYUdSd09WdDF1cmFvRUVod09mekJQU1JPbTU2V3NCUTVCbFBjNll1aVJZSHpLM21DWldoVDlJZ1luelZ0R1VqcjF1SmwvYytQUEcwQ3dRNzZlUys1SzMrdktXLzZLTjV5cnlZWEpoMy92TG9ocG1yS3JXNkF2Y3NiOWtmRnAxWEFidnBlUUZEa1RjRWhvbzQ5TUYzWmQvTTRJS25jQlo5TWJtQTFXM21nWG91RUN3TlNwSGdtUXJZVFkvMmdjZkNNNVZEZ3lwRWxFT2VxVHcxZHJrbFdOT09xQ3Zpd09MU3oyVXBJMTZzTG9HcVZvaFhucC9keWhzOWVoRzF3QVpGWEYraXFWaXFFQmNUSzh5MFNwczcyNndGUnFpODZBeGhoTGlrTnVqZk05VzBGY0xGRXlHU1g2WkJBYlhBYmxUQUdZcUllR1FJSi96SkZvQ1FYNDh0cGJ4ZHNJeUFSYlFjcTZ3d2dFa1p6YjR5TlE5dWpHQ2l5TjRDajZ5MW9RSjJvd0syVUZURVRDdjB6Y2l5Z1lCNTlTajNFUE8yQmx0RGdGVnQvTzFRZE9Tam9lUWR3VHlzdmF5bEZmQWF1SzhaNFZZZHBDSnRvVzltREVFRjdFWUZuTU9CUDI5TmJrWUlyWVR6TGxnUjNSQmJzNktDS0JKQWE1WldDcGZHYUhjczJyejNJSmRGQmV4R0JleUFjZUlpYjNnb1k0M2JJZUJXQ2hjWHZtekVPd1FWc0JzVnNBY21IUHprd05Kb3NCRmVRUkh5N1pkdURIcEpXYXNFakZEUFBYMTIwcUJVSFp6Q3dyNGVXMW9tckxSS3VJSUsySTBLT0pBaS9XSWh4Q0pYS1dBUkxXOUI1TTZmVmxoYit1eFZ1OGt1Vk1CdVZNQUZLT3BTQ3dqcGtzbUxva3ZQdm1YYzg2V2JFYkFJZHNycGwwV1h4S0pseW1QVm9rV29CS1dhalhpWFJRWHNSZ1ZjZ3QwSDF5V1Z1cWlRQllUR3U0RFArc1QwNk5qZkc5SGIvL3RzZFBTNC9UbFhFcG51bnpRU3BlNmZOQzM1VDBOZ3ZtZTRTdHJwSXZ0UUFidFJBWmNFOGVKV1U5R2JvUlZUS2N0QWZtaElPa0cwSmlwZ055cmdKbWxXeUJNbFlLd3NZOHIwYVg4ZEM3ZXNOOUZxVk1CdVZNQVZnUUR5cGt1NmFLZUFzYXpjN1lTVnJXSkNTRHRRQWJ0UkFiZUE3SFJKRjYwU01PSkVzTzgwZGxVMmcyc2lVQUc3VVFHM0dHNVlIMnk4bEx5LzZQQ0g0MFZVaFlCcEpCRHJ1L0c1amg0L2xKeXpVMTNpb3FpQTNhaUEyd3ppT2hLTEM2RTEvam9VVFRxbEw1bG9NUnB0VHY4ajlPUC9IQkg3c2ZnL0x4aG5uWDBiOGI1ODdpYWg1cUVDZHFNQ25tRGFPUmU2anFpQTNlZ04vWXBTWTFUQWlsSmpWTUNLVW1OVXdJcFNZMVRBaWxKalZNQ0tVbU5Vd0lwU1kzUWNlSUxoWm9KWERxMVAxNVFzVTA2ZkhkMzA3MnZUTlNXTENsaFJhb3k2MElwU1kxVEFpbEpqVk1DS1VtTlV3SXBTWTFUQWlsSmpWTUNLVW1OVXdJcFNZMVRBaWxKalZNQ0tVbU5Vd0lwU1kxVEFpbEpqYWpjWCt1REI1cDdDZU1FRnJYbWZrS0pNQ0FpNExuejg4Y2MwTnBVc3MyZlBIcjd1dXV1R1Y2MWFOYnh6NTg3MERIWTRMOXZhamlOTGYzOS91blU0TzNic3NCNUxscE5PT21tNDBXaWtXdzhQYjl5NDBicWRMUFBuejArM1BJRnZIOWZTMTljM1drN0xsaTBiM3JwMTY1ajArS0RjNGdiVGVtd1c4dWNyK3p5SzVNdFdMdDFDendvNHUweWZQbjE0MDZaTjZabkdnOUJ0KzhsQ1pSd2FHa3EzRHNOM3pFV0xGcVZianRCdUFlY3RkOTk5ZDFCZVd5VmczM0d6U3pNTlJhZWpmZUNVdUVKR2NjV01yci8rZXF1YmZ1MjExNmFmOHRtMmJWdjZ5VTljOXRHenp6NmJybzBucm5SUkxPQjByYk9JRzdwb3hvd1owWm8xeFY1NFhoVzdkdTBxMUpYeWxYV2RVUUZuaUZ2cVJNUkhqNDU5QlVyc1Jqcjd6MVNTbi8zc1orbWFIeXJnRzIrOGthN1pDV2swSmdyeWk0RGJMV0xPdTNsejhUZEJzay8ybW5ZREttQUxXT09sUzhlL0xlR1dXMjVKUDlsQmtLR1ZCQ3Zpd3RkZ2RBSVRJV0xLdDR3MVpiK1hYbm9wWGVzZVZNQTU0QTZiSXNPbDlRbVlTdUt6cXVDejFwenJycnZ1U3RjNkd4R3hyMEdxQ3E1TFhpTkpnOWZYMTVldWpZVjBybC9mZlk4dTZqb0JjeEh6bGlKd3dSOTY2S0YwYlFTc1lsNEZBZllKdFE2K0N0OHU5NWs4MFcwd2w2MWJ0MGFyVnExS2ZndkJWbGF0Z1BOczJiSWxYUnNQNlYyMmJGbTZOaDdLUE5SRHFnMXhvZFFHWHhTYWFLTXZPcnB2Mzc3aGdZR0JvQ2dteHpPSFRUZy93eW0yYldVaG11M0ROM3lVTit6UmlpajBraVZMMGkzdFVKNnhOMkRkMTF4c1pWOTFGSHB3Y05CNkhCYU94YlgxbFMyUi8yNmk1MXpvMmJObko5SG0rRUlIV1dVenNoeFhFcThiVFhES0ZTR055OXdiZmI3NTVwdlR0WW1ITWlMcWpFVjJRYjdZcmxWd2ZGZGZtK3ZLZ2hWMmVRNGJObXhJUDNVSFBkc0hqaTFsRkZ1bmRNME9sV2IvL3YzcDJnaFVFcGNiRGI3aEpKK2IzWW5EUnlFdTljc3Z2NXgrYWcxNVFTZ2FQWEdkK2V6cWZ1QkN0NnUvM2c1Nk9vamxhNjNoTDMvNVMvcHBCTVRyc3NLSTNoV2c4bGxvR29paS9mVjJnREJXcmx5WnJ0a0pDZUNWQmV2dUtqZFR0SzUrTU5lbkhmMzFkdEh6VWVqTExyc3MvV1FuVzJsQzNHaFhSZTZVNEZVWmFPeGMzZ2ZXelNXeXNpQTZWL0NLNjJFMmVxVFIxVEIzVXpDcnB3V01HSDBDdGhGU2tXMUM5VlZFMHRQcHcwYytqNlVWQXVhWWVRMGZaWmJ0Y3ZDZEs0N0FkVmkzYmwyNlZtOTYzZ0tYY1ZjUkw2NXVIbFFRV3ovWDEvOGlMYTdqZGdKbm5ubG0rc2xPdHN0UkJhNlpWNVNacmRFalVPbHFaTHNsbUtVQ0xpRmdXdmc3Nzd3elhiTmpDN2o0M0dlZmExNEhHbzFHK3FrYWFBeGRBczd6Q0h4dWRMY0VzM3Bld0dYeFJZcXoweXJ6ckxKQW85QU5BcTRhUkpibmxyc2FVbjY3Ly83NzA3WHhjRDI2d1FxcmdFdmlhK0VoTzV6a21vdUxKK0E3WGlkdzZOQ2g5Sk9kTWg1TkhqN3I2eXN6Zm5PNTBUUU9kUTltcVlCTEVoSW9NY2RGc2NpdUFFOGR4QXV0Q0ZMbHdibnlCT3l6c0lJcktJaDRXem41cEIyb2dKdUFRSWtMMHdLNytsc3VWN0NUY0xtelFwVkJPRjhmbFhPUm5yd0ZiOEUxeWtBalcrUVcwRTVFQmR3RW9ZRVNYMFdwZy92c2MyZUI4bkM1ckVYZ2ZLNEpGL3crZi83OFpFYWRhN0hkRm1yQzlmRTFGSjJNQ3JnSnNKeXVpUmRVTXJGYXJrcFNCL2VaZWNnK0FWYzVDY1hYNWFnS3JsSG9IV1NkaUFxNFNYd1RMd2hjdWNSTEk5REowV2U4aUJVclZuaHYyaWNmVmMzaFJsVHR2SGVYaHFtdXdTd1ZjSlBnL3JvaXI0alg1VDdqY2s2a2dLbTRacjlSdkFXQ084dVhMMC9jME5CWlMxVmE0SFpheFRvSHMxVEFUWUxsOFZsaDE5MUpFejMzbVp2M3MvMUcrcFpMbGl4SnJHQ29aU0tnVjlVUUVtSnluVmNhelNLTHEyK094YmMxc3FTQk1saTllblZiM1BreXFJQXJvS3dJcTNRN0p4SkU3N3RUS1JURTVKc3Z2bS9mdnVTNVpVV1daNTU1SmoyQ0hid09zNnZEUHJmZWVtdnlIK2hHdUxwQ0U0VUt1QUo4RXdaYzFIMzJWWDkvZnlJT3JGd1ZpQXVmQitWVnBxeTVScTQwWm9OWnhDN3dLaGlLWXFHaDdjUm5hcW1BSzZMTVhVUmxLMk9uZ09YbHlTWlZqZjBpSWxld3JGbVB4ZGRZbXNFcy9wTWU0QVlOSnUyMDRrYU5abEVCVndBVnE2Z2xyYlA3VEtQREV6cjI3dDFiK2QxVHJ1bW1uTGRNUXdraDF3alJ5dms1RHhhWmEwVDM0SUVISGloOTdsYWlBcTZJTW03MFJBZXdRc0gxUktpNGxBTURBMG0va01CTzFkNkQ3NmtielRaNHZtdUV4UlUzbWE3QjJyVnJrLzQyM3lIZVRoUnc3ZDVPcUNqS0NkUUNLMHFOVVFFclNvMVJBU3RLalZFQkswcU5VUUVyU28xUkFTdEtqVkVCSzBxTlVRRXJTbzFSQVN0S2pWRUJLMHFOVVFFclNvMVJBU3RLalZFQkswcU5VUUVyU28xUkFTdEtqVkVCSzBxTlVRRXJTbzFSQVN0S2pSbnpTQjBlNmlWUDNwczJiVnJ5UHc5NVQreVpaNTQ1N2psRHZuZkltbkFlODd3aFpQZkpTNnVrdy9jNzVHM0RlZGlPLzd6cHp2Y2NLRmZlYldWbEVscitJZW4yd1RGNC9oVHBjYjNCRDF6WHAwaWVmSmpIOHUxWE5OOXl2THowdXE2YkRWZWRxcUpjSVNpUENGall1WFBuOENtbm5KSXMzL2pHTjlKdngvUHh4eCtQYnJkbXpacjAyeEhNMzN6THB6NzFxV1Q3cFV1WFduKzNMYWVlZXVyd3JsMjdodGV0V3pkbVBZdWtJKy8zSTBlT2pCN3p0dHR1Uzc4OXdkRFFVSkt1czg4K2UzUTdGdEs4WmN1V2RLdXhjTTRMTDd4d3pQYlpoZCsvKzkzdnBudU1aV0JnSU5tR05NZVZJUDEyTEh2MzdoMDlGbW1KSzBINlN4Z2JObXdZbHlmV3VkNk5SaVBkYWl4Y1kzUDc3RUtldnZ6bEx5ZGxsc1czcjdtWWRjbXNpM25MalRmZWFEMW5Gck9PVFo0OGVWdytpOVJaRnE1UGxzMmJOdy9QblR0MzNMWjU1UUp5dlYzTDdiZmY3c3hqcmdzZFgyam5JejRuR3JOMTI3OS9mL3JwQkdiYWJiL0xkenh1ZE42OGVjbG5JUzZ3S0s0YzBWTlBQVFd1aGFSMS9jcFh2aEo5NzN2ZlM3OHBCaTAwcjgyODRvb3IwbS9DSVYyTEZ5OU9Qdk9reU8zYnR5Y1dKWVQ0V2lmcC92clh2ejR1VDZ6ejVFWFM1SG9xWkI3a2liY3BmT0VMWHlpMWYxbDRBUHpGRjErY1hDY2Z6ejMzWFBJZnEyZXJEODNBOWFSc2JjZHR0bHg0TFE5NXpIdFgxTW5wLzNGd3diLzV6VzlHdi9yVnI5SnZpc1BEc0crNjZhWjBiVHk0R1FpSU42MmJMN2ptM0dRYWVQVHF0Ny85N2VTendDTk96empqakdSL0xzanUzYnZIdksyZC9lVmROM3grL3Zubng3M04zWHg3dnZsNDE3aDFUczR0THRVMTExeVRQRStZODdFUGxZVmp4bFkwY1hIdXVPT09aTHNzcFBHUlJ4NUoxMDdBQmVVWXZENlRZM3puTzk5SmYzSERPUkV2NmFMTW5uNzY2V0Eza24yNWx2TEtFa1JQZVgvbU01K0ozbi8vL2FTeEZ0ZnZubnZ1aVY1NDRZVmt1eXljOTlGSEgwM0tRbUIvS2hkbDQ5cmZ0bThXMnpPbVpUL1Nha0o2S1QvK3g5NURVczlzcmpHUWIrb0pVQllQUC96d21Hdk9PV2dNVGJnK2xCbmNkOTk5U1YyMmdYaWxNWGVWSzljdVQwc2hlYVJjU2ZPNFBNWVpHaVhydHVBcTRISmxNVjBPbHd1ZC9TMFU4eGh4eTVaK094YTJXYkJnUWJJTmJwRUp2NW51VE5adGN1MjdhZE9tMGYxd2Y3S1laV1E3cjdqUXVIYzJ6SFBqQXB1NFhPalljbzZlTjY0MDZiZGhEQTRPanU3TE9iUEhwanNoNVdYcmNvZ2JuT2ZhazZjVksxWll0L0h0bTRlVXN5MDlBcTZsYkJON0VPbTNZekhMMjh4alhuZEJNTTlQbmJCaFh1OXp6amxuT0JaOStzc0k1cms1VHR5UXBMK01ZRjd2dkR5YTZZZ2J5dlRiRXppajBQSHZTZXNTRjN6NlRlZEFxN1Z3NGNMa002MHJyWlJBZXNXZEVTdWRkVzlrSFFzcmtOOGYvL2pIeVdlT2I3T090SUppZGJQbkRZSGppc3NldXUvamp6K2V0T2FBSnhGcXRRWEpxK1FwYTdsNWlMbDRDNVNCdUp1aGNGeXpISEZ0MndINVlDSE5ZbUd6VUJmb1RwRkdQRG14WUZqbFp1RzRjZzN4MHJKQks4NXBscXZwOVlVaW5nTDc0eFZreVJXd1BJVWVseEx6M1ltWUJXWldHaWtvTGk2dVZiWlNVcUc1NEthWUJLa0lITnZtb21iM0tkcTRrUmE1NkhrdW53bHZCcURmQ3JpWXVGcEZNUnVLODg4L1AvMDBGdE9sZEVWRzh3akpTOVdFTktCU0YwZ2ZidkNYdnZTbDVCclFyV29XcVN2VWlieXVvbG1QUWh0c0U2bGZuTU5XeGxZQnMvSFZWMThkM1h2dnZjazZMUTFXb05PUVBnRVg1SzIzM2txKzQ3TmNOSDZYZm9YNS9sZlRHcHNWRitTaXRLcEMwb3BLV2t5clpjTU1XbUVsNmZlV3dSU2s2dzE5WmZOTW1adUJwS3JlVk9oRDZpVDFOWHNkZ1hUOTRBYy9TRDRqWHJhVHZxeHBQY3NpZFFWQ2c0bEZJUDNTRHdmYnU1MmNMclM0V3h3SVY5cE1jQWhjVktLNXRvWE9lUldJRlRiZEV6N0x4WkpNYzdGSXZ5bHdLbXpXN1FraHBJSWkxSzkrOWF0akZ2Sjk1WlZYSm9JaWZTNXJTam9sYUFXazNjeGpLd2lwaEZnRTBtUXVWRElSTVBVbFQweEVhclAxZ0lXZ1liYUxJMGpkeTVibDVaZGZQaG84NGhyYXppbGRLY3BhTENUYlNhTmZoUnNkZ3E5aHpNdmo1TW1UUnh0N2dtTTJqNUNkUjdGMTNNMmdqUVNVNkp6TGQ2NGdsbXZKQzA2QmVRelhkbUNPQnhPWWlGM09NZXNTYUpBOHNTN0JqT3o0cjJ6TGIzSEZTcjhkVDE2QXhkemZ0UkR3WU53d2l6a3VTTnJrc3h5VEFKUXYrR0lqSkpCa3BqMWI1cksvYnlGZjJlT0g3SnN0UnpEcm5Xc2hTR1RMRS9reHgzNEZ2cGVBV3pZSWFXTFRRcGFRSUJUbmswQld0azZGakFPenNIL2NnS2Q3amNWcGdZRVdTNndZTFpZNXZ1cURmUWtjMkJZSlFEV0xhVUZwYlNWOWZDOHRuL1NEOSt6WmsxZ3lhWld6L2Q4cXdacmhJc3NpYWNGNi8rNTN2eHN6YkdhRG9SbXgwbUtwc1NpZDJKVUJyalZETVZZcmtjSndqSzB1UFBqZ2cwNnZobTZRbEtOY2J5a2Ixem5GWXpHSGdOaFAxcWtMUmVweksvSGxNZGM3R3RIeENIbXREdUY2V2xkK3d3cVlzNWhjRmpqN1d5am1NWHdXbUcxSkcybG1LRUZhTzRaZEJHbnBhSEhOUE5yQy9pRVdlT3ZXcmFQSHlMUEEyZjFOSzVqWFdtZGJaSE80U1BKRkhyZ2VSVERQN2JMQWNvM3pMREQ3TTZ4STNaQmwyN1p0enVHaGtIUGJ5UE55cUh1U3psQXZpWHJCdVdVeDY3TlpUMHlxdE1CNWRTSnZmMU5mcmp5QzF3SURyU090Sk1RRmtBeUVkeEswV0hGZWtoYVhGcFdXeTR3S2lnZEJSRjNTN3V2L2tzODhwRjlhQkt3UGtNNlE4aVArWUE0WFNmbVhHUlV3VzIrc1RoNnUzd1NzbDd3cmw0V3lkVm5kcWlHWVp3WlhiUmFVTXBZK09aK1o2QkVibnRIbG9vc3VHczByMjRYazI0Y3JjbDgwcWsvZGxLSEt2RHdLUVFJR3hoOGxVQ0Jqa3AwQVloVjMzSXcwUzFyQkZLc1VCcTZLRGRrT2tkb3VMQlhpelRmZlROZjhBUXFoeUVVaFQxa1htL3hJbm56N1p4R0JrWGF6akV6TTQ1MTMzbm5wcDg2RXhwRHlKRDhFZTJ5RWptVnpqZk1DYUQ1azVoanB5QXN3WWdpa0htVm5XdVhCOVpmR20yTzdHdnhnQVhQUUo1NTRJcmpDdHBPc0pUWEZLNWo5WGZKaTYvK2EzMU53UklHeklxYkZOaU91TGl0dVV1U2kySkR5QjFmRnRVRjV5SFZqV0NYclhUQmNKY2ZqUExieTZ5Uk1LMHhESzlkRElGYkRkWk15SSthUVhaaldLSTFBV1krU2F5L2xTbXdpMnhEZ0xjbVVZTklTV2xlQXVoWFM0QWNMR0hDbHBlQkNZSTR5YzBYemxxb3N1VmxCS2Foc2dJenZ6RUFHNUZWU00xd2Y5MHVTNFFwSmI5d2ZpZUwrWWZJYnh6UmQzQkJDTDBvZWxEOUJINkRpaGdhMHFQQ21DNDRMU1Q3SUU1TkV1SWxCdWdYa3Z4VUNSaWhjYnlsTDIxS2tQRXdyekpDa05MU3N5Mnc2ZnNmTnA5eXpDMktTYmhibnpUYlVJVkFIcEZ3NUwzWEZMRmZLV2NxVmM4cTFENEZqeS9iT1JpYitjWlNRanJ2WktXZkpCcXI0WFg3ekxRVEViSmpIOEFXeGdPMGx5Sk1YVURDREg2N2hBeURJWWViUnRzUVhLZDM2Qks2QWhTQmx6SkxOdnhuVUlOaGlJNXVQMEdFbDBpYkRKM2xMM25CRjJVQVV5TDRoaTFtWDhvSllRalkvY2ozTWVkKyt1cE1OZEptRWFFSHc1WkhyYkNzM1h4QXNXNit6YzZtaGtBVUdXZ1p4NVRvRjBpUldsMWJYWmtINFhseVl2UDZ2Z0tWNzlkVlhFMitEbHRPRWZRbnJGN1crQW1tVDlObmNQeCttKzJnRzVYeFFSbzg5OWxqMDVKTlBqdXVMa1Vjc3UzTzRvc01nUCtZZFpuUU5zS0xTRitWM3BrMjY0RHFJRlc5bWF1WEtsU3VUc3N2V0s4cVNjcVV1WmV0UkNPVEJ0UEMyeVU5am5zaWgyQ0dLU09Vb2N4RTZGY2tURmJndW9xMExOTXp0S2xjVnNLTFVtTUl1dEtJb25ZTUtXRkZxU3hUOVA1WnRFRWRwNlZPekFBQUFBRWxGVGtTdVFtQ0MiLCJtZWRpYXR5cGUiOiJpbWFnZS9wbmcifV0sImluc3RhbGwiOnsic3BlYyI6eyJjbHVzdGVyUGVybWlzc2lvbnMiOlt7InJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJjb25maWdtYXBzIiwiZW5kcG9pbnRzIiwiZXZlbnRzIiwibmFtZXNwYWNlcyIsInBlcnNpc3RlbnR2b2x1bWVjbGFpbXMiLCJwb2RzIiwicG9kcy9ldmljdGlvbiIsInBvZHMvc3RhdHVzIiwic2VjcmV0cyIsInNlcnZpY2VhY2NvdW50cyIsInNlcnZpY2VzIiwic2VydmljZXMvZmluYWxpemVycyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbIm5vZGVzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbImFkbWlzc2lvbnJlZ2lzdHJhdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VzIjpbInZhbGlkYXRpbmd3ZWJob29rY29uZmlndXJhdGlvbnMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiYXBpZXh0ZW5zaW9ucy5rOHMuaW8iXSwicmVzb3VyY2VzIjpbImN1c3RvbXJlc291cmNlZGVmaW5pdGlvbnMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiYXBwcyJdLCJyZXNvdXJjZXMiOlsiY29udHJvbGxlcnJldmlzaW9ucyIsImRhZW1vbnNldHMiLCJkZXBsb3ltZW50cyIsInJlcGxpY2FzZXRzIiwic3RhdGVmdWxzZXRzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbImFwcHMiXSwicmVzb3VyY2VzIjpbImRlcGxveW1lbnRzL2ZpbmFsaXplcnMiXSwidmVyYnMiOlsidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbImJhdGNoIl0sInJlc291cmNlcyI6WyJjcm9uam9icyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJjZXJ0LW1hbmFnZXIuaW8iXSwicmVzb3VyY2VzIjpbImNlcnRpZmljYXRlcyIsImlzc3VlcnMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiY29uZmlnLm9wZW5zaGlmdC5pbyJdLCJyZXNvdXJjZXMiOlsiY2x1c3RlcnZlcnNpb25zIiwicHJveGllcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiY29vcmRpbmF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsibGVhc2VzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbImV2ZW50cy5rOHMuaW8iXSwicmVzb3VyY2VzIjpbImV2ZW50cyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJnZXQiLCJwYXRjaCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJpbWFnZS5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbImltYWdlc3RyZWFtcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiazhzLmNuaS5jbmNmLmlvIl0sInJlc291cmNlcyI6WyJuZXR3b3JrLWF0dGFjaG1lbnQtZGVmaW5pdGlvbnMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsibWVsbGFub3guY29tIl0sInJlc291cmNlcyI6WyJob3N0ZGV2aWNlbmV0d29ya3MiLCJpcG9pYm5ldHdvcmtzIiwibWFjdmxhbm5ldHdvcmtzIiwibmljY2x1c3RlcnBvbGljaWVzIiwibmljY2x1c3RlcnBvbGljaWVzL3N0YXR1cyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJtZWxsYW5veC5jb20iXSwicmVzb3VyY2VzIjpbImhvc3RkZXZpY2VuZXR3b3Jrcy9maW5hbGl6ZXJzIiwiaXBvaWJuZXR3b3Jrcy9maW5hbGl6ZXJzIiwibWFjdmxhbm5ldHdvcmtzL2ZpbmFsaXplcnMiLCJuaWNjbHVzdGVycG9saWNpZXMvZmluYWxpemVycyJdLCJ2ZXJicyI6WyJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsibWVsbGFub3guY29tIl0sInJlc291cmNlcyI6WyJob3N0ZGV2aWNlbmV0d29ya3Mvc3RhdHVzIiwiaXBvaWJuZXR3b3Jrcy9zdGF0dXMiLCJtYWN2bGFubmV0d29ya3Mvc3RhdHVzIl0sInZlcmJzIjpbImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbIm1vbml0b3JpbmcuY29yZW9zLmNvbSJdLCJyZXNvdXJjZXMiOlsic2VydmljZW1vbml0b3JzIl0sInZlcmJzIjpbImNyZWF0ZSIsImdldCIsImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJudi1pcGFtLm52aWRpYS5jb20iXSwicmVzb3VyY2VzIjpbImNpZHJwb29scyIsImlwcG9vbHMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZ2V0IiwibGlzdCIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbIm52LWlwYW0ubnZpZGlhLmNvbSJdLCJyZXNvdXJjZXMiOlsiY2lkcnBvb2xzL3N0YXR1cyIsImlwcG9vbHMvc3RhdHVzIl0sInZlcmJzIjpbImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbInJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VzIjpbImNsdXN0ZXJyb2xlYmluZGluZ3MiLCJjbHVzdGVycm9sZXMiLCJyb2xlYmluZGluZ3MiLCJyb2xlcyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJzZWN1cml0eS5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VOYW1lcyI6WyJwcml2aWxlZ2VkIl0sInJlc291cmNlcyI6WyJzZWN1cml0eWNvbnRleHRjb25zdHJhaW50cyJdLCJ2ZXJicyI6WyJ1c2UiXX0seyJhcGlHcm91cHMiOlsid2hlcmVhYm91dHMuY25pLmNuY2YuaW8iXSwicmVzb3VyY2VzIjpbImlwcG9vbHMiLCJvdmVybGFwcGluZ3JhbmdlaXByZXNlcnZhdGlvbnMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX1dLCJzZXJ2aWNlQWNjb3VudE5hbWUiOiJudmlkaWEtbmV0d29yay1vcGVyYXRvci1jb250cm9sbGVyLW1hbmFnZXIifV0sImRlcGxveW1lbnRzIjpbeyJsYWJlbCI6eyJjb250cm9sLXBsYW5lIjoibnZpZGlhLW5ldHdvcmstb3BlcmF0b3ItY29udHJvbGxlciJ9LCJuYW1lIjoibnZpZGlhLW5ldHdvcmstb3BlcmF0b3ItY29udHJvbGxlci1tYW5hZ2VyIiwic3BlYyI6eyJyZXBsaWNhcyI6MSwic2VsZWN0b3IiOnsibWF0Y2hMYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6Im52aWRpYS1uZXR3b3JrLW9wZXJhdG9yLWNvbnRyb2xsZXIifX0sInN0cmF0ZWd5Ijp7fSwidGVtcGxhdGUiOnsibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsia3ViZWN0bC5rdWJlcm5ldGVzLmlvL2RlZmF1bHQtY29udGFpbmVyIjoibWFuYWdlciJ9LCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6Im52aWRpYS1uZXR3b3JrLW9wZXJhdG9yLWNvbnRyb2xsZXIiLCJudmlkaWEuY29tL29mZWQtZHJpdmVyLXVwZ3JhZGUtZHJhaW4uc2tpcCI6InRydWUifX0sInNwZWMiOnsiYWZmaW5pdHkiOnsibm9kZUFmZmluaXR5Ijp7InByZWZlcnJlZER1cmluZ1NjaGVkdWxpbmdJZ25vcmVkRHVyaW5nRXhlY3V0aW9uIjpbeyJwcmVmZXJlbmNlIjp7Im1hdGNoRXhwcmVzc2lvbnMiOlt7ImtleSI6Im5vZGUtcm9sZS5rdWJlcm5ldGVzLmlvL21hc3RlciIsIm9wZXJhdG9yIjoiSW4iLCJ2YWx1ZXMiOlsiIl19XX0sIndlaWdodCI6MX0seyJwcmVmZXJlbmNlIjp7Im1hdGNoRXhwcmVzc2lvbnMiOlt7ImtleSI6Im5vZGUtcm9sZS5rdWJlcm5ldGVzLmlvL2NvbnRyb2wtcGxhbmUiLCJvcGVyYXRvciI6IkluIiwidmFsdWVzIjpbIiJdfV19LCJ3ZWlnaHQiOjF9XX19LCJjb250YWluZXJzIjpbeyJhcmdzIjpbIi0tbGVhZGVyLWVsZWN0Il0sImNvbW1hbmQiOlsiL21hbmFnZXIiXSwiZW52IjpbeyJuYW1lIjoiRU5BQkxFX1dFQkhPT0tTIiwidmFsdWUiOiJ0cnVlIn0seyJuYW1lIjoiU1RBVEVfTUFOSUZFU1RfQkFTRV9ESVIiLCJ2YWx1ZSI6Ii9tYW5pZmVzdHMifSx7Im5hbWUiOiJQT0RfTkFNRVNQQUNFIiwidmFsdWVGcm9tIjp7ImZpZWxkUmVmIjp7ImZpZWxkUGF0aCI6Im1ldGFkYXRhLm5hbWVzcGFjZSJ9fX0seyJuYW1lIjoiVVNFX0RUSyIsInZhbHVlIjoidHJ1ZSJ9LHsibmFtZSI6Ik9GRURfSU5JVF9DT05UQUlORVJfSU1BR0UiLCJ2YWx1ZSI6ImdoY3IuaW8vbWVsbGFub3gvbmV0d29yay1vcGVyYXRvci1pbml0LWNvbnRhaW5lcjp2MC4wLjIifV0sImltYWdlIjoibnZjci5pby9udmlkaWEvY2xvdWQtbmF0aXZlL25ldHdvcmstb3BlcmF0b3JAc2hhMjU2OmYyNThlODY2NWQwOTRjMDkxNTk2NTQ3NTliYzlhZTQxZmJlMGY3ZmZmZTk1MTM5ZWMwMjk2NDc1OWMzZDhhODciLCJpbWFnZVB1bGxQb2xpY3kiOiJJZk5vdFByZXNlbnQiLCJsaXZlbmVzc1Byb2JlIjp7Imh0dHBHZXQiOnsicGF0aCI6Ii9oZWFsdGh6IiwicG9ydCI6ODA4MX0sImluaXRpYWxEZWxheVNlY29uZHMiOjE1LCJwZXJpb2RTZWNvbmRzIjoyMH0sIm5hbWUiOiJtYW5hZ2VyIiwicG9ydHMiOlt7ImNvbnRhaW5lclBvcnQiOjk0NDMsIm5hbWUiOiJ3ZWJob29rLXNlcnZlciIsInByb3RvY29sIjoiVENQIn1dLCJyZWFkaW5lc3NQcm9iZSI6eyJodHRwR2V0Ijp7InBhdGgiOiIvcmVhZHl6IiwicG9ydCI6ODA4MX0sImluaXRpYWxEZWxheVNlY29uZHMiOjUsInBlcmlvZFNlY29uZHMiOjEwfSwicmVzb3VyY2VzIjp7ImxpbWl0cyI6eyJjcHUiOiI1MDBtIiwibWVtb3J5IjoiMTI4TWkifSwicmVxdWVzdHMiOnsiY3B1IjoiNW0iLCJtZW1vcnkiOiI2NE1pIn19LCJzZWN1cml0eUNvbnRleHQiOnsiYWxsb3dQcml2aWxlZ2VFc2NhbGF0aW9uIjpmYWxzZX0sInZvbHVtZU1vdW50cyI6W3sibW91bnRQYXRoIjoiL3RtcC9rOHMtd2ViaG9vay1zZXJ2ZXIvc2VydmluZy1jZXJ0cyIsIm5hbWUiOiJjZXJ0IiwicmVhZE9ubHkiOnRydWV9XX1dLCJzZWN1cml0eUNvbnRleHQiOnsicnVuQXNVc2VyIjo2NTUzMn0sInNlcnZpY2VBY2NvdW50TmFtZSI6Im52aWRpYS1uZXR3b3JrLW9wZXJhdG9yLWNvbnRyb2xsZXItbWFuYWdlciIsInRlcm1pbmF0aW9uR3JhY2VQZXJpb2RTZWNvbmRzIjoxMCwidG9sZXJhdGlvbnMiOlt7ImVmZmVjdCI6Ik5vU2NoZWR1bGUiLCJrZXkiOiJub2RlLXJvbGUua3ViZXJuZXRlcy5pby9tYXN0ZXIiLCJvcGVyYXRvciI6IkVxdWFsIn0seyJlZmZlY3QiOiJOb1NjaGVkdWxlIiwia2V5Ijoibm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vY29udHJvbC1wbGFuZSIsIm9wZXJhdG9yIjoiRXF1YWwifV0sInZvbHVtZXMiOlt7Im5hbWUiOiJjZXJ0Iiwic2VjcmV0Ijp7ImRlZmF1bHRNb2RlIjo0MjAsInNlY3JldE5hbWUiOiJ3ZWJob29rLXNlcnZlci1jZXJ0In19XX19fX1dLCJwZXJtaXNzaW9ucyI6W3sicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbImNvbmZpZ21hcHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIiwiY3JlYXRlIiwidXBkYXRlIiwicGF0Y2giLCJkZWxldGUiXX0seyJhcGlHcm91cHMiOlsiY29vcmRpbmF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsibGVhc2VzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCIsImNyZWF0ZSIsInVwZGF0ZSIsInBhdGNoIiwiZGVsZXRlIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsiZXZlbnRzIl0sInZlcmJzIjpbImNyZWF0ZSIsInBhdGNoIl19XSwic2VydmljZUFjY291bnROYW1lIjoibnZpZGlhLW5ldHdvcmstb3BlcmF0b3ItY29udHJvbGxlci1tYW5hZ2VyIn1dfSwic3RyYXRlZ3kiOiJkZXBsb3ltZW50In0sImluc3RhbGxNb2RlcyI6W3sic3VwcG9ydGVkIjp0cnVlLCJ0eXBlIjoiT3duTmFtZXNwYWNlIn0seyJzdXBwb3J0ZWQiOnRydWUsInR5cGUiOiJTaW5nbGVOYW1lc3BhY2UifSx7InN1cHBvcnRlZCI6ZmFsc2UsInR5cGUiOiJNdWx0aU5hbWVzcGFjZSJ9LHsic3VwcG9ydGVkIjpmYWxzZSwidHlwZSI6IkFsbE5hbWVzcGFjZXMifV0sImtleXdvcmRzIjpbInNyaW92IiwibmV0d29ya2luZyJdLCJsaW5rcyI6W3sibmFtZSI6Ik5ldHdvcmsgT3BlcmF0b3IgRG9jdW1lbnRhdGlvbiIsInVybCI6Imh0dHBzOi8vZG9jcy5udmlkaWEuY29tL25ldHdvcmtpbmcvc29mdHdhcmUvY2xvdWQtb3JjaGVzdHJhdGlvbi9pbmRleC5odG1sIn0seyJuYW1lIjoiR2l0SHViIHJlcG9zaXRvcnkiLCJ1cmwiOiJodHRwczovL2dpdGh1Yi5jb20vTWVsbGFub3gvbmV0d29yay1vcGVyYXRvci8ifV0sIm1haW50YWluZXJzIjpbeyJlbWFpbCI6Im52aWRpYS1uZXR3b3JrLW9wZXJhdG9yLXN1cHBvcnRAbnZpZGlhLmNvbSIsIm5hbWUiOiJOVklESUEifV0sIm1hdHVyaXR5IjoiYWxwaGEiLCJwcm92aWRlciI6eyJuYW1lIjoiTlZJRElBIiwidXJsIjoiaHR0cHM6Ly9naXRodWIuY29tL01lbGxhbm94L25ldHdvcmstb3BlcmF0b3IvIn0sInJlbGF0ZWRJbWFnZXMiOlt7ImltYWdlIjoibnZjci5pby9udmlkaWEvY2xvdWQtbmF0aXZlL25ldHdvcmstb3BlcmF0b3JAc2hhMjU2OmYyNThlODY2NWQwOTRjMDkxNTk2NTQ3NTliYzlhZTQxZmJlMGY3ZmZmZTk1MTM5ZWMwMjk2NDc1OWMzZDhhODciLCJuYW1lIjoibnZpZGlhLW5ldHdvcmstb3BlcmF0b3IifSx7ImltYWdlIjoiZ2hjci5pby9tZWxsYW5veC9uZXR3b3JrLW9wZXJhdG9yLWluaXQtY29udGFpbmVyQHNoYTI1NjoxNjk5ZDIzMDI3ZWEzMGM5ZmE1OTU3NWE5MTQxMTRiZGZkNWE4N2EzNTljYWY4YzBhOWIxNmQ0MDllYzBkMDY4IiwibmFtZSI6Im52aWRpYS1uZXR3b3JrLW9wZXJhdG9yLWluaXQtY29udGFpbmVyIn0seyJpbWFnZSI6ImdoY3IuaW8vbWVsbGFub3gvazhzLXJkbWEtc2hhcmVkLWRldi1wbHVnaW5Ac2hhMjU2OjlmNDY4ZmRjNDQ0OWU2NWU0NzcyNTc1ZjgzYWE4NTg0MGEwMGY5NzE2NWY5YTAwYmEzNDY5NWM5MWQ2MTBmYmQiLCJuYW1lIjoicmRtYS1zaGFyZWQtZGV2aWNlLXBsdWdpbiJ9LHsiaW1hZ2UiOiJnaGNyLmlvL2s4c25ldHdvcmtwbHVtYmluZ3dnL3NyaW92LW5ldHdvcmstZGV2aWNlLXBsdWdpbkBzaGEyNTY6NzdlM2I5NDZjMjBmNDU3MjhkZmE2ZGQxZDExNTM1NmRlNWVhMzE3ZjkxY2RkZmQxNTQwYjcxMjE1NTBmNjZkYyIsIm5hbWUiOiJzcmlvdi1uZXR3b3JrLWRldmljZS1wbHVnaW4ifSx7ImltYWdlIjoiZ2hjci5pby9tZWxsYW5veC9pYi1rdWJlcm5ldGVzQHNoYTI1NjoxMDBlNmFkZGY5OWQ1YjQ0ZTgxY2IzYWE4ZDJmYzg5MmZjZWQxZGUzMTgzMTkwOTMxOTYxYjkyZWU5MjQyMDdiIiwibmFtZSI6ImliLWt1YmVybmV0ZXMifSx7ImltYWdlIjoiZ2hjci5pby9tZWxsYW5veC9pcG9pYi1jbmlAc2hhMjU2OjgxNjQ2YzA3ZTI3Y2UxZGYyNjAzMDUwYTc1ZGQyNjdmMjY0Njg1ZmRjNjRjMjg1ZWNhMzkyNWFlOThlZDUzOTIiLCJuYW1lIjoiaXBvaWItY25pIn0seyJpbWFnZSI6ImdoY3IuaW8vbWVsbGFub3gvbnZpZGlhLWs4cy1pcGFtQHNoYTI1Njo0N2UxYmI4NGFjOTdmOWFmNDlmOTdiNDljMmRlNDRiNGJhODJiODkwYjQ4Nzg4MGVkYzVjOWFkZjg2YTE3NmY3IiwibmFtZSI6Im52LWlwYW0ifSx7ImltYWdlIjoiZ2hjci5pby9tZWxsYW5veC9uaWMtZmVhdHVyZS1kaXNjb3ZlcnlAc2hhMjU2OjkyZGRhOTQzNDUxOWRlMzliZTBmOTRjODA3ODc3NjZlMzM5OWU4YjIzOGQxNDgzOTM2MGFmZjRkNjIzMmEwOWIiLCJuYW1lIjoibmljLWZlYXR1cmUtZGlzY292ZXJ5In0seyJpbWFnZSI6Im52Y3IuaW8vbnZpZGlhL2RvY2EvZG9jYV90ZWxlbWV0cnlAc2hhMjU2Ojg2Njk3MTcxN2NiMjY4M2YyNzQyZDI2NWM5NzkzZjkzMjQyZjU1YjZlOGJkOWEwYTg4YTU1ODg2OWY5YjljZDciLCJuYW1lIjoiZG9jYS10ZWxlbWV0cnktc2VydmljZSJ9LHsiaW1hZ2UiOiJudmNyLmlvL252aWRpYS9tZWxsYW5veC9kb2NhLWRyaXZlckBzaGEyNTY6ZTM2YzQ2Y2YyYzgxM2MwODFiZjdjYzIyYjQ3ZmI0Y2YzOTFhM2Q5MTgwNGU0N2E2Y2U4N2YzMWQ2MmY0MjUzNSIsIm5hbWUiOiJkb2NhLWRyaXZlci0wIn0seyJpbWFnZSI6Im52Y3IuaW8vbnZpZGlhL21lbGxhbm94L2RvY2EtZHJpdmVyQHNoYTI1Njo1YTg3ZDA0ODcyZDVkNDUzMGNhYjNjYmIzZGI1Mjg3MjJmYTI0NDM1ZjMzNzVkZWJkOGVkMTAyYjA0ZTYzMWMyIiwibmFtZSI6ImRvY2EtZHJpdmVyLTEifSx7ImltYWdlIjoibnZjci5pby9udmlkaWEvbWVsbGFub3gvZG9jYS1kcml2ZXJAc2hhMjU2OmVjYjJjZmRjNTEwYjdlZDA5YTU5ZGFlZDQ4MTdlZTM1M2U4M2E5NGQyZDg1ODFjM2MwNTJmNGZhNGI5OTA1NzQiLCJuYW1lIjoiZG9jYS1kcml2ZXItMiJ9LHsiaW1hZ2UiOiJudmNyLmlvL252aWRpYS9tZWxsYW5veC9kb2NhLWRyaXZlckBzaGEyNTY6NGJiMTNhOGI4NTBjOTEwMTEwMTM1MDkzMzRkNWFlNGY0YjdhYTFkMWIwYzEyOTU4NjI1ZTE2MWNkNTAzMDlkNiIsIm5hbWUiOiJkb2NhLWRyaXZlci0zIn0seyJpbWFnZSI6Im52Y3IuaW8vbnZpZGlhL21lbGxhbm94L2RvY2EtZHJpdmVyQHNoYTI1NjpkYjU3OTcxMjE3MzVlZWI5MzVkOGYxMWUzMDViNTBjODBiYTA3YWE4M2MyOTFkNzZkMDVkZWE3ZTMwM2JjNzQwIiwibmFtZSI6ImRvY2EtZHJpdmVyLTQifV0sInZlcnNpb24iOiIyNC4xMC4wIiwid2ViaG9va2RlZmluaXRpb25zIjpbeyJhZG1pc3Npb25SZXZpZXdWZXJzaW9ucyI6WyJ2MSJdLCJjb250YWluZXJQb3J0Ijo0NDMsImRlcGxveW1lbnROYW1lIjoibnZpZGlhLW5ldHdvcmstb3BlcmF0b3ItY29udHJvbGxlci1tYW5hZ2VyIiwiZmFpbHVyZVBvbGljeSI6IkZhaWwiLCJnZW5lcmF0ZU5hbWUiOiJ2aG9zdGRldmljZW5ldHdvcmsua2IuaW8iLCJydWxlcyI6W3siYXBpR3JvdXBzIjpbIm1lbGxhbm94LmNvbSJdLCJhcGlWZXJzaW9ucyI6WyJ2MWFscGhhMSJdLCJvcGVyYXRpb25zIjpbIkNSRUFURSIsIlVQREFURSJdLCJyZXNvdXJjZXMiOlsiaG9zdGRldmljZW5ldHdvcmtzIl19XSwic2lkZUVmZmVjdHMiOiJOb25lIiwidGFyZ2V0UG9ydCI6OTQ0MywidHlwZSI6IlZhbGlkYXRpbmdBZG1pc3Npb25XZWJob29rIiwid2ViaG9va1BhdGgiOiIvdmFsaWRhdGUtbWVsbGFub3gtY29tLXYxYWxwaGExLWhvc3RkZXZpY2VuZXR3b3JrIn0seyJhZG1pc3Npb25SZXZpZXdWZXJzaW9ucyI6WyJ2MSJdLCJjb250YWluZXJQb3J0Ijo0NDMsImRlcGxveW1lbnROYW1lIjoibnZpZGlhLW5ldHdvcmstb3BlcmF0b3ItY29udHJvbGxlci1tYW5hZ2VyIiwiZmFpbHVyZVBvbGljeSI6IkZhaWwiLCJnZW5lcmF0ZU5hbWUiOiJ2bmljY2x1c3RlcnBvbGljeS5rYi5pbyIsInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsibWVsbGFub3guY29tIl0sImFwaVZlcnNpb25zIjpbInYxYWxwaGExIl0sIm9wZXJhdGlvbnMiOlsiQ1JFQVRFIiwiVVBEQVRFIl0sInJlc291cmNlcyI6WyJuaWNjbHVzdGVycG9saWNpZXMiXX1dLCJzaWRlRWZmZWN0cyI6Ik5vbmUiLCJ0YXJnZXRQb3J0Ijo5NDQzLCJ0eXBlIjoiVmFsaWRhdGluZ0FkbWlzc2lvbldlYmhvb2siLCJ3ZWJob29rUGF0aCI6Ii92YWxpZGF0ZS1tZWxsYW5veC1jb20tdjFhbHBoYTEtbmljY2x1c3RlcnBvbGljeSJ9XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYWxwaGEub3BlbnNoaWZ0LmlvL3NlcnZpbmctY2VydC1zZWNyZXQtbmFtZSI6IndlYmhvb2stc2VydmVyLWNlcnQifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJjb250cm9sLXBsYW5lIjoibnZpZGlhLW5ldHdvcmstb3BlcmF0b3ItY29udHJvbGxlciJ9LCJuYW1lIjoibnZpZGlhLW5ldHdvcmstb3BlcmF0b3Itd2ViaG9vay1zZXJ2aWNlIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJudmlkaWEtbmV0d29yay1vcGVyYXRvci1jb250cm9sbGVyIn19LCJzdGF0dXMiOnsibG9hZEJhbGFuY2VyIjp7fX19
relatedImages:
- image: ghcr.io/k8snetworkplumbingwg/sriov-network-device-plugin@sha256:77e3b946c20f45728dfa6dd1d115356de5ea317f91cddfd1540b7121550f66dc
  name: sriov-network-device-plugin
- image: ghcr.io/mellanox/ib-kubernetes@sha256:100e6addf99d5b44e81cb3aa8d2fc892fced1de3183190931961b92ee924207b
  name: ib-kubernetes
- image: ghcr.io/mellanox/ipoib-cni@sha256:81646c07e27ce1df2603050a75dd267f264685fdc64c285eca3925ae98ed5392
  name: ipoib-cni
- image: ghcr.io/mellanox/k8s-rdma-shared-dev-plugin@sha256:9f468fdc4449e65e4772575f83aa85840a00f97165f9a00ba34695c91d610fbd
  name: rdma-shared-device-plugin
- image: ghcr.io/mellanox/network-operator-init-container@sha256:1699d23027ea30c9fa59575a914114bdfd5a87a359caf8c0a9b16d409ec0d068
  name: nvidia-network-operator-init-container
- image: ghcr.io/mellanox/nic-feature-discovery@sha256:92dda9434519de39be0f94c80787766e3399e8b238d14839360aff4d6232a09b
  name: nic-feature-discovery
- image: ghcr.io/mellanox/nvidia-k8s-ipam@sha256:47e1bb84ac97f9af49f97b49c2de44b4ba82b890b487880edc5c9adf86a176f7
  name: nv-ipam
- image: nvcr.io/nvidia/cloud-native/network-operator@sha256:f258e8665d094c09159654759bc9ae41fbe0f7fffe95139ec02964759c3d8a87
  name: nvidia-network-operator
- image: nvcr.io/nvidia/doca/doca_telemetry@sha256:866971717cb2683f2742d265c9793f93242f55b6e8bd9a0a88a558869f9b9cd7
  name: doca-telemetry-service
- image: nvcr.io/nvidia/mellanox/doca-driver@sha256:4bb13a8b850c91011013509334d5ae4f4b7aa1d1b0c12958625e161cd50309d6
  name: doca-driver-3
- image: nvcr.io/nvidia/mellanox/doca-driver@sha256:5a87d04872d5d4530cab3cbb3db528722fa24435f3375debd8ed102b04e631c2
  name: doca-driver-1
- image: nvcr.io/nvidia/mellanox/doca-driver@sha256:db5797121735eeb935d8f11e305b50c80ba07aa83c291d76d05dea7e303bc740
  name: doca-driver-4
- image: nvcr.io/nvidia/mellanox/doca-driver@sha256:e36c46cf2c813c081bf7cc22b47fb4cf391a3d91804e47a6ce87f31d62f42535
  name: doca-driver-0
- image: nvcr.io/nvidia/mellanox/doca-driver@sha256:ecb2cfdc510b7ed09a59daed4817ee353e83a94d2d8581c3c052f4fa4b990574
  name: doca-driver-2
- image: registry.connect.redhat.com/nvidia-network-operator/nvidia-network-operator@sha256:8f7d44a0aca436228657966d94ab9424a5026454c8de393f587586e65c6c0f89
  name: ""
schema: olm.bundle
---
image: registry.connect.redhat.com/nvidia-network-operator/nvidia-network-operator@sha256:300bdb3ce22cc81a0dd4b1ca00a7a44119faffea7b7e00bf98184e88e0256ffc
name: nvidia-network-operator.v24.10.1
package: nvidia-network-operator
properties:
- type: olm.gvk
  value:
    group: mellanox.com
    kind: HostDeviceNetwork
    version: v1alpha1
- type: olm.gvk
  value:
    group: mellanox.com
    kind: IPoIBNetwork
    version: v1alpha1
- type: olm.gvk
  value:
    group: mellanox.com
    kind: MacvlanNetwork
    version: v1alpha1
- type: olm.gvk
  value:
    group: mellanox.com
    kind: NicClusterPolicy
    version: v1alpha1
- type: olm.package
  value:
    packageName: nvidia-network-operator
    version: 24.10.1
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE2LjQifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJob3N0ZGV2aWNlbmV0d29ya3MubWVsbGFub3guY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJtZWxsYW5veC5jb20iLCJuYW1lcyI6eyJraW5kIjoiSG9zdERldmljZU5ldHdvcmsiLCJsaXN0S2luZCI6Ikhvc3REZXZpY2VOZXR3b3JrTGlzdCIsInBsdXJhbCI6Imhvc3RkZXZpY2VuZXR3b3JrcyIsInNpbmd1bGFyIjoiaG9zdGRldmljZW5ldHdvcmsifSwic2NvcGUiOiJDbHVzdGVyIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFnZSIsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJIb3N0RGV2aWNlTmV0d29yayBpcyB0aGUgU2NoZW1hIGZvciB0aGUgaG9zdGRldmljZW5ldHdvcmtzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgSG9zdERldmljZU5ldHdvcmsiLCJwcm9wZXJ0aWVzIjp7ImlwYW0iOnsiZGVzY3JpcHRpb24iOiJJUEFNIGNvbmZpZ3VyYXRpb24gdG8gYmUgdXNlZCBmb3IgdGhpcyBuZXR3b3JrIiwidHlwZSI6InN0cmluZyJ9LCJuZXR3b3JrTmFtZXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIG9mIHRoZSBOZXR3b3JrQXR0YWNobWVudERlZmluaXRpb24gY3VzdG9tIHJlc291cmNlIiwidHlwZSI6InN0cmluZyJ9LCJyZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIb3N0IGRldmljZSByZXNvdXJjZSBwb29sIG5hbWUiLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IkRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIEhvc3REZXZpY2VOZXR3b3JrIiwicHJvcGVydGllcyI6eyJhcHBsaWVkU3RhdGVzIjp7ImRlc2NyaXB0aW9uIjoiQXBwbGllZFN0YXRlcyBwcm92aWRlIGEgZmluZXIgdmlldyBvZiB0aGUgb2JzZXJ2ZWQgc3RhdGUiLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkFwcGxpZWRTdGF0ZSBkZWZpbmVzIGEgZmluZXItZ3JhaW5lZCB2aWV3IG9mIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBOaWNDbHVzdGVyUG9saWN5IiwicHJvcGVydGllcyI6eyJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBpcyBhIGh1bWFuIHJlYWRhYmxlIG1lc3NhZ2UgaW5kaWNhdGluZyBkZXRhaWxzIGFib3V0IHdoeVxudGhlIHN0YXRlIGlzIGluIHRoaXMgY29uZGl0aW9uIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgZGVwbG95ZWQgY29tcG9uZW50IHRoaXMgc3RhdGUgcmVmZXJzIHRvIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBzdGF0ZSBvZiB0aGUgZGVwbG95ZWQgY29tcG9uZW50LiAoXCJyZWFkeVwiLCBcIm5vdFJlYWR5XCIsIFwiaWdub3JlXCIsIFwiZXJyb3JcIikiLCJlbnVtIjpbInJlYWR5Iiwibm90UmVhZHkiLCJpZ25vcmUiLCJlcnJvciJdLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIiwic3RhdGUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwiaG9zdERldmljZU5ldHdvcmtBdHRhY2htZW50RGVmIjp7ImRlc2NyaXB0aW9uIjoiTmV0d29yayBhdHRhY2htZW50IGRlZmluaXRpb24gZ2VuZXJhdGVkIGZyb20gSG9zdERldmljZU5ldHdvcmtTcGVjIiwidHlwZSI6InN0cmluZyJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJJbmZvcm1hdGl2ZSBzdHJpbmcgaW4gY2FzZSB0aGUgb2JzZXJ2ZWQgc3RhdGUgaXMgZXJyb3IiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImRlc2NyaXB0aW9uIjoiUmVmbGVjdHMgdGhlIHN0YXRlIG9mIHRoZSBIb3N0RGV2aWNlTmV0d29yayIsImVudW0iOlsibm90UmVhZHkiLCJyZWFkeSIsImVycm9yIl0sInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInN0YXRlIl0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE2LjQifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJpcG9pYm5ldHdvcmtzLm1lbGxhbm94LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoibWVsbGFub3guY29tIiwibmFtZXMiOnsia2luZCI6IklQb0lCTmV0d29yayIsImxpc3RLaW5kIjoiSVBvSUJOZXR3b3JrTGlzdCIsInBsdXJhbCI6Imlwb2libmV0d29ya3MiLCJzaW5ndWxhciI6Imlwb2libmV0d29yayJ9LCJzY29wZSI6IkNsdXN0ZXIiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIubWV0YWRhdGEuY3JlYXRpb25UaW1lc3RhbXAiLCJuYW1lIjoiQWdlIiwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IklQb0lCTmV0d29yayBpcyB0aGUgU2NoZW1hIGZvciB0aGUgaXBvaWJuZXR3b3JrcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJEZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIElQb0lCTmV0d29yayIsInByb3BlcnRpZXMiOnsiaXBhbSI6eyJkZXNjcmlwdGlvbiI6IklQQU0gY29uZmlndXJhdGlvbiB0byBiZSB1c2VkIGZvciB0aGlzIG5ldHdvcmsuIiwidHlwZSI6InN0cmluZyJ9LCJtYXN0ZXIiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBob3N0IGludGVyZmFjZSB0byBlbnNsYXZlLiBEZWZhdWx0cyB0byBkZWZhdWx0IHJvdXRlIGludGVyZmFjZSIsInR5cGUiOiJzdHJpbmcifSwibmV0d29ya05hbWVzcGFjZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWVzcGFjZSBvZiB0aGUgTmV0d29ya0F0dGFjaG1lbnREZWZpbml0aW9uIGN1c3RvbSByZXNvdXJjZSIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiRGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgSVBvSUJOZXR3b3JrIiwicHJvcGVydGllcyI6eyJpcG9pYk5ldHdvcmtBdHRhY2htZW50RGVmIjp7ImRlc2NyaXB0aW9uIjoiTmV0d29yayBhdHRhY2htZW50IGRlZmluaXRpb24gZ2VuZXJhdGVkIGZyb20gSVBvSUJOZXR3b3JrU3BlYyIsInR5cGUiOiJzdHJpbmcifSwicmVhc29uIjp7ImRlc2NyaXB0aW9uIjoiSW5mb3JtYXRpdmUgc3RyaW5nIGluIGNhc2UgdGhlIG9ic2VydmVkIHN0YXRlIGlzIGVycm9yIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlJlZmxlY3RzIHRoZSBzdGF0ZSBvZiB0aGUgSVBvSUJOZXR3b3JrIiwiZW51bSI6WyJub3RSZWFkeSIsInJlYWR5IiwiZXJyb3IiXSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsic3RhdGUiXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE2LjQifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJtYWN2bGFubmV0d29ya3MubWVsbGFub3guY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJtZWxsYW5veC5jb20iLCJuYW1lcyI6eyJraW5kIjoiTWFjdmxhbk5ldHdvcmsiLCJsaXN0S2luZCI6Ik1hY3ZsYW5OZXR3b3JrTGlzdCIsInBsdXJhbCI6Im1hY3ZsYW5uZXR3b3JrcyIsInNpbmd1bGFyIjoibWFjdmxhbm5ldHdvcmsifSwic2NvcGUiOiJDbHVzdGVyIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFnZSIsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJNYWN2bGFuTmV0d29yayBpcyB0aGUgU2NoZW1hIGZvciB0aGUgbWFjdmxhbm5ldHdvcmtzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgTWFjdmxhbk5ldHdvcmtTcGVjIiwicHJvcGVydGllcyI6eyJpcGFtIjp7ImRlc2NyaXB0aW9uIjoiSVBBTSBjb25maWd1cmF0aW9uIHRvIGJlIHVzZWQgZm9yIHRoaXMgbmV0d29yay4iLCJ0eXBlIjoic3RyaW5nIn0sIm1hc3RlciI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGhvc3QgaW50ZXJmYWNlIHRvIGVuc2xhdmUuIERlZmF1bHRzIHRvIGRlZmF1bHQgcm91dGUgaW50ZXJmYWNlIiwidHlwZSI6InN0cmluZyJ9LCJtb2RlIjp7ImRlc2NyaXB0aW9uIjoiTW9kZSBvZiBpbnRlcmZhY2Ugb25lIG9mIFwiYnJpZGdlXCIsIFwicHJpdmF0ZVwiLCBcInZlcGFcIiwgXCJwYXNzdGhydVwiIiwiZW51bSI6WyJicmlkZ2UiLCJwcml2YXRlIiwidmVwYSIsInBhc3N0aHJ1Il0sInR5cGUiOiJzdHJpbmcifSwibXR1Ijp7ImRlc2NyaXB0aW9uIjoiTVRVIG9mIGludGVyZmFjZSB0byB0aGUgc3BlY2lmaWVkIHZhbHVlLiAwIGZvciBtYXN0ZXIncyBNVFUiLCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJuZXR3b3JrTmFtZXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIG9mIHRoZSBOZXR3b3JrQXR0YWNobWVudERlZmluaXRpb24gY3VzdG9tIHJlc291cmNlIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJEZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBNYWN2bGFuTmV0d29yayIsInByb3BlcnRpZXMiOnsibWFjdmxhbk5ldHdvcmtBdHRhY2htZW50RGVmIjp7ImRlc2NyaXB0aW9uIjoiTmV0d29yayBhdHRhY2htZW50IGRlZmluaXRpb24gZ2VuZXJhdGVkIGZyb20gTWFjdmxhbk5ldHdvcmtTcGVjIiwidHlwZSI6InN0cmluZyJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJJbmZvcm1hdGl2ZSBzdHJpbmcgaW4gY2FzZSB0aGUgb2JzZXJ2ZWQgc3RhdGUgaXMgZXJyb3IiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImRlc2NyaXB0aW9uIjoiUmVmbGVjdHMgdGhlIHN0YXRlIG9mIHRoZSBNYWN2bGFuTmV0d29yayIsImVudW0iOlsibm90UmVhZHkiLCJyZWFkeSIsImVycm9yIl0sInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInN0YXRlIl0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYWxwaGEub3BlbnNoaWZ0LmlvL3NlcnZpbmctY2VydC1zZWNyZXQtbmFtZSI6IndlYmhvb2stc2VydmVyLWNlcnQifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJjb250cm9sLXBsYW5lIjoibnZpZGlhLW5ldHdvcmstb3BlcmF0b3ItY29udHJvbGxlciJ9LCJuYW1lIjoibnZpZGlhLW5ldHdvcmstb3BlcmF0b3Itd2ViaG9vay1zZXJ2aWNlIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJudmlkaWEtbmV0d29yay1vcGVyYXRvci1jb250cm9sbGVyIn19LCJzdGF0dXMiOnsibG9hZEJhbGFuY2VyIjp7fX19
relatedImages:
- image: ghcr.io/k8snetworkplumbingwg/sriov-network-device-plugin@sha256:77e3b946c20f45728dfa6dd1d115356de5ea317f91cddfd1540b7121550f66dc
  name: sriov-network-device-plugin
- image: ghcr.io/mellanox/ib-kubernetes@sha256:100e6addf99d5b44e81cb3aa8d2fc892fced1de3183190931961b92ee924207b
  name: ib-kubernetes
- image: ghcr.io/mellanox/ipoib-cni@sha256:81646c07e27ce1df2603050a75dd267f264685fdc64c285eca3925ae98ed5392
  name: ipoib-cni
- image: ghcr.io/mellanox/k8s-rdma-shared-dev-plugin@sha256:9f468fdc4449e65e4772575f83aa85840a00f97165f9a00ba34695c91d610fbd
  name: rdma-shared-device-plugin
- image: ghcr.io/mellanox/network-operator-init-container@sha256:1699d23027ea30c9fa59575a914114bdfd5a87a359caf8c0a9b16d409ec0d068
  name: nvidia-network-operator-init-container
- image: ghcr.io/mellanox/nic-feature-discovery@sha256:92dda9434519de39be0f94c80787766e3399e8b238d14839360aff4d6232a09b
  name: nic-feature-discovery
- image: ghcr.io/mellanox/nvidia-k8s-ipam@sha256:47e1bb84ac97f9af49f97b49c2de44b4ba82b890b487880edc5c9adf86a176f7
  name: nv-ipam
- image: nvcr.io/nvidia/cloud-native/network-operator@sha256:23aeb481d662496210d1c13083c65cfa4ffdcf67f973e5f884b1b936f693c0f5
  name: nvidia-network-operator
- image: nvcr.io/nvidia/doca/doca_telemetry@sha256:866971717cb2683f2742d265c9793f93242f55b6e8bd9a0a88a558869f9b9cd7
  name: doca-telemetry-service
- image: nvcr.io/nvidia/mellanox/doca-driver@sha256:4bb13a8b850c91011013509334d5ae4f4b7aa1d1b0c12958625e161cd50309d6
  name: doca-driver-3
- image: nvcr.io/nvidia/mellanox/doca-driver@sha256:5a87d04872d5d4530cab3cbb3db528722fa24435f3375debd8ed102b04e631c2
  name: doca-driver-1
- image: nvcr.io/nvidia/mellanox/doca-driver@sha256:db5797121735eeb935d8f11e305b50c80ba07aa83c291d76d05dea7e303bc740
  name: doca-driver-4
- image: nvcr.io/nvidia/mellanox/doca-driver@sha256:e36c46cf2c813c081bf7cc22b47fb4cf391a3d91804e47a6ce87f31d62f42535
  name: doca-driver-0
- image: nvcr.io/nvidia/mellanox/doca-driver@sha256:ecb2cfdc510b7ed09a59daed4817ee353e83a94d2d8581c3c052f4fa4b990574
  name: doca-driver-2
- image: registry.connect.redhat.com/nvidia-network-operator/nvidia-network-operator@sha256:300bdb3ce22cc81a0dd4b1ca00a7a44119faffea7b7e00bf98184e88e0256ffc
  name: ""
schema: olm.bundle
---
image: registry.connect.redhat.com/nvidia-network-operator/nvidia-network-operator@sha256:8ec85d056ceba41188873d35643980c084d1128e25f0f05c2970bad6538212df
name: nvidia-network-operator.v24.7.0
package: nvidia-network-operator
properties:
- type: olm.gvk
  value:
    group: mellanox.com
    kind: HostDeviceNetwork
    version: v1alpha1
- type: olm.gvk
  value:
    group: mellanox.com
    kind: IPoIBNetwork
    version: v1alpha1
- type: olm.gvk
  value:
    group: mellanox.com
    kind: MacvlanNetwork
    version: v1alpha1
- type: olm.gvk
  value:
    group: mellanox.com
    kind: NicClusterPolicy
    version: v1alpha1
- type: olm.package
  value:
    packageName: nvidia-network-operator
    version: 24.7.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJob3N0ZGV2aWNlbmV0d29ya3MubWVsbGFub3guY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJtZWxsYW5veC5jb20iLCJuYW1lcyI6eyJraW5kIjoiSG9zdERldmljZU5ldHdvcmsiLCJsaXN0S2luZCI6Ikhvc3REZXZpY2VOZXR3b3JrTGlzdCIsInBsdXJhbCI6Imhvc3RkZXZpY2VuZXR3b3JrcyIsInNpbmd1bGFyIjoiaG9zdGRldmljZW5ldHdvcmsifSwic2NvcGUiOiJDbHVzdGVyIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFnZSIsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJIb3N0RGV2aWNlTmV0d29yayBpcyB0aGUgU2NoZW1hIGZvciB0aGUgaG9zdGRldmljZW5ldHdvcmtzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6Ikhvc3REZXZpY2VOZXR3b3JrU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIEhvc3REZXZpY2VOZXR3b3JrIiwicHJvcGVydGllcyI6eyJpcGFtIjp7ImRlc2NyaXB0aW9uIjoiSVBBTSBjb25maWd1cmF0aW9uIHRvIGJlIHVzZWQgZm9yIHRoaXMgbmV0d29yayIsInR5cGUiOiJzdHJpbmcifSwibmV0d29ya05hbWVzcGFjZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWVzcGFjZSBvZiB0aGUgTmV0d29ya0F0dGFjaG1lbnREZWZpbml0aW9uIGN1c3RvbSByZXNvdXJjZSIsInR5cGUiOiJzdHJpbmcifSwicmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiSG9zdCBkZXZpY2UgcmVzb3VyY2UgcG9vbCBuYW1lIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJIb3N0RGV2aWNlTmV0d29ya1N0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBIb3N0RGV2aWNlTmV0d29yayIsInByb3BlcnRpZXMiOnsiYXBwbGllZFN0YXRlcyI6eyJkZXNjcmlwdGlvbiI6IkFwcGxpZWRTdGF0ZXMgcHJvdmlkZSBhIGZpbmVyIHZpZXcgb2YgdGhlIG9ic2VydmVkIHN0YXRlIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBcHBsaWVkU3RhdGUgZGVmaW5lcyBhIGZpbmVyLWdyYWluZWQgdmlldyBvZiB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgTmljQ2x1c3RlclBvbGljeSIsInByb3BlcnRpZXMiOnsibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgaXMgYSBodW1hbiByZWFkYWJsZSBtZXNzYWdlIGluZGljYXRpbmcgZGV0YWlscyBhYm91dCB3aHlcbnRoZSBzdGF0ZSBpcyBpbiB0aGlzIGNvbmRpdGlvbiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGUgcmVwcmVzZW50cyByZWNvbmNpbGUgc3RhdGUgb2YgdGhlIHN5c3RlbS4iLCJlbnVtIjpbInJlYWR5Iiwibm90UmVhZHkiLCJpZ25vcmUiLCJlcnJvciJdLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIiwic3RhdGUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwiaG9zdERldmljZU5ldHdvcmtBdHRhY2htZW50RGVmIjp7ImRlc2NyaXB0aW9uIjoiTmV0d29yayBhdHRhY2htZW50IGRlZmluaXRpb24gZ2VuZXJhdGVkIGZyb20gSG9zdERldmljZU5ldHdvcmtTcGVjIiwidHlwZSI6InN0cmluZyJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJJbmZvcm1hdGl2ZSBzdHJpbmcgaW4gY2FzZSB0aGUgb2JzZXJ2ZWQgc3RhdGUgaXMgZXJyb3IiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImRlc2NyaXB0aW9uIjoiUmVmbGVjdHMgdGhlIHN0YXRlIG9mIHRoZSBIb3N0RGV2aWNlTmV0d29yayIsImVudW0iOlsibm90UmVhZHkiLCJyZWFkeSIsImVycm9yIl0sInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInN0YXRlIl0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJpcG9pYm5ldHdvcmtzLm1lbGxhbm94LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoibWVsbGFub3guY29tIiwibmFtZXMiOnsia2luZCI6IklQb0lCTmV0d29yayIsImxpc3RLaW5kIjoiSVBvSUJOZXR3b3JrTGlzdCIsInBsdXJhbCI6Imlwb2libmV0d29ya3MiLCJzaW5ndWxhciI6Imlwb2libmV0d29yayJ9LCJzY29wZSI6IkNsdXN0ZXIiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIubWV0YWRhdGEuY3JlYXRpb25UaW1lc3RhbXAiLCJuYW1lIjoiQWdlIiwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IklQb0lCTmV0d29yayBpcyB0aGUgU2NoZW1hIGZvciB0aGUgaXBvaWJuZXR3b3JrcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJJUG9JQk5ldHdvcmtTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgSVBvSUJOZXR3b3JrIiwicHJvcGVydGllcyI6eyJpcGFtIjp7ImRlc2NyaXB0aW9uIjoiSVBBTSBjb25maWd1cmF0aW9uIHRvIGJlIHVzZWQgZm9yIHRoaXMgbmV0d29yay4iLCJ0eXBlIjoic3RyaW5nIn0sIm1hc3RlciI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGhvc3QgaW50ZXJmYWNlIHRvIGVuc2xhdmUuIERlZmF1bHRzIHRvIGRlZmF1bHQgcm91dGUgaW50ZXJmYWNlIiwidHlwZSI6InN0cmluZyJ9LCJuZXR3b3JrTmFtZXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIG9mIHRoZSBOZXR3b3JrQXR0YWNobWVudERlZmluaXRpb24gY3VzdG9tIHJlc291cmNlIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJJUG9JQk5ldHdvcmtTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgSVBvSUJOZXR3b3JrIiwicHJvcGVydGllcyI6eyJpcG9pYk5ldHdvcmtBdHRhY2htZW50RGVmIjp7ImRlc2NyaXB0aW9uIjoiTmV0d29yayBhdHRhY2htZW50IGRlZmluaXRpb24gZ2VuZXJhdGVkIGZyb20gSVBvSUJOZXR3b3JrU3BlYyIsInR5cGUiOiJzdHJpbmcifSwicmVhc29uIjp7ImRlc2NyaXB0aW9uIjoiSW5mb3JtYXRpdmUgc3RyaW5nIGluIGNhc2UgdGhlIG9ic2VydmVkIHN0YXRlIGlzIGVycm9yIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlJlZmxlY3RzIHRoZSBzdGF0ZSBvZiB0aGUgSVBvSUJOZXR3b3JrIiwiZW51bSI6WyJub3RSZWFkeSIsInJlYWR5IiwiZXJyb3IiXSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsic3RhdGUiXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJtYWN2bGFubmV0d29ya3MubWVsbGFub3guY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJtZWxsYW5veC5jb20iLCJuYW1lcyI6eyJraW5kIjoiTWFjdmxhbk5ldHdvcmsiLCJsaXN0S2luZCI6Ik1hY3ZsYW5OZXR3b3JrTGlzdCIsInBsdXJhbCI6Im1hY3ZsYW5uZXR3b3JrcyIsInNpbmd1bGFyIjoibWFjdmxhbm5ldHdvcmsifSwic2NvcGUiOiJDbHVzdGVyIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFnZSIsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJNYWN2bGFuTmV0d29yayBpcyB0aGUgU2NoZW1hIGZvciB0aGUgbWFjdmxhbm5ldHdvcmtzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6Ik1hY3ZsYW5OZXR3b3JrU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIE1hY3ZsYW5OZXR3b3JrIiwicHJvcGVydGllcyI6eyJpcGFtIjp7ImRlc2NyaXB0aW9uIjoiSVBBTSBjb25maWd1cmF0aW9uIHRvIGJlIHVzZWQgZm9yIHRoaXMgbmV0d29yay4iLCJ0eXBlIjoic3RyaW5nIn0sIm1hc3RlciI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGhvc3QgaW50ZXJmYWNlIHRvIGVuc2xhdmUuIERlZmF1bHRzIHRvIGRlZmF1bHQgcm91dGUgaW50ZXJmYWNlIiwidHlwZSI6InN0cmluZyJ9LCJtb2RlIjp7ImRlc2NyaXB0aW9uIjoiTW9kZSBvZiBpbnRlcmZhY2Ugb25lIG9mIFwiYnJpZGdlXCIsIFwicHJpdmF0ZVwiLCBcInZlcGFcIiwgXCJwYXNzdGhydVwiIiwiZW51bSI6WyJicmlkZ2UiLCJwcml2YXRlIiwidmVwYSIsInBhc3N0aHJ1Il0sInR5cGUiOiJzdHJpbmcifSwibXR1Ijp7ImRlc2NyaXB0aW9uIjoiTVRVIG9mIGludGVyZmFjZSB0byB0aGUgc3BlY2lmaWVkIHZhbHVlLiAwIGZvciBtYXN0ZXIncyBNVFUiLCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJuZXR3b3JrTmFtZXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIG9mIHRoZSBOZXR3b3JrQXR0YWNobWVudERlZmluaXRpb24gY3VzdG9tIHJlc291cmNlIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJNYWN2bGFuTmV0d29ya1N0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBNYWN2bGFuTmV0d29yayIsInByb3BlcnRpZXMiOnsibWFjdmxhbk5ldHdvcmtBdHRhY2htZW50RGVmIjp7ImRlc2NyaXB0aW9uIjoiTmV0d29yayBhdHRhY2htZW50IGRlZmluaXRpb24gZ2VuZXJhdGVkIGZyb20gTWFjdmxhbk5ldHdvcmtTcGVjIiwidHlwZSI6InN0cmluZyJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJJbmZvcm1hdGl2ZSBzdHJpbmcgaW4gY2FzZSB0aGUgb2JzZXJ2ZWQgc3RhdGUgaXMgZXJyb3IiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImRlc2NyaXB0aW9uIjoiUmVmbGVjdHMgdGhlIHN0YXRlIG9mIHRoZSBNYWN2bGFuTmV0d29yayIsImVudW0iOlsibm90UmVhZHkiLCJyZWFkeSIsImVycm9yIl0sInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInN0YXRlIl0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYWxwaGEub3BlbnNoaWZ0LmlvL3NlcnZpbmctY2VydC1zZWNyZXQtbmFtZSI6IndlYmhvb2stc2VydmVyLWNlcnQifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJjb250cm9sLXBsYW5lIjoibnZpZGlhLW5ldHdvcmstb3BlcmF0b3ItY29udHJvbGxlciJ9LCJuYW1lIjoibnZpZGlhLW5ldHdvcmstb3BlcmF0b3Itd2ViaG9vay1zZXJ2aWNlIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJudmlkaWEtbmV0d29yay1vcGVyYXRvci1jb250cm9sbGVyIn19LCJzdGF0dXMiOnsibG9hZEJhbGFuY2VyIjp7fX19
relatedImages:
- image: ghcr.io/k8snetworkplumbingwg/sriov-network-device-plugin@sha256:93e856dde88abb0aeb8e0b991e5f6d9f41884d8beea792f4d70cda06f18e783f
  name: sriov-network-device-plugin
- image: ghcr.io/mellanox/ib-kubernetes@sha256:b56bb88963dadaa2290a17cf0b57b86c55c09e7c075b7271c184959532555c91
  name: ib-kubernetes
- image: ghcr.io/mellanox/ipoib-cni@sha256:81646c07e27ce1df2603050a75dd267f264685fdc64c285eca3925ae98ed5392
  name: ipoib-cni
- image: ghcr.io/mellanox/k8s-rdma-shared-dev-plugin@sha256:8324c009c3d694fe7702af36305ede78b903d839190b1e4506e82362f9aa5c02
  name: rdma-Shared-device-plugin
- image: ghcr.io/mellanox/network-operator-init-container@sha256:1699d23027ea30c9fa59575a914114bdfd5a87a359caf8c0a9b16d409ec0d068
  name: nvidia-network-operator-init-container
- image: ghcr.io/mellanox/nic-feature-discovery@sha256:92dda9434519de39be0f94c80787766e3399e8b238d14839360aff4d6232a09b
  name: nic-feature-discovery
- image: ghcr.io/mellanox/nvidia-k8s-ipam@sha256:47e1bb84ac97f9af49f97b49c2de44b4ba82b890b487880edc5c9adf86a176f7
  name: nv-ipam
- image: nvcr.io/nvidia/cloud-native/network-operator@sha256:fcee44995d64058cb7bf14c02da604879443e191a382402b8a6ebfe10a3a2601
  name: network-operator
- image: nvcr.io/nvidia/doca/doca_telemetry@sha256:866971717cb2683f2742d265c9793f93242f55b6e8bd9a0a88a558869f9b9cd7
  name: docs-telemetry-service
- image: nvcr.io/nvidia/mellanox/doca-driver@sha256:c41eaf76c06186e1dabb0d870225d946ad3ecda2a072fa4be197dd131b7695f2
  name: doca-driver
- image: registry.connect.redhat.com/nvidia-network-operator/nvidia-network-operator@sha256:8ec85d056ceba41188873d35643980c084d1128e25f0f05c2970bad6538212df
  name: ""
schema: olm.bundle
---
image: registry.connect.redhat.com/nvidia-network-operator/nvidia-network-operator@sha256:e9127738faebf877ed11262c317005ae7a1db56e6e4284f6ad37b5f96aaab42e
name: nvidia-network-operator.v24.7.1
package: nvidia-network-operator
properties:
- type: olm.gvk
  value:
    group: mellanox.com
    kind: HostDeviceNetwork
    version: v1alpha1
- type: olm.gvk
  value:
    group: mellanox.com
    kind: IPoIBNetwork
    version: v1alpha1
- type: olm.gvk
  value:
    group: mellanox.com
    kind: MacvlanNetwork
    version: v1alpha1
- type: olm.gvk
  value:
    group: mellanox.com
    kind: NicClusterPolicy
    version: v1alpha1
- type: olm.package
  value:
    packageName: nvidia-network-operator
    version: 24.7.1
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJob3N0ZGV2aWNlbmV0d29ya3MubWVsbGFub3guY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJtZWxsYW5veC5jb20iLCJuYW1lcyI6eyJraW5kIjoiSG9zdERldmljZU5ldHdvcmsiLCJsaXN0S2luZCI6Ikhvc3REZXZpY2VOZXR3b3JrTGlzdCIsInBsdXJhbCI6Imhvc3RkZXZpY2VuZXR3b3JrcyIsInNpbmd1bGFyIjoiaG9zdGRldmljZW5ldHdvcmsifSwic2NvcGUiOiJDbHVzdGVyIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFnZSIsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJIb3N0RGV2aWNlTmV0d29yayBpcyB0aGUgU2NoZW1hIGZvciB0aGUgaG9zdGRldmljZW5ldHdvcmtzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6Ikhvc3REZXZpY2VOZXR3b3JrU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIEhvc3REZXZpY2VOZXR3b3JrIiwicHJvcGVydGllcyI6eyJpcGFtIjp7ImRlc2NyaXB0aW9uIjoiSVBBTSBjb25maWd1cmF0aW9uIHRvIGJlIHVzZWQgZm9yIHRoaXMgbmV0d29yayIsInR5cGUiOiJzdHJpbmcifSwibmV0d29ya05hbWVzcGFjZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWVzcGFjZSBvZiB0aGUgTmV0d29ya0F0dGFjaG1lbnREZWZpbml0aW9uIGN1c3RvbSByZXNvdXJjZSIsInR5cGUiOiJzdHJpbmcifSwicmVzb3VyY2VOYW1lIjp7ImRlc2NyaXB0aW9uIjoiSG9zdCBkZXZpY2UgcmVzb3VyY2UgcG9vbCBuYW1lIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJIb3N0RGV2aWNlTmV0d29ya1N0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBIb3N0RGV2aWNlTmV0d29yayIsInByb3BlcnRpZXMiOnsiYXBwbGllZFN0YXRlcyI6eyJkZXNjcmlwdGlvbiI6IkFwcGxpZWRTdGF0ZXMgcHJvdmlkZSBhIGZpbmVyIHZpZXcgb2YgdGhlIG9ic2VydmVkIHN0YXRlIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBcHBsaWVkU3RhdGUgZGVmaW5lcyBhIGZpbmVyLWdyYWluZWQgdmlldyBvZiB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgTmljQ2x1c3RlclBvbGljeSIsInByb3BlcnRpZXMiOnsibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Ik1lc3NhZ2UgaXMgYSBodW1hbiByZWFkYWJsZSBtZXNzYWdlIGluZGljYXRpbmcgZGV0YWlscyBhYm91dCB3aHlcbnRoZSBzdGF0ZSBpcyBpbiB0aGlzIGNvbmRpdGlvbiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImRlc2NyaXB0aW9uIjoiU3RhdGUgcmVwcmVzZW50cyByZWNvbmNpbGUgc3RhdGUgb2YgdGhlIHN5c3RlbS4iLCJlbnVtIjpbInJlYWR5Iiwibm90UmVhZHkiLCJpZ25vcmUiLCJlcnJvciJdLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIiwic3RhdGUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwiaG9zdERldmljZU5ldHdvcmtBdHRhY2htZW50RGVmIjp7ImRlc2NyaXB0aW9uIjoiTmV0d29yayBhdHRhY2htZW50IGRlZmluaXRpb24gZ2VuZXJhdGVkIGZyb20gSG9zdERldmljZU5ldHdvcmtTcGVjIiwidHlwZSI6InN0cmluZyJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJJbmZvcm1hdGl2ZSBzdHJpbmcgaW4gY2FzZSB0aGUgb2JzZXJ2ZWQgc3RhdGUgaXMgZXJyb3IiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImRlc2NyaXB0aW9uIjoiUmVmbGVjdHMgdGhlIHN0YXRlIG9mIHRoZSBIb3N0RGV2aWNlTmV0d29yayIsImVudW0iOlsibm90UmVhZHkiLCJyZWFkeSIsImVycm9yIl0sInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInN0YXRlIl0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJpcG9pYm5ldHdvcmtzLm1lbGxhbm94LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoibWVsbGFub3guY29tIiwibmFtZXMiOnsia2luZCI6IklQb0lCTmV0d29yayIsImxpc3RLaW5kIjoiSVBvSUJOZXR3b3JrTGlzdCIsInBsdXJhbCI6Imlwb2libmV0d29ya3MiLCJzaW5ndWxhciI6Imlwb2libmV0d29yayJ9LCJzY29wZSI6IkNsdXN0ZXIiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIubWV0YWRhdGEuY3JlYXRpb25UaW1lc3RhbXAiLCJuYW1lIjoiQWdlIiwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IklQb0lCTmV0d29yayBpcyB0aGUgU2NoZW1hIGZvciB0aGUgaXBvaWJuZXR3b3JrcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJJUG9JQk5ldHdvcmtTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgSVBvSUJOZXR3b3JrIiwicHJvcGVydGllcyI6eyJpcGFtIjp7ImRlc2NyaXB0aW9uIjoiSVBBTSBjb25maWd1cmF0aW9uIHRvIGJlIHVzZWQgZm9yIHRoaXMgbmV0d29yay4iLCJ0eXBlIjoic3RyaW5nIn0sIm1hc3RlciI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGhvc3QgaW50ZXJmYWNlIHRvIGVuc2xhdmUuIERlZmF1bHRzIHRvIGRlZmF1bHQgcm91dGUgaW50ZXJmYWNlIiwidHlwZSI6InN0cmluZyJ9LCJuZXR3b3JrTmFtZXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIG9mIHRoZSBOZXR3b3JrQXR0YWNobWVudERlZmluaXRpb24gY3VzdG9tIHJlc291cmNlIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJJUG9JQk5ldHdvcmtTdGF0dXMgZGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgSVBvSUJOZXR3b3JrIiwicHJvcGVydGllcyI6eyJpcG9pYk5ldHdvcmtBdHRhY2htZW50RGVmIjp7ImRlc2NyaXB0aW9uIjoiTmV0d29yayBhdHRhY2htZW50IGRlZmluaXRpb24gZ2VuZXJhdGVkIGZyb20gSVBvSUJOZXR3b3JrU3BlYyIsInR5cGUiOiJzdHJpbmcifSwicmVhc29uIjp7ImRlc2NyaXB0aW9uIjoiSW5mb3JtYXRpdmUgc3RyaW5nIGluIGNhc2UgdGhlIG9ic2VydmVkIHN0YXRlIGlzIGVycm9yIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlJlZmxlY3RzIHRoZSBzdGF0ZSBvZiB0aGUgSVBvSUJOZXR3b3JrIiwiZW51bSI6WyJub3RSZWFkeSIsInJlYWR5IiwiZXJyb3IiXSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsic3RhdGUiXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE0LjAifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJtYWN2bGFubmV0d29ya3MubWVsbGFub3guY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJtZWxsYW5veC5jb20iLCJuYW1lcyI6eyJraW5kIjoiTWFjdmxhbk5ldHdvcmsiLCJsaXN0S2luZCI6Ik1hY3ZsYW5OZXR3b3JrTGlzdCIsInBsdXJhbCI6Im1hY3ZsYW5uZXR3b3JrcyIsInNpbmd1bGFyIjoibWFjdmxhbm5ldHdvcmsifSwic2NvcGUiOiJDbHVzdGVyIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFnZSIsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJNYWN2bGFuTmV0d29yayBpcyB0aGUgU2NoZW1hIGZvciB0aGUgbWFjdmxhbm5ldHdvcmtzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6Ik1hY3ZsYW5OZXR3b3JrU3BlYyBkZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIE1hY3ZsYW5OZXR3b3JrIiwicHJvcGVydGllcyI6eyJpcGFtIjp7ImRlc2NyaXB0aW9uIjoiSVBBTSBjb25maWd1cmF0aW9uIHRvIGJlIHVzZWQgZm9yIHRoaXMgbmV0d29yay4iLCJ0eXBlIjoic3RyaW5nIn0sIm1hc3RlciI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGhvc3QgaW50ZXJmYWNlIHRvIGVuc2xhdmUuIERlZmF1bHRzIHRvIGRlZmF1bHQgcm91dGUgaW50ZXJmYWNlIiwidHlwZSI6InN0cmluZyJ9LCJtb2RlIjp7ImRlc2NyaXB0aW9uIjoiTW9kZSBvZiBpbnRlcmZhY2Ugb25lIG9mIFwiYnJpZGdlXCIsIFwicHJpdmF0ZVwiLCBcInZlcGFcIiwgXCJwYXNzdGhydVwiIiwiZW51bSI6WyJicmlkZ2UiLCJwcml2YXRlIiwidmVwYSIsInBhc3N0aHJ1Il0sInR5cGUiOiJzdHJpbmcifSwibXR1Ijp7ImRlc2NyaXB0aW9uIjoiTVRVIG9mIGludGVyZmFjZSB0byB0aGUgc3BlY2lmaWVkIHZhbHVlLiAwIGZvciBtYXN0ZXIncyBNVFUiLCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJuZXR3b3JrTmFtZXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIG9mIHRoZSBOZXR3b3JrQXR0YWNobWVudERlZmluaXRpb24gY3VzdG9tIHJlc291cmNlIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJNYWN2bGFuTmV0d29ya1N0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBNYWN2bGFuTmV0d29yayIsInByb3BlcnRpZXMiOnsibWFjdmxhbk5ldHdvcmtBdHRhY2htZW50RGVmIjp7ImRlc2NyaXB0aW9uIjoiTmV0d29yayBhdHRhY2htZW50IGRlZmluaXRpb24gZ2VuZXJhdGVkIGZyb20gTWFjdmxhbk5ldHdvcmtTcGVjIiwidHlwZSI6InN0cmluZyJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJJbmZvcm1hdGl2ZSBzdHJpbmcgaW4gY2FzZSB0aGUgb2JzZXJ2ZWQgc3RhdGUgaXMgZXJyb3IiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImRlc2NyaXB0aW9uIjoiUmVmbGVjdHMgdGhlIHN0YXRlIG9mIHRoZSBNYWN2bGFuTmV0d29yayIsImVudW0iOlsibm90UmVhZHkiLCJyZWFkeSIsImVycm9yIl0sInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInN0YXRlIl0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoib3BlcmF0b3JzLmNvcmVvcy5jb20vdjFhbHBoYTEiLCJraW5kIjoiQ2x1c3RlclNlcnZpY2VWZXJzaW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiYWxtLWV4YW1wbGVzIjoiW1xuICB7XG4gICAgXCJhcGlWZXJzaW9uXCI6IFwibWVsbGFub3guY29tL3YxYWxwaGExXCIsXG4gICAgXCJraW5kXCI6IFwiSG9zdERldmljZU5ldHdvcmtcIixcbiAgICBcIm1ldGFkYXRhXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcImV4YW1wbGUtaG9zdGRldmljZS1uZXR3b3JrXCJcbiAgICB9LFxuICAgIFwic3BlY1wiOiB7XG4gICAgICBcImlwYW1cIjogXCJ7XFxuICBcXFwidHlwZVxcXCI6IFxcXCJ3aGVyZWFib3V0c1xcXCIsXFxuICBcXFwicmFuZ2VcXFwiOiBcXFwiMTkyLjE2OC4zLjIyNS8yOFxcXCIsXFxuICBcXFwiZXhjbHVkZVxcXCI6IFtcXG4gICBcXFwiMTkyLjE2OC4zLjIyOS8zMFxcXCIsXFxuICAgXFxcIjE5Mi4xNjguMy4yMzYvMzJcXFwiXFxuICBdXFxufVxcblwiLFxuICAgICAgXCJuZXR3b3JrTmFtZXNwYWNlXCI6IFwiZGVmYXVsdFwiLFxuICAgICAgXCJyZXNvdXJjZU5hbWVcIjogXCJob3N0ZGV2XCJcbiAgICB9XG4gIH0sXG4gIHtcbiAgICBcImFwaVZlcnNpb25cIjogXCJtZWxsYW5veC5jb20vdjFhbHBoYTFcIixcbiAgICBcImtpbmRcIjogXCJJUG9JQk5ldHdvcmtcIixcbiAgICBcIm1ldGFkYXRhXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcImV4YW1wbGUtaXBvaWJuZXR3b3JrXCJcbiAgICB9LFxuICAgIFwic3BlY1wiOiB7XG4gICAgICBcImlwYW1cIjogXCJ7XFxuICBcXFwidHlwZVxcXCI6IFxcXCJ3aGVyZWFib3V0c1xcXCIsXFxuICBcXFwicmFuZ2VcXFwiOiBcXFwiMTkyLjE2OC42LjIyNS8yOFxcXCIsXFxuICBcXFwiZXhjbHVkZVxcXCI6IFtcXG4gICBcXFwiMTkyLjE2OC42LjIyOS8zMFxcXCIsXFxuICAgXFxcIjE5Mi4xNjguNi4yMzYvMzJcXFwiXFxuICBdXFxufVxcblwiLFxuICAgICAgXCJtYXN0ZXJcIjogXCJpYnMzZjFcIixcbiAgICAgIFwibmV0d29ya05hbWVzcGFjZVwiOiBcImRlZmF1bHRcIlxuICAgIH1cbiAgfSxcbiAge1xuICAgIFwiYXBpVmVyc2lvblwiOiBcIm1lbGxhbm94LmNvbS92MWFscGhhMVwiLFxuICAgIFwia2luZFwiOiBcIk1hY3ZsYW5OZXR3b3JrXCIsXG4gICAgXCJtZXRhZGF0YVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJleGFtcGxlLW1hY3ZsYW5uZXR3b3JrXCJcbiAgICB9LFxuICAgIFwic3BlY1wiOiB7XG4gICAgICBcImlwYW1cIjogXCJ7XFxuICBcXFwidHlwZVxcXCI6IFxcXCJ3aGVyZWFib3V0c1xcXCIsXFxuICBcXFwicmFuZ2VcXFwiOiBcXFwiMTkyLjE2OC4yLjIyNS8yNFxcXCIsXFxuICBcXFwiZXhjbHVkZVxcXCI6IFtcXG4gICBcXFwiMTkyLjE2OC4yLjIyOS8zMFxcXCIsXFxuICAgXFxcIjE5Mi4xNjguMi4yMzYvMzJcXFwiXFxuICBdXFxufVxcblwiLFxuICAgICAgXCJtYXN0ZXJcIjogXCJlbnMyZjBcIixcbiAgICAgIFwibW9kZVwiOiBcImJyaWRnZVwiLFxuICAgICAgXCJtdHVcIjogMTUwMCxcbiAgICAgIFwibmV0d29ya05hbWVzcGFjZVwiOiBcImRlZmF1bHRcIlxuICAgIH1cbiAgfSxcbiAge1xuICAgIFwiYXBpVmVyc2lvblwiOiBcIm1lbGxhbm94LmNvbS92MWFscGhhMVwiLFxuICAgIFwia2luZFwiOiBcIk5pY0NsdXN0ZXJQb2xpY3lcIixcbiAgICBcIm1ldGFkYXRhXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcIm5pYy1jbHVzdGVyLXBvbGljeVwiXG4gICAgfSxcbiAgICBcInNwZWNcIjoge1xuICAgICAgXCJkb2NhVGVsZW1ldHJ5U2VydmljZVwiOiB7XG4gICAgICAgIFwiaW1hZ2VcIjogXCJkb2NhX3RlbGVtZXRyeVwiLFxuICAgICAgICBcInJlcG9zaXRvcnlcIjogXCJudmNyLmlvL252aWRpYS9kb2NhXCIsXG4gICAgICAgIFwidmVyc2lvblwiOiBcIjEuMTYuNS1kb2NhMi42LjAtaG9zdFwiXG4gICAgICB9LFxuICAgICAgXCJuaWNGZWF0dXJlRGlzY292ZXJ5XCI6IHtcbiAgICAgICAgXCJpbWFnZVwiOiBcIm5pYy1mZWF0dXJlLWRpc2NvdmVyeVwiLFxuICAgICAgICBcInJlcG9zaXRvcnlcIjogXCJnaGNyLmlvL21lbGxhbm94XCIsXG4gICAgICAgIFwidmVyc2lvblwiOiBcInYwLjAuMVwiXG4gICAgICB9LFxuICAgICAgXCJudklwYW1cIjoge1xuICAgICAgICBcImVuYWJsZVdlYmhvb2tcIjogZmFsc2UsXG4gICAgICAgIFwiaW1hZ2VcIjogXCJudmlkaWEtazhzLWlwYW1cIixcbiAgICAgICAgXCJyZXBvc2l0b3J5XCI6IFwiZ2hjci5pby9tZWxsYW5veFwiLFxuICAgICAgICBcInZlcnNpb25cIjogXCJ2MC4yLjBcIlxuICAgICAgfSxcbiAgICAgIFwib2ZlZERyaXZlclwiOiB7XG4gICAgICAgIFwiaW1hZ2VcIjogXCJkb2NhLWRyaXZlclwiLFxuICAgICAgICBcImxpdmVuZXNzUHJvYmVcIjoge1xuICAgICAgICAgIFwiaW5pdGlhbERlbGF5U2Vjb25kc1wiOiAzMCxcbiAgICAgICAgICBcInBlcmlvZFNlY29uZHNcIjogMzBcbiAgICAgICAgfSxcbiAgICAgICAgXCJyZWFkaW5lc3NQcm9iZVwiOiB7XG4gICAgICAgICAgXCJpbml0aWFsRGVsYXlTZWNvbmRzXCI6IDEwLFxuICAgICAgICAgIFwicGVyaW9kU2Vjb25kc1wiOiAzMFxuICAgICAgICB9LFxuICAgICAgICBcInJlcG9zaXRvcnlcIjogXCJudmNyLmlvL252aWRpYS9tZWxsYW5veFwiLFxuICAgICAgICBcInN0YXJ0dXBQcm9iZVwiOiB7XG4gICAgICAgICAgXCJpbml0aWFsRGVsYXlTZWNvbmRzXCI6IDEwLFxuICAgICAgICAgIFwicGVyaW9kU2Vjb25kc1wiOiAyMFxuICAgICAgICB9LFxuICAgICAgICBcInRlcm1pbmF0aW9uR3JhY2VQZXJpb2RTZWNvbmRzXCI6IDMwMCxcbiAgICAgICAgXCJ1cGdyYWRlUG9saWN5XCI6IHtcbiAgICAgICAgICBcImF1dG9VcGdyYWRlXCI6IHRydWUsXG4gICAgICAgICAgXCJkcmFpblwiOiB7XG4gICAgICAgICAgICBcImRlbGV0ZUVtcHR5RGlyXCI6IHRydWUsXG4gICAgICAgICAgICBcImVuYWJsZVwiOiB0cnVlLFxuICAgICAgICAgICAgXCJmb3JjZVwiOiB0cnVlLFxuICAgICAgICAgICAgXCJwb2RTZWxlY3RvclwiOiBcIlwiLFxuICAgICAgICAgICAgXCJ0aW1lb3V0U2Vjb25kc1wiOiAzMDBcbiAgICAgICAgICB9LFxuICAgICAgICAgIFwibWF4UGFyYWxsZWxVcGdyYWRlc1wiOiAxXG4gICAgICAgIH0sXG4gICAgICAgIFwidmVyc2lvblwiOiBcIjI0LjA3LTAuNi4xLjAtMFwiXG4gICAgICB9LFxuICAgICAgXCJyZG1hU2hhcmVkRGV2aWNlUGx1Z2luXCI6IHtcbiAgICAgICAgXCJjb25maWdcIjogXCJ7XFxuICBcXFwiY29uZmlnTGlzdFxcXCI6IFtcXG4gICAge1xcbiAgICAgIFxcXCJyZXNvdXJjZU5hbWVcXFwiOiBcXFwicmRtYV9zaGFyZWRfZGV2aWNlX2FcXFwiLFxcbiAgICAgIFxcXCJyZG1hSGNhTWF4XFxcIjogNjMsXFxuICAgICAgXFxcInNlbGVjdG9yc1xcXCI6IHtcXG4gICAgICAgIFxcXCJ2ZW5kb3JzXFxcIjogW1xcXCIxNWIzXFxcIl1cXG4gICAgICB9XFxuICAgIH1cXG4gIF1cXG59XFxuXCIsXG4gICAgICAgIFwiaW1hZ2VcIjogXCJrOHMtcmRtYS1zaGFyZWQtZGV2LXBsdWdpblwiLFxuICAgICAgICBcInJlcG9zaXRvcnlcIjogXCJnaGNyLmlvL21lbGxhbm94XCIsXG4gICAgICAgIFwidmVyc2lvblwiOiBcInYxLjUuMVwiXG4gICAgICB9LFxuICAgICAgXCJzZWNvbmRhcnlOZXR3b3JrXCI6IHtcbiAgICAgICAgXCJpcG9pYlwiOiB7XG4gICAgICAgICAgXCJpbWFnZVwiOiBcImlwb2liLWNuaVwiLFxuICAgICAgICAgIFwicmVwb3NpdG9yeVwiOiBcImdoY3IuaW8vbWVsbGFub3hcIixcbiAgICAgICAgICBcInZlcnNpb25cIjogXCJ2MS4yLjBcIlxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5dIiwiY2FwYWJpbGl0aWVzIjoiQmFzaWMgSW5zdGFsbCIsImNvbnRhaW5lckltYWdlIjoibnZjci5pby9udmlkaWEvY2xvdWQtbmF0aXZlL25ldHdvcmstb3BlcmF0b3JAc2hhMjU2OmI4YTA3Njk2ZDA1ZmI4ZTUyOTI5OTFiYTczMTc1ODU3OTMxM2Q2OTgzZWQzZDc1ZGQ5NWU3MzU2MDI0ZDk4N2MiLCJjcmVhdGVkQXQiOiIyMDI0LTA5LTA0VDA2OjM4OjMzWiIsImRlc2NyaXB0aW9uIjoiRGVwbG95IGFuZCBtYW5hZ2UgTlZJRElBIG5ldHdvcmtpbmcgcmVzb3VyY2VzIGluIEt1YmVybmV0ZXMiLCJmZWF0dXJlcy5vcGVyYXRvcnMub3BlbnNoaWZ0LmlvL2NuZiI6ImZhbHNlIiwiZmVhdHVyZXMub3BlcmF0b3JzLm9wZW5zaGlmdC5pby9jbmkiOiJ0cnVlIiwiZmVhdHVyZXMub3BlcmF0b3JzLm9wZW5zaGlmdC5pby9jc2kiOiJmYWxzZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vZGlzY29ubmVjdGVkIjoidHJ1ZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vZmlwcy1jb21wbGlhbnQiOiJmYWxzZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vcHJveHktYXdhcmUiOiJ0cnVlIiwiZmVhdHVyZXMub3BlcmF0b3JzLm9wZW5zaGlmdC5pby90bHMtcHJvZmlsZXMiOiJmYWxzZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vdG9rZW4tYXV0aC1hd3MiOiJmYWxzZSIsImZlYXR1cmVzLm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vdG9rZW4tYXV0aC1henVyZSI6ImZhbHNlIiwiZmVhdHVyZXMub3BlcmF0b3JzLm9wZW5zaGlmdC5pby90b2tlbi1hdXRoLWdjcCI6ImZhbHNlIiwib3BlcmF0b3JmcmFtZXdvcmsuaW8vc3VnZ2VzdGVkLW5hbWVzcGFjZSI6Im52aWRpYS1uZXR3b3JrLW9wZXJhdG9yIiwib3BlcmF0b3JzLm9wZXJhdG9yZnJhbWV3b3JrLmlvL2J1aWxkZXIiOiJvcGVyYXRvci1zZGstdjEuMzMuMCIsIm9wZXJhdG9ycy5vcGVyYXRvcmZyYW1ld29yay5pby9wcm9qZWN0X2xheW91dCI6ImdvLmt1YmVidWlsZGVyLmlvL3YzIiwicHJvdmlkZXIiOiJOVklESUEiLCJyZXBvc2l0b3J5IjoiaHR0cHM6Ly9naXRodWIuY29tL01lbGxhbm94L25ldHdvcmstb3BlcmF0b3IvIiwic3VwcG9ydCI6Ik5WSURJQSJ9LCJsYWJlbHMiOnsib3BlcmF0b3JmcmFtZXdvcmsuaW8vYXJjaC5hbWQ2NCI6InN1cHBvcnRlZCIsIm9wZXJhdG9yZnJhbWV3b3JrLmlvL2FyY2guYXJtNjQiOiJzdXBwb3J0ZWQifSwibmFtZSI6Im52aWRpYS1uZXR3b3JrLW9wZXJhdG9yLnYyNC43LjEiLCJuYW1lc3BhY2UiOiJwbGFjZWhvbGRlciJ9LCJzcGVjIjp7ImFwaXNlcnZpY2VkZWZpbml0aW9ucyI6e30sImN1c3RvbXJlc291cmNlZGVmaW5pdGlvbnMiOnsib3duZWQiOlt7ImtpbmQiOiJIb3N0RGV2aWNlTmV0d29yayIsIm5hbWUiOiJob3N0ZGV2aWNlbmV0d29ya3MubWVsbGFub3guY29tIiwidmVyc2lvbiI6InYxYWxwaGExIn0seyJraW5kIjoiSVBvSUJOZXR3b3JrIiwibmFtZSI6Imlwb2libmV0d29ya3MubWVsbGFub3guY29tIiwidmVyc2lvbiI6InYxYWxwaGExIn0seyJraW5kIjoiTWFjdmxhbk5ldHdvcmsiLCJuYW1lIjoibWFjdmxhbm5ldHdvcmtzLm1lbGxhbm94LmNvbSIsInZlcnNpb24iOiJ2MWFscGhhMSJ9LHsia2luZCI6Ik5pY0NsdXN0ZXJQb2xpY3kiLCJuYW1lIjoibmljY2x1c3RlcnBvbGljaWVzLm1lbGxhbm94LmNvbSIsInZlcnNpb24iOiJ2MWFscGhhMSJ9XX0sImRlc2NyaXB0aW9uIjoiIyMgTlZJRElBIE5ldHdvcmsgT3BlcmF0b3JcblRoZSBOVklESUEgTmV0d29yayBPcGVyYXRvciBzaW1wbGlmaWVzIHRoZSBwcm92aXNpb25pbmcgYW5kIG1hbmFnZW1lbnQgb2YgTlZJRElBIG5ldHdvcmtpbmcgcmVzb3VyY2VzICBpbiBhIEt1YmVybmV0ZXMgY2x1c3Rlci4gVGhlIG9wZXJhdG9yIGF1dG9tYXRpY2FsbHkgaW5zdGFsbHMgdGhlIHJlcXVpcmVkIGhvc3QgbmV0d29ya2luZyBzb2Z0d2FyZSAtIGJyaW5naW5nIHRvZ2V0aGVyIGFsbCB0aGUgbmVlZGVkIGNvbXBvbmVudHMgdG8gcHJvdmlkZSBoaWdoLXNwZWVkIG5ldHdvcmsgY29ubmVjdGl2aXR5LiBUaGVzZSBjb21wb25lbnRzIGluY2x1ZGUgdGhlIE5WSURJQSBuZXR3b3JraW5nIGRyaXZlciwgS3ViZXJuZXRlcyBkZXZpY2UgcGx1Z2luLCBDTkkgcGx1Z2lucywgSVAgYWRkcmVzcyBtYW5hZ2VtZW50IChJUEFNKSBwbHVnaW4gYW5kIG90aGVycy5cblRoZSBOVklESUEgTmV0d29yayBPcGVyYXRvciB3b3JrcyBpbiBjb25qdW5jdGlvbiB3aXRoIHRoZSBOVklESUEgR1BVIE9wZXJhdG9yIHRvIGRlbGl2ZXIgaGlnaC10aHJvdWdocHV0LCBsb3ctbGF0ZW5jeSBuZXR3b3JraW5nIGZvciBzY2FsZS1vdXQsIEdQVSBjb21wdXRpbmcgY2x1c3RlcnMuXG5cblRoZSBOZXR3b3JrIE9wZXJhdG9yIHVzZXMgTm9kZSBGZWF0dXJlIERpc2NvdmVyeSAoTkZEKSBsYWJlbHMgaW4gb3JkZXIgdG8gcHJvcGVybHkgc2NoZWR1bGUgcmVzb3VyY2VzLlxuTm9kZXMgY2FuIGJlIGxhYmVsbGVkIG1hbnVhbGx5IG9yIHVzaW5nIHRoZSBORkQgT3BlcmF0b3IuIEFuIGV4YW1wbGUgb2YgYE5vZGVGZWF0dXJlRGlzY292ZXJ5YFxuY29uZmlndXJhdGlvbiBpcyBhdmFpbGFibGUgaW4gdGhlIGRvY3VtZW50YXRpb24uXG5UaGUgZm9sbG93aW5nIE5GRCBsYWJlbHMgYXJlIHVzZWQ6XG5gZmVhdHVyZS5ub2RlLmt1YmVybmV0ZXMuaW8vcGNpLTE1YjMucHJlc2VudGAgZm9yIG5vZGVzIGNvbnRhaW5pbmcgTlZJRElBIE5ldHdvcmtpbmcgaGFyZHdhcmUuXG5gZmVhdHVyZS5ub2RlLmt1YmVybmV0ZXMuaW8vcGNpLTEwZGUucHJlc2VudGAgZm9yIG5vZGVzIGNvbnRhaW5pbmcgTlZJRElBIEdQVSBoYXJkd2FyZS5cblxuVGhlIE5ldHdvcmsgT3BlcmF0b3IgaXMgb3Blbi1zb3VyY2UuIEZvciBtb3JlIGluZm9ybWF0aW9uIG9uIGNvbnRyaWJ1dGlvbnMgYW5kIHJlbGVhc2UgYXJ0aWZhY3RzLCBzZWUgdGhlIFtHaXRIdWIgcmVwb10oaHR0cHM6Ly9naXRodWIuY29tL01lbGxhbm94L25ldHdvcmstb3BlcmF0b3IvKVxuIiwiZGlzcGxheU5hbWUiOiJOVklESUEgTmV0d29yayBPcGVyYXRvciIsImljb24iOlt7ImJhc2U2NGRhdGEiOiJpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBUEFBQUFDa0NBWUFBQUNwU3FOekFBQUFBWE5TUjBJQXJzNGM2UUFBQUFSblFVMUJBQUN4and2OFlRVUFBQUFKY0VoWmN3QUFGaVVBQUJZbEFVbFNKUEFBQUIzMVNVUkJWSGhlN1oxdGtCWEZ1Y2ZIVzJwaHl1aXVWN2tsbENKZ05GZTVrUVRVM0ZKVUZQTUpGVlBLcC9nQ1Njd1hGVEJKNVZhWjhHTGloNVNXdkpndmlSWUxtRTh4SlJpOVg4UUFDbFpTVVVFVVU4bE4zSVdrbEVwdVhRNVJJK1NsM0R1LzJYbVczdG1lN3A0NWM4NmVPZWY1YlUzdG1YUG1wYnVuLy8wOC9YVFB6RW5ETVpHaUtMWGtYOUwvaXFMVUVCV3dvdFFZRmJDaTFCanRBMDh3cjcwN0VEMzk5dEowVGNreTQxL25SMStic3lOZFU3S29CVmFVR3FNQ1ZwUWFvd0pXbEJxakFsYVVHcU1DVnBRYW93SldsQnFqQWxhVUdxTUNWcFFhb3dKV2xCcWpNN0hhVE9QWXdlaTk5OStJR244N0ZCMzVhQ2c2N2VTKzZOd3paaWYvc3h6NzU5SG82UEZEMGJHL042TERIKzZQanNUN0h2N2dqZlRYM2tCbllybFJBYmVRWS84NG1nanV3SiszSlFMa005K1pYRDVsU1hUYnJJM3BXaGp2eGNjWmJMd1VEUjdabFh5bVVlaFdWTUJ1Vk1BVmcwQmZQN3c1ZWh2UldnU2JwWXlBczd3VEMvbjFkemRGZzBkZjZqb3hxNERkcUlBcndCUXRWckVJVlFqWVJNUk1lcm9CRmJBYkZYQVRJTlk5ZjFnZnU3Tzd2SlkyajZvRkxHQ0pYMHVGWEdlcnJBSjJvd0l1QVpZMkVXNUJhMnRqN3BTN293VXpWNlZySitnLzdZTDBVL01nNUJjSDE5UlN5Q3BnTnlyZ0FqUWpCQVE1by8rNmFNb1pzNk8rU2RPaUtaOGNpVHkvL2VldHVmY0RuM1pLWDNSdXZOMjVwMThXVFQzanMvSG55NUw5eWtCRWU4L0JkZEVyZjF4ZjJsdVlDRlRBYmxUQUFaUVJMdUs3NUp4RnNXaXZqUzZkdkNoWnQxSDBodjZrSVRqcnVtanV1WGNsLzR0Q0hyYi9mblZ0K3NncVlEY3FZQWU0eU50ajRSWnhsYkd5dU1TSmhjMFJyVWt6VCtRNDY3VHB5Ym5tVExrci9TYWNBN0hsZi82M0QzUzhXNjBDZHFNQ3R0QTROaFQ5SkJaVnFIQVI2bFhuTFl1dW5yWThTTFFtVlR4U0I2czhkK3JkMFp6WUtoZnBPK05XWTQxZmlmdnpuWW9LMkkxT3BjeUFxN3orbDU4TEVpOWlYVEJqVmZTdHE0ZWlHeTljWFZpOFZTRnU4WTlldXo1Ni9iMXcxNWcrK00yZlhoZmRNZnVaU29ObVN2dFFDNXd5ZUdSblluVkRYTXBtTEc2V1ZqelVEdGY2bnJrN0NvbnlTT3gxYkhuaml4MDNWVk10c0p1ZUZ6QVJXYXp1bmtQcjBtL2N6T2lmSHkyZXRiRXlpMFdBakNFcHJLRWM4M2pzMnBLdXh2R0RwZnVvSjhWL0N5NWNsWGdJUmNDU1V4NmRnZ3JZVFU4TCtOMFA5a1ZQeFZZbnlPcWUyaDh0bUw0eXNicGxrVG5NM015QXBVT2dzODY1MVRtUkF5R3pIM09wMy83VHRtVFNTQkhLV09PWEQ2Nk4vdnQvSGtqWEpoWVZzSnVlRmZEdVA2eUxudi9OaW5UTlRSa1JDUFNsdVpsaDcrSE4xdkhYb2pPeHBMOWJaTjR6NlY5NDBXUFJwZisyS1AzR0Q0M2JFM0dmZXFMSGpGWEFibnBPd0IvOW94RTl0ZitMd1JGbVprb3R2SGh0b2I0dWxaNEpFN2psUGdHVW5VcUplSEcvUXlkbWxIR3A2UmNUR0N2cnhsZUJDdGhOVDBXaHNTb2JBaVBNd0JqcjdiTUdnc1dMa09nL2ZuL1A5TVJLdHRKNjRRMFErVjcyK1gzSjhKR1A0Zmp2eGQrdktkUy9iY2J6VU5wRHp3Z1lsM25ETHo0WFpFMndWamZGVnZmR21hdlRiOXkwVTdoWkVOZmkvOWdVM1g3cFJtOURnNGhKMy9NRityY3E0czZtQndROEhEMzMyeFhCL1YzRWUxc3NodEJnMVlFL2JZM1cvL0t6aFlTTDBCQUVzN2FxWXU3VUpkSDluOThiSkxUZEI5Y21RMmFocUlnN2w2N3VBeGZ0NzRwNG1kWGtnMlAvOU5kTGs4aHdDSWlWSU5JbDU5d1NDK0tFRUdRY21LbVgwL3V2aldaTlhsUnFqck1RT3A1YnRrOU1GNlNkSG9iMmdkMTByWURMQkdEbzg0YTR6VVdHbjJSdTlNd2NVZG9tY21EeGFFank5dkh4MFQ4YjBZOWV2YjRsSW43bnlNNmtYTnVGQ3RoTlY3clFyUlJ2YUYrYWNXUDYwVis3ZkdkaElaSitobkRLVHFqNHhNbjkwVDJYKzExZUNXd1ZtWDQ1ODZ6NWhTZUhLSzJqS3dVOEtlNWpGaEh2bEU5K05raTgyOTlaSGRTWHhvSXV1M0p2VTVNK3lrU05UZjRXdTdtMkoxMW00VHcwR09FTVI0Zi91ai85ckV3MFhTbGdLbTZSQU5ITXVPL3BBL0crK0k1ZlREUUdvY0VrSHlMaTBHbWVBb0w4WVd6Qm1jSGxJN1R4RXJiSFpSRGE3MWRhVDFjS09PbmJ6VnlacnZsNXpYdHorM0RVK01odjBSRUQwZHBtYjNBd1FjUkUwVVBFQ055VVFhQXB4QVBCVTdoejlqUHBtcC9RUmt4cEgxMDdqRVFrTjlRS0g0L2RUWjdtbU05SjBaeXAvc2tTazA3dHExUzhKazhmOEEvNzBEL0g4b1pFaWVtakZ4a2FVdkYySmwwcllLenduQ2wzcG10dUVsZDE2S0YwelE0TmdrK2NoOS8zUHdlNkxPOTlzQzhSVVI2aC9YT2diTzZabytMdEJycFd3REJuNnQzQmxYVG8vM1k1clRDVm5udUFYUno3UnlQYUUxdkJWdkhLSHphTWM0MFpqOTZ5LzlaZ2daRVBocWhDSDQ2bjR1MXN1bHJBVkZhbUdJWVFZb1d2dW1DWjF3b2pzbFpCQS9HVFg1OXdwWG4wRDhOTlJZSktOOHhjR1RSUkJWUzhuVTlYQ3hpSzlJVjlWcGp4Vlo4VnBqOWROR3BjQkVramswbENJODFDNkZnM3FIanJRZGNMR0NzY0dwR3V3Z29ueHhoOHFHVjlZWTcvOU50TEVzc2JPdFpOR1JTNU9hT01lQ21US29iT2xHSjB2WUNCbVZBOG16bUVFQ3Q4L1hSM2c0Q3IrM05QUTlBTUNEZTBnWkErYjhpa0V2clROQTVGeFR0eXM4UE82R3Z4RW5Kcm8xSWRQU0ZncXZIQ2l4OExHdUlKc2NMekxsanVkY3Q1QzRKN2FLcjFNRlIwLzMvdURlcnpTbithaHdRVVFlNVVJaWlHQlI2NXRYRkFyWEdiNkJFQmoxUTBuK1VVc01LdWZtd1NISnZsdnYrV2h1Q25nVSs1YkFVeW5UTWsybHltUHcyekp0OXFuWFZHZy9GZjg0YWloUmV0VlNHM21KNFJNSVJZVHBCK3JFdDhJUTBDVXhxNXRhK2R0OThCandFS25jN0pFekdMOUtjRkFtSThUOXJWaUZIZTZsYTNscDRTY0lqbEZMSkROamF1aVN1bzc3VW1UTUI0cmsxUGVKUTdvRUllQTBTandoVE41MzZ6dkZBRHd6bHdrVU1EWXVKV1k1RlZ5TlhUVXdLR0tsM3BwRy85NmJYSkd3UmR2UDd1UUxUK0Y2MjlFWjduVllmZUFVVi85MGV2elM4ODNKWDBkK2ZzQ0I1SE5oRWg2MXNncXFYbkJBeFl6cXZPZDQvbkFxNDBMd0J6OVExRDc3M0ZFb2ZlWkZDRVJGUkVnQVBTQUxqTXZEcW1hSCtYQmdLM1BIUUdWeDcwbTdIR2VrOXhOZlNrZ0xHY1BJa2lwTUlqWXQvVE54SVJ6OTNodGNUMGliKy9lMFp5ajIrelFrYTRpMmR0aXI0MWJ6RG9nUUZZM1IvR1ZyZW95eXhqeURRUUlWMlBVSGlpSm1sWG1xTm5IK3dPQ0NyMEdVOGh0d3J5S0p1ZkhsaWF2TUhmQjQwSHM4VDZUcHNXL2Z6M1llT3VuSnQzRHRQdkRuM0tCM25iODhkMXlYM0ZSYUdSd09WdDF1cmFvRUVod09mekJQU1JPbTU2V3NCUTVCbFBjNll1aVJZSHpLM21DWldoVDlJZ1luelZ0R1VqcjF1SmwvYytQUEcwQ3dRNzZlUys1SzMrdktXLzZLTjV5cnlZWEpoMy92TG9ocG1yS3JXNkF2Y3NiOWtmRnAxWEFidnBlUUZEa1RjRWhvbzQ5TUYzWmQvTTRJS25jQlo5TWJtQTFXM21nWG91RUN3TlNwSGdtUXJZVFkvMmdjZkNNNVZEZ3lwRWxFT2VxVHcxZHJrbFdOT09xQ3Zpd09MU3oyVXBJMTZzTG9HcVZvaFhucC9keWhzOWVoRzF3QVpGWEYraXFWaXFFQmNUSzh5MFNwczcyNndGUnFpODZBeGhoTGlrTnVqZk05VzBGY0xGRXlHU1g2WkJBYlhBYmxUQUdZcUllR1FJSi96SkZvQ1FYNDh0cGJ4ZHNJeUFSYlFjcTZ3d2dFa1p6YjR5TlE5dWpHQ2l5TjRDajZ5MW9RSjJvd0syVUZURVRDdjB6Y2l5Z1lCNTlTajNFUE8yQmx0RGdGVnQvTzFRZE9Tam9lUWR3VHlzdmF5bEZmQWF1SzhaNFZZZHBDSnRvVzltREVFRjdFWUZuTU9CUDI5TmJrWUlyWVR6TGxnUjNSQmJzNktDS0JKQWE1WldDcGZHYUhjczJyejNJSmRGQmV4R0JleUFjZUlpYjNnb1k0M2JJZUJXQ2hjWHZtekVPd1FWc0JzVnNBY21IUHprd05Kb3NCRmVRUkh5N1pkdURIcEpXYXNFakZEUFBYMTIwcUJVSFp6Q3dyNGVXMW9tckxSS3VJSUsySTBLT0pBaS9XSWh4Q0pYS1dBUkxXOUI1TTZmVmxoYit1eFZ1OGt1Vk1CdVZNQUZLT3BTQ3dqcGtzbUxva3ZQdm1YYzg2V2JFYkFJZHNycGwwV1h4S0pseW1QVm9rV29CS1dhalhpWFJRWHNSZ1ZjZ3QwSDF5V1Z1cWlRQllUR3U0RFArc1QwNk5qZkc5SGIvL3RzZFBTNC9UbFhFcG51bnpRU3BlNmZOQzM1VDBOZ3ZtZTRTdHJwSXZ0UUFidFJBWmNFOGVKV1U5R2JvUlZUS2N0QWZtaElPa0cwSmlwZ055cmdKbWxXeUJNbFlLd3NZOHIwYVg4ZEM3ZXNOOUZxVk1CdVZNQVZnUUR5cGt1NmFLZUFzYXpjN1lTVnJXSkNTRHRRQWJ0UkFiZUE3SFJKRjYwU01PSkVzTzgwZGxVMmcyc2lVQUc3VVFHM0dHNVlIMnk4bEx5LzZQQ0g0MFZVaFlCcEpCRHJ1L0c1amg0L2xKeXpVMTNpb3FpQTNhaUEyd3ppT2hLTEM2RTEvam9VVFRxbEw1bG9NUnB0VHY4ajlPUC9IQkg3c2ZnL0x4aG5uWDBiOGI1ODdpYWg1cUVDZHFNQ25tRGFPUmU2anFpQTNlZ04vWXBTWTFUQWlsSmpWTUNLVW1OVXdJcFNZMVRBaWxKalZNQ0tVbU5Vd0lwU1kzUWNlSUxoWm9KWERxMVAxNVFzVTA2ZkhkMzA3MnZUTlNXTENsaFJhb3k2MElwU1kxVEFpbEpqVk1DS1VtTlV3SXBTWTFUQWlsSmpWTUNLVW1OVXdJcFNZMVRBaWxKalZNQ0tVbU5Vd0lwU1kxVEFpbEpqYWpjWCt1REI1cDdDZU1FRnJYbWZrS0pNQ0FpNExuejg4Y2MwTnBVc3MyZlBIcjd1dXV1R1Y2MWFOYnh6NTg3MERIWTRMOXZhamlOTGYzOS91blU0TzNic3NCNUxscE5PT21tNDBXaWtXdzhQYjl5NDBicWRMUFBuejArM1BJRnZIOWZTMTljM1drN0xsaTBiM3JwMTY1ajArS0RjNGdiVGVtd1c4dWNyK3p5SzVNdFdMdDFDendvNHUweWZQbjE0MDZaTjZabkdnOUJ0KzhsQ1pSd2FHa3EzRHNOM3pFV0xGcVZianRCdUFlY3RkOTk5ZDFCZVd5VmczM0d6U3pNTlJhZWpmZUNVdUVKR2NjV01yci8rZXF1YmZ1MjExNmFmOHRtMmJWdjZ5VTljOXRHenp6NmJybzBucm5SUkxPQjByYk9JRzdwb3hvd1owWm8xeFY1NFhoVzdkdTBxMUpYeWxYV2RVUUZuaUZ2cVJNUkhqNDU5QlVyc1Jqcjd6MVNTbi8zc1orbWFIeXJnRzIrOGthN1pDV2swSmdyeWk0RGJMV0xPdTNsejhUZEJzay8ybW5ZREttQUxXT09sUzhlL0xlR1dXMjVKUDlsQmtLR1ZCQ3Zpd3RkZ2RBSVRJV0xLdDR3MVpiK1hYbm9wWGVzZVZNQTU0QTZiSXNPbDlRbVlTdUt6cXVDejFwenJycnZ1U3RjNkd4R3hyMEdxQ3E1TFhpTkpnOWZYMTVldWpZVjBybC9mZlk4dTZqb0JjeEh6bGlKd3dSOTY2S0YwYlFTc1lsNEZBZllKdFE2K0N0OHU5NWs4MFcwd2w2MWJ0MGFyVnExS2ZndkJWbGF0Z1BOczJiSWxYUnNQNlYyMmJGbTZOaDdLUE5SRHFnMXhvZFFHWHhTYWFLTXZPcnB2Mzc3aGdZR0JvQ2dteHpPSFRUZy93eW0yYldVaG11M0ROM3lVTit6UmlpajBraVZMMGkzdFVKNnhOMkRkMTF4c1pWOTFGSHB3Y05CNkhCYU94YlgxbFMyUi8yNmk1MXpvMmJObko5SG0rRUlIV1dVenNoeFhFcThiVFhES0ZTR055OXdiZmI3NTVwdlR0WW1ITWlMcWpFVjJRYjdZcmxWd2ZGZGZtK3ZLZ2hWMmVRNGJObXhJUDNVSFBkc0hqaTFsRkZ1bmRNME9sV2IvL3YzcDJnaFVFcGNiRGI3aEpKK2IzWW5EUnlFdTljc3Z2NXgrYWcxNVFTZ2FQWEdkK2V6cWZ1QkN0NnUvM2c1Nk9vamxhNjNoTDMvNVMvcHBCTVRyc3NLSTNoV2c4bGxvR29paS9mVjJnREJXcmx5WnJ0a0pDZUNWQmV2dUtqZFR0SzUrTU5lbkhmMzFkdEh6VWVqTExyc3MvV1FuVzJsQzNHaFhSZTZVNEZVWmFPeGMzZ2ZXelNXeXNpQTZWL0NLNjJFMmVxVFIxVEIzVXpDcnB3V01HSDBDdGhGU2tXMUM5VlZFMHRQcHcwYytqNlVWQXVhWWVRMGZaWmJ0Y3ZDZEs0N0FkVmkzYmwyNlZtOTYzZ0tYY1ZjUkw2NXVIbFFRV3ovWDEvOGlMYTdqZGdKbm5ubG0rc2xPdHN0UkJhNlpWNVNacmRFalVPbHFaTHNsbUtVQ0xpRmdXdmc3Nzd3elhiTmpDN2o0M0dlZmExNEhHbzFHK3FrYWFBeGRBczd6Q0h4dWRMY0VzM3Bld0dYeFJZcXoweXJ6ckxKQW85QU5BcTRhUkpibmxyc2FVbjY3Ly83NzA3WHhjRDI2d1FxcmdFdmlhK0VoTzV6a21vdUxKK0E3WGlkdzZOQ2g5Sk9kTWg1TkhqN3I2eXN6Zm5PNTBUUU9kUTltcVlCTEVoSW9NY2RGc2NpdUFFOGR4QXV0Q0ZMbHdibnlCT3l6c0lJcktJaDRXem41cEIyb2dKdUFRSWtMMHdLNytsc3VWN0NUY0xtelFwVkJPRjhmbFhPUm5yd0ZiOEUxeWtBalcrUVcwRTVFQmR3RW9ZRVNYMFdwZy92c2MyZUI4bkM1ckVYZ2ZLNEpGL3crZi83OFpFYWRhN0hkRm1yQzlmRTFGSjJNQ3JnSnNKeXVpUmRVTXJGYXJrcFNCL2VaZWNnK0FWYzVDY1hYNWFnS3JsSG9IV1NkaUFxNFNYd1RMd2hjdWNSTEk5REowV2U4aUJVclZuaHYyaWNmVmMzaFJsVHR2SGVYaHFtdXdTd1ZjSlBnL3JvaXI0alg1VDdqY2s2a2dLbTRacjlSdkFXQ084dVhMMC9jME5CWlMxVmE0SFpheFRvSHMxVEFUWUxsOFZsaDE5MUpFejMzbVp2M3MvMUcrcFpMbGl4SnJHQ29aU0tnVjlVUUVtSnluVmNhelNLTHEyK094YmMxc3FTQk1saTllblZiM1BreXFJQXJvS3dJcTNRN0p4SkU3N3RUS1JURTVKc3Z2bS9mdnVTNVpVV1daNTU1SmoyQ0hid09zNnZEUHJmZWVtdnlIK2hHdUxwQ0U0VUt1QUo4RXdaYzFIMzJWWDkvZnlJT3JGd1ZpQXVmQitWVnBxeTVScTQwWm9OWnhDN3dLaGlLWXFHaDdjUm5hcW1BSzZMTVhVUmxLMk9uZ09YbHlTWlZqZjBpSWxld3JGbVB4ZGRZbXNFcy9wTWU0QVlOSnUyMDRrYU5abEVCVndBVnE2Z2xyYlA3VEtQREV6cjI3dDFiK2QxVHJ1bW1uTGRNUXdraDF3alJ5dms1RHhhWmEwVDM0SUVISGloOTdsYWlBcTZJTW03MFJBZXdRc0gxUktpNGxBTURBMG0va01CTzFkNkQ3NmtielRaNHZtdUV4UlUzbWE3QjJyVnJrLzQyM3lIZVRoUnc3ZDVPcUNqS0NkUUNLMHFOVVFFclNvMVJBU3RLalZFQkswcU5VUUVyU28xUkFTdEtqVkVCSzBxTlVRRXJTbzFSQVN0S2pWRUJLMHFOVVFFclNvMVJBU3RLalZFQkswcU5VUUVyU28xUkFTdEtqVkVCSzBxTlVRRXJTbzFSQVN0S2pSbnpTQjBlNmlWUDNwczJiVnJ5UHc5NVQreVpaNTQ1N2psRHZuZkltbkFlODd3aFpQZkpTNnVrdy9jNzVHM0RlZGlPLzd6cHp2Y2NLRmZlYldWbEVscitJZW4yd1RGNC9oVHBjYjNCRDF6WHAwaWVmSmpIOHUxWE5OOXl2THowdXE2YkRWZWRxcUpjSVNpUENGall1WFBuOENtbm5KSXMzL2pHTjlKdngvUHh4eCtQYnJkbXpacjAyeEhNMzN6THB6NzFxV1Q3cFV1WFduKzNMYWVlZXVyd3JsMjdodGV0V3pkbVBZdWtJKy8zSTBlT2pCN3p0dHR1Uzc4OXdkRFFVSkt1czg4K2UzUTdGdEs4WmN1V2RLdXhjTTRMTDd4d3pQYlpoZCsvKzkzdnBudU1aV0JnSU5tR05NZVZJUDEyTEh2MzdoMDlGbW1KSzBINlN4Z2JObXdZbHlmV3VkNk5SaVBkYWl4Y1kzUDc3RUtldnZ6bEx5ZGxsc1czcjdtWWRjbXNpM25MalRmZWFEMW5Gck9PVFo0OGVWdytpOVJaRnE1UGxzMmJOdy9QblR0MzNMWjU1UUp5dlYzTDdiZmY3c3hqcmdzZFgyam5JejRuR3JOMTI3OS9mL3JwQkdiYWJiL0xkenh1ZE42OGVjbG5JUzZ3S0s0YzBWTlBQVFd1aGFSMS9jcFh2aEo5NzN2ZlM3OHBCaTAwcjgyODRvb3IwbS9DSVYyTEZ5OU9Qdk9reU8zYnR5Y1dKWVQ0V2lmcC92clh2ejR1VDZ6ejVFWFM1SG9xWkI3a2liY3BmT0VMWHlpMWYxbDRBUHpGRjErY1hDY2Z6ejMzWFBJZnEyZXJEODNBOWFSc2JjZHR0bHg0TFE5NXpIdFgxTW5wLzNGd3diLzV6VzlHdi9yVnI5SnZpc1BEc0crNjZhWjBiVHk0R1FpSU42MmJMN2ptM0dRYWVQVHF0Ny85N2VTendDTk96empqakdSL0xzanUzYnZIdksyZC9lVmROM3grL3Zubng3M04zWHg3dnZsNDE3aDFUczR0THRVMTExeVRQRStZODdFUGxZVmp4bFkwY1hIdXVPT09aTHNzcFBHUlJ4NUoxMDdBQmVVWXZENlRZM3puTzk5SmYzSERPUkV2NmFMTW5uNzY2V0Eza24yNWx2TEtFa1JQZVgvbU01K0ozbi8vL2FTeEZ0ZnZubnZ1aVY1NDRZVmt1eXljOTlGSEgwM0tRbUIvS2hkbDQ5cmZ0bThXMnpPbVpUL1Nha0o2S1QvK3g5NURVczlzcmpHUWIrb0pVQllQUC96d21Hdk9PV2dNVGJnK2xCbmNkOTk5U1YyMmdYaWxNWGVWSzljdVQwc2hlYVJjU2ZPNFBNWVpHaVhydHVBcTRISmxNVjBPbHd1ZC9TMFU4eGh4eTVaK094YTJXYkJnUWJJTmJwRUp2NW51VE5adGN1MjdhZE9tMGYxd2Y3S1laV1E3cjdqUXVIYzJ6SFBqQXB1NFhPalljbzZlTjY0MDZiZGhEQTRPanU3TE9iUEhwanNoNVdYcmNvZ2JuT2ZhazZjVksxWll0L0h0bTRlVXN5MDlBcTZsYkJON0VPbTNZekhMMjh4alhuZEJNTTlQbmJCaFh1OXp6amxuT0JaOStzc0k1cms1VHR5UXBMK01ZRjd2dkR5YTZZZ2J5dlRiRXppajBQSHZTZXNTRjN6NlRlZEFxN1Z3NGNMa002MHJyWlJBZXNXZEVTdWRkVzlrSFFzcmtOOGYvL2pIeVdlT2I3T090SUppZGJQbkRZSGppc3NldXUvamp6K2V0T2FBSnhGcXRRWEpxK1FwYTdsNWlMbDRDNVNCdUp1aGNGeXpISEZ0MndINVlDSE5ZbUd6VUJmb1RwRkdQRG14WUZqbFp1RzRjZzN4MHJKQks4NXBscXZwOVlVaW5nTDc0eFZreVJXd1BJVWVseEx6M1ltWUJXWldHaWtvTGk2dVZiWlNVcUc1NEthWUJLa0lITnZtb21iM0tkcTRrUmE1NkhrdW53bHZCcURmQ3JpWXVGcEZNUnVLODg4L1AvMDBGdE9sZEVWRzh3akpTOVdFTktCU0YwZ2ZidkNYdnZTbDVCclFyV29XcVN2VWlieXVvbG1QUWh0c0U2bGZuTU5XeGxZQnMvSFZWMThkM1h2dnZjazZMUTFXb05PUVBnRVg1SzIzM2txKzQ3TmNOSDZYZm9YNS9sZlRHcHNWRitTaXRLcEMwb3BLV2t5clpjTU1XbUVsNmZlV3dSU2s2dzE5WmZOTW1adUJwS3JlVk9oRDZpVDFOWHNkZ1hUOTRBYy9TRDRqWHJhVHZxeHBQY3NpZFFWQ2c0bEZJUDNTRHdmYnU1MmNMclM0V3h3SVY5cE1jQWhjVktLNXRvWE9lUldJRlRiZEV6N0x4WkpNYzdGSXZ5bHdLbXpXN1FraHBJSWkxSzkrOWF0akZ2Sjk1WlZYSm9JaWZTNXJTam9sYUFXazNjeGpLd2lwaEZnRTBtUXVWRElSTVBVbFQweEVhclAxZ0lXZ1liYUxJMGpkeTVibDVaZGZQaG84NGhyYXppbGRLY3BhTENUYlNhTmZoUnNkZ3E5aHpNdmo1TW1UUnh0N2dtTTJqNUNkUjdGMTNNMmdqUVNVNkp6TGQ2NGdsbXZKQzA2QmVRelhkbUNPQnhPWWlGM09NZXNTYUpBOHNTN0JqT3o0cjJ6TGIzSEZTcjhkVDE2QXhkemZ0UkR3WU53d2l6a3VTTnJrc3h5VEFKUXYrR0lqSkpCa3BqMWI1cksvYnlGZjJlT0g3SnN0UnpEcm5Xc2hTR1RMRS9reHgzNEZ2cGVBV3pZSWFXTFRRcGFRSUJUbmswQld0azZGakFPenNIL2NnS2Q3amNWcGdZRVdTNndZTFpZNXZ1cURmUWtjMkJZSlFEV0xhVUZwYlNWOWZDOHRuL1NEOSt6WmsxZ3lhWld6L2Q4cXdacmhJc3NpYWNGNi8rNTN2eHN6YkdhRG9SbXgwbUtwc1NpZDJKVUJyalZETVZZcmtjSndqSzB1UFBqZ2cwNnZobTZRbEtOY2J5a2Ixem5GWXpHSGdOaFAxcWtMUmVweksvSGxNZGM3R3RIeENIbXREdUY2V2xkK3d3cVlzNWhjRmpqN1d5am1NWHdXbUcxSkcybG1LRUZhTzRaZEJHbnBhSEhOUE5yQy9pRVdlT3ZXcmFQSHlMUEEyZjFOSzVqWFdtZGJaSE80U1BKRkhyZ2VSVERQN2JMQWNvM3pMREQ3TTZ4STNaQmwyN1p0enVHaGtIUGJ5UE55cUh1U3psQXZpWHJCdVdVeDY3TlpUMHlxdE1CNWRTSnZmMU5mcmp5QzF3SURyU090Sk1RRmtBeUVkeEswV0hGZWtoYVhGcFdXeTR3S2lnZEJSRjNTN3V2L2tzODhwRjlhQkt3UGtNNlE4aVArWUE0WFNmbVhHUlV3VzIrc1RoNnUzd1NzbDd3cmw0V3lkVm5kcWlHWVp3WlhiUmFVTXBZK09aK1o2QkVibnRIbG9vc3VHczByMjRYazI0Y3JjbDgwcWsvZGxLSEt2RHdLUVFJR3hoOGxVQ0Jqa3AwQVloVjMzSXcwUzFyQkZLc1VCcTZLRGRrT2tkb3VMQlhpelRmZlROZjhBUXFoeUVVaFQxa1htL3hJbm56N1p4R0JrWGF6akV6TTQ1MTMzbm5wcDg2RXhwRHlKRDhFZTJ5RWptVnpqZk1DYUQ1azVoanB5QXN3WWdpa0htVm5XdVhCOVpmR20yTzdHdnhnQVhQUUo1NTRJcmpDdHBPc0pUWEZLNWo5WGZKaTYvK2EzMU53UklHeklxYkZOaU91TGl0dVV1U2kySkR5QjFmRnRVRjV5SFZqV0NYclhUQmNKY2ZqUExieTZ5Uk1LMHhESzlkRElGYkRkWk15SSthUVhaaldLSTFBV1krU2F5L2xTbXdpMnhEZ0xjbVVZTklTV2xlQXVoWFM0QWNMR0hDbHBlQkNZSTR5YzBYemxxb3N1VmxCS2Foc2dJenZ6RUFHNUZWU00xd2Y5MHVTNFFwSmI5d2ZpZUwrWWZJYnh6UmQzQkJDTDBvZWxEOUJINkRpaGdhMHFQQ21DNDRMU1Q3SUU1TkV1SWxCdWdYa3Z4VUNSaWhjYnlsTDIxS2tQRXdyekpDa05MU3N5Mnc2ZnNmTnA5eXpDMktTYmhibnpUYlVJVkFIcEZ3NUwzWEZMRmZLV2NxVmM4cTFENEZqeS9iT1JpYitjWlNRanJ2WktXZkpCcXI0WFg3ekxRVEViSmpIOEFXeGdPMGx5Sk1YVURDREg2N2hBeURJWWViUnRzUVhLZDM2Qks2QWhTQmx6SkxOdnhuVUlOaGlJNXVQMEdFbDBpYkRKM2xMM25CRjJVQVV5TDRoaTFtWDhvSllRalkvY2ozTWVkKyt1cE1OZEptRWFFSHc1WkhyYkNzM1h4QXNXNit6YzZtaGtBVUdXZ1p4NVRvRjBpUldsMWJYWmtINFhseVl2UDZ2Z0tWNzlkVlhFMitEbHRPRWZRbnJGN1crQW1tVDlObmNQeCttKzJnRzVYeFFSbzg5OWxqMDVKTlBqdXVMa1Vjc3UzTzRvc01nUCtZZFpuUU5zS0xTRitWM3BrMjY0RHFJRlc5bWF1WEtsU3VUc3N2V0s4cVNjcVV1WmV0UkNPVEJ0UEMyeVU5am5zaWgyQ0dLU09Vb2N4RTZGY2tURmJndW9xMExOTXp0S2xjVnNLTFVtTUl1dEtJb25ZTUtXRkZxU3hUOVA1WnRFRWRwNlZPekFBQUFBRWxGVGtTdVFtQ0MiLCJtZWRpYXR5cGUiOiJpbWFnZS9wbmcifV0sImluc3RhbGwiOnsic3BlYyI6eyJjbHVzdGVyUGVybWlzc2lvbnMiOlt7InJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJjb25maWdtYXBzIiwiZXZlbnRzIiwicGVyc2lzdGVudHZvbHVtZWNsYWltcyIsInNlY3JldHMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJlbmRwb2ludHMiLCJuYW1lc3BhY2VzIiwicG9kcyIsInBvZHMvc3RhdHVzIiwic2VydmljZWFjY291bnRzIiwic2VydmljZXMiLCJzZXJ2aWNlcy9maW5hbGl6ZXJzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsibm9kZXMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJwb2RzIl0sInZlcmJzIjpbImxpc3QiXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJwb2RzL2V2aWN0aW9uIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbImFkbWlzc2lvbnJlZ2lzdHJhdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VzIjpbInZhbGlkYXRpbmd3ZWJob29rY29uZmlndXJhdGlvbnMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiYXBpZXh0ZW5zaW9ucy5rOHMuaW8iXSwicmVzb3VyY2VzIjpbImN1c3RvbXJlc291cmNlZGVmaW5pdGlvbnMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiYXBwcyJdLCJyZXNvdXJjZXMiOlsiY29udHJvbGxlcnJldmlzaW9ucyIsImRhZW1vbnNldHMiLCJkZXBsb3ltZW50cyIsInJlcGxpY2FzZXRzIiwic3RhdGVmdWxzZXRzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbImFwcHMiXSwicmVzb3VyY2VzIjpbImRhZW1vbnNldHMiLCJkZXBsb3ltZW50cyIsInJlcGxpY2FzZXRzIiwic3RhdGVmdWxzZXRzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbImFwcHMiXSwicmVzb3VyY2VzIjpbImRlcGxveW1lbnRzL2ZpbmFsaXplcnMiXSwidmVyYnMiOlsidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbImJhdGNoIl0sInJlc291cmNlcyI6WyJjcm9uam9icyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJjZXJ0LW1hbmFnZXIuaW8iXSwicmVzb3VyY2VzIjpbImNlcnRpZmljYXRlcyIsImlzc3VlcnMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiY29uZmlnLm9wZW5zaGlmdC5pbyJdLCJyZXNvdXJjZXMiOlsiY2x1c3RlcnZlcnNpb25zIiwicHJveGllcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiY29vcmRpbmF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsibGVhc2VzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbImV2ZW50cy5rOHMuaW8iXSwicmVzb3VyY2VzIjpbImV2ZW50cyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJnZXQiLCJwYXRjaCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJpbWFnZS5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbImltYWdlc3RyZWFtcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiazhzLmNuaS5jbmNmLmlvIl0sInJlc291cmNlcyI6WyJuZXR3b3JrLWF0dGFjaG1lbnQtZGVmaW5pdGlvbnMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsibWVsbGFub3guY29tIl0sInJlc291cmNlcyI6WyJob3N0ZGV2aWNlbmV0d29ya3MiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsibWVsbGFub3guY29tIl0sInJlc291cmNlcyI6WyJob3N0ZGV2aWNlbmV0d29ya3MvZmluYWxpemVycyJdLCJ2ZXJicyI6WyJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsibWVsbGFub3guY29tIl0sInJlc291cmNlcyI6WyJob3N0ZGV2aWNlbmV0d29ya3Mvc3RhdHVzIl0sInZlcmJzIjpbImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbIm1lbGxhbm94LmNvbSJdLCJyZXNvdXJjZXMiOlsiaXBvaWJuZXR3b3JrcyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJtZWxsYW5veC5jb20iXSwicmVzb3VyY2VzIjpbImlwb2libmV0d29ya3MvZmluYWxpemVycyJdLCJ2ZXJicyI6WyJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsibWVsbGFub3guY29tIl0sInJlc291cmNlcyI6WyJpcG9pYm5ldHdvcmtzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiLCJwYXRjaCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJtZWxsYW5veC5jb20iXSwicmVzb3VyY2VzIjpbIm1hY3ZsYW5uZXR3b3JrcyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJtZWxsYW5veC5jb20iXSwicmVzb3VyY2VzIjpbIm1hY3ZsYW5uZXR3b3Jrcy9maW5hbGl6ZXJzIl0sInZlcmJzIjpbInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJtZWxsYW5veC5jb20iXSwicmVzb3VyY2VzIjpbIm1hY3ZsYW5uZXR3b3Jrcy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsibWVsbGFub3guY29tIl0sInJlc291cmNlcyI6WyJuaWNjbHVzdGVycG9saWNpZXMiLCJuaWNjbHVzdGVycG9saWNpZXMvc3RhdHVzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbIm1lbGxhbm94LmNvbSJdLCJyZXNvdXJjZXMiOlsibmljY2x1c3RlcnBvbGljaWVzL2ZpbmFsaXplcnMiXSwidmVyYnMiOlsidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbIm1vbml0b3JpbmcuY29yZW9zLmNvbSJdLCJyZXNvdXJjZXMiOlsic2VydmljZW1vbml0b3JzIl0sInZlcmJzIjpbImNyZWF0ZSIsImdldCIsImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJudi1pcGFtLm52aWRpYS5jb20iXSwicmVzb3VyY2VzIjpbImNpZHJwb29scyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJnZXQiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsibnYtaXBhbS5udmlkaWEuY29tIl0sInJlc291cmNlcyI6WyJjaWRycG9vbHMvc3RhdHVzIl0sInZlcmJzIjpbImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbIm52LWlwYW0ubnZpZGlhLmNvbSJdLCJyZXNvdXJjZXMiOlsiaXBwb29scyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJnZXQiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsibnYtaXBhbS5udmlkaWEuY29tIl0sInJlc291cmNlcyI6WyJpcHBvb2xzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiLCJwYXRjaCIsInVwZGF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvIl0sInJlc291cmNlcyI6WyJjbHVzdGVycm9sZWJpbmRpbmdzIiwiY2x1c3RlcnJvbGVzIiwicm9sZWJpbmRpbmdzIiwicm9sZXMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsic2VjdXJpdHkub3BlbnNoaWZ0LmlvIl0sInJlc291cmNlTmFtZXMiOlsicHJpdmlsZWdlZCJdLCJyZXNvdXJjZXMiOlsic2VjdXJpdHljb250ZXh0Y29uc3RyYWludHMiXSwidmVyYnMiOlsidXNlIl19LHsiYXBpR3JvdXBzIjpbIndoZXJlYWJvdXRzLmNuaS5jbmNmLmlvIl0sInJlc291cmNlcyI6WyJpcHBvb2xzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbIndoZXJlYWJvdXRzLmNuaS5jbmNmLmlvIl0sInJlc291cmNlcyI6WyJvdmVybGFwcGluZ3JhbmdlaXByZXNlcnZhdGlvbnMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX1dLCJzZXJ2aWNlQWNjb3VudE5hbWUiOiJudmlkaWEtbmV0d29yay1vcGVyYXRvci1jb250cm9sbGVyLW1hbmFnZXIifV0sImRlcGxveW1lbnRzIjpbeyJsYWJlbCI6eyJjb250cm9sLXBsYW5lIjoibnZpZGlhLW5ldHdvcmstb3BlcmF0b3ItY29udHJvbGxlciJ9LCJuYW1lIjoibnZpZGlhLW5ldHdvcmstb3BlcmF0b3ItY29udHJvbGxlci1tYW5hZ2VyIiwic3BlYyI6eyJyZXBsaWNhcyI6MSwic2VsZWN0b3IiOnsibWF0Y2hMYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6Im52aWRpYS1uZXR3b3JrLW9wZXJhdG9yLWNvbnRyb2xsZXIifX0sInN0cmF0ZWd5Ijp7fSwidGVtcGxhdGUiOnsibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsia3ViZWN0bC5rdWJlcm5ldGVzLmlvL2RlZmF1bHQtY29udGFpbmVyIjoibWFuYWdlciJ9LCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6Im52aWRpYS1uZXR3b3JrLW9wZXJhdG9yLWNvbnRyb2xsZXIiLCJudmlkaWEuY29tL29mZWQtZHJpdmVyLXVwZ3JhZGUtZHJhaW4uc2tpcCI6InRydWUifX0sInNwZWMiOnsiYWZmaW5pdHkiOnsibm9kZUFmZmluaXR5Ijp7InByZWZlcnJlZER1cmluZ1NjaGVkdWxpbmdJZ25vcmVkRHVyaW5nRXhlY3V0aW9uIjpbeyJwcmVmZXJlbmNlIjp7Im1hdGNoRXhwcmVzc2lvbnMiOlt7ImtleSI6Im5vZGUtcm9sZS5rdWJlcm5ldGVzLmlvL21hc3RlciIsIm9wZXJhdG9yIjoiSW4iLCJ2YWx1ZXMiOlsiIl19XX0sIndlaWdodCI6MX0seyJwcmVmZXJlbmNlIjp7Im1hdGNoRXhwcmVzc2lvbnMiOlt7ImtleSI6Im5vZGUtcm9sZS5rdWJlcm5ldGVzLmlvL2NvbnRyb2wtcGxhbmUiLCJvcGVyYXRvciI6IkluIiwidmFsdWVzIjpbIiJdfV19LCJ3ZWlnaHQiOjF9XX19LCJjb250YWluZXJzIjpbeyJhcmdzIjpbIi0tbGVhZGVyLWVsZWN0Il0sImNvbW1hbmQiOlsiL21hbmFnZXIiXSwiZW52IjpbeyJuYW1lIjoiRU5BQkxFX1dFQkhPT0tTIiwidmFsdWUiOiJ0cnVlIn0seyJuYW1lIjoiU1RBVEVfTUFOSUZFU1RfQkFTRV9ESVIiLCJ2YWx1ZSI6Ii9tYW5pZmVzdHMifSx7Im5hbWUiOiJQT0RfTkFNRVNQQUNFIiwidmFsdWVGcm9tIjp7ImZpZWxkUmVmIjp7ImZpZWxkUGF0aCI6Im1ldGFkYXRhLm5hbWVzcGFjZSJ9fX0seyJuYW1lIjoiVVNFX0RUSyIsInZhbHVlIjoidHJ1ZSJ9LHsibmFtZSI6Ik9GRURfSU5JVF9DT05UQUlORVJfSU1BR0UiLCJ2YWx1ZSI6ImdoY3IuaW8vbWVsbGFub3gvbmV0d29yay1vcGVyYXRvci1pbml0LWNvbnRhaW5lcjp2MC4wLjIifV0sImltYWdlIjoibnZjci5pby9udmlkaWEvY2xvdWQtbmF0aXZlL25ldHdvcmstb3BlcmF0b3JAc2hhMjU2OmI4YTA3Njk2ZDA1ZmI4ZTUyOTI5OTFiYTczMTc1ODU3OTMxM2Q2OTgzZWQzZDc1ZGQ5NWU3MzU2MDI0ZDk4N2MiLCJpbWFnZVB1bGxQb2xpY3kiOiJJZk5vdFByZXNlbnQiLCJsaXZlbmVzc1Byb2JlIjp7Imh0dHBHZXQiOnsicGF0aCI6Ii9oZWFsdGh6IiwicG9ydCI6ODA4MX0sImluaXRpYWxEZWxheVNlY29uZHMiOjE1LCJwZXJpb2RTZWNvbmRzIjoyMH0sIm5hbWUiOiJtYW5hZ2VyIiwicG9ydHMiOlt7ImNvbnRhaW5lclBvcnQiOjk0NDMsIm5hbWUiOiJ3ZWJob29rLXNlcnZlciIsInByb3RvY29sIjoiVENQIn1dLCJyZWFkaW5lc3NQcm9iZSI6eyJodHRwR2V0Ijp7InBhdGgiOiIvcmVhZHl6IiwicG9ydCI6ODA4MX0sImluaXRpYWxEZWxheVNlY29uZHMiOjUsInBlcmlvZFNlY29uZHMiOjEwfSwicmVzb3VyY2VzIjp7ImxpbWl0cyI6eyJjcHUiOiI1MDBtIiwibWVtb3J5IjoiMTI4TWkifSwicmVxdWVzdHMiOnsiY3B1IjoiNW0iLCJtZW1vcnkiOiI2NE1pIn19LCJzZWN1cml0eUNvbnRleHQiOnsiYWxsb3dQcml2aWxlZ2VFc2NhbGF0aW9uIjpmYWxzZX0sInZvbHVtZU1vdW50cyI6W3sibW91bnRQYXRoIjoiL3RtcC9rOHMtd2ViaG9vay1zZXJ2ZXIvc2VydmluZy1jZXJ0cyIsIm5hbWUiOiJjZXJ0IiwicmVhZE9ubHkiOnRydWV9XX1dLCJzZWN1cml0eUNvbnRleHQiOnsicnVuQXNVc2VyIjo2NTUzMn0sInNlcnZpY2VBY2NvdW50TmFtZSI6Im52aWRpYS1uZXR3b3JrLW9wZXJhdG9yLWNvbnRyb2xsZXItbWFuYWdlciIsInRlcm1pbmF0aW9uR3JhY2VQZXJpb2RTZWNvbmRzIjoxMCwidG9sZXJhdGlvbnMiOlt7ImVmZmVjdCI6Ik5vU2NoZWR1bGUiLCJrZXkiOiJub2RlLXJvbGUua3ViZXJuZXRlcy5pby9tYXN0ZXIiLCJvcGVyYXRvciI6IkVxdWFsIn0seyJlZmZlY3QiOiJOb1NjaGVkdWxlIiwia2V5Ijoibm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vY29udHJvbC1wbGFuZSIsIm9wZXJhdG9yIjoiRXF1YWwifV0sInZvbHVtZXMiOlt7Im5hbWUiOiJjZXJ0Iiwic2VjcmV0Ijp7ImRlZmF1bHRNb2RlIjo0MjAsInNlY3JldE5hbWUiOiJ3ZWJob29rLXNlcnZlci1jZXJ0In19XX19fX1dLCJwZXJtaXNzaW9ucyI6W3sicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbImNvbmZpZ21hcHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIiwiY3JlYXRlIiwidXBkYXRlIiwicGF0Y2giLCJkZWxldGUiXX0seyJhcGlHcm91cHMiOlsiY29vcmRpbmF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsibGVhc2VzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCIsImNyZWF0ZSIsInVwZGF0ZSIsInBhdGNoIiwiZGVsZXRlIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsiZXZlbnRzIl0sInZlcmJzIjpbImNyZWF0ZSIsInBhdGNoIl19XSwic2VydmljZUFjY291bnROYW1lIjoibnZpZGlhLW5ldHdvcmstb3BlcmF0b3ItY29udHJvbGxlci1tYW5hZ2VyIn1dfSwic3RyYXRlZ3kiOiJkZXBsb3ltZW50In0sImluc3RhbGxNb2RlcyI6W3sic3VwcG9ydGVkIjp0cnVlLCJ0eXBlIjoiT3duTmFtZXNwYWNlIn0seyJzdXBwb3J0ZWQiOnRydWUsInR5cGUiOiJTaW5nbGVOYW1lc3BhY2UifSx7InN1cHBvcnRlZCI6ZmFsc2UsInR5cGUiOiJNdWx0aU5hbWVzcGFjZSJ9LHsic3VwcG9ydGVkIjpmYWxzZSwidHlwZSI6IkFsbE5hbWVzcGFjZXMifV0sImtleXdvcmRzIjpbInNyaW92IiwibmV0d29ya2luZyJdLCJsaW5rcyI6W3sibmFtZSI6Ik5ldHdvcmsgT3BlcmF0b3IgRG9jdW1lbnRhdGlvbiIsInVybCI6Imh0dHBzOi8vZG9jcy5udmlkaWEuY29tL25ldHdvcmtpbmcvc29mdHdhcmUvY2xvdWQtb3JjaGVzdHJhdGlvbi9pbmRleC5odG1sIn0seyJuYW1lIjoiR2l0SHViIHJlcG9zaXRvcnkiLCJ1cmwiOiJodHRwczovL2dpdGh1Yi5jb20vTWVsbGFub3gvbmV0d29yay1vcGVyYXRvci8ifV0sIm1haW50YWluZXJzIjpbeyJlbWFpbCI6Im52aWRpYS1uZXR3b3JrLW9wZXJhdG9yLXN1cHBvcnRAbnZpZGlhLmNvbSIsIm5hbWUiOiJOVklESUEifV0sIm1hdHVyaXR5IjoiYWxwaGEiLCJwcm92aWRlciI6eyJuYW1lIjoiTlZJRElBIiwidXJsIjoiaHR0cHM6Ly9naXRodWIuY29tL01lbGxhbm94L25ldHdvcmstb3BlcmF0b3IvIn0sInJlbGF0ZWRJbWFnZXMiOlt7ImltYWdlIjoibnZjci5pby9udmlkaWEvY2xvdWQtbmF0aXZlL25ldHdvcmstb3BlcmF0b3JAc2hhMjU2OmI4YTA3Njk2ZDA1ZmI4ZTUyOTI5OTFiYTczMTc1ODU3OTMxM2Q2OTgzZWQzZDc1ZGQ5NWU3MzU2MDI0ZDk4N2MiLCJuYW1lIjoibnZpZGlhLW5ldHdvcmstb3BlcmF0b3IifSx7ImltYWdlIjoiZ2hjci5pby9tZWxsYW5veC9uZXR3b3JrLW9wZXJhdG9yLWluaXQtY29udGFpbmVyQHNoYTI1NjoxNjk5ZDIzMDI3ZWEzMGM5ZmE1OTU3NWE5MTQxMTRiZGZkNWE4N2EzNTljYWY4YzBhOWIxNmQ0MDllYzBkMDY4IiwibmFtZSI6Im52aWRpYS1uZXR3b3JrLW9wZXJhdG9yLWluaXQtY29udGFpbmVyIn0seyJpbWFnZSI6ImdoY3IuaW8vbWVsbGFub3gvazhzLXJkbWEtc2hhcmVkLWRldi1wbHVnaW5Ac2hhMjU2OjgzMjRjMDA5YzNkNjk0ZmU3NzAyYWYzNjMwNWVkZTc4YjkwM2Q4MzkxOTBiMWU0NTA2ZTgyMzYyZjlhYTVjMDIiLCJuYW1lIjoicmRtYS1zaGFyZWQtZGV2aWNlLXBsdWdpbiJ9LHsiaW1hZ2UiOiJnaGNyLmlvL2s4c25ldHdvcmtwbHVtYmluZ3dnL3NyaW92LW5ldHdvcmstZGV2aWNlLXBsdWdpbkBzaGEyNTY6OTNlODU2ZGRlODhhYmIwYWViOGUwYjk5MWU1ZjZkOWY0MTg4NGQ4YmVlYTc5MmY0ZDcwY2RhMDZmMThlNzgzZiIsIm5hbWUiOiJzcmlvdi1uZXR3b3JrLWRldmljZS1wbHVnaW4ifSx7ImltYWdlIjoiZ2hjci5pby9tZWxsYW5veC9pYi1rdWJlcm5ldGVzQHNoYTI1NjpiNTZiYjg4OTYzZGFkYWEyMjkwYTE3Y2YwYjU3Yjg2YzU1YzA5ZTdjMDc1YjcyNzFjMTg0OTU5NTMyNTU1YzkxIiwibmFtZSI6ImliLWt1YmVybmV0ZXMifSx7ImltYWdlIjoiZ2hjci5pby9tZWxsYW5veC9pcG9pYi1jbmlAc2hhMjU2OjgxNjQ2YzA3ZTI3Y2UxZGYyNjAzMDUwYTc1ZGQyNjdmMjY0Njg1ZmRjNjRjMjg1ZWNhMzkyNWFlOThlZDUzOTIiLCJuYW1lIjoiaXBvaWItY25pIn0seyJpbWFnZSI6ImdoY3IuaW8vbWVsbGFub3gvbnZpZGlhLWs4cy1pcGFtQHNoYTI1Njo0N2UxYmI4NGFjOTdmOWFmNDlmOTdiNDljMmRlNDRiNGJhODJiODkwYjQ4Nzg4MGVkYzVjOWFkZjg2YTE3NmY3IiwibmFtZSI6Im52LWlwYW0ifSx7ImltYWdlIjoiZ2hjci5pby9tZWxsYW5veC9uaWMtZmVhdHVyZS1kaXNjb3ZlcnlAc2hhMjU2OjkyZGRhOTQzNDUxOWRlMzliZTBmOTRjODA3ODc3NjZlMzM5OWU4YjIzOGQxNDgzOTM2MGFmZjRkNjIzMmEwOWIiLCJuYW1lIjoibmljLWZlYXR1cmUtZGlzY292ZXJ5In0seyJpbWFnZSI6Im52Y3IuaW8vbnZpZGlhL2RvY2EvZG9jYV90ZWxlbWV0cnlAc2hhMjU2Ojg2Njk3MTcxN2NiMjY4M2YyNzQyZDI2NWM5NzkzZjkzMjQyZjU1YjZlOGJkOWEwYTg4YTU1ODg2OWY5YjljZDciLCJuYW1lIjoiZG9jYS10ZWxlbWV0cnktc2VydmljZSJ9LHsiaW1hZ2UiOiJudmNyLmlvL252aWRpYS9tZWxsYW5veC9kb2NhLWRyaXZlckBzaGEyNTY6N2Y4NzMyNGFkYjM1MTUxM2Q4N2ZhMjdkZmQwYzlkOTM3MWFlNDI1MjlkNzZjY2U4ZWNkNjhjZTQxYzRkMjYzZiIsIm5hbWUiOiJkb2NhLWRyaXZlci0wIn0seyJpbWFnZSI6Im52Y3IuaW8vbnZpZGlhL21lbGxhbm94L2RvY2EtZHJpdmVyQHNoYTI1NjpjNDFlYWY3NmMwNjE4NmUxZGFiYjBkODcwMjI1ZDk0NmFkM2VjZGEyYTA3MmZhNGJlMTk3ZGQxMzFiNzY5NWYyIiwibmFtZSI6ImRvY2EtZHJpdmVyLTEifSx7ImltYWdlIjoibnZjci5pby9udmlkaWEvbWVsbGFub3gvZG9jYS1kcml2ZXJAc2hhMjU2OmIzZjUwM2IxYWMzOWViYzU1ODQwYTQzNjk3M2YxNDJlYjdjZjY3ZTQ4YTA3MDI4NDEyOWZkMWUzMDM5MGMwMzIiLCJuYW1lIjoiZG9jYS1kcml2ZXItMiJ9LHsiaW1hZ2UiOiJudmNyLmlvL252aWRpYS9tZWxsYW5veC9kb2NhLWRyaXZlckBzaGEyNTY6Njc2Yzc0ZmNiZTZkMmMyMzQxYTA5MjkxM2IxYWZjYTY1YmExYTJmNTY4ZWU2Nzk2YjM3MTU0MjY1N2U3YTE3NCIsIm5hbWUiOiJkb2NhLWRyaXZlci0zIn0seyJpbWFnZSI6Im52Y3IuaW8vbnZpZGlhL21lbGxhbm94L2RvY2EtZHJpdmVyQHNoYTI1Njo3ZmFjZDA1ZjYwZTJiZTI5OTI1ZmZjZTlkMGE2YjJjNzEyYzA2NzBjODg4OWI4MTU0MjU1ODJjNDZjODJlZmRjIiwibmFtZSI6ImRvY2EtZHJpdmVyLTQifSx7ImltYWdlIjoibnZjci5pby9udmlkaWEvbWVsbGFub3gvZG9jYS1kcml2ZXJAc2hhMjU2OjEwNjg0YzBjMzYzNjRiMWQ4OTdhMDNhMzQ2YWJiMmY2OTFhMTg1NDFhZTEyNDJiNTk2ZDAwMmYzNGYwZDczOTAiLCJuYW1lIjoiZG9jYS1kcml2ZXItNSJ9LHsiaW1hZ2UiOiJudmNyLmlvL252aWRpYS9tZWxsYW5veC9kb2NhLWRyaXZlckBzaGEyNTY6ZDVhMTYzZDM2Y2U2MDYzMGUxNGFlODYyMGFiNDM3NTEwZmYwODIxOTI0ZTA0M2I4OGYwZDdiNjdjZWUzYmQ3NyIsIm5hbWUiOiJkb2NhLWRyaXZlci02In0seyJpbWFnZSI6Im52Y3IuaW8vbnZpZGlhL21lbGxhbm94L2RvY2EtZHJpdmVyQHNoYTI1Njo0MDNiZTFiY2Y3MDg5ODRmOTBiM2NjZmRmMjRmNTg1OTQ1NTQzMzZkNjlmODc4ZDM4NDM1MzVmNGZhNjFjZWNhIiwibmFtZSI6ImRvY2EtZHJpdmVyLTcifSx7ImltYWdlIjoibnZjci5pby9udmlkaWEvbWVsbGFub3gvZG9jYS1kcml2ZXJAc2hhMjU2OjIyZTZmZjFlOTI0NWYwY2RmNjdlNzkwNDIzNWQxYTYxODFlZTJiZDNmMzljZWRmNzZiMzlkNGFlYWE0YTZjMWQiLCJuYW1lIjoiZG9jYS1kcml2ZXItOCJ9XSwidmVyc2lvbiI6IjI0LjcuMSIsIndlYmhvb2tkZWZpbml0aW9ucyI6W3siYWRtaXNzaW9uUmV2aWV3VmVyc2lvbnMiOlsidjEiXSwiY29udGFpbmVyUG9ydCI6NDQzLCJkZXBsb3ltZW50TmFtZSI6Im52aWRpYS1uZXR3b3JrLW9wZXJhdG9yLWNvbnRyb2xsZXItbWFuYWdlciIsImZhaWx1cmVQb2xpY3kiOiJGYWlsIiwiZ2VuZXJhdGVOYW1lIjoidmhvc3RkZXZpY2VuZXR3b3JrLmtiLmlvIiwicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJtZWxsYW5veC5jb20iXSwiYXBpVmVyc2lvbnMiOlsidjFhbHBoYTEiXSwib3BlcmF0aW9ucyI6WyJDUkVBVEUiLCJVUERBVEUiXSwicmVzb3VyY2VzIjpbImhvc3RkZXZpY2VuZXR3b3JrcyJdfV0sInNpZGVFZmZlY3RzIjoiTm9uZSIsInRhcmdldFBvcnQiOjk0NDMsInR5cGUiOiJWYWxpZGF0aW5nQWRtaXNzaW9uV2ViaG9vayIsIndlYmhvb2tQYXRoIjoiL3ZhbGlkYXRlLW1lbGxhbm94LWNvbS12MWFscGhhMS1ob3N0ZGV2aWNlbmV0d29yayJ9LHsiYWRtaXNzaW9uUmV2aWV3VmVyc2lvbnMiOlsidjEiXSwiY29udGFpbmVyUG9ydCI6NDQzLCJkZXBsb3ltZW50TmFtZSI6Im52aWRpYS1uZXR3b3JrLW9wZXJhdG9yLWNvbnRyb2xsZXItbWFuYWdlciIsImZhaWx1cmVQb2xpY3kiOiJGYWlsIiwiZ2VuZXJhdGVOYW1lIjoidm5pY2NsdXN0ZXJwb2xpY3kua2IuaW8iLCJydWxlcyI6W3siYXBpR3JvdXBzIjpbIm1lbGxhbm94LmNvbSJdLCJhcGlWZXJzaW9ucyI6WyJ2MWFscGhhMSJdLCJvcGVyYXRpb25zIjpbIkNSRUFURSIsIlVQREFURSJdLCJyZXNvdXJjZXMiOlsibmljY2x1c3RlcnBvbGljaWVzIl19XSwic2lkZUVmZmVjdHMiOiJOb25lIiwidGFyZ2V0UG9ydCI6OTQ0MywidHlwZSI6IlZhbGlkYXRpbmdBZG1pc3Npb25XZWJob29rIiwid2ViaG9va1BhdGgiOiIvdmFsaWRhdGUtbWVsbGFub3gtY29tLXYxYWxwaGExLW5pY2NsdXN0ZXJwb2xpY3kifV19fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYWxwaGEub3BlbnNoaWZ0LmlvL3NlcnZpbmctY2VydC1zZWNyZXQtbmFtZSI6IndlYmhvb2stc2VydmVyLWNlcnQifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJjb250cm9sLXBsYW5lIjoibnZpZGlhLW5ldHdvcmstb3BlcmF0b3ItY29udHJvbGxlciJ9LCJuYW1lIjoibnZpZGlhLW5ldHdvcmstb3BlcmF0b3Itd2ViaG9vay1zZXJ2aWNlIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJudmlkaWEtbmV0d29yay1vcGVyYXRvci1jb250cm9sbGVyIn19LCJzdGF0dXMiOnsibG9hZEJhbGFuY2VyIjp7fX19
relatedImages:
- image: ghcr.io/k8snetworkplumbingwg/sriov-network-device-plugin@sha256:93e856dde88abb0aeb8e0b991e5f6d9f41884d8beea792f4d70cda06f18e783f
  name: sriov-network-device-plugin
- image: ghcr.io/mellanox/ib-kubernetes@sha256:b56bb88963dadaa2290a17cf0b57b86c55c09e7c075b7271c184959532555c91
  name: ib-kubernetes
- image: ghcr.io/mellanox/ipoib-cni@sha256:81646c07e27ce1df2603050a75dd267f264685fdc64c285eca3925ae98ed5392
  name: ipoib-cni
- image: ghcr.io/mellanox/k8s-rdma-shared-dev-plugin@sha256:8324c009c3d694fe7702af36305ede78b903d839190b1e4506e82362f9aa5c02
  name: rdma-shared-device-plugin
- image: ghcr.io/mellanox/network-operator-init-container@sha256:1699d23027ea30c9fa59575a914114bdfd5a87a359caf8c0a9b16d409ec0d068
  name: nvidia-network-operator-init-container
- image: ghcr.io/mellanox/nic-feature-discovery@sha256:92dda9434519de39be0f94c80787766e3399e8b238d14839360aff4d6232a09b
  name: nic-feature-discovery
- image: ghcr.io/mellanox/nvidia-k8s-ipam@sha256:47e1bb84ac97f9af49f97b49c2de44b4ba82b890b487880edc5c9adf86a176f7
  name: nv-ipam
- image: nvcr.io/nvidia/cloud-native/network-operator@sha256:b8a07696d05fb8e5292991ba731758579313d6983ed3d75dd95e7356024d987c
  name: nvidia-network-operator
- image: nvcr.io/nvidia/doca/doca_telemetry@sha256:866971717cb2683f2742d265c9793f93242f55b6e8bd9a0a88a558869f9b9cd7
  name: doca-telemetry-service
- image: nvcr.io/nvidia/mellanox/doca-driver@sha256:10684c0c36364b1d897a03a346abb2f691a18541ae1242b596d002f34f0d7390
  name: doca-driver-5
- image: nvcr.io/nvidia/mellanox/doca-driver@sha256:22e6ff1e9245f0cdf67e7904235d1a6181ee2bd3f39cedf76b39d4aeaa4a6c1d
  name: doca-driver-8
- image: nvcr.io/nvidia/mellanox/doca-driver@sha256:403be1bcf708984f90b3ccfdf24f58594554336d69f878d3843535f4fa61ceca
  name: doca-driver-7
- image: nvcr.io/nvidia/mellanox/doca-driver@sha256:676c74fcbe6d2c2341a092913b1afca65ba1a2f568ee6796b371542657e7a174
  name: doca-driver-3
- image: nvcr.io/nvidia/mellanox/doca-driver@sha256:7f87324adb351513d87fa27dfd0c9d9371ae42529d76cce8ecd68ce41c4d263f
  name: doca-driver-0
- image: nvcr.io/nvidia/mellanox/doca-driver@sha256:7facd05f60e2be29925ffce9d0a6b2c712c0670c8889b815425582c46c82efdc
  name: doca-driver-4
- image: nvcr.io/nvidia/mellanox/doca-driver@sha256:b3f503b1ac39ebc55840a436973f142eb7cf67e48a070284129fd1e30390c032
  name: doca-driver-2
- image: nvcr.io/nvidia/mellanox/doca-driver@sha256:c41eaf76c06186e1dabb0d870225d946ad3ecda2a072fa4be197dd131b7695f2
  name: doca-driver-1
- image: nvcr.io/nvidia/mellanox/doca-driver@sha256:d5a163d36ce60630e14ae8620ab437510ff0821924e043b88f0d7b67cee3bd77
  name: doca-driver-6
- image: registry.connect.redhat.com/nvidia-network-operator/nvidia-network-operator@sha256:e9127738faebf877ed11262c317005ae7a1db56e6e4284f6ad37b5f96aaab42e
  name: ""
schema: olm.bundle
---
image: registry.connect.redhat.com/nvidia-network-operator/nvidia-network-operator@sha256:418077005b6abbc83f90f4ae9c7d66edacdbb87f09392170376f4f206389dd9d
name: nvidia-network-operator.v25.1.0
package: nvidia-network-operator
properties:
- type: olm.gvk
  value:
    group: mellanox.com
    kind: HostDeviceNetwork
    version: v1alpha1
- type: olm.gvk
  value:
    group: mellanox.com
    kind: IPoIBNetwork
    version: v1alpha1
- type: olm.gvk
  value:
    group: mellanox.com
    kind: MacvlanNetwork
    version: v1alpha1
- type: olm.gvk
  value:
    group: mellanox.com
    kind: NicClusterPolicy
    version: v1alpha1
- type: olm.package
  value:
    packageName: nvidia-network-operator
    version: 25.1.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE2LjQifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJob3N0ZGV2aWNlbmV0d29ya3MubWVsbGFub3guY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJtZWxsYW5veC5jb20iLCJuYW1lcyI6eyJraW5kIjoiSG9zdERldmljZU5ldHdvcmsiLCJsaXN0S2luZCI6Ikhvc3REZXZpY2VOZXR3b3JrTGlzdCIsInBsdXJhbCI6Imhvc3RkZXZpY2VuZXR3b3JrcyIsInNpbmd1bGFyIjoiaG9zdGRldmljZW5ldHdvcmsifSwic2NvcGUiOiJDbHVzdGVyIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFnZSIsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJIb3N0RGV2aWNlTmV0d29yayBpcyB0aGUgU2NoZW1hIGZvciB0aGUgaG9zdGRldmljZW5ldHdvcmtzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgSG9zdERldmljZU5ldHdvcmsiLCJwcm9wZXJ0aWVzIjp7ImlwYW0iOnsiZGVzY3JpcHRpb24iOiJJUEFNIGNvbmZpZ3VyYXRpb24gdG8gYmUgdXNlZCBmb3IgdGhpcyBuZXR3b3JrIiwidHlwZSI6InN0cmluZyJ9LCJuZXR3b3JrTmFtZXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIG9mIHRoZSBOZXR3b3JrQXR0YWNobWVudERlZmluaXRpb24gY3VzdG9tIHJlc291cmNlIiwidHlwZSI6InN0cmluZyJ9LCJyZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIb3N0IGRldmljZSByZXNvdXJjZSBwb29sIG5hbWUiLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IkRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIEhvc3REZXZpY2VOZXR3b3JrIiwicHJvcGVydGllcyI6eyJhcHBsaWVkU3RhdGVzIjp7ImRlc2NyaXB0aW9uIjoiQXBwbGllZFN0YXRlcyBwcm92aWRlIGEgZmluZXIgdmlldyBvZiB0aGUgb2JzZXJ2ZWQgc3RhdGUiLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkFwcGxpZWRTdGF0ZSBkZWZpbmVzIGEgZmluZXItZ3JhaW5lZCB2aWV3IG9mIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBOaWNDbHVzdGVyUG9saWN5IiwicHJvcGVydGllcyI6eyJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBpcyBhIGh1bWFuIHJlYWRhYmxlIG1lc3NhZ2UgaW5kaWNhdGluZyBkZXRhaWxzIGFib3V0IHdoeVxudGhlIHN0YXRlIGlzIGluIHRoaXMgY29uZGl0aW9uIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgZGVwbG95ZWQgY29tcG9uZW50IHRoaXMgc3RhdGUgcmVmZXJzIHRvIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBzdGF0ZSBvZiB0aGUgZGVwbG95ZWQgY29tcG9uZW50LiAoXCJyZWFkeVwiLCBcIm5vdFJlYWR5XCIsIFwiaWdub3JlXCIsIFwiZXJyb3JcIikiLCJlbnVtIjpbInJlYWR5Iiwibm90UmVhZHkiLCJpZ25vcmUiLCJlcnJvciJdLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIiwic3RhdGUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwiaG9zdERldmljZU5ldHdvcmtBdHRhY2htZW50RGVmIjp7ImRlc2NyaXB0aW9uIjoiTmV0d29yayBhdHRhY2htZW50IGRlZmluaXRpb24gZ2VuZXJhdGVkIGZyb20gSG9zdERldmljZU5ldHdvcmtTcGVjIiwidHlwZSI6InN0cmluZyJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJJbmZvcm1hdGl2ZSBzdHJpbmcgaW4gY2FzZSB0aGUgb2JzZXJ2ZWQgc3RhdGUgaXMgZXJyb3IiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImRlc2NyaXB0aW9uIjoiUmVmbGVjdHMgdGhlIHN0YXRlIG9mIHRoZSBIb3N0RGV2aWNlTmV0d29yayIsImVudW0iOlsibm90UmVhZHkiLCJyZWFkeSIsImVycm9yIl0sInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInN0YXRlIl0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE2LjQifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJpcG9pYm5ldHdvcmtzLm1lbGxhbm94LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoibWVsbGFub3guY29tIiwibmFtZXMiOnsia2luZCI6IklQb0lCTmV0d29yayIsImxpc3RLaW5kIjoiSVBvSUJOZXR3b3JrTGlzdCIsInBsdXJhbCI6Imlwb2libmV0d29ya3MiLCJzaW5ndWxhciI6Imlwb2libmV0d29yayJ9LCJzY29wZSI6IkNsdXN0ZXIiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIubWV0YWRhdGEuY3JlYXRpb25UaW1lc3RhbXAiLCJuYW1lIjoiQWdlIiwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IklQb0lCTmV0d29yayBpcyB0aGUgU2NoZW1hIGZvciB0aGUgaXBvaWJuZXR3b3JrcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJEZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIElQb0lCTmV0d29yayIsInByb3BlcnRpZXMiOnsiaXBhbSI6eyJkZXNjcmlwdGlvbiI6IklQQU0gY29uZmlndXJhdGlvbiB0byBiZSB1c2VkIGZvciB0aGlzIG5ldHdvcmsuIiwidHlwZSI6InN0cmluZyJ9LCJtYXN0ZXIiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBob3N0IGludGVyZmFjZSB0byBlbnNsYXZlLiBEZWZhdWx0cyB0byBkZWZhdWx0IHJvdXRlIGludGVyZmFjZSIsInR5cGUiOiJzdHJpbmcifSwibmV0d29ya05hbWVzcGFjZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWVzcGFjZSBvZiB0aGUgTmV0d29ya0F0dGFjaG1lbnREZWZpbml0aW9uIGN1c3RvbSByZXNvdXJjZSIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiRGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgSVBvSUJOZXR3b3JrIiwicHJvcGVydGllcyI6eyJpcG9pYk5ldHdvcmtBdHRhY2htZW50RGVmIjp7ImRlc2NyaXB0aW9uIjoiTmV0d29yayBhdHRhY2htZW50IGRlZmluaXRpb24gZ2VuZXJhdGVkIGZyb20gSVBvSUJOZXR3b3JrU3BlYyIsInR5cGUiOiJzdHJpbmcifSwicmVhc29uIjp7ImRlc2NyaXB0aW9uIjoiSW5mb3JtYXRpdmUgc3RyaW5nIGluIGNhc2UgdGhlIG9ic2VydmVkIHN0YXRlIGlzIGVycm9yIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlJlZmxlY3RzIHRoZSBzdGF0ZSBvZiB0aGUgSVBvSUJOZXR3b3JrIiwiZW51bSI6WyJub3RSZWFkeSIsInJlYWR5IiwiZXJyb3IiXSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsic3RhdGUiXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE2LjQifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJtYWN2bGFubmV0d29ya3MubWVsbGFub3guY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJtZWxsYW5veC5jb20iLCJuYW1lcyI6eyJraW5kIjoiTWFjdmxhbk5ldHdvcmsiLCJsaXN0S2luZCI6Ik1hY3ZsYW5OZXR3b3JrTGlzdCIsInBsdXJhbCI6Im1hY3ZsYW5uZXR3b3JrcyIsInNpbmd1bGFyIjoibWFjdmxhbm5ldHdvcmsifSwic2NvcGUiOiJDbHVzdGVyIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFnZSIsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJNYWN2bGFuTmV0d29yayBpcyB0aGUgU2NoZW1hIGZvciB0aGUgbWFjdmxhbm5ldHdvcmtzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgTWFjdmxhbk5ldHdvcmtTcGVjIiwicHJvcGVydGllcyI6eyJpcGFtIjp7ImRlc2NyaXB0aW9uIjoiSVBBTSBjb25maWd1cmF0aW9uIHRvIGJlIHVzZWQgZm9yIHRoaXMgbmV0d29yay4iLCJ0eXBlIjoic3RyaW5nIn0sIm1hc3RlciI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGhvc3QgaW50ZXJmYWNlIHRvIGVuc2xhdmUuIERlZmF1bHRzIHRvIGRlZmF1bHQgcm91dGUgaW50ZXJmYWNlIiwidHlwZSI6InN0cmluZyJ9LCJtb2RlIjp7ImRlc2NyaXB0aW9uIjoiTW9kZSBvZiBpbnRlcmZhY2Ugb25lIG9mIFwiYnJpZGdlXCIsIFwicHJpdmF0ZVwiLCBcInZlcGFcIiwgXCJwYXNzdGhydVwiIiwiZW51bSI6WyJicmlkZ2UiLCJwcml2YXRlIiwidmVwYSIsInBhc3N0aHJ1Il0sInR5cGUiOiJzdHJpbmcifSwibXR1Ijp7ImRlc2NyaXB0aW9uIjoiTVRVIG9mIGludGVyZmFjZSB0byB0aGUgc3BlY2lmaWVkIHZhbHVlLiAwIGZvciBtYXN0ZXIncyBNVFUiLCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJuZXR3b3JrTmFtZXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIG9mIHRoZSBOZXR3b3JrQXR0YWNobWVudERlZmluaXRpb24gY3VzdG9tIHJlc291cmNlIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJEZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBNYWN2bGFuTmV0d29yayIsInByb3BlcnRpZXMiOnsibWFjdmxhbk5ldHdvcmtBdHRhY2htZW50RGVmIjp7ImRlc2NyaXB0aW9uIjoiTmV0d29yayBhdHRhY2htZW50IGRlZmluaXRpb24gZ2VuZXJhdGVkIGZyb20gTWFjdmxhbk5ldHdvcmtTcGVjIiwidHlwZSI6InN0cmluZyJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJJbmZvcm1hdGl2ZSBzdHJpbmcgaW4gY2FzZSB0aGUgb2JzZXJ2ZWQgc3RhdGUgaXMgZXJyb3IiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImRlc2NyaXB0aW9uIjoiUmVmbGVjdHMgdGhlIHN0YXRlIG9mIHRoZSBNYWN2bGFuTmV0d29yayIsImVudW0iOlsibm90UmVhZHkiLCJyZWFkeSIsImVycm9yIl0sInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInN0YXRlIl0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYWxwaGEub3BlbnNoaWZ0LmlvL3NlcnZpbmctY2VydC1zZWNyZXQtbmFtZSI6IndlYmhvb2stc2VydmVyLWNlcnQifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJjb250cm9sLXBsYW5lIjoibnZpZGlhLW5ldHdvcmstb3BlcmF0b3ItY29udHJvbGxlciJ9LCJuYW1lIjoibnZpZGlhLW5ldHdvcmstb3BlcmF0b3Itd2ViaG9vay1zZXJ2aWNlIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJudmlkaWEtbmV0d29yay1vcGVyYXRvci1jb250cm9sbGVyIn19LCJzdGF0dXMiOnsibG9hZEJhbGFuY2VyIjp7fX19
relatedImages:
- image: ghcr.io/k8snetworkplumbingwg/sriov-network-device-plugin@sha256:cabce074d10a0f1d62135e2cc5442d65b49094b95b8297fdd024a1a5f461319f
  name: sriov-network-device-plugin
- image: ghcr.io/mellanox/ib-kubernetes@sha256:100e6addf99d5b44e81cb3aa8d2fc892fced1de3183190931961b92ee924207b
  name: ib-kubernetes
- image: ghcr.io/mellanox/ipoib-cni@sha256:56f19687b0b956ba45bf079cf3a655b0d1bad0314da9d5ecfe0f4d98ff31fc86
  name: ipoib-cni
- image: ghcr.io/mellanox/k8s-rdma-shared-dev-plugin@sha256:9f468fdc4449e65e4772575f83aa85840a00f97165f9a00ba34695c91d610fbd
  name: rdma-shared-device-plugin
- image: ghcr.io/mellanox/network-operator-init-container@sha256:67e93ccf3ecb61f17597567faf0f72e1b8ddcf73c5d7440baeadcc1cb6bb811b
  name: nvidia-network-operator-init-container
- image: ghcr.io/mellanox/nic-feature-discovery@sha256:92dda9434519de39be0f94c80787766e3399e8b238d14839360aff4d6232a09b
  name: nic-feature-discovery
- image: ghcr.io/mellanox/nvidia-k8s-ipam@sha256:47e1bb84ac97f9af49f97b49c2de44b4ba82b890b487880edc5c9adf86a176f7
  name: nv-ipam
- image: nvcr.io/nvidia/cloud-native/network-operator@sha256:12f0576f372f5adc17b60795952ae47388e50d8fad563b9595f3091eadd8eb29
  name: nvidia-network-operator
- image: nvcr.io/nvidia/doca/doca_telemetry@sha256:866971717cb2683f2742d265c9793f93242f55b6e8bd9a0a88a558869f9b9cd7
  name: doca-telemetry-service
- image: nvcr.io/nvidia/mellanox/doca-driver@sha256:3edf0cec91eea10df17c9f182b2db430cb383887ac144e27ac44043b308284d7
  name: doca-driver-4
- image: nvcr.io/nvidia/mellanox/doca-driver@sha256:5b91974c74f08fc5b1ad2edd4ca97d81b2dc6cc897045c3eac777826fe5d40d8
  name: doca-driver-0
- image: nvcr.io/nvidia/mellanox/doca-driver@sha256:68b3735c4edca2d889c456beba80ac2077b0cc0edba11a32769dacd3ece64892
  name: doca-driver-3
- image: nvcr.io/nvidia/mellanox/doca-driver@sha256:7604a30cbd0927eba76ddc74ea1cfbe113563ccf068e6ab3fe78123e4deec28d
  name: doca-driver-1
- image: nvcr.io/nvidia/mellanox/doca-driver@sha256:a257aae9c4e02b62f9f4ddeea66c4349c517519a544dd02fe4c8d3fee5229521
  name: doca-driver-2
- image: nvcr.io/nvidia/mellanox/doca-driver@sha256:f5c1741cc6368fcec5b250285552d9c80ff7254414f68102cc89162e12ac0400
  name: doca-driver-5
- image: registry.connect.redhat.com/nvidia-network-operator/nvidia-network-operator@sha256:418077005b6abbc83f90f4ae9c7d66edacdbb87f09392170376f4f206389dd9d
  name: ""
schema: olm.bundle
---
image: registry.connect.redhat.com/nvidia-network-operator/nvidia-network-operator@sha256:2418015d00846dd0d7a8aca11927f1e89b4d8d525e6ae936360e3e3b3bd9e22f
name: nvidia-network-operator.v25.4.0
package: nvidia-network-operator
properties:
- type: olm.gvk
  value:
    group: mellanox.com
    kind: HostDeviceNetwork
    version: v1alpha1
- type: olm.gvk
  value:
    group: mellanox.com
    kind: IPoIBNetwork
    version: v1alpha1
- type: olm.gvk
  value:
    group: mellanox.com
    kind: MacvlanNetwork
    version: v1alpha1
- type: olm.gvk
  value:
    group: mellanox.com
    kind: NicClusterPolicy
    version: v1alpha1
- type: olm.package
  value:
    packageName: nvidia-network-operator
    version: 25.4.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE2LjQifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJob3N0ZGV2aWNlbmV0d29ya3MubWVsbGFub3guY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJtZWxsYW5veC5jb20iLCJuYW1lcyI6eyJraW5kIjoiSG9zdERldmljZU5ldHdvcmsiLCJsaXN0S2luZCI6Ikhvc3REZXZpY2VOZXR3b3JrTGlzdCIsInBsdXJhbCI6Imhvc3RkZXZpY2VuZXR3b3JrcyIsInNpbmd1bGFyIjoiaG9zdGRldmljZW5ldHdvcmsifSwic2NvcGUiOiJDbHVzdGVyIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFnZSIsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJIb3N0RGV2aWNlTmV0d29yayBpcyB0aGUgU2NoZW1hIGZvciB0aGUgaG9zdGRldmljZW5ldHdvcmtzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgSG9zdERldmljZU5ldHdvcmsiLCJwcm9wZXJ0aWVzIjp7ImlwYW0iOnsiZGVzY3JpcHRpb24iOiJJUEFNIGNvbmZpZ3VyYXRpb24gdG8gYmUgdXNlZCBmb3IgdGhpcyBuZXR3b3JrIiwidHlwZSI6InN0cmluZyJ9LCJuZXR3b3JrTmFtZXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIG9mIHRoZSBOZXR3b3JrQXR0YWNobWVudERlZmluaXRpb24gY3VzdG9tIHJlc291cmNlIiwidHlwZSI6InN0cmluZyJ9LCJyZXNvdXJjZU5hbWUiOnsiZGVzY3JpcHRpb24iOiJIb3N0IGRldmljZSByZXNvdXJjZSBwb29sIG5hbWUiLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6IkRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIEhvc3REZXZpY2VOZXR3b3JrIiwicHJvcGVydGllcyI6eyJhcHBsaWVkU3RhdGVzIjp7ImRlc2NyaXB0aW9uIjoiQXBwbGllZFN0YXRlcyBwcm92aWRlIGEgZmluZXIgdmlldyBvZiB0aGUgb2JzZXJ2ZWQgc3RhdGUiLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkFwcGxpZWRTdGF0ZSBkZWZpbmVzIGEgZmluZXItZ3JhaW5lZCB2aWV3IG9mIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBOaWNDbHVzdGVyUG9saWN5IiwicHJvcGVydGllcyI6eyJtZXNzYWdlIjp7ImRlc2NyaXB0aW9uIjoiTWVzc2FnZSBpcyBhIGh1bWFuIHJlYWRhYmxlIG1lc3NhZ2UgaW5kaWNhdGluZyBkZXRhaWxzIGFib3V0IHdoeVxudGhlIHN0YXRlIGlzIGluIHRoaXMgY29uZGl0aW9uIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgZGVwbG95ZWQgY29tcG9uZW50IHRoaXMgc3RhdGUgcmVmZXJzIHRvIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBzdGF0ZSBvZiB0aGUgZGVwbG95ZWQgY29tcG9uZW50LiAoXCJyZWFkeVwiLCBcIm5vdFJlYWR5XCIsIFwiaWdub3JlXCIsIFwiZXJyb3JcIikiLCJlbnVtIjpbInJlYWR5Iiwibm90UmVhZHkiLCJpZ25vcmUiLCJlcnJvciJdLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIiwic3RhdGUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwiaG9zdERldmljZU5ldHdvcmtBdHRhY2htZW50RGVmIjp7ImRlc2NyaXB0aW9uIjoiTmV0d29yayBhdHRhY2htZW50IGRlZmluaXRpb24gZ2VuZXJhdGVkIGZyb20gSG9zdERldmljZU5ldHdvcmtTcGVjIiwidHlwZSI6InN0cmluZyJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJJbmZvcm1hdGl2ZSBzdHJpbmcgaW4gY2FzZSB0aGUgb2JzZXJ2ZWQgc3RhdGUgaXMgZXJyb3IiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImRlc2NyaXB0aW9uIjoiUmVmbGVjdHMgdGhlIHN0YXRlIG9mIHRoZSBIb3N0RGV2aWNlTmV0d29yayIsImVudW0iOlsibm90UmVhZHkiLCJyZWFkeSIsImVycm9yIl0sInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInN0YXRlIl0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE2LjQifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJpcG9pYm5ldHdvcmtzLm1lbGxhbm94LmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoibWVsbGFub3guY29tIiwibmFtZXMiOnsia2luZCI6IklQb0lCTmV0d29yayIsImxpc3RLaW5kIjoiSVBvSUJOZXR3b3JrTGlzdCIsInBsdXJhbCI6Imlwb2libmV0d29ya3MiLCJzaW5ndWxhciI6Imlwb2libmV0d29yayJ9LCJzY29wZSI6IkNsdXN0ZXIiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIubWV0YWRhdGEuY3JlYXRpb25UaW1lc3RhbXAiLCJuYW1lIjoiQWdlIiwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IklQb0lCTmV0d29yayBpcyB0aGUgU2NoZW1hIGZvciB0aGUgaXBvaWJuZXR3b3JrcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJEZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIElQb0lCTmV0d29yayIsInByb3BlcnRpZXMiOnsiaXBhbSI6eyJkZXNjcmlwdGlvbiI6IklQQU0gY29uZmlndXJhdGlvbiB0byBiZSB1c2VkIGZvciB0aGlzIG5ldHdvcmsuIiwidHlwZSI6InN0cmluZyJ9LCJtYXN0ZXIiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBob3N0IGludGVyZmFjZSB0byBlbnNsYXZlLiBEZWZhdWx0cyB0byBkZWZhdWx0IHJvdXRlIGludGVyZmFjZSIsInR5cGUiOiJzdHJpbmcifSwibmV0d29ya05hbWVzcGFjZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWVzcGFjZSBvZiB0aGUgTmV0d29ya0F0dGFjaG1lbnREZWZpbml0aW9uIGN1c3RvbSByZXNvdXJjZSIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiRGVmaW5lcyB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgSVBvSUJOZXR3b3JrIiwicHJvcGVydGllcyI6eyJpcG9pYk5ldHdvcmtBdHRhY2htZW50RGVmIjp7ImRlc2NyaXB0aW9uIjoiTmV0d29yayBhdHRhY2htZW50IGRlZmluaXRpb24gZ2VuZXJhdGVkIGZyb20gSVBvSUJOZXR3b3JrU3BlYyIsInR5cGUiOiJzdHJpbmcifSwicmVhc29uIjp7ImRlc2NyaXB0aW9uIjoiSW5mb3JtYXRpdmUgc3RyaW5nIGluIGNhc2UgdGhlIG9ic2VydmVkIHN0YXRlIGlzIGVycm9yIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0ZSI6eyJkZXNjcmlwdGlvbiI6IlJlZmxlY3RzIHRoZSBzdGF0ZSBvZiB0aGUgSVBvSUJOZXR3b3JrIiwiZW51bSI6WyJub3RSZWFkeSIsInJlYWR5IiwiZXJyb3IiXSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsic3RhdGUiXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE2LjQifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJtYWN2bGFubmV0d29ya3MubWVsbGFub3guY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJtZWxsYW5veC5jb20iLCJuYW1lcyI6eyJraW5kIjoiTWFjdmxhbk5ldHdvcmsiLCJsaXN0S2luZCI6Ik1hY3ZsYW5OZXR3b3JrTGlzdCIsInBsdXJhbCI6Im1hY3ZsYW5uZXR3b3JrcyIsInNpbmd1bGFyIjoibWFjdmxhbm5ldHdvcmsifSwic2NvcGUiOiJDbHVzdGVyIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFnZSIsInR5cGUiOiJzdHJpbmcifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJNYWN2bGFuTmV0d29yayBpcyB0aGUgU2NoZW1hIGZvciB0aGUgbWFjdmxhbm5ldHdvcmtzIEFQSSIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgTWFjdmxhbk5ldHdvcmtTcGVjIiwicHJvcGVydGllcyI6eyJpcGFtIjp7ImRlc2NyaXB0aW9uIjoiSVBBTSBjb25maWd1cmF0aW9uIHRvIGJlIHVzZWQgZm9yIHRoaXMgbmV0d29yay4iLCJ0eXBlIjoic3RyaW5nIn0sIm1hc3RlciI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGhvc3QgaW50ZXJmYWNlIHRvIGVuc2xhdmUuIERlZmF1bHRzIHRvIGRlZmF1bHQgcm91dGUgaW50ZXJmYWNlIiwidHlwZSI6InN0cmluZyJ9LCJtb2RlIjp7ImRlc2NyaXB0aW9uIjoiTW9kZSBvZiBpbnRlcmZhY2Ugb25lIG9mIFwiYnJpZGdlXCIsIFwicHJpdmF0ZVwiLCBcInZlcGFcIiwgXCJwYXNzdGhydVwiIiwiZW51bSI6WyJicmlkZ2UiLCJwcml2YXRlIiwidmVwYSIsInBhc3N0aHJ1Il0sInR5cGUiOiJzdHJpbmcifSwibXR1Ijp7ImRlc2NyaXB0aW9uIjoiTVRVIG9mIGludGVyZmFjZSB0byB0aGUgc3BlY2lmaWVkIHZhbHVlLiAwIGZvciBtYXN0ZXIncyBNVFUiLCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJuZXR3b3JrTmFtZXNwYWNlIjp7ImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIG9mIHRoZSBOZXR3b3JrQXR0YWNobWVudERlZmluaXRpb24gY3VzdG9tIHJlc291cmNlIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJEZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBNYWN2bGFuTmV0d29yayIsInByb3BlcnRpZXMiOnsibWFjdmxhbk5ldHdvcmtBdHRhY2htZW50RGVmIjp7ImRlc2NyaXB0aW9uIjoiTmV0d29yayBhdHRhY2htZW50IGRlZmluaXRpb24gZ2VuZXJhdGVkIGZyb20gTWFjdmxhbk5ldHdvcmtTcGVjIiwidHlwZSI6InN0cmluZyJ9LCJyZWFzb24iOnsiZGVzY3JpcHRpb24iOiJJbmZvcm1hdGl2ZSBzdHJpbmcgaW4gY2FzZSB0aGUgb2JzZXJ2ZWQgc3RhdGUgaXMgZXJyb3IiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXRlIjp7ImRlc2NyaXB0aW9uIjoiUmVmbGVjdHMgdGhlIHN0YXRlIG9mIHRoZSBNYWN2bGFuTmV0d29yayIsImVudW0iOlsibm90UmVhZHkiLCJyZWFkeSIsImVycm9yIl0sInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInN0YXRlIl0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fV19LCJzdGF0dXMiOnsiYWNjZXB0ZWROYW1lcyI6eyJraW5kIjoiIiwicGx1cmFsIjoiIn0sImNvbmRpdGlvbnMiOm51bGwsInN0b3JlZFZlcnNpb25zIjpudWxsfX0=
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYWxwaGEub3BlbnNoaWZ0LmlvL3NlcnZpbmctY2VydC1zZWNyZXQtbmFtZSI6IndlYmhvb2stc2VydmVyLWNlcnQifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsImxhYmVscyI6eyJjb250cm9sLXBsYW5lIjoibnZpZGlhLW5ldHdvcmstb3BlcmF0b3ItY29udHJvbGxlciJ9LCJuYW1lIjoibnZpZGlhLW5ldHdvcmstb3BlcmF0b3Itd2ViaG9vay1zZXJ2aWNlIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJudmlkaWEtbmV0d29yay1vcGVyYXRvci1jb250cm9sbGVyIn19LCJzdGF0dXMiOnsibG9hZEJhbGFuY2VyIjp7fX19
relatedImages:
- image: ghcr.io/k8snetworkplumbingwg/sriov-network-device-plugin@sha256:cabce074d10a0f1d62135e2cc5442d65b49094b95b8297fdd024a1a5f461319f
  name: sriov-network-device-plugin
- image: ghcr.io/mellanox/ib-kubernetes@sha256:9774f774df6ede9ddf780b9193ca9d919618056e682d985e6b41e477b13c3432
  name: ib-kubernetes
- image: ghcr.io/mellanox/ipoib-cni@sha256:513d88d639a01ef98b65365f711cee7fbaa166137a56245b7ab32818f745418e
  name: ipoib-cni
- image: ghcr.io/mellanox/k8s-rdma-shared-dev-plugin@sha256:1eb5ab7f4b6f0cf89c954cf7ac8eb2e6fb2290a4f5f57417136a5302f20b12c8
  name: rdma-shared-device-plugin
- image: ghcr.io/mellanox/network-operator-init-container@sha256:67e93ccf3ecb61f17597567faf0f72e1b8ddcf73c5d7440baeadcc1cb6bb811b
  name: nvidia-network-operator-init-container
- image: ghcr.io/mellanox/nic-configuration-operator-daemon@sha256:0e8478898e0b30aec13030b11081b205308666c2a9c5c5bf2c00121079901b41
  name: nic-configuration-operator-daemon
- image: ghcr.io/mellanox/nic-configuration-operator@sha256:353ab27f5f5fba08197cbe8968222e1c115431cc1b9b8d8445f1facb3c3c4d7b
  name: nic-configuration-operator
- image: ghcr.io/mellanox/nic-feature-discovery@sha256:35b1820fe94a833a43613ef5c9db1f58b293ea0dbcf96ec0742b0987f23f133c
  name: nic-feature-discovery
- image: ghcr.io/mellanox/nvidia-k8s-ipam@sha256:1b20b78f889339834ed74e0da621fc5da582719b2537b36d8967ddc6a04679b8
  name: nv-ipam
- image: nvcr.io/nvidia/cloud-native/network-operator@sha256:93c2063f4da6a93810784be95df0083f07618486699d93245c97a29a63861dee
  name: nvidia-network-operator
- image: nvcr.io/nvidia/doca/doca_telemetry@sha256:866971717cb2683f2742d265c9793f93242f55b6e8bd9a0a88a558869f9b9cd7
  name: doca-telemetry-service
- image: nvcr.io/nvidia/mellanox/doca-driver@sha256:35ff3b173b2694198e57b61720545be67e944c1da18ac004007a5b4e68562adc
  name: doca-driver-2
- image: nvcr.io/nvidia/mellanox/doca-driver@sha256:4a620bd39bc70928cd6e249855176ced0f4feb585c8c7624c0b9f5a3e57664c9
  name: doca-driver-4
- image: nvcr.io/nvidia/mellanox/doca-driver@sha256:56a41010b4dbee0dc31e8f9c1467a739241a2d248ed8b5054d4b418f7f79f04d
  name: doca-driver-5
- image: nvcr.io/nvidia/mellanox/doca-driver@sha256:69e6ab6a0249be918f60c1e04fc53a07f280b33563f8edc953806538a9cc3c30
  name: doca-driver-0
- image: nvcr.io/nvidia/mellanox/doca-driver@sha256:76529c24ea17e68b89a2c0d4823d66504fa6f53759760a449308fda396574097
  name: doca-driver-3
- image: nvcr.io/nvidia/mellanox/doca-driver@sha256:9bc09051aca763f83cde99ee8909cf989b1d6c5d6ab683fbb1ca441d47f61fdf
  name: doca-driver-1
- image: registry.connect.redhat.com/nvidia-network-operator/nvidia-network-operator@sha256:2418015d00846dd0d7a8aca11927f1e89b4d8d525e6ae936360e3e3b3bd9e22f
  name: ""
schema: olm.bundle

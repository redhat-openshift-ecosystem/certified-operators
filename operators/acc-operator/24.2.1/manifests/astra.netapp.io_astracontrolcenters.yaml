apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: astracontrolcenters.astra.netapp.io
spec:
  group: astra.netapp.io
  names:
    kind: AstraControlCenter
    listKind: AstraControlCenterList
    plural: astracontrolcenters
    shortNames:
    - acc
    singular: astracontrolcenter
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.uid
      name: Uuid
      type: string
    - jsonPath: .spec.astraVersion
      name: Version
      type: string
    - jsonPath: .spec.astraAddress
      name: Address
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: AstraControlCenter is the Schema for the astracontrolcenters
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AstraControlCenterSpec defines parameters the administrator
              can use to adapt ACC to their datacenter environment.
            properties:
              accountName:
                description: Astra Control Center account name
                type: string
              additionalValues:
                description: Additional values to apply to the AstraControlCenter
                  deployment.
                x-kubernetes-preserve-unknown-fields: true
              astraAddress:
                description: AstraAddress defines how Astra will be found in the data
                  center.  This IP address and/or DNS A record must be created prior
                  to provisioning Astra Control Center. Example - "astra.example.com"
                  The A record and its IP address must be allocated prior to provisioning
                  Astra Control Center
                type: string
              astraKubeConfigSecret:
                description: AstraKubeConfigSecret if present and secret exists operator
                  will attempt to add KubeConfig to Managed Clusters.
                type: string
              astraResourcesScaler:
                description: Scaling options for AstraControlCenter Resource limits.
                enum:
                - "Off"
                - Default
                type: string
              astraVersion:
                description: Version of AstraControlCenter to deploy.  You are provided
                  a Helm repository with a corresponding version. Example - 1.5.2,
                  1.4.2-patch
                pattern: (\d*\.\d*\.\d*(-.*)?)|\d+-.*
                type: string
              autoSupport:
                description: AutoSupport indicates willingness to participate in NetApp's
                  proactive support application, NetApp Active IQ. An internet connection
                  is required (port 442) and all support data is anonymized. The default
                  election is true and indicates no support data will be sent to NetApp.
                  An empty or blank election is the same as a default election. Air
                  gapped installations should enter false.
                properties:
                  enrolled:
                    default: true
                    description: Enrolled determines if you want to send anonymous
                      data to NetApp for support purposes.
                    type: boolean
                  url:
                    default: https://support.netapp.com/asupprod/post/1.0/postAsup
                    description: URL determines where the anonymous data will be sent
                    type: string
                required:
                - enrolled
                type: object
              crds:
                description: Options for how ACC should handle CRDs.
                properties:
                  externalCertManager:
                    description: By default, ACC will install the required cert-manager
                      CRDs. Note, CRDs are a cluster wide object and installing them
                      may have an impact on other parts of the cluster. You can use
                      this flag to signal to ACC that these CRDs will be installed
                      and managed by the cluster administrator outside of ACC.
                    type: boolean
                  externalTraefik:
                    description: By default, ACC will install the required Traefik
                      CRDs. Note, CRDs are a cluster wide object and installing them
                      may have an impact on other parts of the cluster. You can use
                      this flag to signal to ACC that these CRDs will be installed
                      and managed by the cluster administrator outside of ACC.
                    type: boolean
                  shouldUpgrade:
                    description: Determines if CRDs should be upgraded when ACC is
                      upgraded. If true, all external CRDs will be upgraded If false,
                      they will be ignored during ACC upgrade process.
                    type: boolean
                type: object
              email:
                description: EmailAddress will be notified by Astra as events warrant.
                type: string
              firstName:
                description: The first name of the SRE supporting Astra.
                type: string
              imageRegistry:
                description: The container image registry that is hosting the Astra
                  application images, ACC Operator and ACC Helm Repository.
                properties:
                  name:
                    description: The name of the image registry.  For example "example.registry/astra".  Do
                      not prefix with protocol.
                    type: string
                  secret:
                    description: The name of the Kubernetes secret that will authenticate
                      with the image registry.
                    type: string
                type: object
              ingressType:
                default: Generic
                description: IngressType The type of ingress to that ACC should be
                  configured for
                enum:
                - Generic
                - AccTraefik
                type: string
              lastName:
                description: The last name of the SRE supporting Astra.
                type: string
              mongoPort:
                default: 11921
                description: MongoPort is used to override the port used for communication with MongoDB
                format: int64
                type: integer
              mongoResources:
                description: The resource limit for mongodb
                properties:
                  memory:
                    description: The memory limit for mongoDB
                    type: string
                type: object
              scaleSize:
                default: Medium
                description: ScaleSize The size of replicas for ACC services
                enum:
                - Small
                - Medium
                type: string
              storageClass:
                description: The storage class to be used for PVCs. If not set, default
                  storage class will be used.
                type: string
              volumeReclaimPolicy:
                description: Reclaim policy to be set for persistent volumes
                type: string
            required:
            - accountName
            - astraAddress
            - astraVersion
            - autoSupport
            - email
            type: object
          status:
            description: AstraControlCenterStatus defines the observed state of AstraControlCenter
            properties:
              accConditionHistory:
                description: AccConditionHistory contains the history of the deployment
                  state of the Astra Control Center Instance.
                properties:
                  items:
                    items:
                      properties:
                        astraVersion:
                          type: string
                        condition:
                          description: "Condition contains details for one aspect
                            of the current state of this API Resource. --- This struct
                            is intended for direct use as an array at the field path
                            .status.conditions.  For example, \n \ttype FooStatus
                            struct{ \t    // Represents the observations of a foo's
                            current state. \t    // Known .status.conditions.type
                            are: \"Available\", \"Progressing\", and \"Degraded\"
                            \t    // +patchMergeKey=type \t    // +patchStrategy=merge
                            \t    // +listType=map \t    // +listMapKey=type \t    Conditions
                            []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                            patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                            \n \t    // other fields \t}"
                          properties:
                            lastTransitionTime:
                              description: lastTransitionTime is the last time the
                                condition transitioned from one status to another.
                                This should be when the underlying condition changed.  If
                                that is not known, then using the time when the API
                                field changed is acceptable.
                              format: date-time
                              type: string
                            message:
                              description: message is a human readable message indicating
                                details about the transition. This may be an empty
                                string.
                              maxLength: 32768
                              type: string
                            observedGeneration:
                              description: observedGeneration represents the .metadata.generation
                                that the condition was set based upon. For instance,
                                if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                                is 9, the condition is out of date with respect to
                                the current state of the instance.
                              format: int64
                              minimum: 0
                              type: integer
                            reason:
                              description: reason contains a programmatic identifier
                                indicating the reason for the condition's last transition.
                                Producers of specific condition types may define expected
                                values and meanings for this field, and whether the
                                values are considered a guaranteed API. The value
                                should be a CamelCase string. This field may not be
                                empty.
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: status of the condition, one of True, False,
                                Unknown.
                              enum:
                              - "True"
                              - "False"
                              - Unknown
                              type: string
                            type:
                              description: type of condition in CamelCase or in foo.example.com/CamelCase.
                                --- Many .condition.type values are consistent across
                                resources like Available, but because arbitrary conditions
                                can be useful (see .node.status.conditions), the ability
                                to deconflict is important. The regex it matches is
                                (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                          - lastTransitionTime
                          - message
                          - reason
                          - status
                          - type
                          type: object
                        generation:
                          format: int64
                          type: integer
                        observedGeneration:
                          format: int64
                          type: integer
                        observedSpec:
                          description: AstraControlCenterSpec defines parameters the
                            administrator can use to adapt ACC to their datacenter
                            environment.
                          properties:
                            accountName:
                              description: Astra Control Center account name
                              type: string
                            additionalValues:
                              description: Additional values to apply to the AstraControlCenter
                                deployment.
                              x-kubernetes-preserve-unknown-fields: true
                            astraAddress:
                              description: AstraAddress defines how Astra will be
                                found in the data center.  This IP address and/or
                                DNS A record must be created prior to provisioning
                                Astra Control Center. Example - "astra.example.com"
                                The A record and its IP address must be allocated
                                prior to provisioning Astra Control Center
                              type: string
                            astraKubeConfigSecret:
                              description: AstraKubeConfigSecret if present and secret
                                exists operator will attempt to add KubeConfig to
                                Managed Clusters.
                              type: string
                            astraResourcesScaler:
                              description: Scaling options for AstraControlCenter
                                Resource limits.
                              enum:
                              - "Off"
                              - Default
                              type: string
                            astraVersion:
                              description: Version of AstraControlCenter to deploy.  You
                                are provided a Helm repository with a corresponding
                                version. Example - 1.5.2, 1.4.2-patch
                              pattern: (\d*\.\d*\.\d*(-.*)?)|\d+-.*
                              type: string
                            autoSupport:
                              description: AutoSupport indicates willingness to participate
                                in NetApp's proactive support application, NetApp
                                Active IQ. An internet connection is required (port
                                442) and all support data is anonymized. The default
                                election is true and indicates no support data will
                                be sent to NetApp. An empty or blank election is the
                                same as a default election. Air gapped installations
                                should enter false.
                              properties:
                                enrolled:
                                  default: true
                                  description: Enrolled determines if you want to
                                    send anonymous data to NetApp for support purposes.
                                  type: boolean
                                url:
                                  default: https://support.netapp.com/asupprod/post/1.0/postAsup
                                  description: URL determines where the anonymous
                                    data will be sent
                                  type: string
                              required:
                              - enrolled
                              type: object
                            crds:
                              description: Options for how ACC should handle CRDs.Options
                                for how ACC should handle CRDs.
                              properties:
                                externalCertManager:
                                  description: By default, ACC will install the required
                                    cert-manager CRDs. Note, CRDs are a cluster wide
                                    object and installing them may have an impact
                                    on other parts of the cluster. You can use this
                                    flag to signal to ACC that these CRDs will be
                                    installed and managed by the cluster administrator
                                    outside of ACC.
                                  type: boolean
                                externalTraefik:
                                  description: By default, ACC will install the required
                                    Traefik CRDs. Note, CRDs are a cluster wide object
                                    and installing them may have an impact on other
                                    parts of the cluster. You can use this flag to
                                    signal to ACC that these CRDs will be installed
                                    and managed by the cluster administrator outside
                                    of ACC.
                                  type: boolean
                                shouldUpgrade:
                                  description: Determines if CRDs should be upgraded
                                    when ACC is upgraded. If true, all external CRDs
                                    will be upgraded If false, they will be ignored
                                    during ACC upgrade process.
                                  type: boolean
                              type: object
                            email:
                              description: EmailAddress will be notified by Astra
                                as events warrant.
                              type: string
                            firstName:
                              description: The first name of the SRE supporting Astra.
                              type: string
                            imageRegistry:
                              description: The container image registry that is hosting
                                the Astra application images, ACC Operator and ACC
                                Helm Repository.
                              properties:
                                name:
                                  description: The name of the image registry.  For
                                    example "example.registry/astra".  Do not prefix
                                    with protocol.
                                  type: string
                                secret:
                                  description: The name of the Kubernetes secret that
                                    will authenticate with the image registry.
                                  type: string
                              type: object
                            ingressType:
                              default: Generic
                              description: IngressType The type of ingress to that
                                ACC should be configured for
                              enum:
                              - Generic
                              - AccTraefik
                              type: string
                            lastName:
                              description: The last name of the SRE supporting Astra.
                              type: string
                            mongoPort:
                              default: 11921
                              description: MongoPort is used to override the port used for communication with MongoDB
                              format: int64
                              type: integer
                            mongoResources:
                              description: The resource limit for mongodb
                              properties:
                                memory:
                                  description: The memory limit for mongoDB
                                  type: string
                              type: object
                            scaleSize:
                              default: Medium
                              description: ScaleSize The size of replicas for ACC services
                              enum:
                                - Small
                                - Medium
                              type: string
                            storageClass:
                              description: The storage class to be used for PVCs.
                                If not set, default storage class will be used.
                              type: string
                            volumeReclaimPolicy:
                              description: Reclaim policy to be set for persistent
                                volumes
                              type: string
                          required:
                          - accountName
                          - astraAddress
                          - astraVersion
                          - autoSupport
                          - email
                          type: object
                        observedVersion:
                          type: string
                        timestamp:
                          format: date-time
                          type: string
                      type: object
                    type: array
                type: object
              certManager:
                description: Used to indicate to acc-operator that an external cert-manager
                  is in use.
                type: string
              cluster:
                description: Cluster field is used to indicate information about the
                  kubernetes cluster that ACC is running on.
                properties:
                  type:
                    type: string
                  vendorVersion:
                    type: string
                  version:
                    type: string
                type: object
              conditions:
                description: Astra Control Center Instance conditions.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              deploymentState:
                description: DeploymentState is the deployment state of the Astra
                  Control Center Instance. This field is deprecated, please use the
                  "Ready" Condition instead.
                type: string
              observedGeneration:
                description: The last observed generation of the spec.
                format: int64
                type: integer
              observedSpec:
                description: ObservedSpec is the last observed Astra custom resource
                  spec
                properties:
                  accountName:
                    description: Astra Control Center account name
                    type: string
                  additionalValues:
                    description: Additional values to apply to the AstraControlCenter
                      deployment.
                    x-kubernetes-preserve-unknown-fields: true
                  astraAddress:
                    description: AstraAddress defines how Astra will be found in the
                      data center.  This IP address and/or DNS A record must be created
                      prior to provisioning Astra Control Center. Example - "astra.example.com"
                      The A record and its IP address must be allocated prior to provisioning
                      Astra Control Center
                    type: string
                  astraKubeConfigSecret:
                    description: AstraKubeConfigSecret if present and secret exists
                      operator will attempt to add KubeConfig to Managed Clusters.
                    type: string
                  astraResourcesScaler:
                    description: Scaling options for AstraControlCenter Resource limits.
                    enum:
                    - "Off"
                    - Default
                    type: string
                  astraVersion:
                    description: Version of AstraControlCenter to deploy.  You are
                      provided a Helm repository with a corresponding version. Example
                      - 1.5.2, 1.4.2-patch
                    pattern: (\d*\.\d*\.\d*(-.*)?)|\d+-.*
                    type: string
                  autoSupport:
                    description: AutoSupport indicates willingness to participate
                      in NetApp's proactive support application, NetApp Active IQ.
                      An internet connection is required (port 442) and all support
                      data is anonymized. The default election is true and indicates
                      no support data will be sent to NetApp. An empty or blank election
                      is the same as a default election. Air gapped installations
                      should enter false.
                    properties:
                      enrolled:
                        default: true
                        description: Enrolled determines if you want to send anonymous
                          data to NetApp for support purposes.
                        type: boolean
                      url:
                        default: https://support.netapp.com/asupprod/post/1.0/postAsup
                        description: URL determines where the anonymous data will
                          be sent
                        type: string
                    required:
                    - enrolled
                    type: object
                  crds:
                    description: Options for how ACC should handle CRDs.Options for
                      how ACC should handle CRDs.
                    properties:
                      externalCertManager:
                        description: By default, ACC will install the required cert-manager
                          CRDs. Note, CRDs are a cluster wide object and installing
                          them may have an impact on other parts of the cluster. You
                          can use this flag to signal to ACC that these CRDs will
                          be installed and managed by the cluster administrator outside
                          of ACC.
                        type: boolean
                      externalTraefik:
                        description: By default, ACC will install the required Traefik
                          CRDs. Note, CRDs are a cluster wide object and installing
                          them may have an impact on other parts of the cluster. You
                          can use this flag to signal to ACC that these CRDs will
                          be installed and managed by the cluster administrator outside
                          of ACC.
                        type: boolean
                      shouldUpgrade:
                        description: Determines if CRDs should be upgraded when ACC
                          is upgraded. If true, all external CRDs will be upgraded
                          If false, they will be ignored during ACC upgrade process.
                        type: boolean
                    type: object
                  email:
                    description: EmailAddress will be notified by Astra as events
                      warrant.
                    type: string
                  firstName:
                    description: The first name of the SRE supporting Astra.
                    type: string
                  imageRegistry:
                    description: The container image registry that is hosting the
                      Astra application images, ACC Operator and ACC Helm Repository.
                    properties:
                      name:
                        description: The name of the image registry.  For example
                          "example.registry/astra".  Do not prefix with protocol.
                        type: string
                      secret:
                        description: The name of the Kubernetes secret that will authenticate
                          with the image registry.
                        type: string
                    type: object
                  ingressType:
                    default: Generic
                    description: IngressType The type of ingress to that ACC should
                      be configured for
                    enum:
                    - Generic
                    - AccTraefik
                    type: string
                  lastName:
                    description: The last name of the SRE supporting Astra.
                    type: string
                  mongoPort:
                    default: 11921
                    description: MongoPort is used to override the port used for communication with MongoDB
                    format: int64
                    type: integer
                  mongoResources:
                    description: The resource limit for mongodb
                    properties:
                      memory:
                        description: The memory limit for mongoDB
                        type: string
                    type: object
                  scaleSize:
                    default: Medium
                    description: ScaleSize The size of replicas for ACC services
                    enum:
                    - Small
                    - Medium
                    type: string
                  storageClass:
                    description: The storage class to be used for PVCs. If not set,
                      default storage class will be used.
                    type: string
                  volumeReclaimPolicy:
                    description: Reclaim policy to be set for persistent volumes
                    type: string
                required:
                - accountName
                - astraAddress
                - astraVersion
                - autoSupport
                - email
                type: object
              observedVersion:
                description: The last observed astraVersion of the spec.
                type: string
              postInstall:
                description: PostInstall is the status of the Astra Control Center
                  Instance's initial PostInstall step. This field is deprecated, please
                  use the "PostInstallComplete" Condition instead.
                type: string
              serviceMesh:
                description: ServiceMesh field is used to indicate information about
                  the service mesh running on acc namespace
                properties:
                  type:
                    type: string
                type: object
              uuid:
                description: Uuid is the unique ID for a given Astra Control Center
                  installation. This Uuid is unique throughout the k8s cluster lifecycle.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

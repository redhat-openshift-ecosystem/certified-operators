apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.19.0
  labels:
    app.kubernetes.io/name: airlock-microgateway-operator
    app.kubernetes.io/version: 4.8.0-alpha1
  name: redisproviders.microgateway.airlock.com
spec:
  group: microgateway.airlock.com
  names:
    categories:
    - airlock-microgateway
    kind: RedisProvider
    listKind: RedisProviderList
    plural: redisproviders
    singular: redisprovider
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RedisProvider defines a client configuration for connecting to
          a Redis database.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: spec defines the desired Redis client configuration.
            properties:
              auth:
                description: auth specifies the Redis credentials.
                properties:
                  password:
                    description: password specifies the Redis password.
                    properties:
                      secretRef:
                        description: secretRef selects the secret containing the Redis
                          password under the key 'redis.password'.
                        properties:
                          name:
                            description: name of the resource
                            maxLength: 253
                            minLength: 1
                            type: string
                        required:
                        - name
                        type: object
                    required:
                    - secretRef
                    type: object
                  username:
                    default: default
                    description: username specifies the Redis username to authenticate
                      with.
                    maxLength: 128
                    minLength: 1
                    pattern: ^[^\s]+$
                    type: string
                required:
                - password
                type: object
              mode:
                description: mode configures the redis deployment mode.
                properties:
                  cluster:
                    description: cluster specifies the Redis Cluster to connect to.
                    properties:
                      nodes:
                        description: nodes specifies the Cluster nodes.
                        items:
                          properties:
                            host:
                              description: host specifies the IP or hostname.
                              maxLength: 256
                              minLength: 1
                              pattern: ^(\d{1,3}(\.\d{1,3}){3}|([0-9a-fA-F]{1,4}|:)+(:\d{1,3}(\.\d{1,3}){3})?|[a-z0-9\-]+(\.[a-z0-9\-]+)*)$
                              type: string
                            port:
                              default: 6379
                              description: port specifies the port.
                              format: int64
                              maximum: 65535
                              minimum: 1
                              type: integer
                          required:
                          - host
                          type: object
                        maxItems: 1024
                        minItems: 1
                        type: array
                        x-kubernetes-list-map-keys:
                        - host
                        - port
                        x-kubernetes-list-type: map
                    required:
                    - nodes
                    type: object
                  sentinel:
                    description: sentinel specifies the Redis Sentinels to connect
                      to.
                    properties:
                      masterName:
                        description: masterName specifies the master name.
                        maxLength: 256
                        minLength: 1
                        type: string
                      nodes:
                        description: nodes specifies the Sentinel nodes.
                        items:
                          properties:
                            host:
                              description: host specifies the IP or hostname.
                              maxLength: 256
                              minLength: 1
                              pattern: ^(\d{1,3}(\.\d{1,3}){3}|([0-9a-fA-F]{1,4}|:)+(:\d{1,3}(\.\d{1,3}){3})?|[a-z0-9\-]+(\.[a-z0-9\-]+)*)$
                              type: string
                            port:
                              default: 6379
                              description: port specifies the port.
                              format: int64
                              maximum: 65535
                              minimum: 1
                              type: integer
                          required:
                          - host
                          type: object
                        maxItems: 32
                        minItems: 1
                        type: array
                        x-kubernetes-list-map-keys:
                        - host
                        - port
                        x-kubernetes-list-type: map
                    required:
                    - masterName
                    - nodes
                    type: object
                  standalone:
                    description: standalone specifies the standalone Redis instance
                      to connect to.
                    properties:
                      host:
                        description: host specifies the IP or hostname.
                        maxLength: 256
                        minLength: 1
                        pattern: ^(\d{1,3}(\.\d{1,3}){3}|([0-9a-fA-F]{1,4}|:)+(:\d{1,3}(\.\d{1,3}){3})?|[a-z0-9\-]+(\.[a-z0-9\-]+)*)$
                        type: string
                      port:
                        default: 6379
                        description: port specifies the port.
                        format: int64
                        maximum: 65535
                        minimum: 1
                        type: integer
                    required:
                    - host
                    type: object
                type: object
              timeouts:
                description: timeouts specifies the timeouts when interacting with
                  the Redis endpoint.
                properties:
                  connect:
                    default: 5s
                    description: connect specifies the timeout for establishing a
                      connection.
                    type: string
                  maxDuration:
                    default: 2s
                    description: maxDuration specifies the response timeout.
                    type: string
                type: object
              tls:
                description: tls defines TLS settings. If not specified, TLS is disabled
                  i.e. unencrypted TCP is used when connecting to the Redis instance.
                properties:
                  certificateVerification:
                    description: certificateVerification specifies how the certificate
                      presented by the server is verified.
                    properties:
                      custom:
                        description: custom explicitly specifies how the server certificate
                          should be verified.
                        properties:
                          trustedCA:
                            description: trustedCA defines which CA certificates are
                              trusted.
                            properties:
                              certificates:
                                description: certificates defines the list of secretRefs
                                  containing trusted CA certificates.
                                items:
                                  properties:
                                    secretRef:
                                      description: secretRef defines the reference
                                        to a secret containing one or more CA certificates
                                        under the key 'ca.crt'.
                                      properties:
                                        name:
                                          description: name of the resource
                                          maxLength: 253
                                          minLength: 1
                                          type: string
                                      required:
                                      - name
                                      type: object
                                  required:
                                  - secretRef
                                  type: object
                                maxItems: 16
                                minItems: 1
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - certificates
                            type: object
                        required:
                        - trustedCA
                        type: object
                      disabled:
                        description: |-
                          disabled specifies to trust any certificate without verification. THIS IS INSECURE AND SHOULD ONLY BE USED FOR TESTING.
                          Note: This setting currently also disables TLS SNI.
                        type: object
                      publicCAs:
                        description: publicCAs specifies to only accept certificates
                          with a SAN matching the host and which are signed by a CA
                          which is either directly or indirectly trusted by any of
                          the root CA certificates shipped with the Airlock Microgateway
                          Session Agent’s base image.
                        type: object
                    type: object
                  clientCertificate:
                    description: clientCertificate configures client certificate authentication.
                      If not specified, TLS-based client authentication is disabled.
                    properties:
                      secretRef:
                        description: secretRef specifies the client certificate to
                          use (secret of type kubernetes.io/tls).
                        properties:
                          name:
                            description: name of the resource
                            maxLength: 253
                            minLength: 1
                            type: string
                        required:
                        - name
                        type: object
                    required:
                    - secretRef
                    type: object
                type: object
            required:
            - mode
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null

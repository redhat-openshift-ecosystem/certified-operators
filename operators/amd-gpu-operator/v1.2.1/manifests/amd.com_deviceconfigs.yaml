---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: amd-gpu
    app.kubernetes.io/name: amd-gpu
    app.kubernetes.io/part-of: amd-gpu
  name: deviceconfigs.amd.com
spec:
  group: amd.com
  names:
    kind: DeviceConfig
    listKind: DeviceConfigList
    plural: deviceconfigs
    shortNames:
    - gpue
    singular: deviceconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DeviceConfig describes how to enable AMD GPU device
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: DeviceConfigSpec describes how the AMD GPU operator should
              enable AMD GPU device for customer's use.
            properties:
              commonConfig:
                description: common config
                properties:
                  initContainerImage:
                    description: InitContainerImage is being used for the operands
                      pods, i.e. metrics exporter, test runner, device plugin and
                      node labeller
                    type: string
                  utilsContainer:
                    description: UtilsContainer contains parameters to configure operator's
                      utils container
                    properties:
                      image:
                        description: Image is the image of utils container
                        pattern: ^([a-z0-9]+(?:[._-][a-z0-9]+)*(:[0-9]+)?)(/[a-z0-9]+(?:[._-][a-z0-9]+)*)*(?::[a-z0-9._-]+)?(?:@[a-zA-Z0-9]+:[a-f0-9]+)?$
                        type: string
                      imagePullPolicy:
                        description: image pull policy for utils container
                        enum:
                        - Always
                        - IfNotPresent
                        - Never
                        type: string
                      imageRegistrySecret:
                        description: secret used for pull utils container image
                        properties:
                          name:
                            description: |-
                              Name of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                type: object
              devicePlugin:
                description: device plugin
                properties:
                  devicePluginImage:
                    description: device plugin image
                    pattern: ^([a-z0-9]+(?:[._-][a-z0-9]+)*(:[0-9]+)?)(/[a-z0-9]+(?:[._-][a-z0-9]+)*)*(?::[a-z0-9._-]+)?(?:@[a-zA-Z0-9]+:[a-f0-9]+)?$
                    type: string
                  devicePluginImagePullPolicy:
                    description: image pull policy for device plugin
                    enum:
                    - Always
                    - IfNotPresent
                    - Never
                    type: string
                  devicePluginTolerations:
                    description: tolerations for the device plugin DaemonSet
                    items:
                      description: |-
                        The pod this Toleration is attached to tolerates any taint that matches
                        the triple <key,value,effect> using the matching operator <operator>.
                      properties:
                        effect:
                          description: |-
                            Effect indicates the taint effect to match. Empty means match all taint effects.
                            When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: |-
                            Key is the taint key that the toleration applies to. Empty means match all taint keys.
                            If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                          type: string
                        operator:
                          description: |-
                            Operator represents a key's relationship to the value.
                            Valid operators are Exists and Equal. Defaults to Equal.
                            Exists is equivalent to wildcard for value, so that a pod can
                            tolerate all taints of a particular category.
                          type: string
                        tolerationSeconds:
                          description: |-
                            TolerationSeconds represents the period of time the toleration (which must be
                            of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                            it is not set, which means tolerate the taint forever (do not evict). Zero and
                            negative values will be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: |-
                            Value is the taint value the toleration matches to.
                            If the operator is Exists, the value should be empty, otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                  enableNodeLabeller:
                    default: true
                    description: enable or disable the node labeller
                    type: boolean
                  imageRegistrySecret:
                    description: node labeller image registry secret used to pull/push
                      images
                    properties:
                      name:
                        description: |-
                          Name of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  nodeLabellerImage:
                    description: node labeller image
                    pattern: ^([a-z0-9]+(?:[._-][a-z0-9]+)*(:[0-9]+)?)(/[a-z0-9]+(?:[._-][a-z0-9]+)*)*(?::[a-z0-9._-]+)?(?:@[a-zA-Z0-9]+:[a-f0-9]+)?$
                    type: string
                  nodeLabellerImagePullPolicy:
                    description: image pull policy for node labeller
                    enum:
                    - Always
                    - IfNotPresent
                    - Never
                    type: string
                  nodeLabellerTolerations:
                    description: tolerations for the node labeller DaemonSet
                    items:
                      description: |-
                        The pod this Toleration is attached to tolerates any taint that matches
                        the triple <key,value,effect> using the matching operator <operator>.
                      properties:
                        effect:
                          description: |-
                            Effect indicates the taint effect to match. Empty means match all taint effects.
                            When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: |-
                            Key is the taint key that the toleration applies to. Empty means match all taint keys.
                            If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                          type: string
                        operator:
                          description: |-
                            Operator represents a key's relationship to the value.
                            Valid operators are Exists and Equal. Defaults to Equal.
                            Exists is equivalent to wildcard for value, so that a pod can
                            tolerate all taints of a particular category.
                          type: string
                        tolerationSeconds:
                          description: |-
                            TolerationSeconds represents the period of time the toleration (which must be
                            of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                            it is not set, which means tolerate the taint forever (do not evict). Zero and
                            negative values will be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: |-
                            Value is the taint value the toleration matches to.
                            If the operator is Exists, the value should be empty, otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                  upgradePolicy:
                    description: upgrade policy for device plugin and node labeller
                      daemons
                    properties:
                      maxUnavailable:
                        default: 1
                        description: MaxUnavailable specifies the maximum number of
                          Pods that can be unavailable during the update process.
                          Applicable for RollingUpdate only. Default value is 1.
                        format: int32
                        type: integer
                      upgradeStrategy:
                        description: UpgradeStrategy specifies the type of the DaemonSet
                          update. Valid values are "RollingUpdate" (default) or "OnDelete".
                        enum:
                        - RollingUpdate
                        - OnDelete
                        type: string
                    type: object
                type: object
              driver:
                description: driver
                properties:
                  amdgpuInstallerRepoURL:
                    description: |-
                      radeon repo URL for fetching amdgpu installer if building driver image on the fly
                      installer URL is https://repo.radeon.com/amdgpu-install by default
                    type: string
                  blacklist:
                    description: |-
                      blacklist amdgpu drivers on the host. Node reboot is required to apply the baclklist on the worker nodes.
                      Not working for OpenShift cluster. OpenShift users please use the Machine Config Operator (MCO) resource to configure amdgpu blacklist.
                      Example MCO resource is available at https://instinct.docs.amd.com/projects/gpu-operator/en/latest/installation/openshift-olm.html#create-blacklist-for-installing-out-of-tree-kernel-module
                    type: boolean
                  enable:
                    default: true
                    description: |-
                      enable driver install. default value is true.
                      disable is for skipping driver install/uninstall for dryrun or using in-tree amdgpu kernel module
                    type: boolean
                  image:
                    description: |-
                      defines image that includes drivers and firmware blobs, don't include tag since it will be fully managed by operator
                      for vanilla k8s the default value is image-registry:5000/$MOD_NAMESPACE/amdgpu_kmod
                      for OpenShift the default value is image-registry.openshift-image-registry.svc:5000/$MOD_NAMESPACE/amdgpu_kmod
                      image tag will be in the format of <linux distro>-<release version>-<kernel version>-<driver version>
                      example tag is coreos-416.94-5.14.0-427.28.1.el9_4.x86_64-6.2.2 and ubuntu-22.04-5.15.0-94-generic-6.1.3
                      NOTE: Updating the driver image repository is not supported. Please delete the existing DeviceConfig and create a new one with the updated image repository
                    pattern: ^([a-z0-9]+(?:[._-][a-z0-9]+)*(:[0-9]+)?)(/[$a-zA-Z0-9_]+(?:[._-][$a-zA-Z0-9_]+)*)*(?::[a-z0-9._-]+)?(?:@[a-zA-Z0-9]+:[a-f0-9]+)?$
                    type: string
                  imageRegistrySecret:
                    description: secrets used for pull/push images from/to private
                      registry specified in driversImage
                    properties:
                      name:
                        description: |-
                          Name of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  imageRegistryTLS:
                    description: driver image registry TLS setting for the container
                      image
                    properties:
                      insecure:
                        description: If true, check if the container image already
                          exists using plain HTTP.
                        type: boolean
                      insecureSkipTLSVerify:
                        description: If true, skip any TLS server certificate validation
                        type: boolean
                    type: object
                  imageSign:
                    description: |-
                      image signing config to sign the driver image when building driver image on the fly
                      image signing is required for installing driver on secure boot enabled system
                    properties:
                      certSecret:
                        description: |-
                          ImageSignCertSecret the public key used to sign kernel modules within image
                          necessary for secure boot enabled system
                        properties:
                          name:
                            description: |-
                              Name of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      keySecret:
                        description: |-
                          ImageSignKeySecret the private key used to sign kernel modules within image
                          necessary for secure boot enabled system
                        properties:
                          name:
                            description: |-
                              Name of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  upgradePolicy:
                    description: policy to upgrade the drivers
                    properties:
                      enable:
                        description: |-
                          enable upgrade policy, disabled by default
                          If disabled, user has to manually upgrade all the nodes.
                        type: boolean
                      maxParallelUpgrades:
                        default: 1
                        description: |-
                          MaxParallelUpgrades indicates how many nodes can be upgraded in parallel
                          0 means no limit, all nodes will be upgraded in parallel
                        minimum: 0
                        type: integer
                      maxUnavailableNodes:
                        anyOf:
                        - type: integer
                        - type: string
                        default: 25%
                        description: |-
                          MaxUnavailableNodes indicates maximum number of nodes that can be in a failed upgrade state beyond which upgrades will stop to keep cluster at a minimal healthy state
                          Value can be an integer (ex: 2) which would mean atmost 2 nodes can be in failed state after which new upgrades will not start. Or it can be a percentage string(ex: "50%") from which absolute number will be calculated and round up
                        x-kubernetes-int-or-string: true
                      nodeDrainPolicy:
                        description: Node draining policy
                        properties:
                          force:
                            default: false
                            description: Force indicates if force draining is allowed
                            type: boolean
                          timeoutSeconds:
                            default: 300
                            description: TimeoutSecond specifies the length of time
                              in seconds to wait before giving up drain, zero means
                              infinite
                            minimum: 0
                            type: integer
                        type: object
                      podDeletionPolicy:
                        description: Pod Deletion policy. If both NodeDrainPolicy
                          and PodDeletionPolicy config is available, NodeDrainPolicy(if
                          enabled) will take precedence.
                        properties:
                          force:
                            default: false
                            description: Force indicates if force deletion is allowed
                            type: boolean
                          timeoutSeconds:
                            default: 300
                            description: TimeoutSecond specifies the length of time
                              in seconds to wait before giving up on pod deletion,
                              zero means infinite
                            minimum: 0
                            type: integer
                        type: object
                      rebootRequired:
                        default: true
                        description: reboot between driver upgrades, enabled by default,
                          if enabled spec.commonConfig.utilsContainer will be used
                          to perform reboot on worker nodes
                        type: boolean
                    type: object
                  version:
                    description: |-
                      version of the drivers source code, can be used as part of image of dockerfile source image
                      default value for different OS is: ubuntu: 6.1.3, coreOS: 6.2.2
                    type: string
                type: object
              metricsExporter:
                description: metrics exporter
                properties:
                  config:
                    description: optional configuration for metrics
                    properties:
                      name:
                        description: |-
                          Name of the configMap that defines the list of metrics
                          default list:[]
                        type: string
                    type: object
                  enable:
                    description: enable metrics exporter, disabled by default
                    type: boolean
                  image:
                    description: metrics exporter image
                    pattern: ^([a-z0-9]+(?:[._-][a-z0-9]+)*(:[0-9]+)?)(/[a-z0-9]+(?:[._-][a-z0-9]+)*)*(?::[a-z0-9._-]+)?(?:@[a-zA-Z0-9]+:[a-f0-9]+)?$
                    type: string
                  imagePullPolicy:
                    description: image pull policy for metrics exporter
                    enum:
                    - Always
                    - IfNotPresent
                    - Never
                    type: string
                  imageRegistrySecret:
                    description: metrics exporter image registry secret used to pull/push
                      images
                    properties:
                      name:
                        description: |-
                          Name of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  nodePort:
                    description: NodePort is the external port for pulling metrics
                      from outside the cluster, in the range 30000-32767 (assigned
                      automatically by default)
                    format: int32
                    maximum: 32767
                    minimum: 30000
                    type: integer
                  port:
                    default: 5000
                    description: Port is the internal port used for in-cluster and
                      node access to pull metrics from the metrics-exporter (default
                      5000).
                    format: int32
                    type: integer
                  rbacConfig:
                    description: optional kube-rbac-proxy config to provide rbac services
                    properties:
                      disableHttps:
                        description: disable https protecting the proxy endpoint
                        type: boolean
                      enable:
                        description: enable kube-rbac-proxy, disabled by default
                        type: boolean
                      image:
                        description: kube-rbac-proxy image
                        pattern: ^([a-z0-9]+(?:[._-][a-z0-9]+)*(:[0-9]+)?)(/[a-z0-9]+(?:[._-][a-z0-9]+)*)*(?::[a-z0-9._-]+)?(?:@[a-zA-Z0-9]+:[a-f0-9]+)?$
                        type: string
                      secret:
                        description: certificate secret to mount in kube-rbac container
                          for TLS, self signed certificates will be generated by default
                        properties:
                          name:
                            description: |-
                              Name of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  selector:
                    additionalProperties:
                      type: string
                    description: Selector describes on which nodes to enable metrics
                      exporter
                    type: object
                  serviceType:
                    default: ClusterIP
                    description: ServiceType service type for metrics, clusterIP/NodePort,
                      clusterIP by default
                    enum:
                    - ClusterIP
                    - NodePort
                    type: string
                  tolerations:
                    description: tolerations for metrics exporter
                    items:
                      description: |-
                        The pod this Toleration is attached to tolerates any taint that matches
                        the triple <key,value,effect> using the matching operator <operator>.
                      properties:
                        effect:
                          description: |-
                            Effect indicates the taint effect to match. Empty means match all taint effects.
                            When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: |-
                            Key is the taint key that the toleration applies to. Empty means match all taint keys.
                            If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                          type: string
                        operator:
                          description: |-
                            Operator represents a key's relationship to the value.
                            Valid operators are Exists and Equal. Defaults to Equal.
                            Exists is equivalent to wildcard for value, so that a pod can
                            tolerate all taints of a particular category.
                          type: string
                        tolerationSeconds:
                          description: |-
                            TolerationSeconds represents the period of time the toleration (which must be
                            of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                            it is not set, which means tolerate the taint forever (do not evict). Zero and
                            negative values will be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: |-
                            Value is the taint value the toleration matches to.
                            If the operator is Exists, the value should be empty, otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                  upgradePolicy:
                    description: upgrade policy for metrics exporter daemons
                    properties:
                      maxUnavailable:
                        default: 1
                        description: MaxUnavailable specifies the maximum number of
                          Pods that can be unavailable during the update process.
                          Applicable for RollingUpdate only. Default value is 1.
                        format: int32
                        type: integer
                      upgradeStrategy:
                        description: UpgradeStrategy specifies the type of the DaemonSet
                          update. Valid values are "RollingUpdate" (default) or "OnDelete".
                        enum:
                        - RollingUpdate
                        - OnDelete
                        type: string
                    type: object
                type: object
              selector:
                additionalProperties:
                  type: string
                description: Selector describes on which nodes the GPU Operator should
                  enable the GPU device.
                type: object
              testRunner:
                description: test runner
                properties:
                  config:
                    description: config map to customize the config for test runner,
                      if not specified default test config will be aplied
                    properties:
                      name:
                        description: |-
                          Name of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  enable:
                    description: enable test runner, disabled by default
                    type: boolean
                  image:
                    description: test runner image
                    pattern: ^([a-z0-9]+(?:[._-][a-z0-9]+)*(:[0-9]+)?)(/[a-z0-9]+(?:[._-][a-z0-9]+)*)*(?::[a-z0-9._-]+)?(?:@[a-zA-Z0-9]+:[a-f0-9]+)?$
                    type: string
                  imagePullPolicy:
                    description: image pull policy for test runner
                    enum:
                    - Always
                    - IfNotPresent
                    - Never
                    type: string
                  imageRegistrySecret:
                    description: test runner image registry secret used to pull/push
                      images
                    properties:
                      name:
                        description: |-
                          Name of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  logsLocation:
                    description: captures logs location and export config for test
                      runner logs
                    properties:
                      hostPath:
                        default: /var/log/amd-test-runner
                        description: host path to store test runner internal status
                          db in order to persist test running status
                        type: string
                      logsExportSecrets:
                        description: LogsExportSecrets is a list of secrets that contain
                          connectivity info to multiple cloud providers
                        items:
                          description: |-
                            LocalObjectReference contains enough information to let you locate the
                            referenced object inside the same namespace.
                          properties:
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        type: array
                      mountPath:
                        default: /var/log/amd-test-runner
                        description: volume mount destination within test runner container
                        type: string
                    type: object
                  selector:
                    additionalProperties:
                      type: string
                    description: Selector describes on which nodes to enable test
                      runner
                    type: object
                  tolerations:
                    description: tolerations for test runner
                    items:
                      description: |-
                        The pod this Toleration is attached to tolerates any taint that matches
                        the triple <key,value,effect> using the matching operator <operator>.
                      properties:
                        effect:
                          description: |-
                            Effect indicates the taint effect to match. Empty means match all taint effects.
                            When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: |-
                            Key is the taint key that the toleration applies to. Empty means match all taint keys.
                            If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                          type: string
                        operator:
                          description: |-
                            Operator represents a key's relationship to the value.
                            Valid operators are Exists and Equal. Defaults to Equal.
                            Exists is equivalent to wildcard for value, so that a pod can
                            tolerate all taints of a particular category.
                          type: string
                        tolerationSeconds:
                          description: |-
                            TolerationSeconds represents the period of time the toleration (which must be
                            of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                            it is not set, which means tolerate the taint forever (do not evict). Zero and
                            negative values will be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: |-
                            Value is the taint value the toleration matches to.
                            If the operator is Exists, the value should be empty, otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                  upgradePolicy:
                    description: upgrade policy for test runner daemonset
                    properties:
                      maxUnavailable:
                        default: 1
                        description: MaxUnavailable specifies the maximum number of
                          Pods that can be unavailable during the update process.
                          Applicable for RollingUpdate only. Default value is 1.
                        format: int32
                        type: integer
                      upgradeStrategy:
                        description: UpgradeStrategy specifies the type of the DaemonSet
                          update. Valid values are "RollingUpdate" (default) or "OnDelete".
                        enum:
                        - RollingUpdate
                        - OnDelete
                        type: string
                    type: object
                type: object
            type: object
          status:
            description: DeviceConfigStatus defines the observed state of Module.
            properties:
              conditions:
                description: Conditions list the current status of the DeviceConfig
                  object
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              devicePlugin:
                description: DevicePlugin contains the status of the Device Plugin
                  deployment
                properties:
                  availableNumber:
                    description: number of the actually deployed and running pods
                    format: int32
                    type: integer
                  desiredNumber:
                    description: number of the pods that should be deployed for daemonset
                    format: int32
                    type: integer
                  nodesMatchingSelectorNumber:
                    description: number of nodes that are targeted by the DeviceConfig
                      selector
                    format: int32
                    type: integer
                type: object
              driver:
                description: Driver contains the status of the Drivers deployment
                properties:
                  availableNumber:
                    description: number of the actually deployed and running pods
                    format: int32
                    type: integer
                  desiredNumber:
                    description: number of the pods that should be deployed for daemonset
                    format: int32
                    type: integer
                  nodesMatchingSelectorNumber:
                    description: number of nodes that are targeted by the DeviceConfig
                      selector
                    format: int32
                    type: integer
                type: object
              metricsExporter:
                description: MetricsExporter contains the status of the MetricsExporter
                  deployment
                properties:
                  availableNumber:
                    description: number of the actually deployed and running pods
                    format: int32
                    type: integer
                  desiredNumber:
                    description: number of the pods that should be deployed for daemonset
                    format: int32
                    type: integer
                  nodesMatchingSelectorNumber:
                    description: number of nodes that are targeted by the DeviceConfig
                      selector
                    format: int32
                    type: integer
                type: object
              nodeModuleStatus:
                additionalProperties:
                  description: ModuleStatus contains the status of driver module installed
                    by operator on the node
                  properties:
                    bootId:
                      type: string
                    containerImage:
                      type: string
                    kernelVersion:
                      type: string
                    lastTransitionTime:
                      type: string
                    status:
                      description: UpgradeState captures the state of the upgrade
                        process on a node
                      type: string
                    upgradeStartTime:
                      type: string
                  type: object
                description: NodeModuleStatus contains per node status of driver module
                  installation
                type: object
              observedGeneration:
                description: ObservedGeneration is the latest spec generation successfully
                  processed by the controller
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null

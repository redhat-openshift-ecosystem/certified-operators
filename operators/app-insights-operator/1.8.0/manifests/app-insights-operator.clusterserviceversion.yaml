apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "appinsights.randoli/v1beta1",
          "kind": "AppInsightsAgent",
          "metadata": {
            "name": "appinsightsagent-sample"
          },
          "spec": {
            "affinity": {},
            "anomalyDetection": {
              "customQueries": {
                "path": "/prometheus"
              },
              "defaultsQueries": {
                "enabled": true
              }
            },
            "costManagement": {
              "annotations": {},
              "extraVolumes": [],
              "fullnameOverride": "",
              "global": {
                "prometheus": {
                  "bearerTokenKey": "token",
                  "passwordKey": "",
                  "secretName": "",
                  "url": "http://prometheus-operated.openshift-user-workload-monitoring.svc.cluster.local:9090",
                  "usernameKey": ""
                }
              },
              "imagePullSecrets": [],
              "loglevel": "info",
              "nameOverride": "",
              "namespaceOverride": "",
              "networkPolicies": {
                "enabled": false,
                "extraEgress": [],
                "prometheus": {
                  "labels": {
                    "app.kubernetes.io/name": "prometheus"
                  },
                  "namespace": "prometheus-system",
                  "port": 9090
                }
              },
              "opencost": {
                "affinity": {},
                "cloudCost": {
                  "enabled": false,
                  "monthToDateInterval": 6,
                  "queryWindowDays": 7,
                  "refreshRateHours": 6,
                  "runWindowDays": 3
                },
                "cloudIntegrationSecret": "",
                "customPricing": {
                  "configPath": "/tmp/custom-config",
                  "configmapName": "custom-pricing-model",
                  "costModel": {
                    "CPU": 1.25,
                    "GPU": 0.95,
                    "RAM": 0.5,
                    "description": "Modified pricing configuration.",
                    "internetNetworkEgress": 0.12,
                    "regionNetworkEgress": 0.01,
                    "spotCPU": 0.006655,
                    "spotRAM": 0.000892,
                    "storage": 0.25,
                    "zoneNetworkEgress": 0.01
                  },
                  "createConfigmap": true,
                  "enabled": false,
                  "provider": "custom"
                },
                "dataRetention": {
                  "dailyResolutionDays": 15
                },
                "exporter": {
                  "apiPort": 9003,
                  "aws": {
                    "access_key_id": "",
                    "secret_access_key": ""
                  },
                  "cloudProviderApiKey": "",
                  "csv_path": "",
                  "defaultClusterId": "default-cluster",
                  "env": [],
                  "extraArgs": [],
                  "extraEnv": {},
                  "extraVolumeMounts": [],
                  "image": {
                    "pullPolicy": "IfNotPresent",
                    "registry": "ghcr.io",
                    "repository": "opencost/opencost",
                    "tag": "1.109.0"
                  },
                  "livenessProbe": {
                    "enabled": true,
                    "failureThreshold": 3,
                    "initialDelaySeconds": 10,
                    "path": "/healthz",
                    "periodSeconds": 20
                  },
                  "persistence": {
                    "accessMode": "",
                    "annotations": {},
                    "enabled": false,
                    "size": "",
                    "storageClass": ""
                  },
                  "readinessProbe": {
                    "enabled": true,
                    "failureThreshold": 3,
                    "initialDelaySeconds": 10,
                    "path": "/healthz",
                    "periodSeconds": 10
                  },
                  "replicas": 1,
                  "resources": {
                    "limits": {
                      "cpu": "999m",
                      "memory": "1Gi"
                    },
                    "requests": {
                      "cpu": "10m",
                      "memory": "55Mi"
                    }
                  },
                  "securityContext": {},
                  "startupProbe": {
                    "enabled": true,
                    "failureThreshold": 30,
                    "initialDelaySeconds": 10,
                    "path": "/healthz",
                    "periodSeconds": 5
                  }
                },
                "extraContainers": [],
                "install": true,
                "metrics": {
                  "config": {
                    "disabledMetrics": [],
                    "enabled": false
                  },
                  "kubeStateMetrics": {
                    "emitKsmV1Metrics": "",
                    "emitKsmV1MetricsOnly": "",
                    "emitNamespaceAnnotations": "",
                    "emitPodAnnotations": ""
                  },
                  "serviceMonitor": {
                    "additionalLabels": {},
                    "enabled": true,
                    "extraEndpoints": [],
                    "honorLabels": true,
                    "metricRelabelings": [],
                    "namespace": "",
                    "relabelings": [],
                    "scheme": "http",
                    "scrapeInterval": "30s",
                    "scrapeTimeout": "10s",
                    "tlsConfig": {}
                  }
                },
                "nodeSelector": {},
                "prometheus": {
                  "amp": {
                    "enabled": false,
                    "workspaceId": ""
                  },
                  "bearer_token": "",
                  "bearer_token_key": "DB_BEARER_TOKEN",
                  "external": {
                    "enabled": false,
                    "url": "https://prometheus.example.com/prometheus"
                  },
                  "internal": {
                    "enabled": true,
                    "namespaceName": "prometheus-system",
                    "port": 80,
                    "serviceName": "prometheus-server"
                  },
                  "password": "",
                  "password_key": "DB_BASIC_AUTH_PW",
                  "thanos": {
                    "enabled": false,
                    "external": {
                      "enabled": false,
                      "url": "https://thanos-query.example.com/thanos"
                    },
                    "internal": {
                      "enabled": true,
                      "namespaceName": "opencost",
                      "port": 10901,
                      "serviceName": "my-thanos-query"
                    },
                    "maxSourceResolution": "",
                    "queryOffset": ""
                  },
                  "username": "",
                  "username_key": "DB_BASIC_AUTH_USERNAME"
                },
                "sigV4Proxy": {
                  "host": "aps-workspaces.us-west-2.amazonaws.com",
                  "image": "public.ecr.aws/aws-observability/aws-sigv4-proxy@sha256:fbe1cff18c453a0c74acd3092579b174237c9752f5be85e54318732a863fcc24",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "aps",
                  "port": 8005,
                  "region": "us-west-2",
                  "resources": {},
                  "securityContext": {}
                },
                "tolerations": [],
                "topologySpreadConstraints": [],
                "ui": {
                  "enabled": true,
                  "extraEnv": [],
                  "extraVolumeMounts": [],
                  "image": {
                    "pullPolicy": "IfNotPresent",
                    "registry": "ghcr.io",
                    "repository": "opencost/opencost-ui",
                    "tag": "1.109.0"
                  },
                  "ingress": {
                    "annotations": {},
                    "enabled": false,
                    "hosts": [
                      {
                        "host": "example.local",
                        "paths": [
                          "/"
                        ]
                      }
                    ],
                    "ingressClassName": "",
                    "servicePort": "http-ui",
                    "tls": []
                  },
                  "livenessProbe": {
                    "enabled": true,
                    "failureThreshold": 3,
                    "initialDelaySeconds": 30,
                    "path": "/healthz",
                    "periodSeconds": 10
                  },
                  "readinessProbe": {
                    "enabled": true,
                    "failureThreshold": 3,
                    "initialDelaySeconds": 30,
                    "path": "/healthz",
                    "periodSeconds": 10
                  },
                  "resources": {
                    "limits": {
                      "cpu": "999m",
                      "memory": "1Gi"
                    },
                    "requests": {
                      "cpu": "10m",
                      "memory": "55Mi"
                    }
                  },
                  "securityContext": {},
                  "uiPort": 9090
                },
                "url": null
              },
              "plugins": {
                "enabled": false,
                "folder": "/opt/opencost/plugin",
                "install": {
                  "enabled": true,
                  "fullImageName": "curlimages/curl:latest",
                  "securityContext": {
                    "allowPrivilegeEscalation": false,
                    "capabilities": {
                      "drop": [
                        "ALL"
                      ]
                    },
                    "readOnlyRootFilesystem": true,
                    "runAsNonRoot": true,
                    "runAsUser": 1000,
                    "seccompProfile": {
                      "type": "RuntimeDefault"
                    }
                  }
                }
              },
              "podAnnotations": {},
              "podLabels": {},
              "podSecurityContext": {},
              "priorityClassName": null,
              "rbac": {
                "enabled": true
              },
              "rightsizingRecommendations": {
                "enabled": false,
                "installVpa": false
              },
              "secretAnnotations": {},
              "service": {
                "annotations": {},
                "enabled": true,
                "extraPorts": [],
                "labels": {},
                "type": "ClusterIP"
              },
              "serviceAccount": {
                "annotations": {},
                "automountServiceAccountToken": true,
                "create": true,
                "name": ""
              },
              "updateStrategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 1
                },
                "type": "RollingUpdate"
              }
            },
            "deploymentAnnotations": {},
            "extraEnv": [],
            "extraEnvFrom": [],
            "extraVolumeMounts": [],
            "extraVolumes": [],
            "global": {
              "prometheus": {
                "bearerTokenKey": "token",
                "passwordKey": "",
                "secretName": "",
                "url": "http://prometheus-operated.openshift-user-workload-monitoring.svc.cluster.local:9090",
                "usernameKey": ""
              }
            },
            "image": {
              "digest": "",
              "pullPolicy": "Always",
              "registry": "docker.io",
              "repository": "randoli/insights-agent",
              "tag": "1.8"
            },
            "imagePullSecrets": [],
            "labels": {
              "app": "app-insights-agent"
            },
            "logAnalytics": {
              "collectLogs": true
            },
            "nodeSelector": {},
            "resources": {
              "limits": {
                "cpu": "150m",
                "memory": "512Mi"
              },
              "requests": {
                "cpu": "50m",
                "memory": "256Mi"
              }
            },
            "secrets": {
              "cert": "insights-agent-cert",
              "config": "insights-agent-secret"
            },
            "securityContext": {},
            "securityScans": {
              "accessKey": null,
              "account": null,
              "alertCRD": {
                "installDefault": false,
                "scopeClustered": false,
                "scopeNamespaced": false
              },
              "capabilities": {
                "autoUpgrading": "disable",
                "configurationScan": "enable",
                "continuousScan": "disable",
                "malwareDetection": "disable",
                "networkPolicyService": "enable",
                "nodeProfileService": "disable",
                "nodeScan": "enable",
                "prometheusExporter": "disable",
                "relevancy": "enable",
                "runtimeDetection": "disable",
                "runtimeObservability": "enable",
                "vexGeneration": "disable",
                "vulnerabilityScan": "enable"
              },
              "clamav": {
                "affinity": {
                  "nodeAffinity": {
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "nodeSelectorTerms": [
                        {
                          "matchExpressions": [
                            {
                              "key": "kubernetes.io/os",
                              "operator": "In",
                              "values": [
                                "linux"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/kubescape/klamav",
                  "tag": "1.3.1-34_base"
                },
                "name": "clamav",
                "nodeSelector": {
                  "kubernetes.io/os": "linux"
                },
                "resources": {
                  "limits": {
                    "cpu": "300m",
                    "memory": "512Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "256Mi"
                  }
                },
                "volumeMounts": [
                  {
                    "mountPath": "/var/lib/clamav-tmp",
                    "name": "clamdb",
                    "readOnly": false
                  },
                  {
                    "mountPath": "/run/clamav",
                    "name": "clamrun",
                    "readOnly": false
                  },
                  {
                    "mountPath": "/etc/clamav",
                    "name": "etc",
                    "readOnly": true
                  }
                ],
                "volumes": [
                  {
                    "emptyDir": {},
                    "name": "clamdb"
                  },
                  {
                    "emptyDir": {},
                    "name": "clamrun"
                  },
                  {
                    "configMap": {
                      "items": [
                        {
                          "key": "clamd.conf",
                          "path": "clamd.conf"
                        },
                        {
                          "key": "freshclam.conf",
                          "path": "freshclam.conf"
                        }
                      ],
                      "name": "clamav"
                    },
                    "name": "etc"
                  }
                ]
              },
              "cloudProviderMetadata": {
                "awsIamRoleArn": null,
                "cloudRegion": null,
                "gkeProject": null,
                "gkeServiceAccount": null
              },
              "clusterName": "cluster",
              "configurations": {
                "otelUrl": null,
                "persistence": "enable",
                "priorityClass": {
                  "daemonset": 100000100,
                  "enabled": true
                },
                "prometheusAnnotations": "disable"
              },
              "continuousScanning": {
                "configMapName": "cs-matching-rules",
                "matchingRules": {
                  "match": [
                    {
                      "apiGroups": [
                        "apps"
                      ],
                      "apiVersions": [
                        "v1"
                      ],
                      "resources": [
                        "deployments",
                        "statefulsets",
                        "daemonsets"
                      ]
                    }
                  ],
                  "namespaces": null
                }
              },
              "credentials": {
                "cloudSecret": null
              },
              "cronSpec": "0 10,20 * * *",
              "customScheduling": {
                "affinity": null,
                "nodeSelector": null,
                "tolerations": null
              },
              "gateway": {
                "env": {},
                "httpService": {
                  "port": 8002,
                  "protocol": "TCP",
                  "targetPort": 8002,
                  "type": "ClusterIP"
                },
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/kubescape/gateway",
                  "tag": "v0.1.23"
                },
                "labels": {},
                "name": "gateway",
                "resources": {
                  "limits": {
                    "cpu": "100m",
                    "memory": "50Mi"
                  },
                  "requests": {
                    "cpu": "10m",
                    "memory": "30Mi"
                  }
                },
                "volumeMounts": [],
                "volumes": [],
                "websocketService": {
                  "port": 8001,
                  "protocol": "TCP",
                  "targetPort": 8001,
                  "type": "ClusterIP"
                }
              },
              "global": {
                "cloudConfig": "ks-cloud-config",
                "configMapsDirectory": "configs",
                "httpsProxy": "",
                "kubescapePsp": {
                  "enabled": false,
                  "name": "ks-allow-privileged"
                },
                "namespaceTier": "ks-control-plane",
                "networkPolicy": {
                  "createEgressRules": false,
                  "enabled": false
                },
                "overrideRuntimePath": "",
                "prometheus": {
                  "bearerTokenKey": "token",
                  "passwordKey": "",
                  "secretName": "",
                  "url": "http://prometheus-operated.openshift-user-workload-monitoring.svc.cluster.local:9090",
                  "usernameKey": ""
                },
                "proxySecretDirectory": "proxy-support",
                "proxySecretFile": "",
                "proxySecretName": "kubescape-proxy-certificate"
              },
              "grypeOfflineDB": {
                "enabled": false,
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "ghcr.io/alexandreroman/grype-offline-db",
                  "sha": "sha256:155db3be4baa461a50cebadfc8f52108fca71aa4ce5e460a30a4e0922e899ed2"
                },
                "name": "grype-offline-db",
                "resources": {
                  "limits": {
                    "cpu": "150m",
                    "memory": "200Mi"
                  },
                  "requests": {
                    "cpu": "150m",
                    "memory": "200Mi"
                  }
                }
              },
              "helmReleaseUpgrader": {
                "failedJobsHistoryLimit": 1,
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/kubescape/helm-release-upgrader",
                  "tag": "v0.1.0"
                },
                "name": "helm-release-upgrader",
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  },
                  "requests": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  }
                },
                "schedule": "0 14 * * *",
                "successfulJobsHistoryLimit": 3
              },
              "hostScanner": {
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/kubescape/host-scanner",
                  "tag": "v1.0.66"
                },
                "tolerations": [
                  {
                    "effect": "NoSchedule",
                    "key": "node-role.kubernetes.io/control-plane",
                    "operator": "Exists"
                  },
                  {
                    "effect": "NoSchedule",
                    "key": "node-role.kubernetes.io/master",
                    "operator": "Exists"
                  }
                ],
                "volumeMounts": [],
                "volumes": []
              },
              "imagePullSecrets": "",
              "imageScanning": {
                "privateRegistries": {
                  "credentials": null
                }
              },
              "installKubescape": false,
              "kollector": {
                "env": {},
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/kubescape/kollector",
                  "tag": "v0.1.36"
                },
                "labels": {},
                "name": "kollector",
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "500Mi"
                  },
                  "requests": {
                    "cpu": "10m",
                    "memory": "100Mi"
                  }
                },
                "volumeMounts": [],
                "volumes": []
              },
              "ksLabel": "kubescape",
              "ksNamespace": "kubescape",
              "kubescape": {
                "downloadArtifacts": true,
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/kubescape/kubescape",
                  "tag": "v3.0.11"
                },
                "name": "kubescape",
                "resources": {
                  "limits": {
                    "cpu": "600m",
                    "memory": "1Gi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "400Mi"
                  }
                },
                "service": {
                  "port": 8080,
                  "type": "ClusterIP"
                },
                "serviceMonitor": {
                  "enabled": false,
                  "interval": "200s",
                  "scrapeTimeout": "150s"
                },
                "skipUpdateCheck": false,
                "submit": true,
                "volumeMounts": [],
                "volumes": []
              },
              "kubescape-alert-crd": {
                "global": {
                  "cloudConfig": "ks-cloud-config",
                  "configMapsDirectory": "configs",
                  "httpsProxy": "",
                  "kubescapePsp": {
                    "enabled": false,
                    "name": "ks-allow-privileged"
                  },
                  "namespaceTier": "ks-control-plane",
                  "networkPolicy": {
                    "createEgressRules": false,
                    "enabled": false
                  },
                  "overrideRuntimePath": "",
                  "prometheus": {
                    "bearerTokenKey": "token",
                    "passwordKey": "",
                    "secretName": "",
                    "url": "http://prometheus-operated.openshift-user-workload-monitoring.svc.cluster.local:9090",
                    "usernameKey": ""
                  },
                  "proxySecretDirectory": "proxy-support",
                  "proxySecretFile": "",
                  "proxySecretName": "kubescape-proxy-certificate"
                }
              },
              "kubescape-alert-crd-ns": {
                "global": {
                  "cloudConfig": "ks-cloud-config",
                  "configMapsDirectory": "configs",
                  "httpsProxy": "",
                  "kubescapePsp": {
                    "enabled": false,
                    "name": "ks-allow-privileged"
                  },
                  "namespaceTier": "ks-control-plane",
                  "networkPolicy": {
                    "createEgressRules": false,
                    "enabled": false
                  },
                  "overrideRuntimePath": "",
                  "prometheus": {
                    "bearerTokenKey": "token",
                    "passwordKey": "",
                    "secretName": "",
                    "url": "http://prometheus-operated.openshift-user-workload-monitoring.svc.cluster.local:9090",
                    "usernameKey": ""
                  },
                  "proxySecretDirectory": "proxy-support",
                  "proxySecretFile": "",
                  "proxySecretName": "kubescape-proxy-certificate"
                }
              },
              "kubescapeScheduler": {
                "failedJobsHistoryLimit": 1,
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/kubescape/http-request",
                  "tag": "v0.2.6"
                },
                "name": "kubescape-scheduler",
                "resources": {
                  "limits": {
                    "cpu": "10m",
                    "memory": "20Mi"
                  },
                  "requests": {
                    "cpu": "1m",
                    "memory": "10Mi"
                  }
                },
                "scanSchedule": "0 8 * * *",
                "successfulJobsHistoryLimit": 3,
                "volumeMounts": [],
                "volumes": []
              },
              "kubevuln": {
                "config": {
                  "maxImageSize": 5368709120,
                  "maxSBOMSize": 20971520,
                  "scanTimeout": "5m"
                },
                "env": [
                  {
                    "name": "CA_MAX_VULN_SCAN_ROUTINES",
                    "value": "1"
                  }
                ],
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/kubescape/kubevuln",
                  "tag": "v0.3.25"
                },
                "labels": {},
                "name": "kubevuln",
                "replicaCount": 1,
                "resources": {
                  "limits": {
                    "cpu": "1500m",
                    "ephemeral-storage": "10Gi",
                    "memory": "5000Mi"
                  },
                  "requests": {
                    "cpu": "300m",
                    "ephemeral-storage": "5Gi",
                    "memory": "1000Mi"
                  }
                },
                "service": {
                  "port": 8080,
                  "protocol": "TCP",
                  "targetPort": 8080,
                  "type": "ClusterIP"
                },
                "verbose": "",
                "volumeMounts": [],
                "volumes": []
              },
              "kubevulnScheduler": {
                "failedJobsHistoryLimit": 1,
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/kubescape/http-request",
                  "tag": "v0.2.6"
                },
                "name": "kubevuln-scheduler",
                "resources": {
                  "limits": {
                    "cpu": "10m",
                    "memory": "20Mi"
                  },
                  "requests": {
                    "cpu": "1m",
                    "memory": "10Mi"
                  }
                },
                "scanSchedule": "0 0 * * *",
                "successfulJobsHistoryLimit": 3,
                "volumeMounts": [],
                "volumes": []
              },
              "logger": {
                "level": "info",
                "name": "zap"
              },
              "mode": "OFF",
              "nodeAgent": {
                "affinity": {
                  "nodeAffinity": {
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                      "nodeSelectorTerms": [
                        {
                          "matchExpressions": [
                            {
                              "key": "kubernetes.io/os",
                              "operator": "In",
                              "values": [
                                "linux"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "config": {
                  "alertManagerExporterUrls": [],
                  "httpExporterConfig": {
                    "maxAlertsPerMinute": 1000,
                    "method": "POST",
                    "url": "http://synchronizer:8089/apis/v1/kubescape.io"
                  },
                  "learningPeriod": "2m",
                  "maxLearningPeriod": "24h",
                  "nodeProfileInterval": "10m",
                  "prometheusExporter": "disable",
                  "stdoutExporter": true,
                  "syslogExporterURL": "",
                  "updatePeriod": "10m"
                },
                "env": [
                  {
                    "name": "NodeName",
                    "valueFrom": {
                      "fieldRef": {
                        "fieldPath": "spec.nodeName"
                      }
                    }
                  }
                ],
                "gomemlimit": "600MiB",
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/kubescape/node-agent",
                  "tag": "v0.2.81"
                },
                "name": "node-agent",
                "nodeSelector": {
                  "kubernetes.io/os": "linux"
                },
                "privileged": false,
                "resources": {
                  "limits": {
                    "cpu": "500m",
                    "memory": "700Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "180Mi"
                  }
                },
                "seLinuxType": "spc_t",
                "serviceMonitor": {
                  "enabled": false,
                  "interval": "30s",
                  "scrapeTimeout": "15s"
                },
                "volumeMounts": [
                  {
                    "mountPath": "/host",
                    "name": "host"
                  },
                  {
                    "mountPath": "/run",
                    "name": "run"
                  },
                  {
                    "mountPath": "/lib/modules",
                    "name": "modules"
                  },
                  {
                    "mountPath": "/sys/kernel/debug",
                    "name": "debugfs"
                  },
                  {
                    "mountPath": "/sys/fs/cgroup",
                    "name": "cgroup"
                  },
                  {
                    "mountPath": "/sys/fs/bpf",
                    "name": "bpffs"
                  },
                  {
                    "mountPath": "/data",
                    "name": "data"
                  },
                  {
                    "mountPath": "/clamav",
                    "name": "clamrun",
                    "readOnly": false
                  }
                ],
                "volumes": [
                  {
                    "hostPath": {
                      "path": "/"
                    },
                    "name": "host"
                  },
                  {
                    "hostPath": {
                      "path": "/run"
                    },
                    "name": "run"
                  },
                  {
                    "hostPath": {
                      "path": "/sys/fs/cgroup"
                    },
                    "name": "cgroup"
                  },
                  {
                    "hostPath": {
                      "path": "/lib/modules"
                    },
                    "name": "modules"
                  },
                  {
                    "hostPath": {
                      "path": "/sys/fs/bpf"
                    },
                    "name": "bpffs"
                  },
                  {
                    "hostPath": {
                      "path": "/sys/kernel/debug"
                    },
                    "name": "debugfs"
                  },
                  {
                    "emptyDir": null,
                    "name": "data"
                  }
                ]
              },
              "operator": {
                "env": {},
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/kubescape/operator",
                  "tag": "v0.2.13"
                },
                "labels": {},
                "name": "operator",
                "resources": {
                  "limits": {
                    "cpu": "300m",
                    "memory": "300Mi"
                  },
                  "requests": {
                    "cpu": "50m",
                    "memory": "100Mi"
                  }
                },
                "service": {
                  "port": 4002,
                  "protocol": "TCP",
                  "targetPort": 4002,
                  "type": "ClusterIP"
                },
                "triggerSecurityFramework": true,
                "volumeMounts": [],
                "volumes": []
              },
              "otelCollector": {
                "endpoint": {
                  "headers": {
                    "uptrace-dsn": ""
                  },
                  "insecure": true
                },
                "hostmetrics": {
                  "enabled": true,
                  "scrapeInterval": "30s"
                },
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "docker.io/otel/opentelemetry-collector",
                  "tag": "0.97.0"
                },
                "name": "otel-collector",
                "resources": {
                  "limits": {
                    "cpu": 1,
                    "memory": "1Gi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "500Mi"
                  }
                }
              },
              "persistence": {
                "accessMode": "ReadWriteOnce",
                "size": {
                  "backingStorage": "5Gi",
                  "kubevuln": "2Gi"
                },
                "storageClass": "-"
              },
              "prometheusExporter": {
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/kubescape/prometheus-exporter",
                  "tag": "v0.0.7"
                },
                "name": "prometheus-exporter",
                "resources": {
                  "limits": {
                    "cpu": "50m",
                    "memory": "100Mi"
                  },
                  "requests": {
                    "cpu": "10m",
                    "memory": "10Mi"
                  }
                },
                "service": {
                  "port": 8080,
                  "protocol": "TCP",
                  "targetPort": 8080
                }
              },
              "registryScanScheduler": {
                "failedJobsHistoryLimit": 1,
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/kubescape/http-request",
                  "tag": "v0.2.6"
                },
                "name": "registry-scheduler",
                "resources": {
                  "limits": {
                    "cpu": "10m",
                    "memory": "20Mi"
                  },
                  "requests": {
                    "cpu": "1m",
                    "memory": "10Mi"
                  }
                },
                "scanSchedule": "0 0 * * *",
                "successfulJobsHistoryLimit": 3,
                "volumeMounts": [],
                "volumes": []
              },
              "server": null,
              "serviceDiscovery": {
                "configMapCheck": {
                  "image": {
                    "pullPolicy": "IfNotPresent",
                    "repository": "docker.io/bitnami/kubectl",
                    "tag": "1.27.6"
                  },
                  "name": "check-url-configmap"
                },
                "configMapUpdate": {
                  "image": {
                    "pullPolicy": "IfNotPresent",
                    "repository": "docker.io/bitnami/kubectl",
                    "tag": "1.27.6"
                  },
                  "name": "update-configmap"
                },
                "metrics": "",
                "name": "service-discovery",
                "resources": {
                  "limits": {
                    "cpu": "100m",
                    "memory": "50Mi"
                  },
                  "requests": {
                    "cpu": "10m",
                    "memory": "10Mi"
                  }
                },
                "services": "",
                "urlDiscovery": {
                  "image": {
                    "pullPolicy": "IfNotPresent",
                    "repository": "quay.io/kubescape/http-request",
                    "tag": "v0.2.6"
                  },
                  "name": "url-discovery"
                }
              },
              "storage": {
                "cleanupInterval": "6h",
                "gomemlimit": "1200MiB",
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/kubescape/storage",
                  "tag": "v0.0.85"
                },
                "labels": {
                  "app.kubernetes.io/component": "apiserver",
                  "app.kubernetes.io/name": "storage",
                  "app.kubernetes.io/part-of": "kubescape-storage"
                },
                "name": "storage",
                "resources": {
                  "limits": {
                    "cpu": "1500m",
                    "memory": "1500Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "400Mi"
                  }
                }
              },
              "synchronizer": {
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/kubescape/synchronizer",
                  "tag": "v0.0.72"
                },
                "name": "synchronizer",
                "resources": {
                  "limits": {
                    "cpu": "200m",
                    "memory": "500Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "250Mi"
                  }
                },
                "service": {
                  "port": 8089,
                  "protocol": "TCP",
                  "targetPort": 8089,
                  "type": "ClusterIP"
                }
              },
              "volumeMounts": [],
              "volumes": []
            },
            "serviceAccount": {
              "annotations": {},
              "automountServiceAccountToken": true,
              "create": true,
              "labels": {}
            },
            "tolerations": [],
            "topologySpreadConstraints": []
          }
        }
      ]
    categories: Developer Tools
    containerImage: docker.io/randoli/app-insights-operator:1.8.0@sha256:e060096a13850b54ec406faad8fada2b9b9480c2ffd994f3397ccb39efb91e90
    createdAt: "2024-07-05T20:38:09Z"
    description: Cost, Cluster and Application Insights for workloads running on Kubernetes
    features.operators.openshift.io/disconnected: "true"
    features.operators.openshift.io/fips-compliant: "false"
    features.operators.openshift.io/proxy-aware: "false"
    features.operators.openshift.io/tls-profiles: "false"
    features.operators.openshift.io/token-auth-aws: "false"
    features.operators.openshift.io/token-auth-azure: "false"
    features.operators.openshift.io/token-auth-gcp: "false"
    olm.properties: '[]'
    operators.openshift.io/valid-subscription: ""
    operators.operatorframework.io/builder: operator-sdk-v1.31.0
    operators.operatorframework.io/project_layout: helm.sdk.operatorframework.io/v1
    support: Randoli
  capabilities: Basic Install
  name: app-insights-operator.v1.8.0
  namespace: app-insights
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
      - kind: AppInsightsAgent
        name: appinsightsagents.appinsights.randoli
        version: v1beta1
  description: "Randoli’s App Insights gives platform and development teams the ability to gain insight into application availability, cost and resource utilization. App Insights also surfaces deploy and runtime issues and provides detailed steps on how to investigate or remediate issues that have occurred, helping reduce the Kubernetes skill gap.\n\nFor additional information go to [https://www.randoli.io/app-insights](https://www.randoli.io/app-insights)\n\n## Supported Features\n  * **Optimize Your Cost**\n    - Understand your utilization vs. spend for each workload and identify potential savings through rightsizing\n\n  * **View Cost Breakdown**\n    - View cost breakdown by workloads, namespaces and cost group at the cluster level\n    - View breakdowns by applications and cost groups across all your clusters\n\n  * **Simplify Kubernetes**\n    - Easily understand Kubernetes errors and events then view clear steps to investigate or remediate issues\n\n  * **View Application Insights**\n    - View application insights to gain an understanding of how your errors and events impact your application behaviour\n\n  * **View Cluster Insights**\n    - View insights into your clusters that help you correlate errors and events for faster root cause analysis\n    \n## Prerequisites\nAs a prequisite for App Insights to function, user workload monitoring must be enabled on your OpenShift cluster. \n\nThe following YAML must be applied to enable this feature:\n```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: cluster-monitoring-config\n  namespace: openshift-monitoring\ndata:\n  config.yaml: |\n    enableUserWorkload: true\n```"
  displayName: App Insights
  icon:
    - base64data: 
      mediatype: image/png
  install:
    spec:
      clusterPermissions:
        - rules:
            - apiGroups:
                - ""
              resources:
                - namespaces
              verbs:
                - get
            - apiGroups:
                - ""
              resources:
                - secrets
              verbs:
                - '*'
            - apiGroups:
                - ""
              resources:
                - events
              verbs:
                - create
            - apiGroups:
                - appinsights.randoli
              resources:
                - appinsightsagents
                - appinsightsagents/status
                - appinsightsagents/finalizers
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - clusterrolebindings
                - clusterroles
              verbs:
                - '*'
            - apiGroups:
                - ""
              resources:
                - configmaps
                - serviceaccounts
                - services
              verbs:
                - '*'
            - apiGroups:
                - apps
              resources:
                - deployments
              verbs:
                - '*'
            - apiGroups:
                - monitoring.coreos.com
              resources:
                - servicemonitors
              verbs:
                - '*'
            - apiGroups:
                - authentication.k8s.io
              resources:
                - tokenreviews
              verbs:
                - create
            - apiGroups:
                - authorization.k8s.io
              resources:
                - subjectaccessreviews
              verbs:
                - create
          serviceAccountName: app-insights-operator-controller-manager
      deployments:
        - label:
            app.kubernetes.io/component: manager
            app.kubernetes.io/created-by: app-insights-operator
            app.kubernetes.io/instance: controller-manager
            app.kubernetes.io/managed-by: kustomize
            app.kubernetes.io/name: deployment
            app.kubernetes.io/part-of: app-insights-operator
            control-plane: controller-manager
          name: app-insights-operator-controller-manager
          spec:
            replicas: 1
            selector:
              matchLabels:
                control-plane: controller-manager
            strategy: {}
            template:
              metadata:
                annotations:
                  kubectl.kubernetes.io/default-container: manager
                labels:
                  control-plane: controller-manager
              spec:
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                        - matchExpressions:
                            - key: kubernetes.io/arch
                              operator: In
                              values:
                                - amd64
                                - arm64
                                - ppc64le
                                - s390x
                            - key: kubernetes.io/os
                              operator: In
                              values:
                                - linux
                containers:
                  - args:
                      - --secure-listen-address=0.0.0.0:8443
                      - --upstream=http://127.0.0.1:8080/
                      - --logtostderr=true
                      - --v=0
                    image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1@sha256:d4883d7c622683b3319b5e6b3a7edfbf2594c18060131a8bf64504805f875522
                    name: kube-rbac-proxy
                    ports:
                      - containerPort: 8443
                        name: https
                        protocol: TCP
                    resources:
                      limits:
                        cpu: 500m
                        memory: 128Mi
                      requests:
                        cpu: 5m
                        memory: 64Mi
                    securityContext:
                      allowPrivilegeEscalation: false
                      capabilities:
                        drop:
                          - ALL
                  - args:
                      - --health-probe-bind-address=:8081
                      - --metrics-bind-address=127.0.0.1:8080
                      - --leader-elect
                      - --leader-election-id=app-insights-operator
                    image: docker.io/randoli/app-insights-operator:1.8.0@sha256:e060096a13850b54ec406faad8fada2b9b9480c2ffd994f3397ccb39efb91e90
                    livenessProbe:
                      httpGet:
                        path: /healthz
                        port: 8081
                      initialDelaySeconds: 15
                      periodSeconds: 20
                    name: manager
                    readinessProbe:
                      httpGet:
                        path: /readyz
                        port: 8081
                      initialDelaySeconds: 5
                      periodSeconds: 10
                    resources:
                      limits:
                        cpu: 500m
                        memory: 200Mi
                      requests:
                        cpu: 10m
                        memory: 64Mi
                    securityContext:
                      allowPrivilegeEscalation: false
                      capabilities:
                        drop:
                          - ALL
                securityContext:
                  runAsNonRoot: true
                serviceAccountName: app-insights-operator-controller-manager
                terminationGracePeriodSeconds: 10
      permissions:
        - rules:
            - apiGroups:
                - ""
              resources:
                - configmaps
              verbs:
                - get
                - list
                - watch
                - create
                - update
                - patch
                - delete
            - apiGroups:
                - coordination.k8s.io
              resources:
                - leases
              verbs:
                - get
                - list
                - watch
                - create
                - update
                - patch
                - delete
            - apiGroups:
                - ""
              resources:
                - events
              verbs:
                - create
                - patch
          serviceAccountName: app-insights-operator-controller-manager
    strategy: deployment
  installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
  keywords:
    - developer tools
    - insights
    - monitoring
  labels: {}
  links:
    - name: App Insights Operator
      url: https://www.randoli.io/app-insights
  maintainers:
    - email: contact@randoli.ca
      name: Randoli Inc.
  maturity: beta
  minKubeVersion: 1.24.0
  provider:
    name: Randoli
    url: https://www.randoli.io/app-insights
  relatedImages:
    - image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1@sha256:d4883d7c622683b3319b5e6b3a7edfbf2594c18060131a8bf64504805f875522
      name: kube-rbac-proxy
    - image: docker.io/randoli/app-insights-operator:1.8.0@sha256:e060096a13850b54ec406faad8fada2b9b9480c2ffd994f3397ccb39efb91e90
      name: manager
    - image: public.ecr.aws/aws-observability/aws-sigv4-proxy@sha256:fbe1cff18c453a0c74acd3092579b174237c9752f5be85e54318732a863fcc24
      name: aws-sigv4-proxy-fbe1cff18c453a0c74acd3092579b174237c9752f5be85e54318732a863fcc24-annotation
  version: 1.8.0

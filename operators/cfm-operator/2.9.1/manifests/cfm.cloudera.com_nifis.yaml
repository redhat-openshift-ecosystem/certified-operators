---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: cfm-operator-system/cfm-operator-serving-cert
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: null
  name: nifis.cfm.cloudera.com
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: cfm-operator-webhook-service
          namespace: cfm-operator-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: cfm.cloudera.com
  names:
    kind: Nifi
    listKind: NifiList
    plural: nifis
    singular: nifi
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.replicas
      name: Desired
      type: integer
    - jsonPath: .status.replicas
      name: Current
      type: integer
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Nifi is the Schema for the nifis API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NifiSpec defines the desired state of Nifi.
            properties:
              additionalAttachments:
                description: |-
                  AdditionalAttachments specifies a list of object references to be attached to all NiFi pods for
                  general usage. Objects with Kind "Secret" and "ConfigMap" are accepted. The base path for attached volumes is
                  "/home/nifi/additional/{configmap|secret}", depending on its Kind. Attachments appear as a directory.
                  Name of the attachment is the same as the name of the Kubernetes object, only dashes '-' are replaced
                  with underlines '_'. For example, a ConfigMap with name "my-config" will be mounted to
                  "/home/nifi/additional/configmap/my_config".
                items:
                  description: |-
                    TypedLocalObjectReference contains enough information to let you locate the
                    typed referenced object inside the same namespace.
                  properties:
                    apiGroup:
                      description: |-
                        APIGroup is the group for the resource being referenced.
                        If APIGroup is not specified, the specified Kind must be in the core API group.
                        For any other third-party types, APIGroup is required.
                      type: string
                    kind:
                      description: Kind is the type of resource being referenced
                      type: string
                    name:
                      description: Name is the name of resource being referenced
                      type: string
                  required:
                  - kind
                  - name
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              additionalPodAnnotations:
                additionalProperties:
                  type: string
                description: |-
                  AdditionalPodAnnotations specifies key/value pairs that will be assigned
                  to each NiFi pod resource as additional annotations.
                type: object
              additionalPodLabels:
                additionalProperties:
                  type: string
                description: |-
                  AdditionalPodLabels specifies key/value pairs that will be assigned to
                  each NiFi pod resource as additional labels.
                type: object
              assets:
                description: Flow assets that NiFi processor needs to access in the
                  form of local file system
                properties:
                  mountPath:
                    description: The mount path in a container inside a Pod where
                      sharable assets can be accessed
                    type: string
                  persistentVolumeClaim:
                    description: The PersistentVolumeClaim bound to the asset PersistentVolume
                    properties:
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          TODO: Add other useful fields. apiVersion, kind, uid?
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                required:
                - mountPath
                - persistentVolumeClaim
                type: object
              configOverride:
                description: ConfigOverride specifies user provided input overriding
                  default configurations.
                properties:
                  authorizers:
                    description: |-
                      Authorizers: configuration file override for authorizers.xml.
                      If set, this content will override the default authorizers.xml file.
                    type: string
                  authorizersRef:
                    description: AuthorizersObjectReferences holds details about custom
                      configmap or secret for authorizers.xml
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: |-
                          If referring to a piece of an object instead of an entire object, this string
                          should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within a pod, this would take on a value like:
                          "spec.containers{name}" (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]" (container with
                          index 2 in this pod). This syntax is chosen only to have some well-defined way of
                          referencing a part of an object.
                          TODO: this design is not final and this field is subject to change in the future.
                        type: string
                      kind:
                        description: |-
                          Kind of the referent.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                        type: string
                      name:
                        description: |-
                          Name of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      namespace:
                        description: |-
                          Namespace of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                        type: string
                      resourceVersion:
                        description: |-
                          Specific resourceVersion to which this reference is made, if any.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                        type: string
                      uid:
                        description: |-
                          UID of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  bootstrapConf:
                    description: BootstrapConf holds configuration file overrides
                      for bootstrap.conf
                    properties:
                      remove:
                        additionalProperties:
                          type: string
                        description: Remove operation holds a map of key/values that
                          are to be deleted from the underlying config file.
                        type: object
                      upsert:
                        additionalProperties:
                          type: string
                        description: Upsert operation holds a map of key/values for
                          updating or inserting them in the underlying config file.
                        type: object
                    type: object
                  bootstrapConfRef:
                    description: BootstrapConfRef holds details about custom configmap
                      or secret for bootstrap.conf
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: |-
                          If referring to a piece of an object instead of an entire object, this string
                          should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within a pod, this would take on a value like:
                          "spec.containers{name}" (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]" (container with
                          index 2 in this pod). This syntax is chosen only to have some well-defined way of
                          referencing a part of an object.
                          TODO: this design is not final and this field is subject to change in the future.
                        type: string
                      kind:
                        description: |-
                          Kind of the referent.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                        type: string
                      name:
                        description: |-
                          Name of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      namespace:
                        description: |-
                          Namespace of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                        type: string
                      resourceVersion:
                        description: |-
                          Specific resourceVersion to which this reference is made, if any.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                        type: string
                      uid:
                        description: |-
                          UID of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  logback:
                    description: |-
                      Logback override for logback.xml.
                      Can either specify the content of the logback.xml as string, or a list of LogbackSpec.
                    properties:
                      loggers:
                        description: |-
                          Loggers is a list of LoggerSpec, which can define logger name, verbosity levels and additivity.
                          Each rendered LoggerSpec will have appender-ref: APP_FILE.
                          Note: Only one of the fields of LogbackOverrideSpec can be specified.
                        items:
                          description: LoggerSpec the logger name level and verbosity
                            for a logback logger.
                          properties:
                            additivity:
                              description: |-
                                Additivity when set to false, the log message is not broadcasted to further appenders.
                                For further information, please read official documentation:
                                http://logback.qos.ch/manual/configuration.html#overrridingCumulativity
                              type: boolean
                            appenderRef:
                              description: |-
                                AppenderRef is the appender reference for the logger.
                                Default: APP_FILE.
                                USER_FILE is only allowed for NiFi and EVENTS_FILE is only allowed for NiFi Registry.
                              enum:
                              - APP_FILE
                              - CONSOLE
                              - BOOTSTRAP_FILE
                              - EVENTS_FILE
                              - USER_FILE
                              type: string
                            level:
                              description: |-
                                Level is the logger's verbosity level.
                                Value for this field must be one of the valid logback verbosity levels: TRACE, DEBUG, INFO, WARN, ERROR
                              enum:
                              - TRACE
                              - DEBUG
                              - INFO
                              - WARN
                              - ERROR
                              type: string
                            name:
                              description: Name is the name of the Logback Logger.
                              type: string
                          required:
                          - level
                          - name
                          type: object
                        type: array
                      xmlContent:
                        description: |-
                          XMLContent, if set, will override the whole, default logback.xml file.
                          Note: Only one of the fields of LogbackOverrideSpec can be specified.
                        type: string
                    type: object
                  logbackRef:
                    description: LogbackRef holds details about custom configmap or
                      secret for logback.xml
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: |-
                          If referring to a piece of an object instead of an entire object, this string
                          should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within a pod, this would take on a value like:
                          "spec.containers{name}" (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]" (container with
                          index 2 in this pod). This syntax is chosen only to have some well-defined way of
                          referencing a part of an object.
                          TODO: this design is not final and this field is subject to change in the future.
                        type: string
                      kind:
                        description: |-
                          Kind of the referent.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                        type: string
                      name:
                        description: |-
                          Name of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      namespace:
                        description: |-
                          Namespace of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                        type: string
                      resourceVersion:
                        description: |-
                          Specific resourceVersion to which this reference is made, if any.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                        type: string
                      uid:
                        description: |-
                          UID of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  loginIdentityProviders:
                    description: |-
                      LoginIdentityProviders: configuration file override for login-identity-providers.xml.
                      If set, this content will override the default login-identity-providers.xml file.
                    type: string
                  loginIdentityProvidersRef:
                    description: LoginIdentityProvidersRef holds details about custom
                      configmap or secret for login-identity-providers.xml
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: |-
                          If referring to a piece of an object instead of an entire object, this string
                          should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within a pod, this would take on a value like:
                          "spec.containers{name}" (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]" (container with
                          index 2 in this pod). This syntax is chosen only to have some well-defined way of
                          referencing a part of an object.
                          TODO: this design is not final and this field is subject to change in the future.
                        type: string
                      kind:
                        description: |-
                          Kind of the referent.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                        type: string
                      name:
                        description: |-
                          Name of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      namespace:
                        description: |-
                          Namespace of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                        type: string
                      resourceVersion:
                        description: |-
                          Specific resourceVersion to which this reference is made, if any.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                        type: string
                      uid:
                        description: |-
                          UID of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  nifiProperties:
                    description: NifiProperties holds configuration file overrides
                      for nifi.properties
                    properties:
                      remove:
                        additionalProperties:
                          type: string
                        description: Remove operation holds a map of key/values that
                          are to be deleted from the underlying config file.
                        type: object
                      upsert:
                        additionalProperties:
                          type: string
                        description: Upsert operation holds a map of key/values for
                          updating or inserting them in the underlying config file.
                        type: object
                    type: object
                  nifiPropertiesRef:
                    description: NifiPropertiesRef holds details about custom configmap
                      or secret for nifi.properties
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: |-
                          If referring to a piece of an object instead of an entire object, this string
                          should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within a pod, this would take on a value like:
                          "spec.containers{name}" (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]" (container with
                          index 2 in this pod). This syntax is chosen only to have some well-defined way of
                          referencing a part of an object.
                          TODO: this design is not final and this field is subject to change in the future.
                        type: string
                      kind:
                        description: |-
                          Kind of the referent.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                        type: string
                      name:
                        description: |-
                          Name of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      namespace:
                        description: |-
                          Namespace of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                        type: string
                      resourceVersion:
                        description: |-
                          Specific resourceVersion to which this reference is made, if any.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                        type: string
                      uid:
                        description: |-
                          UID of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  stateManagementRef:
                    description: StateManagementRef holds details about custom configmap
                      or secret for state-management.xml
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: |-
                          If referring to a piece of an object instead of an entire object, this string
                          should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within a pod, this would take on a value like:
                          "spec.containers{name}" (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]" (container with
                          index 2 in this pod). This syntax is chosen only to have some well-defined way of
                          referencing a part of an object.
                          TODO: this design is not final and this field is subject to change in the future.
                        type: string
                      kind:
                        description: |-
                          Kind of the referent.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                        type: string
                      name:
                        description: |-
                          Name of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      namespace:
                        description: |-
                          Namespace of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                        type: string
                      resourceVersion:
                        description: |-
                          Specific resourceVersion to which this reference is made, if any.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                        type: string
                      uid:
                        description: |-
                          UID of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              connections:
                description: Connections configures Ingresses, Routes, and Services
                  for connecting to NiFi
                items:
                  description: |-
                    Connection represents a requested connection to the defined Port using a particular type of
                    Ingress/Route/Service resource.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      type: object
                    ingressConfig:
                      properties:
                        hostname:
                          description: hostname for this connection
                          type: string
                        ingressClassName:
                          description: IngressClassName
                          type: string
                        ingressTLS:
                          items:
                            description: IngressTLS describes the transport layer
                              security associated with an ingress.
                            properties:
                              hosts:
                                description: |-
                                  hosts is a list of hosts included in the TLS certificate. The values in
                                  this list must match the name/s used in the tlsSecret. Defaults to the
                                  wildcard host setting for the loadbalancer controller fulfilling this
                                  Ingress, if left unspecified.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                              secretName:
                                description: |-
                                  secretName is the name of the secret used to terminate TLS traffic on
                                  port 443. Field is left optional to allow TLS routing based on SNI
                                  hostname alone. If the SNI host in a listener conflicts with the "Host"
                                  header field used by an IngressRule, the SNI host is used for termination
                                  and value of the "Host" header is used for routing.
                                type: string
                            type: object
                          type: array
                        paths:
                          description: Array of Ingress paths and associated ports.
                          items:
                            properties:
                              appProtocol:
                                description: |-
                                  The application protocol for this port.
                                  This is used as a hint for implementations to offer richer behavior for protocols that they understand.
                                  This field follows standard Kubernetes label syntax.
                                  Valid values are either:


                                  * Un-prefixed protocol names - reserved for IANA standard service names (as per
                                  RFC-6335 and https://www.iana.org/assignments/service-names).


                                  * Kubernetes-defined prefixed names:
                                    * 'kubernetes.io/h2c' - HTTP/2 prior knowledge over cleartext as described in https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-
                                    * 'kubernetes.io/ws'  - WebSocket over cleartext as described in https://www.rfc-editor.org/rfc/rfc6455
                                    * 'kubernetes.io/wss' - WebSocket over TLS as described in https://www.rfc-editor.org/rfc/rfc6455


                                  * Other protocols should use implementation-defined prefixed names such as
                                  mycompany.com/my-custom-protocol.
                                type: string
                              name:
                                description: |-
                                  The name of this port within the service. This must be a DNS_LABEL.
                                  All ports within a ServiceSpec must have unique names. When considering
                                  the endpoints for a Service, this must match the 'name' field in the
                                  EndpointPort.
                                  Optional if only one ServicePort is defined on this service.
                                type: string
                              nodePort:
                                description: |-
                                  The port on each node on which this service is exposed when type is
                                  NodePort or LoadBalancer.  Usually assigned by the system. If a value is
                                  specified, in-range, and not in use it will be used, otherwise the
                                  operation will fail.  If not specified, a port will be allocated if this
                                  Service requires one.  If this field is specified when creating a
                                  Service which does not need it, creation will fail. This field will be
                                  wiped when updating a Service to no longer need it (e.g. changing type
                                  from NodePort to ClusterIP).
                                  More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
                                format: int32
                                type: integer
                              path:
                                type: string
                              pathType:
                                description: PathType represents the type of path
                                  referred to by a HTTPIngressPath.
                                type: string
                              port:
                                description: The port that will be exposed by this
                                  service.
                                format: int32
                                type: integer
                              protocol:
                                default: TCP
                                description: |-
                                  The IP protocol for this port. Supports "TCP", "UDP", and "SCTP".
                                  Default is TCP.
                                type: string
                              targetPort:
                                anyOf:
                                - type: integer
                                - type: string
                                description: |-
                                  Number or name of the port to access on the pods targeted by the service.
                                  Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  If this is a string, it will be looked up as a named port in the
                                  target Pod's container ports. If this is not specified, the value
                                  of the 'port' field is used (an identity map).
                                  This field is ignored for services with clusterIP=None, and should be
                                  omitted or set equal to the 'port' field.
                                  More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
                                x-kubernetes-int-or-string: true
                            required:
                            - path
                            - port
                            type: object
                          type: array
                      required:
                      - hostname
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      type: object
                    name:
                      type: string
                    routeConfig:
                      properties:
                        hostname:
                          description: hostname for this connection
                          type: string
                        httpHeaderActions:
                          description: |-
                            Additional HTTP headers to apply, flattened implementation of
                            https://docs.openshift.com/container-platform/4.14/rest_api/network_apis/route-route-openshift-io-v1.html#spec-httpheaders-actions
                          properties:
                            request:
                              description: Set of actions to take against request
                                headers
                              items:
                                properties:
                                  action:
                                    description: Action to take on this header
                                    enum:
                                    - Set
                                    - Delete
                                    type: string
                                  name:
                                    description: Name of the header to update
                                    type: string
                                  value:
                                    description: Value to set on header
                                    type: string
                                required:
                                - action
                                - name
                                type: object
                              type: array
                            response:
                              description: Set of actions to take against response
                                headers
                              items:
                                properties:
                                  action:
                                    description: Action to take on this header
                                    enum:
                                    - Set
                                    - Delete
                                    type: string
                                  name:
                                    description: Name of the header to update
                                    type: string
                                  value:
                                    description: Value to set on header
                                    type: string
                                required:
                                - action
                                - name
                                type: object
                              type: array
                          type: object
                        path:
                          description: URL path to suffix hostname or subdomain
                          type: string
                        port:
                          description: Service Port to target with Path
                          format: int32
                          type: integer
                        subdomain:
                          type: string
                        tls:
                          description: TLS configuration for Route
                          properties:
                            caCertificate:
                              description: caCertificate provides the cert authority
                                certificate contents
                              type: string
                            certificate:
                              description: |-
                                certificate provides certificate contents. This should be a single serving certificate, not a certificate
                                chain. Do not include a CA certificate.
                              type: string
                            destinationCACertificate:
                              description: |-
                                destinationCACertificate provides the contents of the ca certificate of the final destination.  When using reencrypt
                                termination this file should be provided in order to have routers use it for health checks on the secure connection.
                                If this field is not specified, the router may provide its own destination CA and perform hostname validation using
                                the short service name (service.namespace.svc), which allows infrastructure generated certificates to automatically
                                verify.
                              type: string
                            externalCertificate:
                              description: |-
                                externalCertificate provides certificate contents as a secret reference.
                                This should be a single serving certificate, not a certificate
                                chain. Do not include a CA certificate. The secret referenced should
                                be present in the same namespace as that of the Route.
                                Forbidden when `certificate` is set.
                              properties:
                                name:
                                  description: |-
                                    name of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            insecureEdgeTerminationPolicy:
                              description: |-
                                insecureEdgeTerminationPolicy indicates the desired behavior for insecure connections to a route. While
                                each router may make its own decisions on which ports to expose, this is normally port 80.


                                If a route does not specify insecureEdgeTerminationPolicy, then the default behavior is "None".


                                * Allow - traffic is sent to the server on the insecure port (edge/reencrypt terminations only).


                                * None - no traffic is allowed on the insecure port (default).


                                * Redirect - clients are redirected to the secure port.
                              enum:
                              - Allow
                              - None
                              - Redirect
                              - ""
                              type: string
                            key:
                              description: key provides key file contents
                              type: string
                            termination:
                              description: |-
                                termination indicates termination type.


                                * edge - TLS termination is done by the router and http is used to communicate with the backend (default)
                                * passthrough - Traffic is sent straight to the destination without the router providing TLS termination
                                * reencrypt - TLS termination is done by the router and https is used to communicate with the backend


                                Note: passthrough termination is incompatible with httpHeader actions
                              enum:
                              - edge
                              - reencrypt
                              - passthrough
                              type: string
                          required:
                          - termination
                          type: object
                          x-kubernetes-validations:
                          - message: 'cannot have both spec.tls.termination: passthrough
                              and spec.tls.insecureEdgeTerminationPolicy: Allow'
                            rule: 'has(self.termination) && has(self.insecureEdgeTerminationPolicy)
                              ? !((self.termination==''passthrough'') && (self.insecureEdgeTerminationPolicy==''Allow''))
                              : true'
                      required:
                      - port
                      type: object
                    serviceConfig:
                      description: ServiceSpec describes the attributes that a user
                        creates on a service.
                      properties:
                        allocateLoadBalancerNodePorts:
                          description: |-
                            allocateLoadBalancerNodePorts defines if NodePorts will be automatically
                            allocated for services with type LoadBalancer.  Default is "true". It
                            may be set to "false" if the cluster load-balancer does not rely on
                            NodePorts.  If the caller requests specific NodePorts (by specifying a
                            value), those requests will be respected, regardless of this field.
                            This field may only be set for services with type LoadBalancer and will
                            be cleared if the type is changed to any other type.
                          type: boolean
                        clusterIP:
                          description: |-
                            clusterIP is the IP address of the service and is usually assigned
                            randomly. If an address is specified manually, is in-range (as per
                            system configuration), and is not in use, it will be allocated to the
                            service; otherwise creation of the service will fail. This field may not
                            be changed through updates unless the type field is also being changed
                            to ExternalName (which requires this field to be blank) or the type
                            field is being changed from ExternalName (in which case this field may
                            optionally be specified, as describe above).  Valid values are "None",
                            empty string (""), or a valid IP address. Setting this to "None" makes a
                            "headless service" (no virtual IP), which is useful when direct endpoint
                            connections are preferred and proxying is not required.  Only applies to
                            types ClusterIP, NodePort, and LoadBalancer. If this field is specified
                            when creating a Service of type ExternalName, creation will fail. This
                            field will be wiped when updating a Service to type ExternalName.
                            More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
                          type: string
                        clusterIPs:
                          description: |-
                            ClusterIPs is a list of IP addresses assigned to this service, and are
                            usually assigned randomly.  If an address is specified manually, is
                            in-range (as per system configuration), and is not in use, it will be
                            allocated to the service; otherwise creation of the service will fail.
                            This field may not be changed through updates unless the type field is
                            also being changed to ExternalName (which requires this field to be
                            empty) or the type field is being changed from ExternalName (in which
                            case this field may optionally be specified, as describe above).  Valid
                            values are "None", empty string (""), or a valid IP address.  Setting
                            this to "None" makes a "headless service" (no virtual IP), which is
                            useful when direct endpoint connections are preferred and proxying is
                            not required.  Only applies to types ClusterIP, NodePort, and
                            LoadBalancer. If this field is specified when creating a Service of type
                            ExternalName, creation will fail. This field will be wiped when updating
                            a Service to type ExternalName.  If this field is not specified, it will
                            be initialized from the clusterIP field.  If this field is specified,
                            clients must ensure that clusterIPs[0] and clusterIP have the same
                            value.


                            This field may hold a maximum of two entries (dual-stack IPs, in either order).
                            These IPs must correspond to the values of the ipFamilies field. Both
                            clusterIPs and ipFamilies are governed by the ipFamilyPolicy field.
                            More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        externalIPs:
                          description: |-
                            externalIPs is a list of IP addresses for which nodes in the cluster
                            will also accept traffic for this service.  These IPs are not managed by
                            Kubernetes.  The user is responsible for ensuring that traffic arrives
                            at a node with this IP.  A common example is external load-balancers
                            that are not part of the Kubernetes system.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        externalName:
                          description: |-
                            externalName is the external reference that discovery mechanisms will
                            return as an alias for this service (e.g. a DNS CNAME record). No
                            proxying will be involved.  Must be a lowercase RFC-1123 hostname
                            (https://tools.ietf.org/html/rfc1123) and requires `type` to be "ExternalName".
                          type: string
                        externalTrafficPolicy:
                          description: |-
                            externalTrafficPolicy describes how nodes distribute service traffic they
                            receive on one of the Service's "externally-facing" addresses (NodePorts,
                            ExternalIPs, and LoadBalancer IPs). If set to "Local", the proxy will configure
                            the service in a way that assumes that external load balancers will take care
                            of balancing the service traffic between nodes, and so each node will deliver
                            traffic only to the node-local endpoints of the service, without masquerading
                            the client source IP. (Traffic mistakenly sent to a node with no endpoints will
                            be dropped.) The default value, "Cluster", uses the standard behavior of
                            routing to all endpoints evenly (possibly modified by topology and other
                            features). Note that traffic sent to an External IP or LoadBalancer IP from
                            within the cluster will always get "Cluster" semantics, but clients sending to
                            a NodePort from within the cluster may need to take traffic policy into account
                            when picking a node.
                          type: string
                        healthCheckNodePort:
                          description: |-
                            healthCheckNodePort specifies the healthcheck nodePort for the service.
                            This only applies when type is set to LoadBalancer and
                            externalTrafficPolicy is set to Local. If a value is specified, is
                            in-range, and is not in use, it will be used.  If not specified, a value
                            will be automatically allocated.  External systems (e.g. load-balancers)
                            can use this port to determine if a given node holds endpoints for this
                            service or not.  If this field is specified when creating a Service
                            which does not need it, creation will fail. This field will be wiped
                            when updating a Service to no longer need it (e.g. changing type).
                            This field cannot be updated once set.
                          format: int32
                          type: integer
                        internalTrafficPolicy:
                          description: |-
                            InternalTrafficPolicy describes how nodes distribute service traffic they
                            receive on the ClusterIP. If set to "Local", the proxy will assume that pods
                            only want to talk to endpoints of the service on the same node as the pod,
                            dropping the traffic if there are no local endpoints. The default value,
                            "Cluster", uses the standard behavior of routing to all endpoints evenly
                            (possibly modified by topology and other features).
                          type: string
                        ipFamilies:
                          description: |-
                            IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this
                            service. This field is usually assigned automatically based on cluster
                            configuration and the ipFamilyPolicy field. If this field is specified
                            manually, the requested family is available in the cluster,
                            and ipFamilyPolicy allows it, it will be used; otherwise creation of
                            the service will fail. This field is conditionally mutable: it allows
                            for adding or removing a secondary IP family, but it does not allow
                            changing the primary IP family of the Service. Valid values are "IPv4"
                            and "IPv6".  This field only applies to Services of types ClusterIP,
                            NodePort, and LoadBalancer, and does apply to "headless" services.
                            This field will be wiped when updating a Service to type ExternalName.


                            This field may hold a maximum of two entries (dual-stack families, in
                            either order).  These families must correspond to the values of the
                            clusterIPs field, if specified. Both clusterIPs and ipFamilies are
                            governed by the ipFamilyPolicy field.
                          items:
                            description: |-
                              IPFamily represents the IP Family (IPv4 or IPv6). This type is used
                              to express the family of an IP expressed by a type (e.g. service.spec.ipFamilies).
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        ipFamilyPolicy:
                          description: |-
                            IPFamilyPolicy represents the dual-stack-ness requested or required by
                            this Service. If there is no value provided, then this field will be set
                            to SingleStack. Services can be "SingleStack" (a single IP family),
                            "PreferDualStack" (two IP families on dual-stack configured clusters or
                            a single IP family on single-stack clusters), or "RequireDualStack"
                            (two IP families on dual-stack configured clusters, otherwise fail). The
                            ipFamilies and clusterIPs fields depend on the value of this field. This
                            field will be wiped when updating a service to type ExternalName.
                          type: string
                        loadBalancerClass:
                          description: |-
                            loadBalancerClass is the class of the load balancer implementation this Service belongs to.
                            If specified, the value of this field must be a label-style identifier, with an optional prefix,
                            e.g. "internal-vip" or "example.com/internal-vip". Unprefixed names are reserved for end-users.
                            This field can only be set when the Service type is 'LoadBalancer'. If not set, the default load
                            balancer implementation is used, today this is typically done through the cloud provider integration,
                            but should apply for any default implementation. If set, it is assumed that a load balancer
                            implementation is watching for Services with a matching class. Any default load balancer
                            implementation (e.g. cloud providers) should ignore Services that set this field.
                            This field can only be set when creating or updating a Service to type 'LoadBalancer'.
                            Once set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.
                          type: string
                        loadBalancerIP:
                          description: |-
                            Only applies to Service Type: LoadBalancer.
                            This feature depends on whether the underlying cloud-provider supports specifying
                            the loadBalancerIP when a load balancer is created.
                            This field will be ignored if the cloud-provider does not support the feature.
                            Deprecated: This field was under-specified and its meaning varies across implementations.
                            Using it is non-portable and it may not support dual-stack.
                            Users are encouraged to use implementation-specific annotations when available.
                          type: string
                        loadBalancerSourceRanges:
                          description: |-
                            If specified and supported by the platform, this will restrict traffic through the cloud-provider
                            load-balancer will be restricted to the specified client IPs. This field will be ignored if the
                            cloud-provider does not support the feature."
                            More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        ports:
                          description: |-
                            The list of ports that are exposed by this service.
                            More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
                          items:
                            description: ServicePort contains information on service's
                              port.
                            properties:
                              appProtocol:
                                description: |-
                                  The application protocol for this port.
                                  This is used as a hint for implementations to offer richer behavior for protocols that they understand.
                                  This field follows standard Kubernetes label syntax.
                                  Valid values are either:


                                  * Un-prefixed protocol names - reserved for IANA standard service names (as per
                                  RFC-6335 and https://www.iana.org/assignments/service-names).


                                  * Kubernetes-defined prefixed names:
                                    * 'kubernetes.io/h2c' - HTTP/2 prior knowledge over cleartext as described in https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-
                                    * 'kubernetes.io/ws'  - WebSocket over cleartext as described in https://www.rfc-editor.org/rfc/rfc6455
                                    * 'kubernetes.io/wss' - WebSocket over TLS as described in https://www.rfc-editor.org/rfc/rfc6455


                                  * Other protocols should use implementation-defined prefixed names such as
                                  mycompany.com/my-custom-protocol.
                                type: string
                              name:
                                description: |-
                                  The name of this port within the service. This must be a DNS_LABEL.
                                  All ports within a ServiceSpec must have unique names. When considering
                                  the endpoints for a Service, this must match the 'name' field in the
                                  EndpointPort.
                                  Optional if only one ServicePort is defined on this service.
                                type: string
                              nodePort:
                                description: |-
                                  The port on each node on which this service is exposed when type is
                                  NodePort or LoadBalancer.  Usually assigned by the system. If a value is
                                  specified, in-range, and not in use it will be used, otherwise the
                                  operation will fail.  If not specified, a port will be allocated if this
                                  Service requires one.  If this field is specified when creating a
                                  Service which does not need it, creation will fail. This field will be
                                  wiped when updating a Service to no longer need it (e.g. changing type
                                  from NodePort to ClusterIP).
                                  More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
                                format: int32
                                type: integer
                              port:
                                description: The port that will be exposed by this
                                  service.
                                format: int32
                                type: integer
                              protocol:
                                default: TCP
                                description: |-
                                  The IP protocol for this port. Supports "TCP", "UDP", and "SCTP".
                                  Default is TCP.
                                type: string
                              targetPort:
                                anyOf:
                                - type: integer
                                - type: string
                                description: |-
                                  Number or name of the port to access on the pods targeted by the service.
                                  Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                  If this is a string, it will be looked up as a named port in the
                                  target Pod's container ports. If this is not specified, the value
                                  of the 'port' field is used (an identity map).
                                  This field is ignored for services with clusterIP=None, and should be
                                  omitted or set equal to the 'port' field.
                                  More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - port
                          - protocol
                          x-kubernetes-list-type: map
                        publishNotReadyAddresses:
                          description: |-
                            publishNotReadyAddresses indicates that any agent which deals with endpoints for this
                            Service should disregard any indications of ready/not-ready.
                            The primary use case for setting this field is for a StatefulSet's Headless Service to
                            propagate SRV DNS records for its Pods for the purpose of peer discovery.
                            The Kubernetes controllers that generate Endpoints and EndpointSlice resources for
                            Services interpret this to mean that all endpoints are considered "ready" even if the
                            Pods themselves are not. Agents which consume only Kubernetes generated endpoints
                            through the Endpoints or EndpointSlice resources can safely assume this behavior.
                          type: boolean
                        selector:
                          additionalProperties:
                            type: string
                          description: |-
                            Route service traffic to pods with label keys and values matching this
                            selector. If empty or not present, the service is assumed to have an
                            external process managing its endpoints, which Kubernetes will not
                            modify. Only applies to types ClusterIP, NodePort, and LoadBalancer.
                            Ignored if type is ExternalName.
                            More info: https://kubernetes.io/docs/concepts/services-networking/service/
                          type: object
                          x-kubernetes-map-type: atomic
                        sessionAffinity:
                          description: |-
                            Supports "ClientIP" and "None". Used to maintain session affinity.
                            Enable client IP based session affinity.
                            Must be ClientIP or None.
                            Defaults to None.
                            More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
                          type: string
                        sessionAffinityConfig:
                          description: sessionAffinityConfig contains the configurations
                            of session affinity.
                          properties:
                            clientIP:
                              description: clientIP contains the configurations of
                                Client IP based session affinity.
                              properties:
                                timeoutSeconds:
                                  description: |-
                                    timeoutSeconds specifies the seconds of ClientIP type session sticky time.
                                    The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP".
                                    Default value is 10800(for 3 hours).
                                  format: int32
                                  type: integer
                              type: object
                          type: object
                        trafficDistribution:
                          description: |-
                            TrafficDistribution offers a way to express preferences for how traffic is
                            distributed to Service endpoints. Implementations can use this field as a
                            hint, but are not required to guarantee strict adherence. If the field is
                            not set, the implementation will apply its default routing strategy. If set
                            to "PreferClose", implementations should prioritize endpoints that are
                            topologically close (e.g., same zone).
                            This is an alpha field and requires enabling ServiceTrafficDistribution feature.
                          type: string
                        type:
                          description: |-
                            type determines how the Service is exposed. Defaults to ClusterIP. Valid
                            options are ExternalName, ClusterIP, NodePort, and LoadBalancer.
                            "ClusterIP" allocates a cluster-internal IP address for load-balancing
                            to endpoints. Endpoints are determined by the selector or if that is not
                            specified, by manual construction of an Endpoints object or
                            EndpointSlice objects. If clusterIP is "None", no virtual IP is
                            allocated and the endpoints are published as a set of endpoints rather
                            than a virtual IP.
                            "NodePort" builds on ClusterIP and allocates a port on every node which
                            routes to the same endpoints as the clusterIP.
                            "LoadBalancer" builds on NodePort and creates an external load-balancer
                            (if supported in the current cloud) which routes to the same endpoints
                            as the clusterIP.
                            "ExternalName" aliases this service to the specified externalName.
                            Several other fields do not apply to ExternalName services.
                            More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
                          type: string
                      type: object
                    type:
                      enum:
                      - Ingress
                      - Route
                      - Service
                      type: string
                  required:
                  - type
                  type: object
                type: array
              debug:
                description: Debug specifies the details for JVM remote debugging.
                properties:
                  port:
                    description: Port is the debug port on which the target JVM will
                      listen.
                    exclusiveMinimum: true
                    format: int32
                    minimum: 1024
                    type: integer
                  suspend:
                    description: |-
                      Suspend if set to true, instructs the target JVM to suspend it's boot
                      process, until a debug client connects.
                      Beware: Delaying a JVM start can cause the underlying pod's liveness-probe
                      to kick in, and terminate the pod.
                      To avoid that, - for debugging purposes - one could specify:
                      statefulset:
                        livenessProbe:
                          failureThreshold:
                      to an arbitrary big number.
                    type: boolean
                required:
                - port
                type: object
              hostName:
                description: |-
                  HostName specifies the host name with which Nifi is reachable. The host name is used to configure the
                  host of the Ingress/Route for uiConnection. When omitted, any arbitrary host header is feasible, e.g. IP address.
                  The host name should match the ingress certificate in case manual ingress certificate is set.
                  HostName is required for "host named based virtual access" mode, but can be omitted in "fanout" mode
                  (see IngressAccessType property).
                type: string
              image:
                description: Image for the NiFi container
                properties:
                  pullPolicy:
                    description: ImagePullPolicy for this image. Defaults to IfNotPresent.
                      Valid values are IfNotPresent, Always, Never.
                    enum:
                    - Always
                    - Never
                    - IfNotPresent
                    type: string
                  pullSecret:
                    description: Name of Secret which contains docker-registry credentials
                      for repository.
                    type: string
                  repository:
                    description: Image repository from which to pull.
                    type: string
                  tag:
                    description: Image tag to pull from repository.
                    type: string
                required:
                - repository
                - tag
                type: object
              inboundConnection:
                description: |-
                  InboundConnection defines the configuration for allowing inbound connection to listening
                  processors in a NiFi flow
                properties:
                  exposePorts:
                    description: |-
                      ExposePorts contains a list of ports which will be exposed as a
                      service though an external IP.  The ports will be routed to the
                      corresponding port of the Nifi cluster. A kubernetes service of type loadBalancer will
                      be created for each protocol type. E.g. if the array contains only
                      UDP ports, only one service will be created.
                    items:
                      description: Port specifies a port number and a connection type.
                      properties:
                        port:
                          maximum: 65535
                          minimum: 0
                          type: integer
                        protocol:
                          enum:
                          - TCP
                          - UDP
                          type: string
                      type: object
                    type: array
                  serviceAnnotations:
                    additionalProperties:
                      type: string
                    description: |-
                      ServiceAnnotations is applied to the underlying service resource representing the
                      external load balancer
                    type: object
                  udpHealthCheck:
                    description: |-
                      UDPHealthCheck configures how health check probe of the underlying cloud
                      load balancer will be set up
                    properties:
                      image:
                        description: Image defines the container image of the TCP
                          server sidecar
                        properties:
                          pullPolicy:
                            description: ImagePullPolicy for this image. Defaults
                              to IfNotPresent. Valid values are IfNotPresent, Always,
                              Never.
                            enum:
                            - Always
                            - Never
                            - IfNotPresent
                            type: string
                          pullSecret:
                            description: Name of Secret which contains docker-registry
                              credentials for repository.
                            type: string
                          repository:
                            description: Image repository from which to pull.
                            type: string
                          tag:
                            description: Image tag to pull from repository.
                            type: string
                        required:
                        - repository
                        - tag
                        type: object
                      port:
                        description: |-
                          Port is the NodePort that is able to route the incoming health check
                          request to the TCP server sidecar
                        type: integer
                    required:
                    - image
                    - port
                    type: object
                type: object
              ingressAccessType:
                description: IngressAccessType is deprecated, use UIConnection.
                properties:
                  nameBasedVirtualHost:
                    description: |-
                      NameBasedVirtualHost will set up ingress to be Name based virtual host.
                      See documentation at: https://kubernetes.io/docs/concepts/services-networking/ingress/#name-based-virtual-hosting
                      Routing will use the HostName property to match against the incoming request's host header.
                      This will be configured on the Ingress controller
                    type: boolean
                  simpleFanout:
                    description: |-
                      SimpleFanout will set up ingress to be Path based. See documentation
                      See documentation at: https://kubernetes.io/docs/concepts/services-networking/ingress/#simple-fanout
                    properties:
                      path:
                        description: |-
                          Path is the root path of the URI, under which the web UI will be served (eg.: http://11.22.33.44/my-nifi/).
                          Note, this is mode of web ui access is incompatible with kerberos authentication.
                          Note, if security is enabled, IPAddresses must be specified on the IngressCertSpec.
                          This will be configured on the ingress controller.
                        type: string
                    required:
                    - path
                    type: object
                type: object
              nifiVersion:
                default: 1.0.0
                pattern: ^(?P<major>0|[1-9]\d*)\.(?P<minor>0|[1-9]\d*)\.(?P<patch>0|[1-9]\d*)(?:-(?P<prerelease>(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+(?P<buildmetadata>[0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
                type: string
              persistence:
                description: Persistence for the NiFi container
                properties:
                  contentRepo:
                    description: |-
                      ContentRepo describes the storage specification for the content repository.
                      If provided, it will override the default storage specification.
                      Supports multiple repositories.
                    properties:
                      count:
                        description: 'Count of the persistence volume claims. Default:
                          1.'
                        type: integer
                      size:
                        description: 'Size of the persistent volume. Default: 5Gi'
                        pattern: ^[0-9]+([.][0-9]+)?([KMGTP]i?)?$
                        type: string
                      storageClass:
                        description: |-
                          StorageClass is the name of the storage class used in the persistent volume.
                          If set to "-", then sets the storage class name "", which disables dynamic provisioning,
                          if undefined (the default) or set to null, no storage class name is set,
                          choosing the default provisioner (gp2 on AWS, standard on GKE, AWS & OpenStack)
                        type: string
                    type: object
                  data:
                    description: |-
                      Data describes the storage specification for the 'data' directory,
                      which is used to hold things such as the flow.xml.gz, configuration, state, etc.
                      If provided, it will override the default storage specification.
                    properties:
                      size:
                        description: 'Size of the persistent volume. Default: 5Gi'
                        pattern: ^[0-9]+([.][0-9]+)?([KMGTP]i?)?$
                        type: string
                      storageClass:
                        description: |-
                          StorageClass is the name of the storage class used in the persistent volume.
                          If set to "-", then sets the storage class name "", which disables dynamic provisioning,
                          if undefined (the default) or set to null, no storage class name is set,
                          choosing the default provisioner (gp2 on AWS, standard on GKE, AWS & OpenStack)
                        type: string
                    type: object
                  flowfileRepo:
                    description: |-
                      FlowfileRepo describes the storage specification for the flowfile repository.
                      If provided, it will override the default storage specification.
                    properties:
                      size:
                        description: 'Size of the persistent volume. Default: 5Gi'
                        pattern: ^[0-9]+([.][0-9]+)?([KMGTP]i?)?$
                        type: string
                      storageClass:
                        description: |-
                          StorageClass is the name of the storage class used in the persistent volume.
                          If set to "-", then sets the storage class name "", which disables dynamic provisioning,
                          if undefined (the default) or set to null, no storage class name is set,
                          choosing the default provisioner (gp2 on AWS, standard on GKE, AWS & OpenStack)
                        type: string
                    type: object
                  provenanceRepo:
                    description: |-
                      ProvenanceRepo describes the storage specification for the provenance repository.
                      If provided, it will override the default storage specification.
                      Supports multiple repositories.
                    properties:
                      count:
                        description: 'Count of the persistence volume claims. Default:
                          1.'
                        type: integer
                      size:
                        description: 'Size of the persistent volume. Default: 5Gi'
                        pattern: ^[0-9]+([.][0-9]+)?([KMGTP]i?)?$
                        type: string
                      storageClass:
                        description: |-
                          StorageClass is the name of the storage class used in the persistent volume.
                          If set to "-", then sets the storage class name "", which disables dynamic provisioning,
                          if undefined (the default) or set to null, no storage class name is set,
                          choosing the default provisioner (gp2 on AWS, standard on GKE, AWS & OpenStack)
                        type: string
                    type: object
                  size:
                    description: 'Size of the persistent volume. Default: 5Gi'
                    pattern: ^[0-9]+([.][0-9]+)?([KMGTP]i?)?$
                    type: string
                  state:
                    description: |-
                      State describes the storage specification for the 'state' directory,
                      which is used to hold information about the node's current state
                      If provided, it will override the default storage specification.
                    properties:
                      size:
                        description: 'Size of the persistent volume. Default: 5Gi'
                        pattern: ^[0-9]+([.][0-9]+)?([KMGTP]i?)?$
                        type: string
                      storageClass:
                        description: |-
                          StorageClass is the name of the storage class used in the persistent volume.
                          If set to "-", then sets the storage class name "", which disables dynamic provisioning,
                          if undefined (the default) or set to null, no storage class name is set,
                          choosing the default provisioner (gp2 on AWS, standard on GKE, AWS & OpenStack)
                        type: string
                    type: object
                  storageClass:
                    description: |-
                      StorageClass is the name of the storage class used in the persistent volume.
                      If set to "-", then sets the storage class name "", which disables dynamic provisioning,
                      if undefined (the default) or set to null, no storage class name is set,
                      choosing the default provisioner (gp2 on AWS, standard on GKE, AWS & OpenStack)
                    type: string
                type: object
              podDisruptionBudget:
                description: PodDisruptionBudget parameters for the underlying NiFi
                  pod disruption budget
                properties:
                  maxUnavailable:
                    anyOf:
                    - type: integer
                    - type: string
                    description: |-
                      MaxUnavailable is the maximum number of pods from the stateful set that can
                      be unavailable after the eviction.
                      It can be either an absolute number or a percentage.
                    x-kubernetes-int-or-string: true
                type: object
              proxyConfig:
                description: |-
                  ProxyConfig contains details about a reverse proxy in front of the ingress controller.
                  When set, it is used in the ingress object to set 'X-Proxy(Scheme|Host|Port)' headers,
                  which are used by NiFi to construct URIs which work properly with the proxy.
                  For details see: https://nifi.apache.org/docs/nifi-docs/html/administration-guide.html#proxy_configuration
                properties:
                  host:
                    description: Host is the name of the outer most reverse-proxy
                      which is addressed by the client directly.
                    type: string
                  port:
                    description: Port is the port of the outer most reverse-proxy
                      which is addressed by the client directly.
                    type: integer
                  scheme:
                    description: |-
                      Scheme is the scheme of the outer most reverse-proxy which is addressed by the client directly.
                      Scheme can be either http or https.
                      kubebuilder:validation:Enum=http,https
                    type: string
                type: object
              replicas:
                description: Replicas defines the desired quantity of NiFi pods.
                format: int32
                minimum: 1
                type: integer
              resources:
                description: Resources specifies container limits by containers
                properties:
                  log:
                    description: Log specify how much CPU and memory (RAM) each sidecar
                      log container needs / can have.
                    properties:
                      limits:
                        description: Limits describes the maximum amount of compute
                          resources allowed.
                        properties:
                          cpu:
                            description: CPU, in cores. (500m = .5 cores)
                            pattern: ^[0-9]+([.][0-9]+|m)?$
                            type: string
                          memory:
                            description: Memory, in bytes. (500Gi = 500GiB = 500 *
                              1024 * 1024 * 1024)
                            pattern: ^[0-9]+([.][0-9]+)?([KMGTP]i?)?$
                            type: string
                        type: object
                      requests:
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is
                          explicitly specified, otherwise to an implementation-defined value.
                        properties:
                          cpu:
                            description: CPU, in cores. (500m = .5 cores)
                            pattern: ^[0-9]+([.][0-9]+|m)?$
                            type: string
                          memory:
                            description: Memory, in bytes. (500Gi = 500GiB = 500 *
                              1024 * 1024 * 1024)
                            pattern: ^[0-9]+([.][0-9]+)?([KMGTP]i?)?$
                            type: string
                        type: object
                    type: object
                  nifi:
                    description: Nifi specify how much CPU and memory (RAM) each Nifi
                      container needs / can have.
                    properties:
                      limits:
                        description: Limits describes the maximum amount of compute
                          resources allowed.
                        properties:
                          cpu:
                            description: CPU, in cores. (500m = .5 cores)
                            pattern: ^[0-9]+([.][0-9]+|m)?$
                            type: string
                          memory:
                            description: Memory, in bytes. (500Gi = 500GiB = 500 *
                              1024 * 1024 * 1024)
                            pattern: ^[0-9]+([.][0-9]+)?([KMGTP]i?)?$
                            type: string
                        type: object
                      requests:
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is
                          explicitly specified, otherwise to an implementation-defined value.
                        properties:
                          cpu:
                            description: CPU, in cores. (500m = .5 cores)
                            pattern: ^[0-9]+([.][0-9]+|m)?$
                            type: string
                          memory:
                            description: Memory, in bytes. (500Gi = 500GiB = 500 *
                              1024 * 1024 * 1024)
                            pattern: ^[0-9]+([.][0-9]+)?([KMGTP]i?)?$
                            type: string
                        type: object
                    type: object
                  s2s:
                    description: S2S specify how much CPU and memory (RAM) the site-to-site
                      proxy deployment pods need / can have.
                    properties:
                      limits:
                        description: Limits describes the maximum amount of compute
                          resources allowed.
                        properties:
                          cpu:
                            description: CPU, in cores. (500m = .5 cores)
                            pattern: ^[0-9]+([.][0-9]+|m)?$
                            type: string
                          memory:
                            description: Memory, in bytes. (500Gi = 500GiB = 500 *
                              1024 * 1024 * 1024)
                            pattern: ^[0-9]+([.][0-9]+)?([KMGTP]i?)?$
                            type: string
                        type: object
                      requests:
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is
                          explicitly specified, otherwise to an implementation-defined value.
                        properties:
                          cpu:
                            description: CPU, in cores. (500m = .5 cores)
                            pattern: ^[0-9]+([.][0-9]+|m)?$
                            type: string
                          memory:
                            description: Memory, in bytes. (500Gi = 500GiB = 500 *
                              1024 * 1024 * 1024)
                            pattern: ^[0-9]+([.][0-9]+)?([KMGTP]i?)?$
                            type: string
                        type: object
                    type: object
                type: object
              s2s:
                description: S2S specifies the site-to-site related configurations
                properties:
                  domainSuffix:
                    description: |-
                      DomainSuffix specifies the domain name where the nodes are registered
                      for site-to-site communication
                    type: string
                  image:
                    description: |-
                      Image is the docker image for the site-to-site container.
                      Default: hortonworks/openshift-nginx:openresty-stable
                    properties:
                      pullPolicy:
                        description: ImagePullPolicy for this image. Defaults to IfNotPresent.
                          Valid values are IfNotPresent, Always, Never.
                        enum:
                        - Always
                        - Never
                        - IfNotPresent
                        type: string
                      pullSecret:
                        description: Name of Secret which contains docker-registry
                          credentials for repository.
                        type: string
                      repository:
                        description: Image repository from which to pull.
                        type: string
                      tag:
                        description: Image tag to pull from repository.
                        type: string
                    required:
                    - repository
                    - tag
                    type: object
                required:
                - domainSuffix
                type: object
              security:
                description: Security specifies the security related configurations
                  (HTTPS, LDAP, Kerberos...)
                properties:
                  additionalCABundles:
                    description: AdditionalCABundles contains additional CA certificates
                      to be used
                    items:
                      description: AdditionalCACertSpec is a named ca.crt
                      properties:
                        caCrt:
                          description: CaCrt is the base64 encoded ca.crt
                          format: byte
                          type: string
                        name:
                          description: Name of the certificate, e.g. "site-to-site
                            cert"
                          type: string
                      required:
                      - caCrt
                      - name
                      type: object
                    type: array
                  customAuthorizer:
                    description: |-
                      CustomAuthorizer specifies a custom UserGroupProvider. The authorizer has to be present in the NiFi image
                      being used, as this property will only set the authorizers.xml file accordingly.
                      If not set, a default provider will be used, which provides users for NiFi nodes and proxy.
                    properties:
                      className:
                        description: ClassName is the name of the java class to use,
                          including the package name.
                        type: string
                      identifier:
                        description: Identifier is the identifier field of the custom
                          authorizer. Has to be unique.
                        type: string
                      properties:
                        description: Properties holds extra properties for the custom
                          authorizer. This will be included in authorizers.xml
                        items:
                          description: AuthorizerProperty is a property for a NiFi
                            authorizer
                          properties:
                            key:
                              description: Key is the key of the property
                              type: string
                            value:
                              description: Value is the value of the property
                              type: string
                          required:
                          - key
                          - value
                          type: object
                        type: array
                    required:
                    - className
                    - identifier
                    type: object
                  ingressCertGen:
                    description: IngressCertGen specifies ingress certificate generation
                      related information
                    properties:
                      dnsNames:
                        description: DNSNames is a list of subject alt names to be
                          used on the Certificate
                        items:
                          type: string
                        type: array
                      duration:
                        description: Certificate default Duration
                        type: string
                      ipAddresses:
                        description: IPAddresses is a list of IP addresses to be used
                          on the Certificate
                        items:
                          type: string
                        type: array
                      isCA:
                        description: |-
                          IsCA will mark this Certificate as valid for signing.
                          This implies that the 'signing' usage is set
                        type: boolean
                      issuerRef:
                        description: |-
                          IssuerRef is a reference to the issuer for this certificate.
                          If the 'kind' field is not set, or set to 'Issuer', an Issuer resource
                          with the given name in the same namespace as the Certificate will be used.
                          If the 'kind' field is set to 'ClusterIssuer', a ClusterIssuer with the
                          provided name will be used.
                          The 'name' field in this stanza is required at all times.
                        properties:
                          group:
                            description: Group of the resource being referred to.
                            type: string
                          kind:
                            description: Kind of the resource being referred to.
                            type: string
                          name:
                            description: Name of the resource being referred to.
                            type: string
                        required:
                        - name
                        type: object
                      keyAlgorithm:
                        allOf:
                        - enum:
                          - RSA
                          - ECDSA
                          - Ed25519
                        - enum:
                          - rsa
                          - ecdsa
                        description: |-
                          KeyAlgorithm is the private key algorithm of the corresponding private key
                          for this certificate. If provided, allowed values are either "rsa" or "ecdsa"
                          If KeyAlgorithm is specified and KeySize is not provided,
                          key size of 256 will be used for "ecdsa" key algorithm and
                          key size of 2048 will be used for "rsa" key algorithm.
                        type: string
                      keySize:
                        description: |-
                          KeySize is the key bit size of the corresponding private key for this certificate.
                          If provided, value must be between 2048 and 8192 inclusive when KeyAlgorithm is
                          empty or is set to "rsa", and value must be one of (256, 384, 521) when
                          KeyAlgorithm is set to "ecdsa".
                        type: integer
                      manualCertificate:
                        description: |-
                          ManualCertificate contains information of the secret which holds a
                          precreated certificate. If specified, no additional certificate will be generated.
                        properties:
                          secret:
                            description: Secret is the name of the secret.
                            properties:
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  TODO: Add other useful fields. apiVersion, kind, uid?
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      organization:
                        description: Organization is the organization to be used on
                          the Certificate
                        items:
                          type: string
                        type: array
                      renewBefore:
                        description: Certificate renew before expiration duration
                        type: string
                    type: object
                  initialAdminIdentity:
                    description: InitialAdminIdentity specifies the initial admin
                      user which has full access.
                    type: string
                  kerberos:
                    description: Kerberos specifies configs related to user authentication
                      through Kerberos.
                    properties:
                      authExpiration:
                        description: |-
                          AuthExpiration is the duration of how long the user authentication is
                          valid for. If the user never logs out, they will be required to log back
                          in following this duration.
                        type: string
                      kdc:
                        description: KDC is the Key Distribution Center address
                        type: string
                      realm:
                        description: Realm is the Kerberos realm (i.e. EXAMPLE.COM)
                        type: string
                      servicePrincipal:
                        description: ServicePrincipal is the kerberos service principal.
                        type: string
                      servicePrincipalKeytabName:
                        description: ServicePrincipalKeytabName is the keytab location
                          for the service principal's keytab.
                        type: string
                      spnegoKeytabName:
                        description: |-
                          SPNEGOKeytabName is the keytab name for the SPNEGO service principal
                          E.g.: http.keytab
                        type: string
                      spnegoPrincipal:
                        description: SPNEGOPrincipal is the service principal used
                          for SPNEGO access
                        type: string
                    required:
                    - kdc
                    - realm
                    - servicePrincipal
                    - servicePrincipalKeytabName
                    - spnegoKeytabName
                    - spnegoPrincipal
                    type: object
                  krb5confSecret:
                    description: |-
                      Krb5confSecret specifies location of a kerberos config file which will be
                      put to the nifi.properties file. It does not enable Kerberos based
                      authentication, but it can be used to integrate NiFi cluster with services using Kerberos.
                      Specified secret has to have a field with key "krb5.conf" and the
                      value should be the base64 encoded contents of the config file.
                    properties:
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          TODO: Add other useful fields. apiVersion, kind, uid?
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  ldap:
                    description: Ldap specifies the various ldap authentication related
                      configurations
                    properties:
                      authenticationExpiration:
                        description: |-
                          AuthenticationExpiration is the duration of how long the user authentication is valid for.
                          If the user never logs out, they will be required to log back in following
                          this duration. (eg. 12 hours)
                        type: string
                      authenticationStrategy:
                        description: |-
                          AuthenticationStrategy is how the connection to the LDAP server is
                          authenticated. Possible values are ANONYMOUS, SIMPLE, LDAPS, or START_TLS.
                        enum:
                        - ANONYMOUS
                        - SIMPLE
                        - LDAPS
                        - START_TLS
                        type: string
                      connectTimeout:
                        description: ConnectTimeout is the duration of connect timeout.
                          (i.e. 3 secs).
                        type: string
                      identityStrategy:
                        description: |-
                          IdentityStrategy is the strategy to identify users. Possible values are USE_DN and USE_USERNAME.
                          The default functionality if this property is missing is USE_DN in order to retain
                          backward compatibility. USE_DN will use the full DN of the user entry if possible.
                          USE_USERNAME will use the username the user logged in with.
                        enum:
                        - USE_DN
                        - USE_USERNAME
                        type: string
                      managerDN:
                        description: |-
                          ManagerDN is the DN of the manager that is used to bind to the LDAP server
                          to search for users.
                        type: string
                      readTimeout:
                        description: ReadTimeout Duration of read timeout. (i.e. 10
                          secs).
                        type: string
                      referralStrategy:
                        description: |-
                          ReferralStrategy is the strategy for handling referrals.
                          Possible values are FOLLOW, IGNORE, THROW.
                        enum:
                        - FOLLOW
                        - IGNORE
                        - THROW
                        type: string
                      secretName:
                        description: |-
                          SecretName contains the name of a Kubernetes secret which stores the manager password
                          and optionally the keystore and truststore files plus their associated passwords for TLS
                          They are expected to be located under the following keys:
                          managerPassword, keystore, keystorePassword, truststore, truststorePassword
                          The passwords should not contain the '#' character!
                        type: string
                      sync:
                        description: |-
                          UserGroupProvider specifies parameters for LDAP authorization.
                          This will sync users and groups from a directory server and will present
                          them in the NiFi UI in read only form.
                        properties:
                          groupMemberAttribute:
                            description: |-
                              GroupMemberAttribute is an attribute to use to define group membership
                              (i.e. member). If not set group membership will not be calculated through
                              the groups. Will rely on group membership being defined through
                              UserGroupNameAttribute if set. The value of this property is the name of
                              the attribute in the group ldap entry that associates them with a user.
                              The value of that group attribute could be a dn or memberUid for instance.
                              What value is expected is configured in the
                              GroupMemberAttributeReferencedUserAttribute
                              (i.e. member: cn=User 1,ou=users,o=nifi vs. memberUid: user1)
                            type: string
                          groupMemberReferencedUserAttribute:
                            description: |-
                              GroupMemberAttributeReferencedUserAttribute is an attribute. If blank,
                              the value of the attribute defined in GroupMemberAttribute is expected
                              to be the full dn of the user. If not blank, this property will define the
                              attribute of the user ldap entry that the value of the attribute defined in
                               Group Member Attribute is referencing (i.e. uid). Use of this property
                              requires that UserSearchBase is also configured
                              (i.e. member: cn=User 1,ou=users,o=nifi vs. memberUid: user1)
                            type: string
                          groupNameAttribute:
                            description: |-
                              Attribute to use to extract group name (i.e. cn).
                              If not set, the entire DN is used.
                            type: string
                          groupObjectClass:
                            description: |-
                              GroupObjectClass is the Object class for identifying groups (i.e. groupOfNames).
                              Required if searching groups.
                            type: string
                          groupSearchBase:
                            description: |-
                              GroupSearchBase is the base DN for searching for groups (i.e. ou=groups,o=nifi).
                              Required to search groups.
                            type: string
                          groupSearchFilter:
                            description: GroupSearchFilter is for searching for groups
                              against the GroupSearchBase.
                            type: string
                          groupSearchScope:
                            description: |-
                              GroupSearhScope is the scope for searching groups (ONE_LEVEL, OBJECT, or SUBTREE).
                              Required if searching groups.
                            enum:
                            - ONE_LEVEL
                            - OBJECT
                            - SUBTREE
                            type: string
                          interval:
                            description: |-
                              Interval is the duration of time between syncing users and groups (i.e. 30 mins).
                              Minimum allowable value is 10 secs.
                            type: string
                          pageSize:
                            description: |-
                              PageSize sets the page size when retrieving users and groups.
                              If not specified, no paging is performed.
                            type: string
                          userGroupNameAttribute:
                            description: |-
                              UserGroupNameAttribute is the attribute to use to define group membership
                              (i.e. memberof). If not set group membership will not be calculated
                              through the users. Will rely on group membership being defined through
                              GroupMemberAttribute if set. The value of this property is the name of the
                              attribute in the user ldap entry that associates them with a group.
                              The value of that user attribute could be a dn or group name for instance.
                              What value is expected is configured in the UserGroupNameReferencedGroupAttribute.
                            type: string
                          userGroupNameReferencedGroupAttribute:
                            description: |-
                              UserGroupNameReferencedGroupAttribute is an attribute. If blank, the value
                              of the attribute defined in User GroupNameAttribute is expected to be the
                              full dn of the group. If not blank, this property will define the attribute
                              of the group ldap entry that the value of the attribute defined in
                              UserGroupNameAttribute is referencing (i.e. name). Use of this property
                              requires that GroupSearchBase is also configured.
                            type: string
                          userIdentityAttribute:
                            description: |-
                              UserIdentityAttribute is an attribute to use to extract user identity (i.e. cn).
                              If not set, the entire DN is used.
                            type: string
                          userObjectClass:
                            description: UserObjectClass is the object class for identifying
                              users (i.e. person).
                            type: string
                          userSearchFilter:
                            description: |-
                              UserSearchFilter is for searching for users against the UserSearchBase
                              (i.e. memberof=cn=team1,ou=groups,o=nifi).
                            type: string
                          userSearchScope:
                            description: |-
                              UserSearchScope is the scope for searching users (ONE_LEVEL, OBJECT, or SUBTREE).
                              Required if searching users.
                            enum:
                            - ONE_LEVEL
                            - OBJECT
                            - SUBTREE
                            type: string
                        required:
                        - groupObjectClass
                        - groupSearchBase
                        - groupSearchScope
                        - interval
                        - userObjectClass
                        - userSearchScope
                        type: object
                      tls:
                        description: TLS specifies parameters for LDAPS or START_TLS
                          authentication strategy
                        properties:
                          clientAuth:
                            description: ClientAuth is the client authentication policy.
                              Possible values are REQUIRED, WANT, NONE.
                            enum:
                            - REQUIRED
                            - WANT
                            - NONE
                            type: string
                          keystoreType:
                            description: |-
                              KeystoreType is the keystore type. Possible values are: JKS or PKCS12.
                              If missing, TLS - Keystore will be empty
                            enum:
                            - JKS
                            - PKCS12
                            type: string
                          protocol:
                            description: |-
                              Protocol is the protocol to use when connecting to LDAP using LDAPS or
                              START_TLS. (i.e. TLS, TLSv1.1, TLSv1.2, etc).
                            enum:
                            - TLS
                            - TLSv1.1
                            - TLSv1.2
                            - TLSv1.3
                            type: string
                          shutdownGracefully:
                            description: |-
                              ShutdownGracefully specifies whether the TLS should be shut down
                              gracefully before the target context is closed.
                              Defaults to false.
                            type: boolean
                          truststoreType:
                            description: |-
                              TruststoreType is the truststore type. Possible values are: JKS or PKCS12
                              If missing, TLS - Truststore will be empty
                            enum:
                            - JKS
                            - PKCS12
                            type: string
                        required:
                        - clientAuth
                        - protocol
                        type: object
                      url:
                        description: URL is the space-separated list of URLs of the
                          LDAP servers (i.e. ldap://hostname:port).
                        type: string
                      userSearchBase:
                        description: UserSearchBase is the base DN for searching for
                          users (i.e. CN=Users,DC=example,DC=com).
                        type: string
                      userSearchFilter:
                        description: |-
                          UserSearchFilter is the filter for searching for users against the
                          'User Search Base'. (i.e. sAMAccountName={0}).
                          The user specified name is inserted into '{0}'.
                        type: string
                    required:
                    - authenticationExpiration
                    - authenticationStrategy
                    - connectTimeout
                    - readTimeout
                    - referralStrategy
                    - url
                    - userSearchBase
                    - userSearchFilter
                    type: object
                  nodeCertGen:
                    description: NodeCertGen specifies node and proxy certificate
                      generation related information
                    properties:
                      duration:
                        description: Certificate default Duration
                        type: string
                      issuerRef:
                        description: IssuerRef specifies an Issuer which signs node
                          certificates
                        properties:
                          group:
                            description: Group of the resource being referred to.
                            type: string
                          kind:
                            description: Kind of the resource being referred to.
                            type: string
                          name:
                            description: Name of the resource being referred to.
                            type: string
                        required:
                        - name
                        type: object
                      keyAlgorithm:
                        allOf:
                        - enum:
                          - RSA
                          - ECDSA
                          - Ed25519
                        - enum:
                          - rsa
                          - ecdsa
                        description: |-
                          KeyAlgorithm is the private key algorithm of the corresponding private key
                          for this certificate. If provided, allowed values are either "rsa" or "ecdsa"
                          If KeyAlgorithm is specified and KeySize is not provided,
                          key size of 256 will be used for "ecdsa" key algorithm and
                          key size of 2048 will be used for "rsa" key algorithm.
                        type: string
                      keySize:
                        description: |-
                          KeySize is the key bit size of the corresponding private key for this certificate.
                          If provided, value must be between 2048 and 8192 inclusive when KeyAlgorithm is
                          empty or is set to "rsa", and value must be one of (256, 384, 521) when
                          KeyAlgorithm is set to "ecdsa".
                        type: integer
                      renewBefore:
                        description: Certificate renew before expiration duration
                        type: string
                    required:
                    - issuerRef
                    type: object
                  openIDAuth:
                    description: OpenIDAuth specifies OpenID authentication related
                      configurations.
                    properties:
                      JWSAlgorithm:
                        description: |-
                          JWSAlgorithm is the preferred algorithm for for validating identity tokens.
                          If this value is blank, it will default to RS256 which is required to be
                          supported by the OpenId Connect Provider according to the specification.
                          If this value is HS256, HS384, or HS512, NiFi will attempt to validate
                          HMAC protected tokens using the specified client secret.
                          If this value is none, NiFi will attempt to validate unsecured/plain tokens.
                          Other values for this algorithm will attempt to parse as an RSA or EC
                          algorithm to be used in conjunction with the JSON Web Key (JWK) provided
                          through the jwks_uri in the metadata found at the discovery URL.
                        type: string
                      clientSecretName:
                        description: |-
                          ClientSecretName is the name of the Kubernetes secret that contains the
                          clientID and clientSecret
                        type: string
                      connectTimeout:
                        description: |-
                          ConnectTimeout specifies the connect timeout when communicating with the
                          OpenId Connect Provider
                        type: string
                      discoveryURL:
                        description: |-
                          DiscoveryURL is the URL for the desired OpenId Connect Provider
                          (http://openid.net/specs/openid-connect-discovery-1_0.html)
                        type: string
                      readTimeout:
                        description: |-
                          ReadTimeout specifies the read timeout when communicating with the
                          OpenId Connect Provider
                        type: string
                    required:
                    - clientSecretName
                    - discoveryURL
                    type: object
                  s2sCertGen:
                    description: S2SCertGen specifies ingress certificate generation
                      related information
                    properties:
                      duration:
                        description: Certificate default Duration
                        type: string
                      ipAddresses:
                        description: IPAddresses is a list of IP addresses to be used
                          on the Certificate
                        items:
                          type: string
                        type: array
                      isCA:
                        description: |-
                          IsCA will mark this Certificate as valid for signing.
                          This implies that the 'signing' usage is set
                        type: boolean
                      issuerRef:
                        description: |-
                          IssuerRef is a reference to the issuer for this certificate.
                          If the 'kind' field is not set, or set to 'Issuer', an Issuer resource
                          with the given name in the same namespace as the Certificate will be used.
                          If the 'kind' field is set to 'ClusterIssuer', a ClusterIssuer with the
                          provided name will be used.
                          The 'name' field in this stanza is required at all times.
                        properties:
                          group:
                            description: Group of the resource being referred to.
                            type: string
                          kind:
                            description: Kind of the resource being referred to.
                            type: string
                          name:
                            description: Name of the resource being referred to.
                            type: string
                        required:
                        - name
                        type: object
                      keyAlgorithm:
                        allOf:
                        - enum:
                          - RSA
                          - ECDSA
                          - Ed25519
                        - enum:
                          - rsa
                          - ecdsa
                        description: |-
                          KeyAlgorithm is the private key algorithm of the corresponding private key
                          for this certificate. If provided, allowed values are either "rsa" or "ecdsa"
                          If KeyAlgorithm is specified and KeySize is not provided,
                          key size of 256 will be used for "ecdsa" key algorithm and
                          key size of 2048 will be used for "rsa" key algorithm.
                        type: string
                      keySize:
                        description: |-
                          KeySize is the key bit size of the corresponding private key for this certificate.
                          If provided, value must be between 2048 and 8192 inclusive when KeyAlgorithm is
                          empty or is set to "rsa", and value must be one of (256, 384, 521) when
                          KeyAlgorithm is set to "ecdsa".
                        type: integer
                      organization:
                        description: Organization is the organization to be used on
                          the Certificate
                        items:
                          type: string
                        type: array
                      renewBefore:
                        description: Certificate renew before expiration duration
                        type: string
                    required:
                    - issuerRef
                    type: object
                  samlSingleSignOnAuth:
                    description: |-
                      SamlAuth specifies SAML-based single sign-on authentication related configurations.
                      SAML authentication is enabled if SamlAuth is specified.
                    properties:
                      entityID:
                        description: |-
                          EntityID is the entity id of the service provider (i.e. NiFi). This value will be used as the Issuer for
                          SAML authentication requests and should be a valid URI. In some cases the service provider entity id must
                          be registered ahead of time with the identity provider.
                        type: string
                      groupAttributeName:
                        description: |-
                          GroupAttributeName is the name of a SAML assertion attribute containing group names the user belongs to.
                          This property is optional, but if populated the groups will be passed along to the authorization process.
                        type: string
                      identityAttributeName:
                        description: |-
                          IdentityAttributeName The name of a SAML assertion attribute containing the user’s identity.
                          This property is optional and if not specified, or if the attribute is not found, then the NameID of the
                          Subject will be used.
                        type: string
                      idpMetadataSecretName:
                        description: |-
                          IdpMetadataSecretName is the name of a secret which contains the identity provider's metadata in SAML format.
                          The SAML metadata should be under the "sso-idp-metadata.xml" key.
                        type: string
                      singleLogoutEnabled:
                        description: |-
                          SingleLogoutEnabled enables SAML SingleLogout which causes a logout from NiFi to logout of the identity
                          provider. By default, a logout of NiFi will only remove the NiFi JWT.
                        type: boolean
                    required:
                    - entityID
                    - idpMetadataSecretName
                    type: object
                  singleUserAuth:
                    description: SingleUserAuth configures the NiFi cluster to use
                      Single User Authentication.
                    properties:
                      credentialsSecretName:
                        description: |-
                          CredentialsSecretName references a Secret which contains fields username and
                          password which will be used for Single User Authentication. If the Secret
                          does not contain correct fields, NiFi will generate a username and password.
                        type: string
                      enabled:
                        description: |-
                          Turn on single user auth. If no credentials Secret is provided, this will
                          configure NiFi to generate credentials which will be displayed in app-log.
                          https://github.com/apache/nifi/blob/main/README.md#authenticating
                        type: boolean
                    required:
                    - enabled
                    type: object
                  userCertAuth:
                    description: UserCertAuth specifies user certificate authentication
                      related configurations
                    properties:
                      verificationCASecret:
                        description: |-
                          VerificationCASecret specifies a Secret which contains the CA for verifying user certificates
                          The format is namespace/secret
                        type: string
                    required:
                    - verificationCASecret
                    type: object
                type: object
              sensitivePropsKeySecretName:
                description: |-
                  SensitivePropsKeySecretName is the name of the secret which specifies
                  the value for the nifi.sensitive.props.key in nifi.properties.
                  If a secret with such name pre-exists, then the operator will use it.
                  When left empty, the operator will create a secret with the name:
                  {cr-name}-sensitive-props-key and a randomly generated password as a value
                  for 'nifi.sensitive.props.key'.
                type: string
              stateManagement:
                description: |-
                  StateManagement specifies NiFi state management details.
                  For further details, please read:
                  https://nifi.apache.org/docs/nifi-docs/html/administration-guide.html#state_management
                properties:
                  clusterProvider:
                    description: ClusterProvider specifies the cluster-provider configurations
                    properties:
                      class:
                        description: Class specifies the state provider implementation
                          class.
                        type: string
                      id:
                        description: ID specifies the identifier NiFi should search
                          for in the state-management.xml file.
                        type: string
                      properties:
                        additionalProperties:
                          type: string
                        description: Properties holds the extra configuration parameters
                          the implementation class may need.
                        type: object
                    required:
                    - class
                    - id
                    type: object
                  localProvider:
                    description: LocalProvider specifies the local-provider configurations
                    properties:
                      class:
                        description: Class specifies the state provider implementation
                          class.
                        type: string
                      id:
                        description: ID specifies the identifier NiFi should search
                          for in the state-management.xml file.
                        type: string
                      properties:
                        additionalProperties:
                          type: string
                        description: Properties holds the extra configuration parameters
                          the implementation class may need.
                        type: object
                    required:
                    - class
                    - id
                    type: object
                type: object
              statefulset:
                description: Statefulset parameters for the underlying NiFi statefulset
                properties:
                  affinity:
                    description: '[core/v1] Affinity policy for the pods.'
                    properties:
                      nodeAffinity:
                        description: Describes node affinity scheduling rules for
                          the pod.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: |-
                              The scheduler will prefer to schedule pods to nodes that satisfy
                              the affinity expressions specified by this field, but it may choose
                              a node that violates one or more of the expressions. The node that is
                              most preferred is the one with the greatest sum of weights, i.e.
                              for each node that meets all of the scheduling requirements (resource
                              request, requiredDuringScheduling affinity expressions, etc.),
                              compute a sum by iterating through the elements of this field and adding
                              "weight" to the sum if the node matches the corresponding matchExpressions; the
                              node(s) with the highest sum are the most preferred.
                            items:
                              description: |-
                                An empty preferred scheduling term matches all objects with implicit weight 0
                                (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                              properties:
                                preference:
                                  description: A node selector term, associated with
                                    the corresponding weight.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: |-
                                          A node selector requirement is a selector that contains values, a key, and an operator
                                          that relates the key and values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              Represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            type: string
                                          values:
                                            description: |-
                                              An array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. If the operator is Gt or Lt, the values
                                              array must have a single element, which will be interpreted as an integer.
                                              This array is replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: |-
                                          A node selector requirement is a selector that contains values, a key, and an operator
                                          that relates the key and values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              Represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            type: string
                                          values:
                                            description: |-
                                              An array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. If the operator is Gt or Lt, the values
                                              array must have a single element, which will be interpreted as an integer.
                                              This array is replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  type: object
                                  x-kubernetes-map-type: atomic
                                weight:
                                  description: Weight associated with matching the
                                    corresponding nodeSelectorTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - preference
                              - weight
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: |-
                              If the affinity requirements specified by this field are not met at
                              scheduling time, the pod will not be scheduled onto the node.
                              If the affinity requirements specified by this field cease to be met
                              at some point during pod execution (e.g. due to an update), the system
                              may or may not try to eventually evict the pod from its node.
                            properties:
                              nodeSelectorTerms:
                                description: Required. A list of node selector terms.
                                  The terms are ORed.
                                items:
                                  description: |-
                                    A null or empty node selector term matches no objects. The requirements of
                                    them are ANDed.
                                    The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: |-
                                          A node selector requirement is a selector that contains values, a key, and an operator
                                          that relates the key and values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              Represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            type: string
                                          values:
                                            description: |-
                                              An array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. If the operator is Gt or Lt, the values
                                              array must have a single element, which will be interpreted as an integer.
                                              This array is replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: |-
                                          A node selector requirement is a selector that contains values, a key, and an operator
                                          that relates the key and values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              Represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            type: string
                                          values:
                                            description: |-
                                              An array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. If the operator is Gt or Lt, the values
                                              array must have a single element, which will be interpreted as an integer.
                                              This array is replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  type: object
                                  x-kubernetes-map-type: atomic
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - nodeSelectorTerms
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      podAffinity:
                        description: Describes pod affinity scheduling rules (e.g.
                          co-locate this pod in the same node, zone, etc. as some
                          other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: |-
                              The scheduler will prefer to schedule pods to nodes that satisfy
                              the affinity expressions specified by this field, but it may choose
                              a node that violates one or more of the expressions. The node that is
                              most preferred is the one with the greatest sum of weights, i.e.
                              for each node that meets all of the scheduling requirements (resource
                              request, requiredDuringScheduling affinity expressions, etc.),
                              compute a sum by iterating through the elements of this field and adding
                              "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                              node(s) with the highest sum are the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated
                                    with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: |-
                                        A label query over a set of resources, in this case pods.
                                        If it's null, this PodAffinityTerm matches with no Pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: |-
                                              A label selector requirement is a selector that contains values, a key, and an operator that
                                              relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: |-
                                                  operator represents a key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: |-
                                                  values is an array of string values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This array is replaced during a strategic
                                                  merge patch.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    matchLabelKeys:
                                      description: |-
                                        MatchLabelKeys is a set of pod label keys to select which pods will
                                        be taken into consideration. The keys are used to lookup values from the
                                        incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                        to select the group of existing pods which pods will be taken into consideration
                                        for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                        pod labels will be ignored. The default value is empty.
                                        The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                        Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                        This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    mismatchLabelKeys:
                                      description: |-
                                        MismatchLabelKeys is a set of pod label keys to select which pods will
                                        be taken into consideration. The keys are used to lookup values from the
                                        incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                        to select the group of existing pods which pods will be taken into consideration
                                        for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                        pod labels will be ignored. The default value is empty.
                                        The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                        Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                        This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    namespaceSelector:
                                      description: |-
                                        A label query over the set of namespaces that the term applies to.
                                        The term is applied to the union of the namespaces selected by this field
                                        and the ones listed in the namespaces field.
                                        null selector and null or empty namespaces list means "this pod's namespace".
                                        An empty selector ({}) matches all namespaces.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: |-
                                              A label selector requirement is a selector that contains values, a key, and an operator that
                                              relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: |-
                                                  operator represents a key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: |-
                                                  values is an array of string values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This array is replaced during a strategic
                                                  merge patch.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: |-
                                        namespaces specifies a static list of namespace names that the term applies to.
                                        The term is applied to the union of the namespaces listed in this field
                                        and the ones selected by namespaceSelector.
                                        null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    topologyKey:
                                      description: |-
                                        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                        the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                        whose value of the label with key topologyKey matches that of any node on which any of the
                                        selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: |-
                                    weight associated with matching the corresponding podAffinityTerm,
                                    in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: |-
                              If the affinity requirements specified by this field are not met at
                              scheduling time, the pod will not be scheduled onto the node.
                              If the affinity requirements specified by this field cease to be met
                              at some point during pod execution (e.g. due to a pod label update), the
                              system may or may not try to eventually evict the pod from its node.
                              When there are multiple elements, the lists of nodes corresponding to each
                              podAffinityTerm are intersected, i.e. all terms must be satisfied.
                            items:
                              description: |-
                                Defines a set of pods (namely those matching the labelSelector
                                relative to the given namespace(s)) that this pod should be
                                co-located (affinity) or not co-located (anti-affinity) with,
                                where co-located is defined as running on a node whose value of
                                the label with key <topologyKey> matches that of any node on which
                                a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: |-
                                    A label query over a set of resources, in this case pods.
                                    If it's null, this PodAffinityTerm matches with no Pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                matchLabelKeys:
                                  description: |-
                                    MatchLabelKeys is a set of pod label keys to select which pods will
                                    be taken into consideration. The keys are used to lookup values from the
                                    incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                    to select the group of existing pods which pods will be taken into consideration
                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                    pod labels will be ignored. The default value is empty.
                                    The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                    Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                    This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                mismatchLabelKeys:
                                  description: |-
                                    MismatchLabelKeys is a set of pod label keys to select which pods will
                                    be taken into consideration. The keys are used to lookup values from the
                                    incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                    to select the group of existing pods which pods will be taken into consideration
                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                    pod labels will be ignored. The default value is empty.
                                    The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                    Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                    This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                namespaceSelector:
                                  description: |-
                                    A label query over the set of namespaces that the term applies to.
                                    The term is applied to the union of the namespaces selected by this field
                                    and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list means "this pod's namespace".
                                    An empty selector ({}) matches all namespaces.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaces:
                                  description: |-
                                    namespaces specifies a static list of namespace names that the term applies to.
                                    The term is applied to the union of the namespaces listed in this field
                                    and the ones selected by namespaceSelector.
                                    null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                topologyKey:
                                  description: |-
                                    This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                    the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                    whose value of the label with key topologyKey matches that of any node on which any of the
                                    selected pods is running.
                                    Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                        type: object
                      podAntiAffinity:
                        description: Describes pod anti-affinity scheduling rules
                          (e.g. avoid putting this pod in the same node, zone, etc.
                          as some other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: |-
                              The scheduler will prefer to schedule pods to nodes that satisfy
                              the anti-affinity expressions specified by this field, but it may choose
                              a node that violates one or more of the expressions. The node that is
                              most preferred is the one with the greatest sum of weights, i.e.
                              for each node that meets all of the scheduling requirements (resource
                              request, requiredDuringScheduling anti-affinity expressions, etc.),
                              compute a sum by iterating through the elements of this field and adding
                              "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                              node(s) with the highest sum are the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated
                                    with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: |-
                                        A label query over a set of resources, in this case pods.
                                        If it's null, this PodAffinityTerm matches with no Pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: |-
                                              A label selector requirement is a selector that contains values, a key, and an operator that
                                              relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: |-
                                                  operator represents a key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: |-
                                                  values is an array of string values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This array is replaced during a strategic
                                                  merge patch.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    matchLabelKeys:
                                      description: |-
                                        MatchLabelKeys is a set of pod label keys to select which pods will
                                        be taken into consideration. The keys are used to lookup values from the
                                        incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                        to select the group of existing pods which pods will be taken into consideration
                                        for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                        pod labels will be ignored. The default value is empty.
                                        The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                        Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                        This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    mismatchLabelKeys:
                                      description: |-
                                        MismatchLabelKeys is a set of pod label keys to select which pods will
                                        be taken into consideration. The keys are used to lookup values from the
                                        incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                        to select the group of existing pods which pods will be taken into consideration
                                        for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                        pod labels will be ignored. The default value is empty.
                                        The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                        Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                        This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    namespaceSelector:
                                      description: |-
                                        A label query over the set of namespaces that the term applies to.
                                        The term is applied to the union of the namespaces selected by this field
                                        and the ones listed in the namespaces field.
                                        null selector and null or empty namespaces list means "this pod's namespace".
                                        An empty selector ({}) matches all namespaces.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: |-
                                              A label selector requirement is a selector that contains values, a key, and an operator that
                                              relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: |-
                                                  operator represents a key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: |-
                                                  values is an array of string values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This array is replaced during a strategic
                                                  merge patch.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: |-
                                        namespaces specifies a static list of namespace names that the term applies to.
                                        The term is applied to the union of the namespaces listed in this field
                                        and the ones selected by namespaceSelector.
                                        null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    topologyKey:
                                      description: |-
                                        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                        the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                        whose value of the label with key topologyKey matches that of any node on which any of the
                                        selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: |-
                                    weight associated with matching the corresponding podAffinityTerm,
                                    in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: |-
                              If the anti-affinity requirements specified by this field are not met at
                              scheduling time, the pod will not be scheduled onto the node.
                              If the anti-affinity requirements specified by this field cease to be met
                              at some point during pod execution (e.g. due to a pod label update), the
                              system may or may not try to eventually evict the pod from its node.
                              When there are multiple elements, the lists of nodes corresponding to each
                              podAffinityTerm are intersected, i.e. all terms must be satisfied.
                            items:
                              description: |-
                                Defines a set of pods (namely those matching the labelSelector
                                relative to the given namespace(s)) that this pod should be
                                co-located (affinity) or not co-located (anti-affinity) with,
                                where co-located is defined as running on a node whose value of
                                the label with key <topologyKey> matches that of any node on which
                                a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: |-
                                    A label query over a set of resources, in this case pods.
                                    If it's null, this PodAffinityTerm matches with no Pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                matchLabelKeys:
                                  description: |-
                                    MatchLabelKeys is a set of pod label keys to select which pods will
                                    be taken into consideration. The keys are used to lookup values from the
                                    incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                    to select the group of existing pods which pods will be taken into consideration
                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                    pod labels will be ignored. The default value is empty.
                                    The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                    Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                    This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                mismatchLabelKeys:
                                  description: |-
                                    MismatchLabelKeys is a set of pod label keys to select which pods will
                                    be taken into consideration. The keys are used to lookup values from the
                                    incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                    to select the group of existing pods which pods will be taken into consideration
                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                    pod labels will be ignored. The default value is empty.
                                    The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                    Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                    This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                namespaceSelector:
                                  description: |-
                                    A label query over the set of namespaces that the term applies to.
                                    The term is applied to the union of the namespaces selected by this field
                                    and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list means "this pod's namespace".
                                    An empty selector ({}) matches all namespaces.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: atomic
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaces:
                                  description: |-
                                    namespaces specifies a static list of namespace names that the term applies to.
                                    The term is applied to the union of the namespaces listed in this field
                                    and the ones selected by namespaceSelector.
                                    null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                topologyKey:
                                  description: |-
                                    This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                    the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                    whose value of the label with key topologyKey matches that of any node on which any of the
                                    selected pods is running.
                                    Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                        type: object
                    type: object
                  antiAffinity:
                    description: '[DEPRECATED] AntiAffinity policy for the pods. Default:
                      Soft'
                    enum:
                    - Soft
                    - Hard
                    type: string
                  livenessProbe:
                    description: |-
                      LivenessProbe is a periodic probe of container liveness.
                      Container will be restarted if the probe fails.
                      Cannot be updated.
                    properties:
                      failureThreshold:
                        description: |-
                          FailureThreshold is the minimum consecutive failures for the probe to be
                          considered failed after having succeeded.
                          Defaults to 3. Minimum value is 1.
                        format: int32
                        type: integer
                      initialDelaySeconds:
                        description: |-
                          InitialDelaySeconds is the number of seconds after the container has
                          started before liveness probes are initiated.
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe.
                        format: int32
                        type: integer
                      successThreshold:
                        description: |-
                          SuccessThreshold is the minimum consecutive successes for the probe to be
                          considered successful after having failed.
                          Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                        format: int32
                        type: integer
                      timeoutSeconds:
                        description: How long (in seconds) to wait the probe.
                        format: int32
                        type: integer
                    type: object
                  podManagementPolicy:
                    description: 'PodManagementPolicy of the underlying statefulset.
                      Default: Parallel'
                    enum:
                    - OrderedReady
                    - Parallel
                    type: string
                  readinessProbe:
                    description: |-
                      ReadinessProbe is a periodic probe of container service readiness.
                      Container will be removed from service endpoints if the probe fails.
                      Cannot be updated.
                    properties:
                      failureThreshold:
                        description: |-
                          FailureThreshold is the minimum consecutive failures for the probe to be
                          considered failed after having succeeded.
                          Defaults to 3. Minimum value is 1.
                        format: int32
                        type: integer
                      initialDelaySeconds:
                        description: |-
                          InitialDelaySeconds is the number of seconds after the container has
                          started before liveness probes are initiated.
                        format: int32
                        type: integer
                      periodSeconds:
                        description: How often (in seconds) to perform the probe.
                        format: int32
                        type: integer
                      successThreshold:
                        description: |-
                          SuccessThreshold is the minimum consecutive successes for the probe to be
                          considered successful after having failed.
                          Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                        format: int32
                        type: integer
                      timeoutSeconds:
                        description: How long (in seconds) to wait the probe.
                        format: int32
                        type: integer
                    type: object
                  terminationGracePeriodSeconds:
                    description: |-
                      TerminationGracePeriodSeconds is the time allotted for a graceful termination
                      of the Pod's containers before a SIGKILL is sent.
                    format: int64
                    type: integer
                  volumeMounts:
                    description: VolumeMounts defines how the arbitrary volumes shall
                      be mounted into the nifi container in the NiFi pod
                    items:
                      description: VolumeMount describes a mounting of a Volume within
                        a container.
                      properties:
                        mountPath:
                          description: |-
                            Path within the container at which the volume should be mounted.  Must
                            not contain ':'.
                          type: string
                        mountPropagation:
                          description: |-
                            mountPropagation determines how mounts are propagated from the host
                            to container and the other way around.
                            When not set, MountPropagationNone is used.
                            This field is beta in 1.10.
                            When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                            (which defaults to None).
                          type: string
                        name:
                          description: This must match the Name of a Volume.
                          type: string
                        readOnly:
                          description: |-
                            Mounted read-only if true, read-write otherwise (false or unspecified).
                            Defaults to false.
                          type: boolean
                        recursiveReadOnly:
                          description: |-
                            RecursiveReadOnly specifies whether read-only mounts should be handled
                            recursively.


                            If ReadOnly is false, this field has no meaning and must be unspecified.


                            If ReadOnly is true, and this field is set to Disabled, the mount is not made
                            recursively read-only.  If this field is set to IfPossible, the mount is made
                            recursively read-only, if it is supported by the container runtime.  If this
                            field is set to Enabled, the mount is made recursively read-only if it is
                            supported by the container runtime, otherwise the pod will not be started and
                            an error will be generated to indicate the reason.


                            If this field is set to IfPossible or Enabled, MountPropagation must be set to
                            None (or be unspecified, which defaults to None).


                            If this field is not specified, it is treated as an equivalent of Disabled.
                          type: string
                        subPath:
                          description: |-
                            Path within the volume from which the container's volume should be mounted.
                            Defaults to "" (volume's root).
                          type: string
                        subPathExpr:
                          description: |-
                            Expanded path within the volume from which the container's volume should be mounted.
                            Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                            Defaults to "" (volume's root).
                            SubPathExpr and SubPath are mutually exclusive.
                          type: string
                      required:
                      - mountPath
                      - name
                      type: object
                    type: array
                  volumes:
                    description: Volumes defines arbitrary volumes for all the replicas
                      of the NiFi statefulset
                    items:
                      description: Volume represents a named volume in a pod that
                        may be accessed by any container in the pod.
                      properties:
                        awsElasticBlockStore:
                          description: |-
                            awsElasticBlockStore represents an AWS Disk resource that is attached to a
                            kubelet's host machine and then exposed to the pod.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                          properties:
                            fsType:
                              description: |-
                                fsType is the filesystem type of the volume that you want to mount.
                                Tip: Ensure that the filesystem type is supported by the host operating system.
                                Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                TODO: how do we prevent errors in the filesystem from compromising the machine
                              type: string
                            partition:
                              description: |-
                                partition is the partition in the volume that you want to mount.
                                If omitted, the default is to mount by volume name.
                                Examples: For volume /dev/sda1, you specify the partition as "1".
                                Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                              format: int32
                              type: integer
                            readOnly:
                              description: |-
                                readOnly value true will force the readOnly setting in VolumeMounts.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                              type: boolean
                            volumeID:
                              description: |-
                                volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                              type: string
                          required:
                          - volumeID
                          type: object
                        azureDisk:
                          description: azureDisk represents an Azure Data Disk mount
                            on the host and bind mount to the pod.
                          properties:
                            cachingMode:
                              description: 'cachingMode is the Host Caching mode:
                                None, Read Only, Read Write.'
                              type: string
                            diskName:
                              description: diskName is the Name of the data disk in
                                the blob storage
                              type: string
                            diskURI:
                              description: diskURI is the URI of data disk in the
                                blob storage
                              type: string
                            fsType:
                              description: |-
                                fsType is Filesystem type to mount.
                                Must be a filesystem type supported by the host operating system.
                                Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            kind:
                              description: 'kind expected values are Shared: multiple
                                blob disks per storage account  Dedicated: single
                                blob disk per storage account  Managed: azure managed
                                data disk (only in managed availability set). defaults
                                to shared'
                              type: string
                            readOnly:
                              description: |-
                                readOnly Defaults to false (read/write). ReadOnly here will force
                                the ReadOnly setting in VolumeMounts.
                              type: boolean
                          required:
                          - diskName
                          - diskURI
                          type: object
                        azureFile:
                          description: azureFile represents an Azure File Service
                            mount on the host and bind mount to the pod.
                          properties:
                            readOnly:
                              description: |-
                                readOnly defaults to false (read/write). ReadOnly here will force
                                the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretName:
                              description: secretName is the  name of secret that
                                contains Azure Storage Account Name and Key
                              type: string
                            shareName:
                              description: shareName is the azure share Name
                              type: string
                          required:
                          - secretName
                          - shareName
                          type: object
                        cephfs:
                          description: cephFS represents a Ceph FS mount on the host
                            that shares a pod's lifetime
                          properties:
                            monitors:
                              description: |-
                                monitors is Required: Monitors is a collection of Ceph monitors
                                More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            path:
                              description: 'path is Optional: Used as the mounted
                                root, rather than the full Ceph tree, default is /'
                              type: string
                            readOnly:
                              description: |-
                                readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
                                the ReadOnly setting in VolumeMounts.
                                More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                              type: boolean
                            secretFile:
                              description: |-
                                secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
                                More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                              type: string
                            secretRef:
                              description: |-
                                secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.
                                More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                              properties:
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    TODO: Add other useful fields. apiVersion, kind, uid?
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            user:
                              description: |-
                                user is optional: User is the rados user name, default is admin
                                More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                              type: string
                          required:
                          - monitors
                          type: object
                        cinder:
                          description: |-
                            cinder represents a cinder volume attached and mounted on kubelets host machine.
                            More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                          properties:
                            fsType:
                              description: |-
                                fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating system.
                                Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                              type: string
                            readOnly:
                              description: |-
                                readOnly defaults to false (read/write). ReadOnly here will force
                                the ReadOnly setting in VolumeMounts.
                                More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                              type: boolean
                            secretRef:
                              description: |-
                                secretRef is optional: points to a secret object containing parameters used to connect
                                to OpenStack.
                              properties:
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    TODO: Add other useful fields. apiVersion, kind, uid?
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            volumeID:
                              description: |-
                                volumeID used to identify the volume in cinder.
                                More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                              type: string
                          required:
                          - volumeID
                          type: object
                        configMap:
                          description: configMap represents a configMap that should
                            populate this volume
                          properties:
                            defaultMode:
                              description: |-
                                defaultMode is optional: mode bits used to set permissions on created files by default.
                                Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                Defaults to 0644.
                                Directories within the path are not affected by this setting.
                                This might be in conflict with other options that affect the file
                                mode, like fsGroup, and the result can be other mode bits set.
                              format: int32
                              type: integer
                            items:
                              description: |-
                                items if unspecified, each key-value pair in the Data field of the referenced
                                ConfigMap will be projected into the volume as a file whose name is the
                                key and content is the value. If specified, the listed keys will be
                                projected into the specified paths, and unlisted keys will not be
                                present. If a key is specified which is not present in the ConfigMap,
                                the volume setup will error unless it is marked optional. Paths must be
                                relative and may not contain the '..' path or start with '..'.
                              items:
                                description: Maps a string key to a path within a
                                  volume.
                                properties:
                                  key:
                                    description: key is the key to project.
                                    type: string
                                  mode:
                                    description: |-
                                      mode is Optional: mode bits used to set permissions on this file.
                                      Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                      YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                      If not specified, the volume defaultMode will be used.
                                      This might be in conflict with other options that affect the file
                                      mode, like fsGroup, and the result can be other mode bits set.
                                    format: int32
                                    type: integer
                                  path:
                                    description: |-
                                      path is the relative path of the file to map the key to.
                                      May not be an absolute path.
                                      May not contain the path element '..'.
                                      May not start with the string '..'.
                                    type: string
                                required:
                                - key
                                - path
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                TODO: Add other useful fields. apiVersion, kind, uid?
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                              type: string
                            optional:
                              description: optional specify whether the ConfigMap
                                or its keys must be defined
                              type: boolean
                          type: object
                          x-kubernetes-map-type: atomic
                        csi:
                          description: csi (Container Storage Interface) represents
                            ephemeral storage that is handled by certain external
                            CSI drivers (Beta feature).
                          properties:
                            driver:
                              description: |-
                                driver is the name of the CSI driver that handles this volume.
                                Consult with your admin for the correct name as registered in the cluster.
                              type: string
                            fsType:
                              description: |-
                                fsType to mount. Ex. "ext4", "xfs", "ntfs".
                                If not provided, the empty value is passed to the associated CSI driver
                                which will determine the default filesystem to apply.
                              type: string
                            nodePublishSecretRef:
                              description: |-
                                nodePublishSecretRef is a reference to the secret object containing
                                sensitive information to pass to the CSI driver to complete the CSI
                                NodePublishVolume and NodeUnpublishVolume calls.
                                This field is optional, and  may be empty if no secret is required. If the
                                secret object contains more than one secret, all secret references are passed.
                              properties:
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    TODO: Add other useful fields. apiVersion, kind, uid?
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            readOnly:
                              description: |-
                                readOnly specifies a read-only configuration for the volume.
                                Defaults to false (read/write).
                              type: boolean
                            volumeAttributes:
                              additionalProperties:
                                type: string
                              description: |-
                                volumeAttributes stores driver-specific properties that are passed to the CSI
                                driver. Consult your driver's documentation for supported values.
                              type: object
                          required:
                          - driver
                          type: object
                        downwardAPI:
                          description: downwardAPI represents downward API about the
                            pod that should populate this volume
                          properties:
                            defaultMode:
                              description: |-
                                Optional: mode bits to use on created files by default. Must be a
                                Optional: mode bits used to set permissions on created files by default.
                                Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                Defaults to 0644.
                                Directories within the path are not affected by this setting.
                                This might be in conflict with other options that affect the file
                                mode, like fsGroup, and the result can be other mode bits set.
                              format: int32
                              type: integer
                            items:
                              description: Items is a list of downward API volume
                                file
                              items:
                                description: DownwardAPIVolumeFile represents information
                                  to create the file containing the pod field
                                properties:
                                  fieldRef:
                                    description: 'Required: Selects a field of the
                                      pod: only annotations, labels, name, namespace
                                      and uid are supported.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  mode:
                                    description: |-
                                      Optional: mode bits used to set permissions on this file, must be an octal value
                                      between 0000 and 0777 or a decimal value between 0 and 511.
                                      YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                      If not specified, the volume defaultMode will be used.
                                      This might be in conflict with other options that affect the file
                                      mode, like fsGroup, and the result can be other mode bits set.
                                    format: int32
                                    type: integer
                                  path:
                                    description: 'Required: Path is  the relative
                                      path name of the file to be created. Must not
                                      be absolute or contain the ''..'' path. Must
                                      be utf-8 encoded. The first item of the relative
                                      path must not start with ''..'''
                                    type: string
                                  resourceFieldRef:
                                    description: |-
                                      Selects a resource of the container: only resources limits and requests
                                      (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                    x-kubernetes-map-type: atomic
                                required:
                                - path
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                          type: object
                        emptyDir:
                          description: |-
                            emptyDir represents a temporary directory that shares a pod's lifetime.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                          properties:
                            medium:
                              description: |-
                                medium represents what type of storage medium should back this directory.
                                The default is "" which means to use the node's default medium.
                                Must be an empty string (default) or Memory.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                              type: string
                            sizeLimit:
                              anyOf:
                              - type: integer
                              - type: string
                              description: |-
                                sizeLimit is the total amount of local storage required for this EmptyDir volume.
                                The size limit is also applicable for memory medium.
                                The maximum usage on memory medium EmptyDir would be the minimum value between
                                the SizeLimit specified here and the sum of memory limits of all containers in a pod.
                                The default is nil which means that the limit is undefined.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          type: object
                        ephemeral:
                          description: |-
                            ephemeral represents a volume that is handled by a cluster storage driver.
                            The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
                            and deleted when the pod is removed.


                            Use this if:
                            a) the volume is only needed while the pod runs,
                            b) features of normal volumes like restoring from snapshot or capacity
                               tracking are needed,
                            c) the storage driver is specified through a storage class, and
                            d) the storage driver supports dynamic volume provisioning through
                               a PersistentVolumeClaim (see EphemeralVolumeSource for more
                               information on the connection between this volume type
                               and PersistentVolumeClaim).


                            Use PersistentVolumeClaim or one of the vendor-specific
                            APIs for volumes that persist for longer than the lifecycle
                            of an individual pod.


                            Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to
                            be used that way - see the documentation of the driver for
                            more information.


                            A pod can use both types of ephemeral volumes and
                            persistent volumes at the same time.
                          properties:
                            volumeClaimTemplate:
                              description: |-
                                Will be used to create a stand-alone PVC to provision the volume.
                                The pod in which this EphemeralVolumeSource is embedded will be the
                                owner of the PVC, i.e. the PVC will be deleted together with the
                                pod.  The name of the PVC will be `<pod name>-<volume name>` where
                                `<volume name>` is the name from the `PodSpec.Volumes` array
                                entry. Pod validation will reject the pod if the concatenated name
                                is not valid for a PVC (for example, too long).


                                An existing PVC with that name that is not owned by the pod
                                will *not* be used for the pod to avoid using an unrelated
                                volume by mistake. Starting the pod is then blocked until
                                the unrelated PVC is removed. If such a pre-created PVC is
                                meant to be used by the pod, the PVC has to updated with an
                                owner reference to the pod once the pod exists. Normally
                                this should not be necessary, but it may be useful when
                                manually reconstructing a broken cluster.


                                This field is read-only and no changes will be made by Kubernetes
                                to the PVC after it has been created.


                                Required, must not be nil.
                              properties:
                                metadata:
                                  description: |-
                                    May contain labels and annotations that will be copied into the PVC
                                    when creating it. No other fields are allowed and will be rejected during
                                    validation.
                                  type: object
                                spec:
                                  description: |-
                                    The specification for the PersistentVolumeClaim. The entire content is
                                    copied unchanged into the PVC that gets created from this
                                    template. The same fields as in a PersistentVolumeClaim
                                    are also valid here.
                                  properties:
                                    accessModes:
                                      description: |-
                                        accessModes contains the desired access modes the volume should have.
                                        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    dataSource:
                                      description: |-
                                        dataSource field can be used to specify either:
                                        * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                        * An existing PVC (PersistentVolumeClaim)
                                        If the provisioner or an external controller can support the specified data source,
                                        it will create a new volume based on the contents of the specified data source.
                                        When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
                                        and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
                                        If the namespace is specified, then dataSourceRef will not be copied to dataSource.
                                      properties:
                                        apiGroup:
                                          description: |-
                                            APIGroup is the group for the resource being referenced.
                                            If APIGroup is not specified, the specified Kind must be in the core API group.
                                            For any other third-party types, APIGroup is required.
                                          type: string
                                        kind:
                                          description: Kind is the type of resource
                                            being referenced
                                          type: string
                                        name:
                                          description: Name is the name of resource
                                            being referenced
                                          type: string
                                      required:
                                      - kind
                                      - name
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    dataSourceRef:
                                      description: |-
                                        dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
                                        volume is desired. This may be any object from a non-empty API group (non
                                        core object) or a PersistentVolumeClaim object.
                                        When this field is specified, volume binding will only succeed if the type of
                                        the specified object matches some installed volume populator or dynamic
                                        provisioner.
                                        This field will replace the functionality of the dataSource field and as such
                                        if both fields are non-empty, they must have the same value. For backwards
                                        compatibility, when namespace isn't specified in dataSourceRef,
                                        both fields (dataSource and dataSourceRef) will be set to the same
                                        value automatically if one of them is empty and the other is non-empty.
                                        When namespace is specified in dataSourceRef,
                                        dataSource isn't set to the same value and must be empty.
                                        There are three important differences between dataSource and dataSourceRef:
                                        * While dataSource only allows two specific types of objects, dataSourceRef
                                          allows any non-core object, as well as PersistentVolumeClaim objects.
                                        * While dataSource ignores disallowed values (dropping them), dataSourceRef
                                          preserves all values, and generates an error if a disallowed value is
                                          specified.
                                        * While dataSource only allows local objects, dataSourceRef allows objects
                                          in any namespaces.
                                        (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                                        (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                      properties:
                                        apiGroup:
                                          description: |-
                                            APIGroup is the group for the resource being referenced.
                                            If APIGroup is not specified, the specified Kind must be in the core API group.
                                            For any other third-party types, APIGroup is required.
                                          type: string
                                        kind:
                                          description: Kind is the type of resource
                                            being referenced
                                          type: string
                                        name:
                                          description: Name is the name of resource
                                            being referenced
                                          type: string
                                        namespace:
                                          description: |-
                                            Namespace is the namespace of resource being referenced
                                            Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                                            (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                          type: string
                                      required:
                                      - kind
                                      - name
                                      type: object
                                    resources:
                                      description: |-
                                        resources represents the minimum resources the volume should have.
                                        If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
                                        that are lower than previous value but must still be higher than capacity recorded in the
                                        status field of the claim.
                                        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                                      properties:
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Limits describes the maximum amount of compute resources allowed.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Requests describes the minimum amount of compute resources required.
                                            If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                            otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                          type: object
                                      type: object
                                    selector:
                                      description: selector is a label query over
                                        volumes to consider for binding.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: |-
                                              A label selector requirement is a selector that contains values, a key, and an operator that
                                              relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: |-
                                                  operator represents a key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: |-
                                                  values is an array of string values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This array is replaced during a strategic
                                                  merge patch.
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    storageClassName:
                                      description: |-
                                        storageClassName is the name of the StorageClass required by the claim.
                                        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                                      type: string
                                    volumeAttributesClassName:
                                      description: |-
                                        volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
                                        If specified, the CSI driver will create or update the volume with the attributes defined
                                        in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
                                        it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
                                        will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
                                        If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
                                        will be set by the persistentvolume controller if it exists.
                                        If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
                                        set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
                                        exists.
                                        More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
                                        (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled.
                                      type: string
                                    volumeMode:
                                      description: |-
                                        volumeMode defines what type of volume is required by the claim.
                                        Value of Filesystem is implied when not included in claim spec.
                                      type: string
                                    volumeName:
                                      description: volumeName is the binding reference
                                        to the PersistentVolume backing this claim.
                                      type: string
                                  type: object
                              required:
                              - spec
                              type: object
                          type: object
                        fc:
                          description: fc represents a Fibre Channel resource that
                            is attached to a kubelet's host machine and then exposed
                            to the pod.
                          properties:
                            fsType:
                              description: |-
                                fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating system.
                                Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                TODO: how do we prevent errors in the filesystem from compromising the machine
                              type: string
                            lun:
                              description: 'lun is Optional: FC target lun number'
                              format: int32
                              type: integer
                            readOnly:
                              description: |-
                                readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
                                the ReadOnly setting in VolumeMounts.
                              type: boolean
                            targetWWNs:
                              description: 'targetWWNs is Optional: FC target worldwide
                                names (WWNs)'
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            wwids:
                              description: |-
                                wwids Optional: FC volume world wide identifiers (wwids)
                                Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          type: object
                        flexVolume:
                          description: |-
                            flexVolume represents a generic volume resource that is
                            provisioned/attached using an exec based plugin.
                          properties:
                            driver:
                              description: driver is the name of the driver to use
                                for this volume.
                              type: string
                            fsType:
                              description: |-
                                fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating system.
                                Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
                              type: string
                            options:
                              additionalProperties:
                                type: string
                              description: 'options is Optional: this field holds
                                extra command options if any.'
                              type: object
                            readOnly:
                              description: |-
                                readOnly is Optional: defaults to false (read/write). ReadOnly here will force
                                the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretRef:
                              description: |-
                                secretRef is Optional: secretRef is reference to the secret object containing
                                sensitive information to pass to the plugin scripts. This may be
                                empty if no secret object is specified. If the secret object
                                contains more than one secret, all secrets are passed to the plugin
                                scripts.
                              properties:
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    TODO: Add other useful fields. apiVersion, kind, uid?
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                          required:
                          - driver
                          type: object
                        flocker:
                          description: flocker represents a Flocker volume attached
                            to a kubelet's host machine. This depends on the Flocker
                            control service being running
                          properties:
                            datasetName:
                              description: |-
                                datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker
                                should be considered as deprecated
                              type: string
                            datasetUUID:
                              description: datasetUUID is the UUID of the dataset.
                                This is unique identifier of a Flocker dataset
                              type: string
                          type: object
                        gcePersistentDisk:
                          description: |-
                            gcePersistentDisk represents a GCE Disk resource that is attached to a
                            kubelet's host machine and then exposed to the pod.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                          properties:
                            fsType:
                              description: |-
                                fsType is filesystem type of the volume that you want to mount.
                                Tip: Ensure that the filesystem type is supported by the host operating system.
                                Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                TODO: how do we prevent errors in the filesystem from compromising the machine
                              type: string
                            partition:
                              description: |-
                                partition is the partition in the volume that you want to mount.
                                If omitted, the default is to mount by volume name.
                                Examples: For volume /dev/sda1, you specify the partition as "1".
                                Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                              format: int32
                              type: integer
                            pdName:
                              description: |-
                                pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                              type: string
                            readOnly:
                              description: |-
                                readOnly here will force the ReadOnly setting in VolumeMounts.
                                Defaults to false.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                              type: boolean
                          required:
                          - pdName
                          type: object
                        gitRepo:
                          description: |-
                            gitRepo represents a git repository at a particular revision.
                            DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an
                            EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
                            into the Pod's container.
                          properties:
                            directory:
                              description: |-
                                directory is the target directory name.
                                Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
                                git repository.  Otherwise, if specified, the volume will contain the git repository in
                                the subdirectory with the given name.
                              type: string
                            repository:
                              description: repository is the URL
                              type: string
                            revision:
                              description: revision is the commit hash for the specified
                                revision.
                              type: string
                          required:
                          - repository
                          type: object
                        glusterfs:
                          description: |-
                            glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
                            More info: https://examples.k8s.io/volumes/glusterfs/README.md
                          properties:
                            endpoints:
                              description: |-
                                endpoints is the endpoint name that details Glusterfs topology.
                                More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                              type: string
                            path:
                              description: |-
                                path is the Glusterfs volume path.
                                More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                              type: string
                            readOnly:
                              description: |-
                                readOnly here will force the Glusterfs volume to be mounted with read-only permissions.
                                Defaults to false.
                                More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                              type: boolean
                          required:
                          - endpoints
                          - path
                          type: object
                        hostPath:
                          description: |-
                            hostPath represents a pre-existing file or directory on the host
                            machine that is directly exposed to the container. This is generally
                            used for system agents or other privileged things that are allowed
                            to see the host machine. Most containers will NOT need this.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                            ---
                            TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not
                            mount host directories as read/write.
                          properties:
                            path:
                              description: |-
                                path of the directory on the host.
                                If the path is a symlink, it will follow the link to the real path.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                              type: string
                            type:
                              description: |-
                                type for HostPath Volume
                                Defaults to ""
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                              type: string
                          required:
                          - path
                          type: object
                        iscsi:
                          description: |-
                            iscsi represents an ISCSI Disk resource that is attached to a
                            kubelet's host machine and then exposed to the pod.
                            More info: https://examples.k8s.io/volumes/iscsi/README.md
                          properties:
                            chapAuthDiscovery:
                              description: chapAuthDiscovery defines whether support
                                iSCSI Discovery CHAP authentication
                              type: boolean
                            chapAuthSession:
                              description: chapAuthSession defines whether support
                                iSCSI Session CHAP authentication
                              type: boolean
                            fsType:
                              description: |-
                                fsType is the filesystem type of the volume that you want to mount.
                                Tip: Ensure that the filesystem type is supported by the host operating system.
                                Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                TODO: how do we prevent errors in the filesystem from compromising the machine
                              type: string
                            initiatorName:
                              description: |-
                                initiatorName is the custom iSCSI Initiator Name.
                                If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
                                <target portal>:<volume name> will be created for the connection.
                              type: string
                            iqn:
                              description: iqn is the target iSCSI Qualified Name.
                              type: string
                            iscsiInterface:
                              description: |-
                                iscsiInterface is the interface Name that uses an iSCSI transport.
                                Defaults to 'default' (tcp).
                              type: string
                            lun:
                              description: lun represents iSCSI Target Lun number.
                              format: int32
                              type: integer
                            portals:
                              description: |-
                                portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
                                is other than default (typically TCP ports 860 and 3260).
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            readOnly:
                              description: |-
                                readOnly here will force the ReadOnly setting in VolumeMounts.
                                Defaults to false.
                              type: boolean
                            secretRef:
                              description: secretRef is the CHAP Secret for iSCSI
                                target and initiator authentication
                              properties:
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    TODO: Add other useful fields. apiVersion, kind, uid?
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            targetPortal:
                              description: |-
                                targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
                                is other than default (typically TCP ports 860 and 3260).
                              type: string
                          required:
                          - iqn
                          - lun
                          - targetPortal
                          type: object
                        name:
                          description: |-
                            name of the volume.
                            Must be a DNS_LABEL and unique within the pod.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        nfs:
                          description: |-
                            nfs represents an NFS mount on the host that shares a pod's lifetime
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                          properties:
                            path:
                              description: |-
                                path that is exported by the NFS server.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                              type: string
                            readOnly:
                              description: |-
                                readOnly here will force the NFS export to be mounted with read-only permissions.
                                Defaults to false.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                              type: boolean
                            server:
                              description: |-
                                server is the hostname or IP address of the NFS server.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                              type: string
                          required:
                          - path
                          - server
                          type: object
                        persistentVolumeClaim:
                          description: |-
                            persistentVolumeClaimVolumeSource represents a reference to a
                            PersistentVolumeClaim in the same namespace.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                          properties:
                            claimName:
                              description: |-
                                claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                              type: string
                            readOnly:
                              description: |-
                                readOnly Will force the ReadOnly setting in VolumeMounts.
                                Default false.
                              type: boolean
                          required:
                          - claimName
                          type: object
                        photonPersistentDisk:
                          description: photonPersistentDisk represents a PhotonController
                            persistent disk attached and mounted on kubelets host
                            machine
                          properties:
                            fsType:
                              description: |-
                                fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating system.
                                Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            pdID:
                              description: pdID is the ID that identifies Photon Controller
                                persistent disk
                              type: string
                          required:
                          - pdID
                          type: object
                        portworxVolume:
                          description: portworxVolume represents a portworx volume
                            attached and mounted on kubelets host machine
                          properties:
                            fsType:
                              description: |-
                                fSType represents the filesystem type to mount
                                Must be a filesystem type supported by the host operating system.
                                Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            readOnly:
                              description: |-
                                readOnly defaults to false (read/write). ReadOnly here will force
                                the ReadOnly setting in VolumeMounts.
                              type: boolean
                            volumeID:
                              description: volumeID uniquely identifies a Portworx
                                volume
                              type: string
                          required:
                          - volumeID
                          type: object
                        projected:
                          description: projected items for all in one resources secrets,
                            configmaps, and downward API
                          properties:
                            defaultMode:
                              description: |-
                                defaultMode are the mode bits used to set permissions on created files by default.
                                Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                Directories within the path are not affected by this setting.
                                This might be in conflict with other options that affect the file
                                mode, like fsGroup, and the result can be other mode bits set.
                              format: int32
                              type: integer
                            sources:
                              description: sources is the list of volume projections
                              items:
                                description: Projection that may be projected along
                                  with other supported volume types
                                properties:
                                  clusterTrustBundle:
                                    description: |-
                                      ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
                                      of ClusterTrustBundle objects in an auto-updating file.


                                      Alpha, gated by the ClusterTrustBundleProjection feature gate.


                                      ClusterTrustBundle objects can either be selected by name, or by the
                                      combination of signer name and a label selector.


                                      Kubelet performs aggressive normalization of the PEM contents written
                                      into the pod filesystem.  Esoteric PEM features such as inter-block
                                      comments and block headers are stripped.  Certificates are deduplicated.
                                      The ordering of certificates within the file is arbitrary, and Kubelet
                                      may change the order over time.
                                    properties:
                                      labelSelector:
                                        description: |-
                                          Select all ClusterTrustBundles that match this label selector.  Only has
                                          effect if signerName is set.  Mutually-exclusive with name.  If unset,
                                          interpreted as "match nothing".  If set but empty, interpreted as "match
                                          everything".
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The
                                              requirements are ANDed.
                                            items:
                                              description: |-
                                                A label selector requirement is a selector that contains values, a key, and an operator that
                                                relates the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    operator represents a key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: |-
                                                    values is an array of string values. If the operator is In or NotIn,
                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                    the values array must be empty. This array is replaced during a strategic
                                                    merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                              required:
                                              - key
                                              - operator
                                              type: object
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      name:
                                        description: |-
                                          Select a single ClusterTrustBundle by object name.  Mutually-exclusive
                                          with signerName and labelSelector.
                                        type: string
                                      optional:
                                        description: |-
                                          If true, don't block pod startup if the referenced ClusterTrustBundle(s)
                                          aren't available.  If using name, then the named ClusterTrustBundle is
                                          allowed not to exist.  If using signerName, then the combination of
                                          signerName and labelSelector is allowed to match zero
                                          ClusterTrustBundles.
                                        type: boolean
                                      path:
                                        description: Relative path from the volume
                                          root to write the bundle.
                                        type: string
                                      signerName:
                                        description: |-
                                          Select all ClusterTrustBundles that match this signer name.
                                          Mutually-exclusive with name.  The contents of all selected
                                          ClusterTrustBundles will be unified and deduplicated.
                                        type: string
                                    required:
                                    - path
                                    type: object
                                  configMap:
                                    description: configMap information about the configMap
                                      data to project
                                    properties:
                                      items:
                                        description: |-
                                          items if unspecified, each key-value pair in the Data field of the referenced
                                          ConfigMap will be projected into the volume as a file whose name is the
                                          key and content is the value. If specified, the listed keys will be
                                          projected into the specified paths, and unlisted keys will not be
                                          present. If a key is specified which is not present in the ConfigMap,
                                          the volume setup will error unless it is marked optional. Paths must be
                                          relative and may not contain the '..' path or start with '..'.
                                        items:
                                          description: Maps a string key to a path
                                            within a volume.
                                          properties:
                                            key:
                                              description: key is the key to project.
                                              type: string
                                            mode:
                                              description: |-
                                                mode is Optional: mode bits used to set permissions on this file.
                                                Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                If not specified, the volume defaultMode will be used.
                                                This might be in conflict with other options that affect the file
                                                mode, like fsGroup, and the result can be other mode bits set.
                                              format: int32
                                              type: integer
                                            path:
                                              description: |-
                                                path is the relative path of the file to map the key to.
                                                May not be an absolute path.
                                                May not contain the path element '..'.
                                                May not start with the string '..'.
                                              type: string
                                          required:
                                          - key
                                          - path
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          TODO: Add other useful fields. apiVersion, kind, uid?
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                                        type: string
                                      optional:
                                        description: optional specify whether the
                                          ConfigMap or its keys must be defined
                                        type: boolean
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  downwardAPI:
                                    description: downwardAPI information about the
                                      downwardAPI data to project
                                    properties:
                                      items:
                                        description: Items is a list of DownwardAPIVolume
                                          file
                                        items:
                                          description: DownwardAPIVolumeFile represents
                                            information to create the file containing
                                            the pod field
                                          properties:
                                            fieldRef:
                                              description: 'Required: Selects a field
                                                of the pod: only annotations, labels,
                                                name, namespace and uid are supported.'
                                              properties:
                                                apiVersion:
                                                  description: Version of the schema
                                                    the FieldPath is written in terms
                                                    of, defaults to "v1".
                                                  type: string
                                                fieldPath:
                                                  description: Path of the field to
                                                    select in the specified API version.
                                                  type: string
                                              required:
                                              - fieldPath
                                              type: object
                                              x-kubernetes-map-type: atomic
                                            mode:
                                              description: |-
                                                Optional: mode bits used to set permissions on this file, must be an octal value
                                                between 0000 and 0777 or a decimal value between 0 and 511.
                                                YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                If not specified, the volume defaultMode will be used.
                                                This might be in conflict with other options that affect the file
                                                mode, like fsGroup, and the result can be other mode bits set.
                                              format: int32
                                              type: integer
                                            path:
                                              description: 'Required: Path is  the
                                                relative path name of the file to
                                                be created. Must not be absolute or
                                                contain the ''..'' path. Must be utf-8
                                                encoded. The first item of the relative
                                                path must not start with ''..'''
                                              type: string
                                            resourceFieldRef:
                                              description: |-
                                                Selects a resource of the container: only resources limits and requests
                                                (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                              properties:
                                                containerName:
                                                  description: 'Container name: required
                                                    for volumes, optional for env
                                                    vars'
                                                  type: string
                                                divisor:
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  description: Specifies the output
                                                    format of the exposed resources,
                                                    defaults to "1"
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                resource:
                                                  description: 'Required: resource
                                                    to select'
                                                  type: string
                                              required:
                                              - resource
                                              type: object
                                              x-kubernetes-map-type: atomic
                                          required:
                                          - path
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    type: object
                                  secret:
                                    description: secret information about the secret
                                      data to project
                                    properties:
                                      items:
                                        description: |-
                                          items if unspecified, each key-value pair in the Data field of the referenced
                                          Secret will be projected into the volume as a file whose name is the
                                          key and content is the value. If specified, the listed keys will be
                                          projected into the specified paths, and unlisted keys will not be
                                          present. If a key is specified which is not present in the Secret,
                                          the volume setup will error unless it is marked optional. Paths must be
                                          relative and may not contain the '..' path or start with '..'.
                                        items:
                                          description: Maps a string key to a path
                                            within a volume.
                                          properties:
                                            key:
                                              description: key is the key to project.
                                              type: string
                                            mode:
                                              description: |-
                                                mode is Optional: mode bits used to set permissions on this file.
                                                Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                                YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                If not specified, the volume defaultMode will be used.
                                                This might be in conflict with other options that affect the file
                                                mode, like fsGroup, and the result can be other mode bits set.
                                              format: int32
                                              type: integer
                                            path:
                                              description: |-
                                                path is the relative path of the file to map the key to.
                                                May not be an absolute path.
                                                May not contain the path element '..'.
                                                May not start with the string '..'.
                                              type: string
                                          required:
                                          - key
                                          - path
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          TODO: Add other useful fields. apiVersion, kind, uid?
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                                        type: string
                                      optional:
                                        description: optional field specify whether
                                          the Secret or its key must be defined
                                        type: boolean
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  serviceAccountToken:
                                    description: serviceAccountToken is information
                                      about the serviceAccountToken data to project
                                    properties:
                                      audience:
                                        description: |-
                                          audience is the intended audience of the token. A recipient of a token
                                          must identify itself with an identifier specified in the audience of the
                                          token, and otherwise should reject the token. The audience defaults to the
                                          identifier of the apiserver.
                                        type: string
                                      expirationSeconds:
                                        description: |-
                                          expirationSeconds is the requested duration of validity of the service
                                          account token. As the token approaches expiration, the kubelet volume
                                          plugin will proactively rotate the service account token. The kubelet will
                                          start trying to rotate the token if the token is older than 80 percent of
                                          its time to live or if the token is older than 24 hours.Defaults to 1 hour
                                          and must be at least 10 minutes.
                                        format: int64
                                        type: integer
                                      path:
                                        description: |-
                                          path is the path relative to the mount point of the file to project the
                                          token into.
                                        type: string
                                    required:
                                    - path
                                    type: object
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                          type: object
                        quobyte:
                          description: quobyte represents a Quobyte mount on the host
                            that shares a pod's lifetime
                          properties:
                            group:
                              description: |-
                                group to map volume access to
                                Default is no group
                              type: string
                            readOnly:
                              description: |-
                                readOnly here will force the Quobyte volume to be mounted with read-only permissions.
                                Defaults to false.
                              type: boolean
                            registry:
                              description: |-
                                registry represents a single or multiple Quobyte Registry services
                                specified as a string as host:port pair (multiple entries are separated with commas)
                                which acts as the central registry for volumes
                              type: string
                            tenant:
                              description: |-
                                tenant owning the given Quobyte volume in the Backend
                                Used with dynamically provisioned Quobyte volumes, value is set by the plugin
                              type: string
                            user:
                              description: |-
                                user to map volume access to
                                Defaults to serivceaccount user
                              type: string
                            volume:
                              description: volume is a string that references an already
                                created Quobyte volume by name.
                              type: string
                          required:
                          - registry
                          - volume
                          type: object
                        rbd:
                          description: |-
                            rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.
                            More info: https://examples.k8s.io/volumes/rbd/README.md
                          properties:
                            fsType:
                              description: |-
                                fsType is the filesystem type of the volume that you want to mount.
                                Tip: Ensure that the filesystem type is supported by the host operating system.
                                Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                TODO: how do we prevent errors in the filesystem from compromising the machine
                              type: string
                            image:
                              description: |-
                                image is the rados image name.
                                More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              type: string
                            keyring:
                              description: |-
                                keyring is the path to key ring for RBDUser.
                                Default is /etc/ceph/keyring.
                                More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              type: string
                            monitors:
                              description: |-
                                monitors is a collection of Ceph monitors.
                                More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            pool:
                              description: |-
                                pool is the rados pool name.
                                Default is rbd.
                                More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              type: string
                            readOnly:
                              description: |-
                                readOnly here will force the ReadOnly setting in VolumeMounts.
                                Defaults to false.
                                More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              type: boolean
                            secretRef:
                              description: |-
                                secretRef is name of the authentication secret for RBDUser. If provided
                                overrides keyring.
                                Default is nil.
                                More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              properties:
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    TODO: Add other useful fields. apiVersion, kind, uid?
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            user:
                              description: |-
                                user is the rados user name.
                                Default is admin.
                                More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                              type: string
                          required:
                          - image
                          - monitors
                          type: object
                        scaleIO:
                          description: scaleIO represents a ScaleIO persistent volume
                            attached and mounted on Kubernetes nodes.
                          properties:
                            fsType:
                              description: |-
                                fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating system.
                                Ex. "ext4", "xfs", "ntfs".
                                Default is "xfs".
                              type: string
                            gateway:
                              description: gateway is the host address of the ScaleIO
                                API Gateway.
                              type: string
                            protectionDomain:
                              description: protectionDomain is the name of the ScaleIO
                                Protection Domain for the configured storage.
                              type: string
                            readOnly:
                              description: |-
                                readOnly Defaults to false (read/write). ReadOnly here will force
                                the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretRef:
                              description: |-
                                secretRef references to the secret for ScaleIO user and other
                                sensitive information. If this is not provided, Login operation will fail.
                              properties:
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    TODO: Add other useful fields. apiVersion, kind, uid?
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            sslEnabled:
                              description: sslEnabled Flag enable/disable SSL communication
                                with Gateway, default false
                              type: boolean
                            storageMode:
                              description: |-
                                storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
                                Default is ThinProvisioned.
                              type: string
                            storagePool:
                              description: storagePool is the ScaleIO Storage Pool
                                associated with the protection domain.
                              type: string
                            system:
                              description: system is the name of the storage system
                                as configured in ScaleIO.
                              type: string
                            volumeName:
                              description: |-
                                volumeName is the name of a volume already created in the ScaleIO system
                                that is associated with this volume source.
                              type: string
                          required:
                          - gateway
                          - secretRef
                          - system
                          type: object
                        secret:
                          description: |-
                            secret represents a secret that should populate this volume.
                            More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                          properties:
                            defaultMode:
                              description: |-
                                defaultMode is Optional: mode bits used to set permissions on created files by default.
                                Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                YAML accepts both octal and decimal values, JSON requires decimal values
                                for mode bits. Defaults to 0644.
                                Directories within the path are not affected by this setting.
                                This might be in conflict with other options that affect the file
                                mode, like fsGroup, and the result can be other mode bits set.
                              format: int32
                              type: integer
                            items:
                              description: |-
                                items If unspecified, each key-value pair in the Data field of the referenced
                                Secret will be projected into the volume as a file whose name is the
                                key and content is the value. If specified, the listed keys will be
                                projected into the specified paths, and unlisted keys will not be
                                present. If a key is specified which is not present in the Secret,
                                the volume setup will error unless it is marked optional. Paths must be
                                relative and may not contain the '..' path or start with '..'.
                              items:
                                description: Maps a string key to a path within a
                                  volume.
                                properties:
                                  key:
                                    description: key is the key to project.
                                    type: string
                                  mode:
                                    description: |-
                                      mode is Optional: mode bits used to set permissions on this file.
                                      Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                      YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                      If not specified, the volume defaultMode will be used.
                                      This might be in conflict with other options that affect the file
                                      mode, like fsGroup, and the result can be other mode bits set.
                                    format: int32
                                    type: integer
                                  path:
                                    description: |-
                                      path is the relative path of the file to map the key to.
                                      May not be an absolute path.
                                      May not contain the path element '..'.
                                      May not start with the string '..'.
                                    type: string
                                required:
                                - key
                                - path
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            optional:
                              description: optional field specify whether the Secret
                                or its keys must be defined
                              type: boolean
                            secretName:
                              description: |-
                                secretName is the name of the secret in the pod's namespace to use.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                              type: string
                          type: object
                        storageos:
                          description: storageOS represents a StorageOS volume attached
                            and mounted on Kubernetes nodes.
                          properties:
                            fsType:
                              description: |-
                                fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating system.
                                Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            readOnly:
                              description: |-
                                readOnly defaults to false (read/write). ReadOnly here will force
                                the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretRef:
                              description: |-
                                secretRef specifies the secret to use for obtaining the StorageOS API
                                credentials.  If not specified, default values will be attempted.
                              properties:
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    TODO: Add other useful fields. apiVersion, kind, uid?
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            volumeName:
                              description: |-
                                volumeName is the human-readable name of the StorageOS volume.  Volume
                                names are only unique within a namespace.
                              type: string
                            volumeNamespace:
                              description: |-
                                volumeNamespace specifies the scope of the volume within StorageOS.  If no
                                namespace is specified then the Pod's namespace will be used.  This allows the
                                Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
                                Set VolumeName to any name to override the default behaviour.
                                Set to "default" if you are not using namespaces within StorageOS.
                                Namespaces that do not pre-exist within StorageOS will be created.
                              type: string
                          type: object
                        vsphereVolume:
                          description: vsphereVolume represents a vSphere volume attached
                            and mounted on kubelets host machine
                          properties:
                            fsType:
                              description: |-
                                fsType is filesystem type to mount.
                                Must be a filesystem type supported by the host operating system.
                                Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                              type: string
                            storagePolicyID:
                              description: storagePolicyID is the storage Policy Based
                                Management (SPBM) profile ID associated with the StoragePolicyName.
                              type: string
                            storagePolicyName:
                              description: storagePolicyName is the storage Policy
                                Based Management (SPBM) profile name.
                              type: string
                            volumePath:
                              description: volumePath is the path that identifies
                                vSphere volume vmdk
                              type: string
                          required:
                          - volumePath
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                type: object
              suspend:
                description: Suspend reconciliation of this NiFi cluster
                type: boolean
              suspendCluster:
                description: |-
                  Suspend this NiFi cluster's operation by scaling replicas to zero without
                  offloading data or deleting PVCs.
                type: boolean
              tiniImage:
                description: TiniImage for sidecars / init containers
                properties:
                  pullPolicy:
                    description: ImagePullPolicy for this image. Defaults to IfNotPresent.
                      Valid values are IfNotPresent, Always, Never.
                    enum:
                    - Always
                    - Never
                    - IfNotPresent
                    type: string
                  pullSecret:
                    description: Name of Secret which contains docker-registry credentials
                      for repository.
                    type: string
                  repository:
                    description: Image repository from which to pull.
                    type: string
                  tag:
                    description: Image tag to pull from repository.
                    type: string
                required:
                - repository
                - tag
                type: object
              tolerations:
                description: Tolerations sets the tolerations on each NiFi pod
                items:
                  description: |-
                    The pod this Toleration is attached to tolerates any taint that matches
                    the triple <key,value,effect> using the matching operator <operator>.
                  properties:
                    effect:
                      description: |-
                        Effect indicates the taint effect to match. Empty means match all taint effects.
                        When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: |-
                        Key is the taint key that the toleration applies to. Empty means match all taint keys.
                        If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                      type: string
                    operator:
                      description: |-
                        Operator represents a key's relationship to the value.
                        Valid operators are Exists and Equal. Defaults to Equal.
                        Exists is equivalent to wildcard for value, so that a pod can
                        tolerate all taints of a particular category.
                      type: string
                    tolerationSeconds:
                      description: |-
                        TolerationSeconds represents the period of time the toleration (which must be
                        of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                        it is not set, which means tolerate the taint forever (do not evict). Zero and
                        negative values will be treated as 0 (evict immediately) by the system.
                      format: int64
                      type: integer
                    value:
                      description: |-
                        Value is the taint value the toleration matches to.
                        If the operator is Exists, the value should be empty, otherwise just a regular string.
                      type: string
                  type: object
                type: array
              uiConnection:
                description: UIConnection configures the Ingress, Route, or Service
                  used for accessing NiFi's WebUI.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    type: object
                  ingressConfig:
                    properties:
                      hostname:
                        description: hostname for this connection
                        type: string
                      ingressClassName:
                        description: IngressClassName
                        type: string
                      ingressTLS:
                        items:
                          description: IngressTLS describes the transport layer security
                            associated with an ingress.
                          properties:
                            hosts:
                              description: |-
                                hosts is a list of hosts included in the TLS certificate. The values in
                                this list must match the name/s used in the tlsSecret. Defaults to the
                                wildcard host setting for the loadbalancer controller fulfilling this
                                Ingress, if left unspecified.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            secretName:
                              description: |-
                                secretName is the name of the secret used to terminate TLS traffic on
                                port 443. Field is left optional to allow TLS routing based on SNI
                                hostname alone. If the SNI host in a listener conflicts with the "Host"
                                header field used by an IngressRule, the SNI host is used for termination
                                and value of the "Host" header is used for routing.
                              type: string
                          type: object
                        type: array
                      paths:
                        description: Array of Ingress paths and associated ports.
                        items:
                          properties:
                            appProtocol:
                              description: |-
                                The application protocol for this port.
                                This is used as a hint for implementations to offer richer behavior for protocols that they understand.
                                This field follows standard Kubernetes label syntax.
                                Valid values are either:


                                * Un-prefixed protocol names - reserved for IANA standard service names (as per
                                RFC-6335 and https://www.iana.org/assignments/service-names).


                                * Kubernetes-defined prefixed names:
                                  * 'kubernetes.io/h2c' - HTTP/2 prior knowledge over cleartext as described in https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-
                                  * 'kubernetes.io/ws'  - WebSocket over cleartext as described in https://www.rfc-editor.org/rfc/rfc6455
                                  * 'kubernetes.io/wss' - WebSocket over TLS as described in https://www.rfc-editor.org/rfc/rfc6455


                                * Other protocols should use implementation-defined prefixed names such as
                                mycompany.com/my-custom-protocol.
                              type: string
                            name:
                              description: |-
                                The name of this port within the service. This must be a DNS_LABEL.
                                All ports within a ServiceSpec must have unique names. When considering
                                the endpoints for a Service, this must match the 'name' field in the
                                EndpointPort.
                                Optional if only one ServicePort is defined on this service.
                              type: string
                            nodePort:
                              description: |-
                                The port on each node on which this service is exposed when type is
                                NodePort or LoadBalancer.  Usually assigned by the system. If a value is
                                specified, in-range, and not in use it will be used, otherwise the
                                operation will fail.  If not specified, a port will be allocated if this
                                Service requires one.  If this field is specified when creating a
                                Service which does not need it, creation will fail. This field will be
                                wiped when updating a Service to no longer need it (e.g. changing type
                                from NodePort to ClusterIP).
                                More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
                              format: int32
                              type: integer
                            path:
                              type: string
                            pathType:
                              description: PathType represents the type of path referred
                                to by a HTTPIngressPath.
                              type: string
                            port:
                              description: The port that will be exposed by this service.
                              format: int32
                              type: integer
                            protocol:
                              default: TCP
                              description: |-
                                The IP protocol for this port. Supports "TCP", "UDP", and "SCTP".
                                Default is TCP.
                              type: string
                            targetPort:
                              anyOf:
                              - type: integer
                              - type: string
                              description: |-
                                Number or name of the port to access on the pods targeted by the service.
                                Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                If this is a string, it will be looked up as a named port in the
                                target Pod's container ports. If this is not specified, the value
                                of the 'port' field is used (an identity map).
                                This field is ignored for services with clusterIP=None, and should be
                                omitted or set equal to the 'port' field.
                                More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
                              x-kubernetes-int-or-string: true
                          required:
                          - path
                          - port
                          type: object
                        type: array
                    required:
                    - hostname
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    type: object
                  name:
                    type: string
                  routeConfig:
                    properties:
                      hostname:
                        description: hostname for this connection
                        type: string
                      httpHeaderActions:
                        description: |-
                          Additional HTTP headers to apply, flattened implementation of
                          https://docs.openshift.com/container-platform/4.14/rest_api/network_apis/route-route-openshift-io-v1.html#spec-httpheaders-actions
                        properties:
                          request:
                            description: Set of actions to take against request headers
                            items:
                              properties:
                                action:
                                  description: Action to take on this header
                                  enum:
                                  - Set
                                  - Delete
                                  type: string
                                name:
                                  description: Name of the header to update
                                  type: string
                                value:
                                  description: Value to set on header
                                  type: string
                              required:
                              - action
                              - name
                              type: object
                            type: array
                          response:
                            description: Set of actions to take against response headers
                            items:
                              properties:
                                action:
                                  description: Action to take on this header
                                  enum:
                                  - Set
                                  - Delete
                                  type: string
                                name:
                                  description: Name of the header to update
                                  type: string
                                value:
                                  description: Value to set on header
                                  type: string
                              required:
                              - action
                              - name
                              type: object
                            type: array
                        type: object
                      path:
                        description: URL path to suffix hostname or subdomain
                        type: string
                      port:
                        description: Service Port to target with Path
                        format: int32
                        type: integer
                      subdomain:
                        type: string
                      tls:
                        description: TLS configuration for Route
                        properties:
                          caCertificate:
                            description: caCertificate provides the cert authority
                              certificate contents
                            type: string
                          certificate:
                            description: |-
                              certificate provides certificate contents. This should be a single serving certificate, not a certificate
                              chain. Do not include a CA certificate.
                            type: string
                          destinationCACertificate:
                            description: |-
                              destinationCACertificate provides the contents of the ca certificate of the final destination.  When using reencrypt
                              termination this file should be provided in order to have routers use it for health checks on the secure connection.
                              If this field is not specified, the router may provide its own destination CA and perform hostname validation using
                              the short service name (service.namespace.svc), which allows infrastructure generated certificates to automatically
                              verify.
                            type: string
                          externalCertificate:
                            description: |-
                              externalCertificate provides certificate contents as a secret reference.
                              This should be a single serving certificate, not a certificate
                              chain. Do not include a CA certificate. The secret referenced should
                              be present in the same namespace as that of the Route.
                              Forbidden when `certificate` is set.
                            properties:
                              name:
                                description: |-
                                  name of the referent.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          insecureEdgeTerminationPolicy:
                            description: |-
                              insecureEdgeTerminationPolicy indicates the desired behavior for insecure connections to a route. While
                              each router may make its own decisions on which ports to expose, this is normally port 80.


                              If a route does not specify insecureEdgeTerminationPolicy, then the default behavior is "None".


                              * Allow - traffic is sent to the server on the insecure port (edge/reencrypt terminations only).


                              * None - no traffic is allowed on the insecure port (default).


                              * Redirect - clients are redirected to the secure port.
                            enum:
                            - Allow
                            - None
                            - Redirect
                            - ""
                            type: string
                          key:
                            description: key provides key file contents
                            type: string
                          termination:
                            description: |-
                              termination indicates termination type.


                              * edge - TLS termination is done by the router and http is used to communicate with the backend (default)
                              * passthrough - Traffic is sent straight to the destination without the router providing TLS termination
                              * reencrypt - TLS termination is done by the router and https is used to communicate with the backend


                              Note: passthrough termination is incompatible with httpHeader actions
                            enum:
                            - edge
                            - reencrypt
                            - passthrough
                            type: string
                        required:
                        - termination
                        type: object
                        x-kubernetes-validations:
                        - message: 'cannot have both spec.tls.termination: passthrough
                            and spec.tls.insecureEdgeTerminationPolicy: Allow'
                          rule: 'has(self.termination) && has(self.insecureEdgeTerminationPolicy)
                            ? !((self.termination==''passthrough'') && (self.insecureEdgeTerminationPolicy==''Allow''))
                            : true'
                    required:
                    - port
                    type: object
                  serviceConfig:
                    description: ServiceSpec describes the attributes that a user
                      creates on a service.
                    properties:
                      allocateLoadBalancerNodePorts:
                        description: |-
                          allocateLoadBalancerNodePorts defines if NodePorts will be automatically
                          allocated for services with type LoadBalancer.  Default is "true". It
                          may be set to "false" if the cluster load-balancer does not rely on
                          NodePorts.  If the caller requests specific NodePorts (by specifying a
                          value), those requests will be respected, regardless of this field.
                          This field may only be set for services with type LoadBalancer and will
                          be cleared if the type is changed to any other type.
                        type: boolean
                      clusterIP:
                        description: |-
                          clusterIP is the IP address of the service and is usually assigned
                          randomly. If an address is specified manually, is in-range (as per
                          system configuration), and is not in use, it will be allocated to the
                          service; otherwise creation of the service will fail. This field may not
                          be changed through updates unless the type field is also being changed
                          to ExternalName (which requires this field to be blank) or the type
                          field is being changed from ExternalName (in which case this field may
                          optionally be specified, as describe above).  Valid values are "None",
                          empty string (""), or a valid IP address. Setting this to "None" makes a
                          "headless service" (no virtual IP), which is useful when direct endpoint
                          connections are preferred and proxying is not required.  Only applies to
                          types ClusterIP, NodePort, and LoadBalancer. If this field is specified
                          when creating a Service of type ExternalName, creation will fail. This
                          field will be wiped when updating a Service to type ExternalName.
                          More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
                        type: string
                      clusterIPs:
                        description: |-
                          ClusterIPs is a list of IP addresses assigned to this service, and are
                          usually assigned randomly.  If an address is specified manually, is
                          in-range (as per system configuration), and is not in use, it will be
                          allocated to the service; otherwise creation of the service will fail.
                          This field may not be changed through updates unless the type field is
                          also being changed to ExternalName (which requires this field to be
                          empty) or the type field is being changed from ExternalName (in which
                          case this field may optionally be specified, as describe above).  Valid
                          values are "None", empty string (""), or a valid IP address.  Setting
                          this to "None" makes a "headless service" (no virtual IP), which is
                          useful when direct endpoint connections are preferred and proxying is
                          not required.  Only applies to types ClusterIP, NodePort, and
                          LoadBalancer. If this field is specified when creating a Service of type
                          ExternalName, creation will fail. This field will be wiped when updating
                          a Service to type ExternalName.  If this field is not specified, it will
                          be initialized from the clusterIP field.  If this field is specified,
                          clients must ensure that clusterIPs[0] and clusterIP have the same
                          value.


                          This field may hold a maximum of two entries (dual-stack IPs, in either order).
                          These IPs must correspond to the values of the ipFamilies field. Both
                          clusterIPs and ipFamilies are governed by the ipFamilyPolicy field.
                          More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                      externalIPs:
                        description: |-
                          externalIPs is a list of IP addresses for which nodes in the cluster
                          will also accept traffic for this service.  These IPs are not managed by
                          Kubernetes.  The user is responsible for ensuring that traffic arrives
                          at a node with this IP.  A common example is external load-balancers
                          that are not part of the Kubernetes system.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                      externalName:
                        description: |-
                          externalName is the external reference that discovery mechanisms will
                          return as an alias for this service (e.g. a DNS CNAME record). No
                          proxying will be involved.  Must be a lowercase RFC-1123 hostname
                          (https://tools.ietf.org/html/rfc1123) and requires `type` to be "ExternalName".
                        type: string
                      externalTrafficPolicy:
                        description: |-
                          externalTrafficPolicy describes how nodes distribute service traffic they
                          receive on one of the Service's "externally-facing" addresses (NodePorts,
                          ExternalIPs, and LoadBalancer IPs). If set to "Local", the proxy will configure
                          the service in a way that assumes that external load balancers will take care
                          of balancing the service traffic between nodes, and so each node will deliver
                          traffic only to the node-local endpoints of the service, without masquerading
                          the client source IP. (Traffic mistakenly sent to a node with no endpoints will
                          be dropped.) The default value, "Cluster", uses the standard behavior of
                          routing to all endpoints evenly (possibly modified by topology and other
                          features). Note that traffic sent to an External IP or LoadBalancer IP from
                          within the cluster will always get "Cluster" semantics, but clients sending to
                          a NodePort from within the cluster may need to take traffic policy into account
                          when picking a node.
                        type: string
                      healthCheckNodePort:
                        description: |-
                          healthCheckNodePort specifies the healthcheck nodePort for the service.
                          This only applies when type is set to LoadBalancer and
                          externalTrafficPolicy is set to Local. If a value is specified, is
                          in-range, and is not in use, it will be used.  If not specified, a value
                          will be automatically allocated.  External systems (e.g. load-balancers)
                          can use this port to determine if a given node holds endpoints for this
                          service or not.  If this field is specified when creating a Service
                          which does not need it, creation will fail. This field will be wiped
                          when updating a Service to no longer need it (e.g. changing type).
                          This field cannot be updated once set.
                        format: int32
                        type: integer
                      internalTrafficPolicy:
                        description: |-
                          InternalTrafficPolicy describes how nodes distribute service traffic they
                          receive on the ClusterIP. If set to "Local", the proxy will assume that pods
                          only want to talk to endpoints of the service on the same node as the pod,
                          dropping the traffic if there are no local endpoints. The default value,
                          "Cluster", uses the standard behavior of routing to all endpoints evenly
                          (possibly modified by topology and other features).
                        type: string
                      ipFamilies:
                        description: |-
                          IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this
                          service. This field is usually assigned automatically based on cluster
                          configuration and the ipFamilyPolicy field. If this field is specified
                          manually, the requested family is available in the cluster,
                          and ipFamilyPolicy allows it, it will be used; otherwise creation of
                          the service will fail. This field is conditionally mutable: it allows
                          for adding or removing a secondary IP family, but it does not allow
                          changing the primary IP family of the Service. Valid values are "IPv4"
                          and "IPv6".  This field only applies to Services of types ClusterIP,
                          NodePort, and LoadBalancer, and does apply to "headless" services.
                          This field will be wiped when updating a Service to type ExternalName.


                          This field may hold a maximum of two entries (dual-stack families, in
                          either order).  These families must correspond to the values of the
                          clusterIPs field, if specified. Both clusterIPs and ipFamilies are
                          governed by the ipFamilyPolicy field.
                        items:
                          description: |-
                            IPFamily represents the IP Family (IPv4 or IPv6). This type is used
                            to express the family of an IP expressed by a type (e.g. service.spec.ipFamilies).
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                      ipFamilyPolicy:
                        description: |-
                          IPFamilyPolicy represents the dual-stack-ness requested or required by
                          this Service. If there is no value provided, then this field will be set
                          to SingleStack. Services can be "SingleStack" (a single IP family),
                          "PreferDualStack" (two IP families on dual-stack configured clusters or
                          a single IP family on single-stack clusters), or "RequireDualStack"
                          (two IP families on dual-stack configured clusters, otherwise fail). The
                          ipFamilies and clusterIPs fields depend on the value of this field. This
                          field will be wiped when updating a service to type ExternalName.
                        type: string
                      loadBalancerClass:
                        description: |-
                          loadBalancerClass is the class of the load balancer implementation this Service belongs to.
                          If specified, the value of this field must be a label-style identifier, with an optional prefix,
                          e.g. "internal-vip" or "example.com/internal-vip". Unprefixed names are reserved for end-users.
                          This field can only be set when the Service type is 'LoadBalancer'. If not set, the default load
                          balancer implementation is used, today this is typically done through the cloud provider integration,
                          but should apply for any default implementation. If set, it is assumed that a load balancer
                          implementation is watching for Services with a matching class. Any default load balancer
                          implementation (e.g. cloud providers) should ignore Services that set this field.
                          This field can only be set when creating or updating a Service to type 'LoadBalancer'.
                          Once set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.
                        type: string
                      loadBalancerIP:
                        description: |-
                          Only applies to Service Type: LoadBalancer.
                          This feature depends on whether the underlying cloud-provider supports specifying
                          the loadBalancerIP when a load balancer is created.
                          This field will be ignored if the cloud-provider does not support the feature.
                          Deprecated: This field was under-specified and its meaning varies across implementations.
                          Using it is non-portable and it may not support dual-stack.
                          Users are encouraged to use implementation-specific annotations when available.
                        type: string
                      loadBalancerSourceRanges:
                        description: |-
                          If specified and supported by the platform, this will restrict traffic through the cloud-provider
                          load-balancer will be restricted to the specified client IPs. This field will be ignored if the
                          cloud-provider does not support the feature."
                          More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                      ports:
                        description: |-
                          The list of ports that are exposed by this service.
                          More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
                        items:
                          description: ServicePort contains information on service's
                            port.
                          properties:
                            appProtocol:
                              description: |-
                                The application protocol for this port.
                                This is used as a hint for implementations to offer richer behavior for protocols that they understand.
                                This field follows standard Kubernetes label syntax.
                                Valid values are either:


                                * Un-prefixed protocol names - reserved for IANA standard service names (as per
                                RFC-6335 and https://www.iana.org/assignments/service-names).


                                * Kubernetes-defined prefixed names:
                                  * 'kubernetes.io/h2c' - HTTP/2 prior knowledge over cleartext as described in https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-
                                  * 'kubernetes.io/ws'  - WebSocket over cleartext as described in https://www.rfc-editor.org/rfc/rfc6455
                                  * 'kubernetes.io/wss' - WebSocket over TLS as described in https://www.rfc-editor.org/rfc/rfc6455


                                * Other protocols should use implementation-defined prefixed names such as
                                mycompany.com/my-custom-protocol.
                              type: string
                            name:
                              description: |-
                                The name of this port within the service. This must be a DNS_LABEL.
                                All ports within a ServiceSpec must have unique names. When considering
                                the endpoints for a Service, this must match the 'name' field in the
                                EndpointPort.
                                Optional if only one ServicePort is defined on this service.
                              type: string
                            nodePort:
                              description: |-
                                The port on each node on which this service is exposed when type is
                                NodePort or LoadBalancer.  Usually assigned by the system. If a value is
                                specified, in-range, and not in use it will be used, otherwise the
                                operation will fail.  If not specified, a port will be allocated if this
                                Service requires one.  If this field is specified when creating a
                                Service which does not need it, creation will fail. This field will be
                                wiped when updating a Service to no longer need it (e.g. changing type
                                from NodePort to ClusterIP).
                                More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
                              format: int32
                              type: integer
                            port:
                              description: The port that will be exposed by this service.
                              format: int32
                              type: integer
                            protocol:
                              default: TCP
                              description: |-
                                The IP protocol for this port. Supports "TCP", "UDP", and "SCTP".
                                Default is TCP.
                              type: string
                            targetPort:
                              anyOf:
                              - type: integer
                              - type: string
                              description: |-
                                Number or name of the port to access on the pods targeted by the service.
                                Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                                If this is a string, it will be looked up as a named port in the
                                target Pod's container ports. If this is not specified, the value
                                of the 'port' field is used (an identity map).
                                This field is ignored for services with clusterIP=None, and should be
                                omitted or set equal to the 'port' field.
                                More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
                              x-kubernetes-int-or-string: true
                          required:
                          - port
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - port
                        - protocol
                        x-kubernetes-list-type: map
                      publishNotReadyAddresses:
                        description: |-
                          publishNotReadyAddresses indicates that any agent which deals with endpoints for this
                          Service should disregard any indications of ready/not-ready.
                          The primary use case for setting this field is for a StatefulSet's Headless Service to
                          propagate SRV DNS records for its Pods for the purpose of peer discovery.
                          The Kubernetes controllers that generate Endpoints and EndpointSlice resources for
                          Services interpret this to mean that all endpoints are considered "ready" even if the
                          Pods themselves are not. Agents which consume only Kubernetes generated endpoints
                          through the Endpoints or EndpointSlice resources can safely assume this behavior.
                        type: boolean
                      selector:
                        additionalProperties:
                          type: string
                        description: |-
                          Route service traffic to pods with label keys and values matching this
                          selector. If empty or not present, the service is assumed to have an
                          external process managing its endpoints, which Kubernetes will not
                          modify. Only applies to types ClusterIP, NodePort, and LoadBalancer.
                          Ignored if type is ExternalName.
                          More info: https://kubernetes.io/docs/concepts/services-networking/service/
                        type: object
                        x-kubernetes-map-type: atomic
                      sessionAffinity:
                        description: |-
                          Supports "ClientIP" and "None". Used to maintain session affinity.
                          Enable client IP based session affinity.
                          Must be ClientIP or None.
                          Defaults to None.
                          More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
                        type: string
                      sessionAffinityConfig:
                        description: sessionAffinityConfig contains the configurations
                          of session affinity.
                        properties:
                          clientIP:
                            description: clientIP contains the configurations of Client
                              IP based session affinity.
                            properties:
                              timeoutSeconds:
                                description: |-
                                  timeoutSeconds specifies the seconds of ClientIP type session sticky time.
                                  The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP".
                                  Default value is 10800(for 3 hours).
                                format: int32
                                type: integer
                            type: object
                        type: object
                      trafficDistribution:
                        description: |-
                          TrafficDistribution offers a way to express preferences for how traffic is
                          distributed to Service endpoints. Implementations can use this field as a
                          hint, but are not required to guarantee strict adherence. If the field is
                          not set, the implementation will apply its default routing strategy. If set
                          to "PreferClose", implementations should prioritize endpoints that are
                          topologically close (e.g., same zone).
                          This is an alpha field and requires enabling ServiceTrafficDistribution feature.
                        type: string
                      type:
                        description: |-
                          type determines how the Service is exposed. Defaults to ClusterIP. Valid
                          options are ExternalName, ClusterIP, NodePort, and LoadBalancer.
                          "ClusterIP" allocates a cluster-internal IP address for load-balancing
                          to endpoints. Endpoints are determined by the selector or if that is not
                          specified, by manual construction of an Endpoints object or
                          EndpointSlice objects. If clusterIP is "None", no virtual IP is
                          allocated and the endpoints are published as a set of endpoints rather
                          than a virtual IP.
                          "NodePort" builds on ClusterIP and allocates a port on every node which
                          routes to the same endpoints as the clusterIP.
                          "LoadBalancer" builds on NodePort and creates an external load-balancer
                          (if supported in the current cloud) which routes to the same endpoints
                          as the clusterIP.
                          "ExternalName" aliases this service to the specified externalName.
                          Several other fields do not apply to ExternalName services.
                          More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
                        type: string
                    type: object
                  type:
                    enum:
                    - Ingress
                    - Route
                    - Service
                    type: string
                required:
                - type
                type: object
              zookeeper:
                description: Zookeeper instance specification
                properties:
                  host:
                    description: |-
                      Host is the comma separated hosts of the Zookeeper nodes, or the
                      name of the headless service on top of them
                    type: string
                  port:
                    description: 'Port is the client port number of the Zookeeper
                      instance(s), default: 2181'
                    type: integer
                  secure:
                    description: Secure determines whether two-way TLS should be used
                      when communicating with Zookeeper.
                    type: boolean
                required:
                - host
                - port
                type: object
            required:
            - image
            - ingressAccessType
            - nifiVersion
            - replicas
            - tiniImage
            - zookeeper
            type: object
          status:
            description: NifiStatus defines the observed state of Nifi.
            properties:
              conditions:
                description: Conditions are a list of conditions defined by the operator.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              lastCleanedPodOrdinal:
                description: |-
                  LastCleanedPodOrdinal is the pod ordinal of last cleaned NiFi node.
                  Used in downscaling: PersistentVolumeClaim, PersistentVolume and
                  Certificate will be deleted, if the pod has already been deleted.
                  Before the first scaling operation, this attribute is hidden.
                  In normal case, LastCleanedPodOrdinal = Replicas.
                  During downscaling, LastCleanedPodOrdinal > Replicas, until all pod won't be cleaned up.
                format: int32
                type: integer
              minOffloadOrdinal:
                description: MinOffloadOrdinal is the lower boundary of the pod ordinal
                  whose data needs to be offloaded during a down scaling
                format: int32
                type: integer
              replicas:
                description: Replicas defines the current quantity of NiFi pods.
                format: int32
                type: integer
              selector:
                description: Selector is used by Horizontal Pod Autoscaling to match.
                type: string
              statefulsetUpdateRevision:
                description: StatefulsetUpdateRevision holds the last observed updateRevision
                  of the underlying statefulSet resource.
                type: string
            required:
            - replicas
            type: object
        type: object
    served: true
    storage: true
    subresources:
      scale:
        labelSelectorPath: .status.selector
        specReplicasPath: .spec.replicas
        statusReplicasPath: .status.replicas
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null

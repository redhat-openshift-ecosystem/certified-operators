apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "citrix.com/v1alpha1",
          "kind": "CitrixIngressController",
          "metadata": {
            "name": "citrixingresscontroller-sample"
          },
          "spec": {
            "adcCredentialSecret": "",
            "affinity": {},
            "analyticsConfig": {
              "distributedTracing": {
                "enable": false,
                "samplingrate": 100
              },
              "endpoint": {
                "server": "",
                "service": ""
              },
              "required": false,
              "timeseries": {
                "auditlogs": {
                  "enable": false
                },
                "events": {
                  "enable": false
                },
                "metrics": {
                  "enable": false,
                  "mode": "avro"
                },
                "port": 30002
              },
              "transactions": {
                "enable": false,
                "port": 30001
              }
            },
            "clusterName": "",
            "cncPbr": false,
            "crds": {
              "install": false,
              "retainOnDelete": false
            },
            "defaultSSLCertSecret": "",
            "disableAPIServerCertVerify": false,
            "disableOpenshiftRoutes": false,
            "entityPrefix": "",
            "exporter": {
              "extraVolumeMounts": [],
              "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
              "ports": {
                "containerPort": 8888
              },
              "pullPolicy": "IfNotPresent",
              "required": false,
              "resources": {}
            },
            "extraVolumeMounts": [],
            "extraVolumes": [],
            "fullnameOverride": "",
            "ignoreNodeExternalIP": false,
            "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
            "imagePullSecrets": [],
            "ingressClass": [],
            "ipam": false,
            "jsonLog": false,
            "kubernetesURL": "",
            "license": {
              "accept": "no"
            },
            "logLevel": "INFO",
            "logProxy": "",
            "nameOverride": "",
            "namespaceLabels": "",
            "nitroReadTimeout": 20,
            "nodeSelector": {
              "key": "",
              "value": ""
            },
            "nodeWatch": false,
            "nsConfigDnsRec": false,
            "nsCookieVersion": "0",
            "nsDnsNameserver": "",
            "nsEnableLabel": true,
            "nsHTTP2ServerSide": "OFF",
            "nsIP": "x.x.x.x",
            "nsLbHashAlgo": {
              "hashAlgorithm": "DEFAULT",
              "hashFingers": 256,
              "required": false
            },
            "nsPort": 443,
            "nsProtocol": "HTTPS",
            "nsSNIPS": [],
            "nsSvcLbDnsRec": false,
            "nsVIP": "",
            "openshift": true,
            "optimizeEndpointBinding": false,
            "podAnnotations": {},
            "podIPsforServiceGroupMembers": false,
            "pullPolicy": "IfNotPresent",
            "resources": {},
            "routeLabels": "",
            "secretStore": {
              "enabled": false,
              "password": {},
              "username": {}
            },
            "serviceAccount": {
              "create": true
            },
            "serviceClass": [],
            "setAsDefaultIngressClass": false,
            "tolerations": [],
            "updateIngressStatus": true
          }
        }
      ]
    capabilities: Basic Install
    categories: Networking
    description: Citrix provides an ingress controller for Citrix ADC MPX (hardware), Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and cloud deployments. It automatically configures one or more Citrix ADC based on the Ingress resource configuration. This operator can be used deploy Citrix Ingress Controller in an Openshift environment.
    containerImage: registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4
    createdAt: 2022-09-28T10:00:00Z
    support: Citrix
    repository: https://github.com/citrix/citrix-k8s-ingress-controller
    olm.skipRange: ">=1.18.5 <1.26.7"
    operators.operatorframework.io/builder: operator-sdk-v1.23.0
    operators.operatorframework.io/project_layout: helm.sdk.operatorframework.io/v1
  name: citrix-ingress-controller-operator.v1.26.7
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - kind: CitrixIngressController
      name: citrixingresscontrollers.citrix.com
      version: v1alpha1
      description: Citrix ingress controller operator CRD
  description: Citrix provides an ingress controller for Citrix ADC MPX (hardware),
    Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and
    cloud deployments. It automatically configures one or more Citrix ADC based on
    the Ingress resource configuration. This operator can be used deploy Citrix Ingress
    Controller in an OpenShift environment.
  displayName: Citrix Ingress Controller
  minKubeVersion: v1.16.0-0
  icon:
  - base64data: ""
    mediatype: "image/png"
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          - clusterroles
          verbs:
          - '*'
        - apiGroups:
          - citrix.com
          resources:
          - citrixingresscontrollers
          - citrixingresscontrollers/status
          - citrixingresscontrollers/finalizers
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - configmaps
          - secrets
          - serviceaccounts
          - services/finalizers
          - endpoints
          - events
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - '*'
        - apiGroups:
          - apps.openshift.io
          resources:
          - deploymentconfigs
          verbs:
          - '*'
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - '*'
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingressclasses
          verbs:
          - '*'
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - '*'
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: citrix-ingress-controller-operator-controller-manager
      deployments:
      - label:
          control-plane: controller-manager
        name: citrix-ingress-controller-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=0
                image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:9185a8d8bab28f84db59c75053dbc25cee79c8342990aaf32509a4b6389e9cc2
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 5m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                - --leader-election-id=citrix-ingress-controller-operator
                env:
                - name: RELATED_IMAGE_CIC
                  value: quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01
                - name: RELATED_IMAGE_EXPORTER
                  value: quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58
                image: registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                  successThreshold: 1
                  failureThreshold: 5
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 500Mi
                  requests:
                    cpu: 200m
                    memory: 200Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              securityContext:
                runAsNonRoot: true
              serviceAccountName: citrix-ingress-controller-operator-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: citrix-ingress-controller-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: true
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - Ingress
  - Ingress Controller
  - Kubernetes
  - ADC
  links:
  - name: Citrix Ingress Controller Operator
    url: https://github.com/citrix/citrix-k8s-ingress-controller/blob/master/docs/deploy/deploy-cic-openshift-operator.md
  maintainers:
  - email: 'priyanka.sharma@citrix.com'
    name: 'Priyanka Sharma'
  maturity: alpha
  provider:
    name: Citrix
    url: https://www.citrix.com
  relatedImages:
  - image: quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01
    name: cic
  - image: quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58
    name: exporter
  version: 1.26.7

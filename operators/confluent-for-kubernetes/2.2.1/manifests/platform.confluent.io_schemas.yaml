apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: schemas.platform.confluent.io
spec:
  group: platform.confluent.io
  names:
    categories:
    - all
    - confluent-platform
    - confluent
    kind: Schema
    listKind: SchemaList
    plural: schemas
    shortNames:
    - schema
    singular: schema
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.phase
      name: Status
      type: string
    - jsonPath: .status.SchemaRegistryEndpoint
      name: schemaregistry
      priority: 1
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SchemaSpec defines the desired state of Schema
            properties:
              data:
                description: Data defines the data required to create a schema
                properties:
                  configRef:
                    description: ConfigRef is the name of the Kubernetes ConfigMap
                      resource containing the schema
                    minLength: 1
                    type: string
                  format:
                    description: Format is the the type of format of the encoded schema
                    enum:
                    - avro
                    - json
                    - protobuf
                    minLength: 1
                    type: string
                required:
                - configRef
                - format
                type: object
              schemaReferences:
                description: SchemaReferences defines a list of schema references
                  in the schema data
                items:
                  description: SchemaReference is a schema to be used as a reference
                    as part of creating a new schema
                  properties:
                    avro:
                      description: Avro is the data for the referenced avro schema
                      properties:
                        avro:
                          description: Name is the reference name using the fully
                            qualified schema name
                          minLength: 1
                          type: string
                      required:
                      - avro
                      type: object
                    format:
                      description: Format is the the type of format of the referenced
                        schema
                      enum:
                      - avro
                      - json
                      - protobuf
                      minLength: 1
                      type: string
                    json:
                      description: JSON is the data for the referenced json schema
                      properties:
                        url:
                          description: URL is the reference name
                          minLength: 1
                          type: string
                      required:
                      - url
                      type: object
                    protobuf:
                      description: Protobuf is the data for the referenced protobuf
                        schema
                      properties:
                        file:
                          description: File is the file name of the references protobuf
                            schema
                          minLength: 1
                          type: string
                      required:
                      - file
                      type: object
                    subject:
                      description: Subject is the name of the subject for the referenced
                        schema through the configref
                      minLength: 1
                      type: string
                    version:
                      description: Version is the the type of version of the referenced
                        schema
                      format: int32
                      type: integer
                  required:
                  - format
                  - subject
                  - version
                  type: object
                type: array
              schemaRegistryClusterRef:
                description: SchemaRegistryClusterRef defines the discovery section
                  to refer to a CFK managed schemaregistry cluster
                properties:
                  name:
                    description: Name defines name of the cluster
                    type: string
                  namespace:
                    description: Namespace defines namespace where cluster is running
                    type: string
                required:
                - name
                type: object
              schemaRegistryRest:
                description: SchemaRegistryRestApiInfo defines SchemaRegistry Rest
                  API configuration
                properties:
                  authentication:
                    description: Authentication defines the Rest API authentication
                      mechanism
                    properties:
                      basic:
                        description: Basic defines basic authentication for the rest
                          client
                        properties:
                          secretRef:
                            description: Name of the secret reference
                            maxLength: 30
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                        required:
                        - secretRef
                        type: object
                      bearer:
                        description: BearerAuthentication defines bearer authentication
                          for the rest client
                        properties:
                          secretRef:
                            description: Name of the secret reference
                            maxLength: 30
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                        required:
                        - secretRef
                        type: object
                      type:
                        enum:
                        - basic
                        - bearer
                        - mtls
                        type: string
                    required:
                    - type
                    type: object
                  endpoint:
                    description: Endpoint defines where confluent Rest API is running
                    minLength: 1
                    pattern: ^https?://.*
                    type: string
                  tls:
                    description: TLSDependencyConfig defines custom TLS structure
                      for the child resources(connector, topic, schema, etc) of CP
                      component
                    properties:
                      directoryPathInContainer:
                        description: DirectoryPathInContainer contains the directory
                          path in container where keystore/truststore.jks/jksPassword.txt
                          keys are mounted.
                        minLength: 1
                        type: string
                      jksPassword:
                        description: JksPassword defines the secret name referenced
                          for jks password
                        properties:
                          secretRef:
                            description: SecretRef defines the secret name referenced
                              for jks password More information about jks password
                              key/value format can be found in Confluent Operator
                              document
                            maxLength: 30
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                        required:
                        - secretRef
                        type: object
                      secretRef:
                        description: SecretRef defines the secret name referenced
                          for certificates More information about certificates key/value
                          format can be found in Confluent Operator document
                        maxLength: 30
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        type: string
                    type: object
                type: object
            required:
            - data
            type: object
          status:
            description: SchemaStatus defines the observed state of Schema
            properties:
              conditions:
                items:
                  description: Conditions represents the latest available observations
                    of a statefulset's current state.
                  properties:
                    lastProbeTime:
                      description: LastProbeTime defines a last time the condition
                        is evaluated.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: LastTransitionTime defines a last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: ' Message defines  a human readable message indicating
                        details about the transition.'
                      type: string
                    reason:
                      description: ' Reason defines reason for the condition''s last
                        transition.'
                      type: string
                    status:
                      description: Status defines a status of the condition, one of
                        True, False, Unknown
                      type: string
                    type:
                      description: Type defines type of condition
                      type: string
                  type: object
                type: array
              deletedVersions:
                description: DeletedVersions lists the successful hard deleted versions
                  for the subject of the cr
                items:
                  format: int32
                  type: integer
                type: array
              format:
                description: Format defines the format the latest schema for the subject
                type: string
              id:
                description: ID defines the id of the latest schema for the subject
                format: int32
                type: integer
              schemaReferences:
                description: SchemaReferences lists the schema references for the
                  latest schema for the subhect
                items:
                  description: SchemaReference is a schema to be used as a reference
                    as part of creating a new schema
                  properties:
                    avro:
                      description: Avro is the data for the referenced avro schema
                      properties:
                        avro:
                          description: Name is the reference name using the fully
                            qualified schema name
                          minLength: 1
                          type: string
                      required:
                      - avro
                      type: object
                    format:
                      description: Format is the the type of format of the referenced
                        schema
                      enum:
                      - avro
                      - json
                      - protobuf
                      minLength: 1
                      type: string
                    json:
                      description: JSON is the data for the referenced json schema
                      properties:
                        url:
                          description: URL is the reference name
                          minLength: 1
                          type: string
                      required:
                      - url
                      type: object
                    protobuf:
                      description: Protobuf is the data for the referenced protobuf
                        schema
                      properties:
                        file:
                          description: File is the file name of the references protobuf
                            schema
                          minLength: 1
                          type: string
                      required:
                      - file
                      type: object
                    subject:
                      description: Subject is the name of the subject for the referenced
                        schema through the configref
                      minLength: 1
                      type: string
                    version:
                      description: Version is the the type of version of the referenced
                        schema
                      format: int32
                      type: integer
                  required:
                  - format
                  - subject
                  - version
                  type: object
                type: array
              schemaRegistryAuthenticationType:
                description: SchemaRegistryAuthenticationType defines the type of
                  auth used
                type: string
              schemaRegistryEndpoint:
                description: Endpoint defines the SchemaRegistry Rest endpoint
                type: string
              schemaRegistryTLS:
                description: SchemaRegistryTLS defines the whether the schema registry
                  is using tls
                type: boolean
              softDeletedVersions:
                description: SoftDeletedVersions lists the successful soft deleted
                  versions for the subject of the cr
                items:
                  format: int32
                  type: integer
                type: array
              state:
                description: State defines the state of the Schema CR
                type: string
              subject:
                description: Subject defines the subject of the schema resource
                type: string
              version:
                description: Version defines the version of the latest schema for
                  the subject
                format: int32
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

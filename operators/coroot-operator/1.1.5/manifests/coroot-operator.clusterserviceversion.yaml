apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "coroot.com/v1",
          "kind": "Coroot",
          "metadata": {
            "name": "coroot",
            "namespace": "coroot"
          },
          "spec": {
            "enterpriseEdition": {
              "licenseKey": "<COROOT_LICENSE_KEY> from https://coroot.com/account"
            },
            "ingress": {
              "host": "coroot.example.com"
            },
            "storage": {
              "size": "50Gi"
            },
            "clickhouse": {
              "replicas": 2,
              "shards": 2,
              "storage": {
                "size": "100Gi"
              }
            },
            "prometheus": {
              "storage": {
                "size": "100Gi"
              }
            }
          }
        }
      ]
    capabilities: Deep Insights
    categories: Monitoring, Logging & Tracing
    features.operators.openshift.io/disconnected: 'true'
    features.operators.openshift.io/proxy-aware: 'false'
    features.operators.openshift.io/fips-compliant: 'false'
    features.operators.openshift.io/tls-profiles: 'false'
    features.operators.openshift.io/token-auth-aws: 'false'
    features.operators.openshift.io/token-auth-azure: 'false'
    features.operators.openshift.io/token-auth-gcp: 'false'
    repository: https://github.com/coroot/coroot-operator
    support: support@coroot.com
  name: coroot-operator.1.1.5
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
      - description: Coroot is the Schema for the coroots API
        displayName: Coroot
        kind: Coroot
        name: coroots.coroot.com
        version: v1
  description: An open-source observability platform using eBPF to gather telemetry data, providing actionable insights for quick issue detection and resolution in Kubernetes and VM environments.
  displayName: Coroot
  icon:
    - base64data: PHN2ZyB3aWR0aD0iMTIwIiBoZWlnaHQ9IjEyMCIgdmlld0JveD0iMCAwIDEyMCAxMjAiIGZpbGw9Im5vbmUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+CjxnIGNsaXAtcGF0aD0idXJsKCNjbGlwKSI+CjxwYXRoIGQ9Ik0xMjAgMTIwSDBWMEgxMjBWMTIwWiIgZmlsbD0iIzRCQjY0OSIvPgo8cGF0aCBkPSJNMTQuMzgxNSA3NS4yMTIzQzE0LjM4MTUgNzMuNTY5MiAxNC44OTg1IDcyLjI1ODUgMTUuOTUwOCA3MS4yNDMxQzE3LjAwMzEgNzAuMTkwOCAxOC4zNTA4IDY5LjY3MzkgMTkuOTc1NCA2OS42NzM5QzIxLjYxODUgNjkuNjczOSAyMi45NjYyIDcwLjE5MDggMjQgNzEuMjQzMUMyNS4wNTIzIDcyLjI0IDI1LjU2OTIgNzMuNTY5MiAyNS41NjkyIDc1LjIxMjNDMjUuNTY5MiA3Ni44NTU0IDI1LjA1MjMgNzguMjAzMSAyNCA3OS4yMzY5QzIyLjk0NzcgODAuMjMzOCAyMS42IDgwLjczMjMgMTkuOTc1NCA4MC43MzIzQzE4LjMzMjMgODAuNzMyMyAxNi45ODQ2IDgwLjIzMzggMTUuOTUwOCA3OS4yMzY5QzE0Ljg5ODUgNzguMTg0NiAxNC4zODE1IDc2Ljg1NTQgMTQuMzgxNSA3NS4yMTIzWk0xNC4zODE1IDQ3LjMxNjlDMTQuMzgxNSA0NS42NzM4IDE0Ljg5ODUgNDQuMzYzMSAxNS45NTA4IDQzLjM0NzdDMTcuMDAzMSA0Mi4yOTU0IDE4LjM1MDggNDEuNzc4NSAxOS45NzU0IDQxLjc3ODVDMjEuNjE4NSA0MS43Nzg1IDIyLjk2NjIgNDIuMjk1NCAyNCA0My4zNDc3QzI1LjA1MjMgNDQuMzQ0NiAyNS41NjkyIDQ1LjY3MzggMjUuNTY5MiA0Ny4zMTY5QzI1LjU2OTIgNDguOTYgMjUuMDUyMyA1MC4zMDc3IDI0IDUxLjM0MTVDMjIuOTQ3NyA1Mi4zMzg1IDIxLjYgNTIuODM2OSAxOS45NzU0IDUyLjgzNjlDMTguMzMyMyA1Mi44MzY5IDE2Ljk4NDYgNTIuMzM4NSAxNS45NTA4IDUxLjM0MTVDMTQuODk4NSA1MC4zMDc3IDE0LjM4MTUgNDguOTYgMTQuMzgxNSA0Ny4zMTY5WiIgZmlsbD0id2hpdGUiLz4KPHBhdGggZD0iTTU4LjExNjkgNjIuOTcyM0M1Ni42OTU0IDYyLjk3MjMgNTUuNDc2OSA2Mi43NjkyIDU0LjQyNDYgNjIuMzYzMUM1My4zNzIzIDYxLjkwMTUgNTIuNDQ5MiA2MS4zNjYyIDUxLjYxODUgNjAuNzJDNTAuODQzMSA2MC4wMzY5IDUwLjE0MTUgNTkuMjk4NSA0OS40OTU0IDU4LjU0MTVDNDguOTA0NiA1Ny43NjYyIDQ4LjMxMzggNTcuMDY0NiA0Ny43MjMxIDU2LjQxODVDNDcuMTY5MiA1NS43MzU0IDQ2LjU3ODUgNTUuMTgxNSA0NS45NTA4IDU0Ljc3NTRDNDUuMzYgNTQuMzEzOCA0NC42NzY5IDU0LjA5MjMgNDMuOTAxNSA1NC4wOTIzQzQxLjc2IDU0LjA5MjMgNDAuNjg5MiA1NS4zNDc3IDQwLjY4OTIgNTcuODU4NVY2Mi42NEgzNC44NzM4VjU3Ljg1ODVDMzQuODczOCA1NS4xNjMxIDM1LjY2NzcgNTMuMDIxNSAzNy4yNzM4IDUxLjQzMzhDMzguOTE2OSA0OS43OTA4IDQxLjA3NjkgNDguOTc4NSA0My43NzIzIDQ4Ljk3ODVDNDUuMTkzOCA0OC45Nzg1IDQ2LjQxMjMgNDkuMiA0Ny40NjQ2IDQ5LjY2MTVDNDguNTE2OSA1MC4wNjc3IDQ5LjQyMTUgNTAuNjIxNSA1MC4xOTY5IDUxLjMwNDZDNTEuMDA5MiA1MS45NTA4IDUxLjcyOTIgNTIuNjUyMyA1Mi4zMiA1My40Mjc3QzUyLjk2NjEgNTQuMjAzMSA1My41NTY5IDU0LjkyMzEgNTQuMDkyMyA1NS42MDYyQzU0LjY4MzEgNTYuMjUyMyA1NS4yNzM4IDU2Ljc4NzcgNTUuODY0NiA1Ny4yNDkyQzU2LjUxMDggNTcuNjU1NCA1Ny4yMTIzIDU3Ljg1ODUgNTcuOTg3NyA1Ny44NTg1QzYwLjEyOTIgNTcuODU4NSA2MS4yIDU2LjYwMzEgNjEuMiA1NC4wOTIzVjQ5LjMxMDhINjcuMDE1NFY1NC4wOTIzQzY3LjAxNTQgNTYuNzMyMyA2Ni4yMDMxIDU4Ljg3MzggNjQuNTYgNjAuNTE2OUM2Mi45NTM4IDYyLjE2IDYwLjgxMjMgNjIuOTcyMyA1OC4xMTY5IDYyLjk3MjNaIiBmaWxsPSJ3aGl0ZSIvPgo8cGF0aCBkPSJNOTguMTIzMSA2Ni4zODc3TDk1LjU5MzggODAuMDQ5Mkg5MC44MTIzTDkzLjM0MTUgNjYuMzg3N0g4Mi40MTIzTDc5Ljg4MzEgODAuMDQ5Mkg3NS4xMDE1TDc3LjYzMDggNjYuMzg3N0g3MS44MTU0VjYxLjkzODVINzguNDQzMUw4MC44OTg1IDQ4Ljk2SDc0LjEyMzFWNDQuNTEwOEg4MS43MTA4TDg0LjI0IDMwLjg0OTJIODkuMDIxNUw4Ni40OTIzIDQ0LjUxMDhIOTcuNDIxNUw5OS45NTA4IDMwLjg0OTJIMTA0LjczMkwxMDIuMjAzIDQ0LjUxMDhIMTA4LjAxOFY0OC45NkgxMDEuMzkxTDk4LjkzNTQgNjEuOTM4NUgxMDUuNjM3VjY2LjM4NzdIOTguMTIzMVpNOTQuMTcyMyA2MS45NTY5TDk2LjYyNzcgNDguOTc4NUg4NS42OTg1TDgzLjI0MzEgNjEuOTU2OUg5NC4xNzIzWiIgZmlsbD0id2hpdGUiLz4KPC9nPgo8ZGVmcz4KPGNsaXBQYXRoIGlkPSJjbGlwIj4KPHJlY3Qgd2lkdGg9IjEyMCIgaGVpZ2h0PSIxMjAiIHJ4PSI2IiBmaWxsPSJ3aGl0ZSIvPgo8L2NsaXBQYXRoPgo8L2RlZnM+Cjwvc3ZnPgo=
      mediatype: image/svg+xml
  install:
    strategy: deployment
    spec:
      clusterPermissions:
        - rules:
            - apiGroups:
                - ""
              resources:
                - endpoints
                - namespaces
                - nodes
                - persistentvolumes
                - pods
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - ""
              resources:
                - events
              verbs:
                - create
                - patch
            - apiGroups:
                - ""
              resources:
                - persistentvolumeclaims
                - serviceaccounts
                - services
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - ""
              resources:
                - secrets
              verbs:
                - create
                - list
                - watch
            - apiGroups:
                - apps
              resources:
                - cronjobs
                - daemonsets
                - deployments
                - replicasets
                - statefulsets
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - batch
              resources:
                - cronjobs
                - jobs
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - coroot.com
              resources:
                - coroots
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - coroot.com
              resources:
                - coroots/finalizers
              verbs:
                - update
            - apiGroups:
                - coroot.com
              resources:
                - coroots/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - networking.k8s.io
              resources:
                - ingresses
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - clusterrolebindings
                - clusterroles
                - rolebindings
                - roles
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - security.openshift.io
              resources:
                - securitycontextconstraints
              verbs:
                - use
            - apiGroups:
                - storage.k8s.io
              resources:
                - storageclasses
                - volumeattachments
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
          serviceAccountName: coroot-operator
      deployments:
        - label:
            app.kubernetes.io/name: coroot-operator
          name: coroot-operator
          spec:
            selector:
              matchLabels:
                app.kubernetes.io/name: coroot-operator
            strategy: {}
            template:
              metadata:
                labels:
                  app.kubernetes.io/name: coroot-operator
              spec:
                containers:
                  - image: ghcr.io/coroot/coroot-operator@sha256:13f1a4a07877c8fe8230a0bb7282ff47451007c9cf689a995a37d16697b9268a
                    livenessProbe:
                      httpGet:
                        path: /healthz
                        port: 8081
                      initialDelaySeconds: 15
                      periodSeconds: 20
                    name: operator
                    readinessProbe:
                      httpGet:
                        path: /readyz
                        port: 8081
                      initialDelaySeconds: 5
                      periodSeconds: 10
                    resources:
                      limits:
                        cpu: 500m
                        memory: 256Mi
                      requests:
                        cpu: 100m
                        memory: 64Mi
                securityContext:
                  runAsNonRoot: true
                serviceAccountName: coroot-operator
                terminationGracePeriodSeconds: 10
  installModes:
    - type: OwnNamespace
      supported: false
    - type: SingleNamespace
      supported: false
    - type: MultiNamespace
      supported: false
    - type: AllNamespaces
      supported: true
  keywords:
    - monitoring
    - coroot
    - observability
  links:
    - name: Documentation
      url: https://docs.coroot.com
  maturity: stable
  maintainers:
    - email: support@coroot.com
      name: Coroot Inc.
  provider:
    name: Coroot Inc.
    url: https://coroot.com
  version: 1.1.5
  relatedImages:
    - name: coroot-operator
      image: ghcr.io/coroot/coroot-operator@sha256:13f1a4a07877c8fe8230a0bb7282ff47451007c9cf689a995a37d16697b9268a
    - name: coroot-ee
      image: ghcr.io/coroot/coroot-ee@sha256:09b9177ac07c2d26f4bd16050d07bb1e2132431055c32e047563083ee09194a8
    - name: coroot-node-agent
      image: ghcr.io/coroot/coroot-node-agent@sha256:3d552e98ca2ff8c6e125496857306172ec6f8e134ff13886c7f799abef29d1b8
    - name: coroot-cluster-agent
      image: ghcr.io/coroot/coroot-cluster-agent@sha256:674bcb147354873eaa0ee9c1328ddf758d43adbbe532c9fbbe41ddae7addc114
    - name: clickhouse
      image: ghcr.io/coroot/clickhouse@sha256:afed1054626598371975c948e5b9e4dcaac54e8059b7ad9f0b905ef1c99f2260
    - name: prometheus
      image: ghcr.io/coroot/prometheus@sha256:e7117bd86e1088fc02ac12758bc94dba1029de54a5bc1ee04954569d8b79625d
    - name: kube-state-metrics
      image: ghcr.io/coroot/kube-state-metrics@sha256:080a85e77b1e530df56f84c8e0ee2523c1f740adea152015367b87edbfac078d

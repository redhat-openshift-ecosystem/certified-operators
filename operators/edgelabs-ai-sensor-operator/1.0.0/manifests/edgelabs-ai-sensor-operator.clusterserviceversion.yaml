apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "charts.edgelabs.ai/v1alpha1",
          "kind": "AiSensor",
          "metadata": {
            "name": "aisensor-sample"
          },
          "spec": {
            "affinity": {},
            "api": {
              "key": "",
              "url": "https://soc.edgelabs.ai"
            },
            "fullnameOverride": "",
            "image": {
              "name": "registry.edgelabs.ai/ai-sensor/ai-sensor@sha256:752bad0be201312f0ab6d7a93b0154d6a1c2e150b0364c3fa3e2b91656a71619",
              "pullPolicy": "Always"
            },
            "imagePullSecrets": [
              {
                "name": "regcred"
              }
            ],
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podSecurityContext": {},
            "resources": {
              "limits": {
                "cpu": "2",
                "memory": "2Gi"
              },
              "requests": {
                "cpu": "1",
                "memory": "1Gi"
              }
            },
            "tolerations": []
          }
        }
      ]
    capabilities: Basic Install
    createdAt: "2023-06-14T12:03:16Z"
    operators.operatorframework.io/builder: operator-sdk-v1.28.1
    operators.operatorframework.io/project_layout: helm.sdk.operatorframework.io/v1
  name: edgelabs-ai-sensor-operator.v1.0.0
  namespace: placeholder
spec:
  relatedImages:
    - name: ai-sensor
      image: registry.edgelabs.ai/ai-sensor/ai-sensor@sha256:752bad0be201312f0ab6d7a93b0154d6a1c2e150b0364c3fa3e2b91656a71619
    - name: ai-sensor-helm-operator
      image: aiedgelabs/ai-sensor-helm-operator@sha256:5db5c88e734400186be89d9d6fedee76ce9b49c18e0899fee6164af1d2a4485a
    - name: kube-rbac-proxy
      image: gcr.io/kubebuilder/kube-rbac-proxy@sha256:d4883d7c622683b3319b5e6b3a7edfbf2594c18060131a8bf64504805f875522
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - kind: AiSensor
      name: aisensors.charts.edgelabs.ai
      version: v1alpha1
  description: This Operator can be used to setup Edgelabs AI Sensor on Openshift
    Cluster
  displayName: Edgelabs AI Security
  icon:
  - base64data: ""
    mediatype: "image/png"
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
        - apiGroups:
          - charts.edgelabs.ai
          resources:
          - aisensors
          - aisensors/status
          - aisensors/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - daemonsets
          verbs:
          - '*'
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: edgelabs-ai-sensor-operator-controller-manager
      deployments:
      - label:
          app.kubernetes.io/component: manager
          app.kubernetes.io/created-by: edgelabs-ai-sensor-operator
          app.kubernetes.io/instance: controller-manager
          app.kubernetes.io/managed-by: kustomize
          app.kubernetes.io/name: deployment
          app.kubernetes.io/part-of: edgelabs-ai-sensor-operator
          control-plane: controller-manager
        name: edgelabs-ai-sensor-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                control-plane: controller-manager
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: kubernetes.io/arch
                        operator: In
                        values:
                        - amd64
                        - arm64
                        - ppc64le
                        - s390x
                      - key: kubernetes.io/os
                        operator: In
                        values:
                        - linux
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=0
                image: gcr.io/kubebuilder/kube-rbac-proxy@sha256:d4883d7c622683b3319b5e6b3a7edfbf2594c18060131a8bf64504805f875522
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 5m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                - --leader-election-id=edgelabs-ai-sensor-operator
                image: aiedgelabs/ai-sensor-helm-operator@sha256:5db5c88e734400186be89d9d6fedee76ce9b49c18e0899fee6164af1d2a4485a
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 10m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              securityContext:
                runAsNonRoot: true
              serviceAccountName: edgelabs-ai-sensor-operator-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: edgelabs-ai-sensor-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - Security
  - Networking
  links:
  - name: Edgelabs Ai Sensor Operator
    url: https://edgelabs-ai-sensor-operator.domain
  maintainers:
  - email: contact@edgelabs.ai
    name: contact
  maturity: alpha
  provider:
    name: Edgelabs
    url: https://edgelabs.ai
  version: 1.0.0

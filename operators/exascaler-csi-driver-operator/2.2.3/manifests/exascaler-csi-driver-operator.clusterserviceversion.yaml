apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    features.operators.openshift.io/disconnected: "false"
    features.operators.openshift.io/fips-compliant: "false"
    features.operators.openshift.io/proxy-aware: "false"
    features.operators.openshift.io/tls-profiles: "false"
    features.operators.openshift.io/token-auth-aws: "false"
    features.operators.openshift.io/token-auth-azure: "false"
    features.operators.openshift.io/token-auth-gcp: "false"
    alm-examples: |-
      [
        {
          "apiVersion": "charts.my.domain/v1alpha1",
          "kind": "ExaCsi",
          "metadata": {
            "name": "exacsi-sample"
          },
          "spec": {
            "image": {
              "pullPolicy": "Always",
              "repository": "quay.io/ddn/exascaler-csi-file-driver",
              "tag": "v2.2.3"
            },
            "namespace": "exascaler-csi-driver-operator-system",
            "replicaCount": 1,
            "resources": {
              "limits": {
                "cpu": "100m",
                "memory": "128Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "128Mi"
              }
            },
            "secretName": "exascaler-csi-file-driver-config",
            "volumeNamePrefix": "pvc-exa"
          }
        }
      ]
    capabilities: Basic Install
    createdAt: "2024-04-01T17:51:15Z"
    operators.operatorframework.io/builder: operator-sdk-v1.32.0
    operators.operatorframework.io/project_layout: helm.sdk.operatorframework.io/v1
  name: exascaler-csi-driver-operator.v2.2.3
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
      - kind: ExaCsi
        name: exacsis.charts.my.domain
        version: v1alpha1
  description: EXAScaler CSI File Driver over lustre protocol
  displayName: EXAScaler CSI File Driver
  icon:
  - base64data: 
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
        - rules:
            - apiGroups:
                - ""
              resources:
                - namespaces
              verbs:
                - get
            - apiGroups:
                - ""
              resources:
                - secrets
              verbs:
                - '*'
            - apiGroups:
                - ""
              resources:
                - events
              verbs:
                - create
            - apiGroups:
                - charts.my.domain
              resources:
                - exacsis
                - exacsis/status
                - exacsis/finalizers
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - ""
              resources:
                - pods
                - services
                - services/finalizers
                - endpoints
                - persistentvolumeclaims
                - events
                - configmaps
                - secrets
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - apps
              resources:
                - deployments
                - daemonsets
                - replicasets
                - statefulsets
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - storage.k8s.io
              resources:
                - csidrivers
                - volumeattachments
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - ""
              resources:
                - persistentvolumeclaims/status
              verbs:
                - update
                - patch
            - apiGroups:
                - ""
              resources:
                - persistentvolumes
              verbs:
                - create
                - delete
                - get
                - list
                - watch
                - update
                - patch
            - apiGroups:
                - snapshot.storage.k8s.io
              resources:
                - volumesnapshotcontents
                - volumesnapshots
              verbs:
                - get
                - list
                - watch
                - update
                - create
                - delete
            - apiGroups:
                - storage.k8s.io
              resources:
                - storageclasses
              verbs:
                - watch
            - apiGroups:
                - storage.k8s.io
              resources:
                - csinodes
              verbs:
                - watch
                - list
                - get
            - apiGroups:
                - csi.storage.k8s.io
              resources:
                - csinodeinfos
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - coordination.k8s.io
              resources:
                - leases
              verbs:
                - get
                - watch
                - list
                - delete
                - update
                - create
            - apiGroups:
                - authentication.k8s.io
              resources:
                - tokenreviews
              verbs:
                - create
            - apiGroups:
                - authorization.k8s.io
              resources:
                - subjectaccessreviews
              verbs:
                - create
          serviceAccountName: exascaler-csi-controller-manager
      deployments:
        - label:
            app.kubernetes.io/component: manager
            app.kubernetes.io/created-by: exascaler-csi-driver-operator
            app.kubernetes.io/instance: controller-manager
            app.kubernetes.io/managed-by: kustomize
            app.kubernetes.io/name: deployment
            app.kubernetes.io/part-of: exascaler-csi-driver-operator
            control-plane: controller-manager
          name: exascaler-csi-controller-manager
          spec:
            replicas: 1
            selector:
              matchLabels:
                control-plane: controller-manager
            strategy: {}
            template:
              metadata:
                annotations:
                  kubectl.kubernetes.io/default-container: manager
                labels:
                  control-plane: controller-manager
              spec:
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                        - matchExpressions:
                            - key: kubernetes.io/arch
                              operator: In
                              values:
                                - amd64
                                - arm64
                                - ppc64le
                                - s390x
                            - key: kubernetes.io/os
                              operator: In
                              values:
                                - linux
                containers:
                  - args:
                      - --secure-listen-address=0.0.0.0:8443
                      - --upstream=http://127.0.0.1:8080/
                      - --logtostderr=true
                      - --v=0
                    image: gcr.io/kubebuilder/kube-rbac-proxy@sha256:d4883d7c622683b3319b5e6b3a7edfbf2594c18060131a8bf64504805f875522
                    name: kube-rbac-proxy
                    ports:
                      - containerPort: 8443
                        name: https
                        protocol: TCP
                    resources:
                      limits:
                        cpu: 500m
                        memory: 128Mi
                      requests:
                        cpu: 5m
                        memory: 64Mi
                    securityContext:
                      allowPrivilegeEscalation: false
                      capabilities:
                        drop:
                          - ALL
                  - args:
                      - --health-probe-bind-address=:8081
                      - --metrics-bind-address=127.0.0.1:8080
                      - --leader-elect
                      - --leader-election-id=exascaler-csi-driver-operator
                    image: quay.io/ddn/exascaler-csi-driver-operator-controller@sha256:730ce45adccbd134c070a9bad5e30ee01e07b634604f0124b258952866b35a16
                    livenessProbe:
                      httpGet:
                        path: /healthz
                        port: 8081
                      initialDelaySeconds: 15
                      periodSeconds: 20
                    name: manager
                    readinessProbe:
                      httpGet:
                        path: /readyz
                        port: 8081
                      initialDelaySeconds: 5
                      periodSeconds: 10
                    resources:
                      limits:
                        cpu: 500m
                        memory: 128Mi
                      requests:
                        cpu: 10m
                        memory: 64Mi
                    securityContext:
                      allowPrivilegeEscalation: false
                      capabilities:
                        drop:
                          - ALL
                securityContext:
                  runAsNonRoot: true
                serviceAccountName: exascaler-csi-controller-manager
                terminationGracePeriodSeconds: 10
      permissions:
        - rules:
            - apiGroups:
                - ""
              resources:
                - configmaps
              verbs:
                - get
                - list
                - watch
                - create
                - update
                - patch
                - delete
            - apiGroups:
                - coordination.k8s.io
              resources:
                - leases
              verbs:
                - get
                - list
                - watch
                - create
                - update
                - patch
                - delete
            - apiGroups:
                - ""
              resources:
                - events
              verbs:
                - create
                - patch
          serviceAccountName: exascaler-csi-controller-manager
    strategy: deployment
  installModes:
    - supported: false
      type: OwnNamespace
    - supported: false
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
  keywords:
    - Storage
    - CSI
  links:
    - name: DDN website
      url: https://ddn.com/
    - name: EXAScaler CSI file driver documentation
      url: https://github.com/ddnstorage/exa-csi-driver
  maturity: alpha
  provider:
    name: DDN
  relatedImages:
    - image: gcr.io/kubebuilder/kube-rbac-proxy@sha256:d4883d7c622683b3319b5e6b3a7edfbf2594c18060131a8bf64504805f875522
      name: kube-rbac-proxy
    - image: quay.io/ddn/exascaler-csi-driver-operator-controller@sha256:730ce45adccbd134c070a9bad5e30ee01e07b634604f0124b258952866b35a16
      name: manager
  version: 2.2.3

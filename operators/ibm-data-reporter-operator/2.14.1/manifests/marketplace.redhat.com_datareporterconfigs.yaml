apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.1
  creationTimestamp: null
  labels:
    redhat.marketplace.com/name: ibm-data-reporter-operator
  name: datareporterconfigs.marketplace.redhat.com
spec:
  group: marketplace.redhat.com
  names:
    kind: DataReporterConfig
    listKind: DataReporterConfigList
    plural: datareporterconfigs
    singular: datareporterconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DataReporterConfig is the Schema for the datareporterconfigs
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DataReporterConfigSpec defines the desired state of DataReporterConfig.
            properties:
              confirmDelivery:
                description: 'ConfirmDelivery configures the api handler. Takes priority
                  over configuring ComponentConfig. true: skips the EventEngine accumulator
                  and generates 1 report with 1 event. The handler will wait for 200
                  OK for DataService delivery before returning 200 OK. false: enters
                  the event into the EventEngine accumulator and generates 1 report
                  with N events. The handler will return a 200 OK for DataService
                  delivery as long as the event json is valid.'
                type: boolean
              dataFilters:
                description: DataFilter to match incoming event payload against. The
                  first Selector match in the DataFilters array will be applied.
                items:
                  description: DataFilter defines json transformation and alternate
                    event payload destinations based on selector criteria. No Selector
                    indicates match all.
                  properties:
                    altDestinations:
                      items:
                        description: Destination defines an additional endpoint to
                          forward a transformed event payload to.
                        properties:
                          authorization:
                            description: Sets an optional authorization endpoint to
                              first request a token from. The Authorization endpoint
                              is called if the call to the destination URL results
                              in a 403.
                            properties:
                              authDestHeader:
                                description: Sets the additional header map key to
                                  set on the Destination header ("Authorization").
                                type: string
                              authDestHeaderPrefix:
                                description: 'AuthDestHeaderPrefix: the additional
                                  prefix map string value to set on the destHeader
                                  ("Bearer ").'
                                type: string
                              bodyData:
                                description: BodyData refers to a SecretKeyRef containing
                                  body data to POST to authorization endpoint, such
                                  as an api key.
                                properties:
                                  secretKeyRef:
                                    description: SecretKeySelector selects a key of
                                      a Secret.
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              header:
                                description: Sets the sources of the headers to pass
                                  to the client when calling the authorization URL.
                                properties:
                                  secret:
                                    description: Sets the name of the secret that
                                      contains the headers. Secret map key/value pairs
                                      will be used for the header.
                                    properties:
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              tokenExpr:
                                description: TokenExpr is a jsonpath expression used
                                  to parse the authorization response in order to
                                  extract the token.
                                type: string
                              url:
                                description: URL is the authorization endpoint (https://hostname:port/path).
                                type: string
                            required:
                            - url
                            type: object
                          header:
                            description: Sets the sources of the headers to pass to
                              the client when calling the destination URL.
                            properties:
                              secret:
                                description: Sets the name of the secret that contains
                                  the headers. Secret map key/value pairs will be
                                  used for the header.
                                properties:
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          transformer:
                            description: Transformer refers to the Transformer to
                              apply.
                            properties:
                              configMapKeyRef:
                                description: configMapKeyRef refers to the transformation
                                  configuration residing in a ConfigMap
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or
                                      its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                              type:
                                description: 'type is the transformation engine use
                                  supported types: kazaam'
                                type: string
                            type: object
                          url:
                            description: URL is the destination endpoint (https://hostname:port/path).
                            type: string
                          urlSuffixExpr:
                            description: URLSuffixExpr is a jsonpath expression used
                              to parse the event. The result is appended to the destination
                              URL. https://example/path/{URLSuffixExprResult}
                            type: string
                        required:
                        - url
                        type: object
                      type: array
                    manifestType:
                      type: string
                    selector:
                      description: Selector defines criteria for matching incoming
                        event payload.
                      properties:
                        matchExpressions:
                          description: MatchExpressions is a list of jsonpath expressions.
                            To match the Selector, all jsonpath expressions must produce
                            a result (AND).
                          items:
                            type: string
                          type: array
                        matchUsers:
                          description: MatchUsers is a list of users that the dataFilter
                            applies to. If MatchUsers is not specified, the DataFilter
                            applies to all users.
                          items:
                            type: string
                          type: array
                      type: object
                    transformer:
                      description: Transformer defines the type of transformer to
                        use, and where to load the transformation configuration from.
                      properties:
                        configMapKeyRef:
                          description: configMapKeyRef refers to the transformation
                            configuration residing in a ConfigMap
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        type:
                          description: 'type is the transformation engine use supported
                            types: kazaam'
                          type: string
                      type: object
                  type: object
                type: array
              tlsConfig:
                description: TLSConfig specifies TLS configuration parameters for
                  outbound https requests from the client.
                properties:
                  caCerts:
                    description: CACertsSecret refers to a list of secret keys that
                      contains CA certificates in PEM. crypto/tls Config.RootCAs.
                    items:
                      description: SecretKeySelector selects a key of a Secret.
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  certificates:
                    description: Certificates refers to a list of X509KeyPairs consisting
                      of the client public/private key. crypto/tls Config.Certificates.
                    items:
                      description: Certificate refers to the the X509KeyPair, consisting
                        of the secrets containing the key and cert pem.
                      properties:
                        clientCert:
                          description: ClientCert refers to the SecretKeyRef that
                            contains the client cert PEM
                          properties:
                            secretKeyRef:
                              description: SecretKeySelector selects a key of a Secret.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        clientKey:
                          description: ClientKey refers to the SecretKeyRef that contains
                            the client key PEM
                          properties:
                            secretKeyRef:
                              description: SecretKeySelector selects a key of a Secret.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                      type: object
                    type: array
                  cipherSuites:
                    description: CipherSuites is a list of enabled cipher suites.
                      crypto/tls Config.CipherSuites.
                    items:
                      type: string
                    type: array
                  insecureSkipVerify:
                    description: If true, skips creation of TLSConfig with certs and
                      creates an empty TLSConfig. crypto/tls Config.InsecureSkipVerify
                      (Defaults to false).
                    type: boolean
                  minVersion:
                    description: MinVersion contains the minimum TLS version that
                      is acceptable crypto/tls Config.MinVersion.
                    type: string
                type: object
              userConfig:
                items:
                  description: UserConfig defines additional metadata added to a specified
                    users report.
                  properties:
                    metadata:
                      additionalProperties:
                        type: string
                      type: object
                    userName:
                      description: Required.
                      type: string
                  type: object
                type: array
            type: object
          status:
            description: DataReporterConfigStatus defines the observed state of DataReporterConfig
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of an object's stateconfig
                items:
                  description: "Condition represents an observation of an object's
                    state. Conditions are an extension mechanism intended to be used
                    when the details of an observation are not a priori known or would
                    not apply to all instances of a given Kind. \n Conditions should
                    be added to explicitly convey properties that users and components
                    care about rather than requiring those properties to be inferred
                    from other observations. Once defined, the meaning of a Condition
                    can not be changed arbitrarily - it becomes part of the API, and
                    has the same backwards- and forwards-compatibility concerns of
                    any other part of the API."
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      description: ConditionReason is intended to be a one-word, CamelCase
                        representation of the category of cause of the current status.
                        It is intended to be used in concise output, such as one-line
                        kubectl get output, and in summarizing occurrences of causes.
                      type: string
                    status:
                      type: string
                    type:
                      description: "ConditionType is the type of the condition and
                        is typically a CamelCased word or short phrase. \n Condition
                        types should indicate state in the \"abnormal-true\" polarity.
                        For example, if the condition indicates when a policy is invalid,
                        the \"is valid\" case is probably the norm, so the condition
                        should be called \"Invalid\"."
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null

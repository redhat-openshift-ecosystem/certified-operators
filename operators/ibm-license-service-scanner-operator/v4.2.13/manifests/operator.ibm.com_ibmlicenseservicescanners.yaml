apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: null
  name: ibmlicenseservicescanners.operator.ibm.com
spec:
  group: operator.ibm.com
  names:
    kind: IBMLicenseServiceScanner
    listKind: IBMLicenseServiceScannerList
    plural: ibmlicenseservicescanners
    singular: ibmlicenseservicescanner
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: IBMLicenseServiceScanner is the Schema for the ibmlicenseservicescanners
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: IBMLicenseServiceScannerSpec defines the desired state of
              IBMLicenseServiceScanner
            properties:
              annotations:
                additionalProperties:
                  type: string
                description: Custom annotations
                type: object
              container:
                description: Container configuration of the operand (scanner)
                properties:
                  image-pull-policy:
                    description: Set scanner's image pull policy
                    enum:
                    - Always
                    - IfNotPresent
                    - Never
                    type: string
                  image-pull-prefix:
                    description: Set scanner's image registry prefix
                    type: string
                  image-pull-secrets:
                    description: Set scanner's image pull secrets
                    items:
                      type: string
                    type: array
                  resources:
                    description: Configure scanner's resource requirements
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                type: object
              enableInstanaMetricCollection:
                description: Enabling collection of Instana metrics
                type: boolean
              labels:
                additionalProperties:
                  type: string
                description: Custom labels
                type: object
              license:
                description: IBM License Service Scanner license acceptance
                properties:
                  accept:
                    description: 'Accept the license terms: ibm.biz/lsvc-lic'
                    type: boolean
                    x-kubernetes-validations:
                    - message: 'Please accept the license terms (ibm.biz/lsvc-lic)
                        by setting the field "spec.license.accept: true"'
                      rule: self == true
                required:
                - accept
                type: object
              license-service-upload-secret:
                description: Reference pointing to the license service API secret
                  with a valid url, token, and certificate
                type: string
              log-level:
                description: 'Controls logger''s verbosity, options: DEBUG, INFO'
                enum:
                - DEBUG
                - INFO
                type: string
              registries:
                description: List of registries which method of authentication is
                  other than license-service-upload-secret secret.
                items:
                  description: RegistryDetails with host address, authentication method
                    and auth credentials
                  properties:
                    auth-method:
                      description: Authentication method. For now, only supported
                        method is VAULT
                      enum:
                      - VAULT
                      type: string
                    host:
                      description: URL of registry host
                      type: string
                    name:
                      description: Name of container registry
                      type: string
                    username:
                      description: Username used for login to container registry
                      type: string
                    vault:
                      description: Details for Vault authentication
                      properties:
                        cert:
                          description: Certificate to allow HTTPS (SSL secured) connection
                            with Vault API
                          type: string
                        key:
                          description: Key under which registry pull secret is stored
                            in Vault secret
                          type: string
                        login-url:
                          description: Vault API URL used to authenticate in Vault
                          type: string
                        role:
                          description: Role created in Vault with permission to read
                            registry pull secret stored in Vault secret
                          type: string
                        secret-url:
                          description: URL pointing to Vault secret which contains
                            key, value pairs of registry pull secret data
                          type: string
                        service-account:
                          description: Name of ServiceAccount with configured access
                            to Vault
                          type: string
                      required:
                      - cert
                      - key
                      - login-url
                      - role
                      - secret-url
                      - service-account
                      type: object
                  required:
                  - auth-method
                  - host
                  - name
                  - username
                  type: object
                type: array
              registry-pull-secret:
                description: Reference pointing to the secret enabling pulling images
                  from the image registry
                type: string
              scan:
                description: Configuration of the scanner's cron job
                properties:
                  frequency:
                    description: Frequency of the scans in the cron job format
                    pattern: (@(annually|yearly|monthly|weekly|daily|midnight|hourly))|((((\d+,)+\d+|(\d+(\/|-)\d+)|\d+|\*)
                      ?){5,7})
                    type: string
                  namespaces:
                    description: Namespaces to be scanned
                    items:
                      type: string
                    type: array
                    x-kubernetes-validations:
                    - message: You must provide at least one namespace to be scanned
                      rule: self.size()>0
                  startingDeadlineSeconds:
                    description: Set the "expiry" period of scheduled but not started
                      jobs, in seconds
                    format: int64
                    type: integer
                  suspend:
                    description: Set to true to suspend the cron job
                    type: boolean
                required:
                - namespaces
                type: object
            required:
            - license
            - license-service-upload-secret
            - registry-pull-secret
            - scan
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            description: IBMLicenseServiceScannerStatus defines the observed state
              of IBMLicenseServiceScanner
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null

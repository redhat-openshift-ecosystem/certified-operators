apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: ibm-licensing-operator
    app.kubernetes.io/managed-by: ibm-licensing-operator
    app.kubernetes.io/name: ibm-licensing
  name: ibmlicensings.operator.ibm.com
spec:
  group: operator.ibm.com
  names:
    kind: IBMLicensing
    listKind: IBMLicensingList
    plural: ibmlicensings
    singular: ibmlicensing
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status..phase
      name: Pod Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          IBMLicensing custom resource is used to create an instance of the License Service, used to collect information about license usage of IBM containerized products and IBM Cloud Paks per cluster.
          You can retrieve license usage data through a dedicated API call and generate an audit snapshot on demand.
          Documentation: For additional details regarding install parameters check: https://ibm.biz/icpfs39install.
          License: Please refer to the IBM Terms website (ibm.biz/lsvc-lic)
          to find the license terms for the particular IBM product for which you are deploying this component.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: IBMLicensingSpec defines the desired state of IBMLicensing
            properties:
              annotations:
                additionalProperties:
                  type: string
                description: Annotations to be copied into all relevant resources
                type: object
              apiSecretToken:
                description: Secret name used to store application token, either one
                  that exists, or one that will be created
                type: string
              chargebackEnabled:
                description: Consider updating to enable chargeback feature
                type: boolean
              chargebackRetentionPeriod:
                description: Chargeback data retention period in days. Default value
                  is 62 days.
                type: integer
              datasource:
                description: 'Where should data be collected, options: metering, datacollector'
                enum:
                - metering
                - datacollector
                type: string
              enableInstanaMetricCollection:
                description: Enabling collection of Instana metrics
                type: boolean
              envVariable:
                additionalProperties:
                  type: string
                description: Environment variable setting
                type: object
              features:
                description: Set additional features under this field
                properties:
                  alerting:
                    description: Change alerting settings.
                    properties:
                      enabled:
                        description: Should this function be enabled.
                        type: boolean
                    type: object
                  auth:
                    description: Authorization settings.
                    properties:
                      urlBasedEnabled:
                        description: Enable URL based Auth
                        type: boolean
                    required:
                    - urlBasedEnabled
                    type: object
                  hyperThreading:
                    description: Configure if you have HyperThreading (HT) or Symmetrical
                      Multi-Threading (SMT) enabled
                    properties:
                      threadsPerCore:
                        description: Set the value based on the lowest HT/SMT value
                          based on the lowest configuration of worker nodes
                        enum:
                        - 1
                        - 2
                        - 4
                        - 8
                        type: integer
                    required:
                    - threadsPerCore
                    type: object
                  nssConfigMap:
                    description: Special terms, must be granted by IBM Pricing.
                    type: string
                  nssDenialLimit:
                    description: Limit for failed namespace access attempts before
                      reporting an error in custom namespaces scoping.
                    type: integer
                  nssEnabled:
                    description: Special terms, must be granted by IBM Pricing.
                    type: boolean
                  prometheusQuerySource:
                    description: Change prometheus query source settings.
                    properties:
                      enabled:
                        description: Should this function be enabled (by default it
                          is).
                        type: boolean
                      url:
                        description: What url to use for prometheus API (by default
                          use OCP Thanos Querier).
                        type: string
                    type: object
                type: object
              httpsCertsSource:
                description: 'options: self-signed or custom'
                enum:
                - self-signed
                - custom
                - ocp
                type: string
              httpsEnable:
                description: Enables https access at pod level, httpsCertsSource needed
                  if true
                type: boolean
              imageName:
                description: IBM Licensing Service docker Image Name, will override
                  default value and disable IBM_LICENSING_IMAGE env value in operator
                  deployment
                type: string
              imagePullPolicy:
                description: PullPolicy describes a policy for if/when to pull a container
                  image
                enum:
                - Always
                - IfNotPresent
                - Never
                type: string
              imagePullSecrets:
                description: Array of pull secrets which should include existing at
                  InstanceNamespace secret to allow pulling IBM Licensing image
                items:
                  type: string
                type: array
              imageRegistry:
                description: IBM Licensing Service docker Image Registry, will override
                  default value and disable IBM_LICENSING_IMAGE env value in operator
                  deployment
                type: string
              imageTagPostfix:
                description: IBM Licensing Service docker Image Tag or Digest, will
                  override default value and disable IBM_LICENSING_IMAGE env value
                  in operator deployment
                type: string
              ingressEnabled:
                description: Should Ingress be created to expose IBM Licensing Service
                  API?
                type: boolean
              ingressOptions:
                description: If ingress is enabled, you can set its parameters
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: Additional annotations that should include f.e. ingress
                      class if using not default ingress controller
                    type: object
                  host:
                    description: If you use non-default host include it here
                    type: string
                  ingressClassName:
                    description: IngressClassName defines ingress class name option
                      to be passed to the ingress spec field
                    type: string
                  path:
                    description: Path after host where API will be available f.e.
                      https://<hostname>:<port>/ibm-licensing-service-instance
                    type: string
                  tls:
                    description: TLS Options to enable secure connection
                    items:
                      description: IngressTLS describes the transport layer security
                        associated with an Ingress.
                      properties:
                        hosts:
                          description: |-
                            Hosts are a list of hosts included in the TLS certificate. The values in
                            this list must match the name/s used in the tlsSecret. Defaults to the
                            wildcard host setting for the loadbalancer controller fulfilling this
                            Ingress, if left unspecified.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        secretName:
                          description: |-
                            SecretName is the name of the secret used to terminate TLS traffic on
                            port 443. Field is left optional to allow TLS routing based on SNI
                            hostname alone. If the SNI host in a listener conflicts with the "Host"
                            header field used by an IngressRule, the SNI host is used for termination
                            and value of the Host header is used for routing.
                          type: string
                      type: object
                    type: array
                type: object
              instanceNamespace:
                description: |-
                  Existing or to be created namespace where application will start. In case metering data collection is used,
                  should be the same namespace as metering components
                type: string
              labels:
                additionalProperties:
                  type: string
                description: Labels to be copied into all relevant resources
                type: object
              license:
                description: IBM License Service license acceptance.
                properties:
                  accept:
                    description: 'By installing the IBM License Service, you accept
                      the license terms for the particular IBM product for which you
                      are deploying this component: ibm.biz/lsvc-lic.'
                    type: boolean
                type: object
              logLevel:
                description: 'Should application pod show additional information,
                  options: DEBUG, INFO, VERBOSE'
                enum:
                - DEBUG
                - INFO
                - VERBOSE
                type: string
              resources:
                description: ResourceRequirements describes the compute resource requirements.
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Limits describes the maximum amount of compute resources allowed.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Requests describes the minimum amount of compute resources required.
                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                      otherwise to an implementation-defined value.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              rhmpEnabled:
                description: Is Red Hat Marketplace enabled
                type: boolean
              routeEnabled:
                description: Should Route be created to expose IBM Licensing Service
                  API? (only on OpenShift cluster)
                type: boolean
              routeOptions:
                description: Route parameters
                properties:
                  tls:
                    description: TLSConfig defines config used to secure a route and
                      provide termination
                    properties:
                      caCertificate:
                        description: caCertificate provides the cert authority certificate
                          contents
                        type: string
                      certificate:
                        description: |-
                          certificate provides certificate contents. This should be a single serving certificate, not a certificate
                          chain. Do not include a CA certificate.
                        type: string
                      destinationCACertificate:
                        description: |-
                          destinationCACertificate provides the contents of the ca certificate of the final destination.  When using reencrypt
                          termination this file should be provided in order to have routers use it for health checks on the secure connection.
                          If this field is not specified, the router may provide its own destination CA and perform hostname validation using
                          the short service name (service.namespace.svc), which allows infrastructure generated certificates to automatically
                          verify.
                        type: string
                      insecureEdgeTerminationPolicy:
                        description: |-
                          insecureEdgeTerminationPolicy indicates the desired behavior for insecure connections to a route. While
                          each router may make its own decisions on which ports to expose, this is normally port 80.


                          * Allow - traffic is sent to the server on the insecure port (default)
                          * Disable - no traffic is allowed on the insecure port.
                          * Redirect - clients are redirected to the secure port.
                        type: string
                      key:
                        description: key provides key file contents
                        type: string
                      termination:
                        description: |-
                          termination indicates termination type.


                          * edge - TLS termination is done by the router and http is used to communicate with the backend (default)
                          * passthrough - Traffic is sent straight to the destination without the router providing TLS termination
                          * reencrypt - TLS termination is done by the router and https is used to communicate with the backend
                        enum:
                        - edge
                        - reencrypt
                        - passthrough
                        type: string
                    required:
                    - termination
                    type: object
                type: object
              securityContext:
                description: If default SCC user ID fails, you can set runAsUser option
                  to fix that
                properties:
                  runAsUser:
                    format: int64
                    type: integer
                required:
                - runAsUser
                type: object
              sender:
                description: Sender configuration, set if you have multi-cluster environment
                  from which you collect data
                properties:
                  clusterID:
                    description: Unique ID of reporting cluster
                    type: string
                  clusterName:
                    description: What is the name of this reporting cluster in multi-cluster
                      system. If not provided, CLUSTER_ID will be used as CLUSTER_NAME
                      at Operand level
                    type: string
                  frequency:
                    description: Frequency of workloads scans as cron expression.
                      If not provided, workloads reporting is disabled.
                    pattern: (@(annually|yearly|monthly|weekly|daily|midnight|hourly))|((((\d+,)+\d+|(\d+(\/|-)\d+)|\d+|\*)
                      ?){5,7})
                    type: string
                  reporterCertsSecretName:
                    description: Name of the secret that contains the License Service
                      Reporter certificate(s) used to establish a secure connection
                      with it. You need to create it in instance namespace
                    type: string
                  reporterSecretToken:
                    description: License Service Reporter authentication token, provided
                      by secret that you need to create in instance namespace
                    type: string
                  reporterURL:
                    description: URL for License Service Reporter receiver that collects
                      and aggregate multi cluster licensing data.
                    type: string
                  validateReporterCerts:
                    description: Enable certificates validation when uploading data
                      to the License Service Reporter
                    type: boolean
                type: object
              version:
                description: Version
                type: string
            required:
            - datasource
            - httpsEnable
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            description: IBMLicensingStatus defines the observed state of IBMLicensing
            properties:
              features:
                properties:
                  rhmpEnabled:
                    type: boolean
                type: object
              licensingPods:
                description: The status of IBM License Service Pods.
                items:
                  description: |-
                    PodStatus represents information about the status of a pod. Status may trail the actual
                    state of a system, especially if the node that hosts the pod cannot contact the control
                    plane.
                  properties:
                    conditions:
                      description: |-
                        Current service state of pod.
                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions
                      items:
                        description: PodCondition contains details for the current
                          condition of this pod.
                        properties:
                          lastProbeTime:
                            description: Last time we probed the condition.
                            format: date-time
                            type: string
                          lastTransitionTime:
                            description: Last time the condition transitioned from
                              one status to another.
                            format: date-time
                            type: string
                          message:
                            description: Human-readable message indicating details
                              about last transition.
                            type: string
                          reason:
                            description: Unique, one-word, CamelCase reason for the
                              condition's last transition.
                            type: string
                          status:
                            description: |-
                              Status is the status of the condition.
                              Can be True, False, Unknown.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions
                            type: string
                          type:
                            description: |-
                              Type is the type of the condition.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions
                            type: string
                        required:
                        - status
                        - type
                        type: object
                      type: array
                    containerStatuses:
                      description: |-
                        The list has one entry per container in the manifest.
                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status
                      items:
                        description: ContainerStatus contains details for the current
                          status of this container.
                        properties:
                          containerID:
                            description: Container's ID in the format '<type>://<container_id>'.
                            type: string
                          image:
                            description: |-
                              The image the container is running.
                              More info: https://kubernetes.io/docs/concepts/containers/images.
                            type: string
                          imageID:
                            description: ImageID of the container's image.
                            type: string
                          lastState:
                            description: Details about the container's last termination
                              condition.
                            properties:
                              running:
                                description: Details about a running container
                                properties:
                                  startedAt:
                                    description: Time at which the container was last
                                      (re-)started
                                    format: date-time
                                    type: string
                                type: object
                              terminated:
                                description: Details about a terminated container
                                properties:
                                  containerID:
                                    description: Container's ID in the format '<type>://<container_id>'
                                    type: string
                                  exitCode:
                                    description: Exit status from the last termination
                                      of the container
                                    format: int32
                                    type: integer
                                  finishedAt:
                                    description: Time at which the container last
                                      terminated
                                    format: date-time
                                    type: string
                                  message:
                                    description: Message regarding the last termination
                                      of the container
                                    type: string
                                  reason:
                                    description: (brief) reason from the last termination
                                      of the container
                                    type: string
                                  signal:
                                    description: Signal from the last termination
                                      of the container
                                    format: int32
                                    type: integer
                                  startedAt:
                                    description: Time at which previous execution
                                      of the container started
                                    format: date-time
                                    type: string
                                required:
                                - exitCode
                                type: object
                              waiting:
                                description: Details about a waiting container
                                properties:
                                  message:
                                    description: Message regarding why the container
                                      is not yet running.
                                    type: string
                                  reason:
                                    description: (brief) reason the container is not
                                      yet running.
                                    type: string
                                type: object
                            type: object
                          name:
                            description: |-
                              This must be a DNS_LABEL. Each container in a pod must have a unique name.
                              Cannot be updated.
                            type: string
                          ready:
                            description: Specifies whether the container has passed
                              its readiness probe.
                            type: boolean
                          restartCount:
                            description: The number of times the container has been
                              restarted.
                            format: int32
                            type: integer
                          started:
                            description: |-
                              Specifies whether the container has passed its startup probe.
                              Initialized as false, becomes true after startupProbe is considered successful.
                              Resets to false when the container is restarted, or if kubelet loses state temporarily.
                              Is always true when no startupProbe is defined.
                            type: boolean
                          state:
                            description: Details about the container's current condition.
                            properties:
                              running:
                                description: Details about a running container
                                properties:
                                  startedAt:
                                    description: Time at which the container was last
                                      (re-)started
                                    format: date-time
                                    type: string
                                type: object
                              terminated:
                                description: Details about a terminated container
                                properties:
                                  containerID:
                                    description: Container's ID in the format '<type>://<container_id>'
                                    type: string
                                  exitCode:
                                    description: Exit status from the last termination
                                      of the container
                                    format: int32
                                    type: integer
                                  finishedAt:
                                    description: Time at which the container last
                                      terminated
                                    format: date-time
                                    type: string
                                  message:
                                    description: Message regarding the last termination
                                      of the container
                                    type: string
                                  reason:
                                    description: (brief) reason from the last termination
                                      of the container
                                    type: string
                                  signal:
                                    description: Signal from the last termination
                                      of the container
                                    format: int32
                                    type: integer
                                  startedAt:
                                    description: Time at which previous execution
                                      of the container started
                                    format: date-time
                                    type: string
                                required:
                                - exitCode
                                type: object
                              waiting:
                                description: Details about a waiting container
                                properties:
                                  message:
                                    description: Message regarding why the container
                                      is not yet running.
                                    type: string
                                  reason:
                                    description: (brief) reason the container is not
                                      yet running.
                                    type: string
                                type: object
                            type: object
                        required:
                        - image
                        - imageID
                        - name
                        - ready
                        - restartCount
                        type: object
                      type: array
                    ephemeralContainerStatuses:
                      description: Status for any ephemeral containers that have run
                        in this pod.
                      items:
                        description: ContainerStatus contains details for the current
                          status of this container.
                        properties:
                          containerID:
                            description: Container's ID in the format '<type>://<container_id>'.
                            type: string
                          image:
                            description: |-
                              The image the container is running.
                              More info: https://kubernetes.io/docs/concepts/containers/images.
                            type: string
                          imageID:
                            description: ImageID of the container's image.
                            type: string
                          lastState:
                            description: Details about the container's last termination
                              condition.
                            properties:
                              running:
                                description: Details about a running container
                                properties:
                                  startedAt:
                                    description: Time at which the container was last
                                      (re-)started
                                    format: date-time
                                    type: string
                                type: object
                              terminated:
                                description: Details about a terminated container
                                properties:
                                  containerID:
                                    description: Container's ID in the format '<type>://<container_id>'
                                    type: string
                                  exitCode:
                                    description: Exit status from the last termination
                                      of the container
                                    format: int32
                                    type: integer
                                  finishedAt:
                                    description: Time at which the container last
                                      terminated
                                    format: date-time
                                    type: string
                                  message:
                                    description: Message regarding the last termination
                                      of the container
                                    type: string
                                  reason:
                                    description: (brief) reason from the last termination
                                      of the container
                                    type: string
                                  signal:
                                    description: Signal from the last termination
                                      of the container
                                    format: int32
                                    type: integer
                                  startedAt:
                                    description: Time at which previous execution
                                      of the container started
                                    format: date-time
                                    type: string
                                required:
                                - exitCode
                                type: object
                              waiting:
                                description: Details about a waiting container
                                properties:
                                  message:
                                    description: Message regarding why the container
                                      is not yet running.
                                    type: string
                                  reason:
                                    description: (brief) reason the container is not
                                      yet running.
                                    type: string
                                type: object
                            type: object
                          name:
                            description: |-
                              This must be a DNS_LABEL. Each container in a pod must have a unique name.
                              Cannot be updated.
                            type: string
                          ready:
                            description: Specifies whether the container has passed
                              its readiness probe.
                            type: boolean
                          restartCount:
                            description: The number of times the container has been
                              restarted.
                            format: int32
                            type: integer
                          started:
                            description: |-
                              Specifies whether the container has passed its startup probe.
                              Initialized as false, becomes true after startupProbe is considered successful.
                              Resets to false when the container is restarted, or if kubelet loses state temporarily.
                              Is always true when no startupProbe is defined.
                            type: boolean
                          state:
                            description: Details about the container's current condition.
                            properties:
                              running:
                                description: Details about a running container
                                properties:
                                  startedAt:
                                    description: Time at which the container was last
                                      (re-)started
                                    format: date-time
                                    type: string
                                type: object
                              terminated:
                                description: Details about a terminated container
                                properties:
                                  containerID:
                                    description: Container's ID in the format '<type>://<container_id>'
                                    type: string
                                  exitCode:
                                    description: Exit status from the last termination
                                      of the container
                                    format: int32
                                    type: integer
                                  finishedAt:
                                    description: Time at which the container last
                                      terminated
                                    format: date-time
                                    type: string
                                  message:
                                    description: Message regarding the last termination
                                      of the container
                                    type: string
                                  reason:
                                    description: (brief) reason from the last termination
                                      of the container
                                    type: string
                                  signal:
                                    description: Signal from the last termination
                                      of the container
                                    format: int32
                                    type: integer
                                  startedAt:
                                    description: Time at which previous execution
                                      of the container started
                                    format: date-time
                                    type: string
                                required:
                                - exitCode
                                type: object
                              waiting:
                                description: Details about a waiting container
                                properties:
                                  message:
                                    description: Message regarding why the container
                                      is not yet running.
                                    type: string
                                  reason:
                                    description: (brief) reason the container is not
                                      yet running.
                                    type: string
                                type: object
                            type: object
                        required:
                        - image
                        - imageID
                        - name
                        - ready
                        - restartCount
                        type: object
                      type: array
                    hostIP:
                      description: IP address of the host to which the pod is assigned.
                        Empty if not yet scheduled.
                      type: string
                    initContainerStatuses:
                      description: |-
                        The list has one entry per init container in the manifest. The most recent successful
                        init container will have ready = true, the most recently started container will have
                        startTime set.
                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status
                      items:
                        description: ContainerStatus contains details for the current
                          status of this container.
                        properties:
                          containerID:
                            description: Container's ID in the format '<type>://<container_id>'.
                            type: string
                          image:
                            description: |-
                              The image the container is running.
                              More info: https://kubernetes.io/docs/concepts/containers/images.
                            type: string
                          imageID:
                            description: ImageID of the container's image.
                            type: string
                          lastState:
                            description: Details about the container's last termination
                              condition.
                            properties:
                              running:
                                description: Details about a running container
                                properties:
                                  startedAt:
                                    description: Time at which the container was last
                                      (re-)started
                                    format: date-time
                                    type: string
                                type: object
                              terminated:
                                description: Details about a terminated container
                                properties:
                                  containerID:
                                    description: Container's ID in the format '<type>://<container_id>'
                                    type: string
                                  exitCode:
                                    description: Exit status from the last termination
                                      of the container
                                    format: int32
                                    type: integer
                                  finishedAt:
                                    description: Time at which the container last
                                      terminated
                                    format: date-time
                                    type: string
                                  message:
                                    description: Message regarding the last termination
                                      of the container
                                    type: string
                                  reason:
                                    description: (brief) reason from the last termination
                                      of the container
                                    type: string
                                  signal:
                                    description: Signal from the last termination
                                      of the container
                                    format: int32
                                    type: integer
                                  startedAt:
                                    description: Time at which previous execution
                                      of the container started
                                    format: date-time
                                    type: string
                                required:
                                - exitCode
                                type: object
                              waiting:
                                description: Details about a waiting container
                                properties:
                                  message:
                                    description: Message regarding why the container
                                      is not yet running.
                                    type: string
                                  reason:
                                    description: (brief) reason the container is not
                                      yet running.
                                    type: string
                                type: object
                            type: object
                          name:
                            description: |-
                              This must be a DNS_LABEL. Each container in a pod must have a unique name.
                              Cannot be updated.
                            type: string
                          ready:
                            description: Specifies whether the container has passed
                              its readiness probe.
                            type: boolean
                          restartCount:
                            description: The number of times the container has been
                              restarted.
                            format: int32
                            type: integer
                          started:
                            description: |-
                              Specifies whether the container has passed its startup probe.
                              Initialized as false, becomes true after startupProbe is considered successful.
                              Resets to false when the container is restarted, or if kubelet loses state temporarily.
                              Is always true when no startupProbe is defined.
                            type: boolean
                          state:
                            description: Details about the container's current condition.
                            properties:
                              running:
                                description: Details about a running container
                                properties:
                                  startedAt:
                                    description: Time at which the container was last
                                      (re-)started
                                    format: date-time
                                    type: string
                                type: object
                              terminated:
                                description: Details about a terminated container
                                properties:
                                  containerID:
                                    description: Container's ID in the format '<type>://<container_id>'
                                    type: string
                                  exitCode:
                                    description: Exit status from the last termination
                                      of the container
                                    format: int32
                                    type: integer
                                  finishedAt:
                                    description: Time at which the container last
                                      terminated
                                    format: date-time
                                    type: string
                                  message:
                                    description: Message regarding the last termination
                                      of the container
                                    type: string
                                  reason:
                                    description: (brief) reason from the last termination
                                      of the container
                                    type: string
                                  signal:
                                    description: Signal from the last termination
                                      of the container
                                    format: int32
                                    type: integer
                                  startedAt:
                                    description: Time at which previous execution
                                      of the container started
                                    format: date-time
                                    type: string
                                required:
                                - exitCode
                                type: object
                              waiting:
                                description: Details about a waiting container
                                properties:
                                  message:
                                    description: Message regarding why the container
                                      is not yet running.
                                    type: string
                                  reason:
                                    description: (brief) reason the container is not
                                      yet running.
                                    type: string
                                type: object
                            type: object
                        required:
                        - image
                        - imageID
                        - name
                        - ready
                        - restartCount
                        type: object
                      type: array
                    message:
                      description: A human readable message indicating details about
                        why the pod is in this condition.
                      type: string
                    nominatedNodeName:
                      description: |-
                        nominatedNodeName is set only when this pod preempts other pods on the node, but it cannot be
                        scheduled right away as preemption victims receive their graceful termination periods.
                        This field does not guarantee that the pod will be scheduled on this node. Scheduler may decide
                        to place the pod elsewhere if other nodes become available sooner. Scheduler may also decide to
                        give the resources on this node to a higher priority pod that is created after preemption.
                        As a result, this field may be different than PodSpec.nodeName when the pod is
                        scheduled.
                      type: string
                    phase:
                      description: |-
                        The phase of a Pod is a simple, high-level summary of where the Pod is in its lifecycle.
                        The conditions array, the reason and message fields, and the individual container status
                        arrays contain more detail about the pod's status.
                        There are five possible phase values:


                        Pending: The pod has been accepted by the Kubernetes system, but one or more of the
                        container images has not been created. This includes time before being scheduled as
                        well as time spent downloading images over the network, which could take a while.
                        Running: The pod has been bound to a node, and all of the containers have been created.
                        At least one container is still running, or is in the process of starting or restarting.
                        Succeeded: All containers in the pod have terminated in success, and will not be restarted.
                        Failed: All containers in the pod have terminated, and at least one container has
                        terminated in failure. The container either exited with non-zero status or was terminated
                        by the system.
                        Unknown: For some reason the state of the pod could not be obtained, typically due to an
                        error in communicating with the host of the pod.


                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-phase
                      type: string
                    podIP:
                      description: |-
                        IP address allocated to the pod. Routable at least within the cluster.
                        Empty if not yet allocated.
                      type: string
                    podIPs:
                      description: |-
                        podIPs holds the IP addresses allocated to the pod. If this field is specified, the 0th entry must
                        match the podIP field. Pods may be allocated at most 1 value for each of IPv4 and IPv6. This list
                        is empty if no IPs have been allocated yet.
                      items:
                        description: "IP address information for entries in the (plural)
                          PodIPs field.\nEach entry includes:\n\n\n\tIP: An IP address
                          allocated to the pod. Routable at least within the cluster."
                        properties:
                          ip:
                            description: ip is an IP address (IPv4 or IPv6) assigned
                              to the pod
                            type: string
                        type: object
                      type: array
                    qosClass:
                      description: |-
                        The Quality of Service (QOS) classification assigned to the pod based on resource requirements
                        See PodQOSClass type for available QOS classes
                        More info: https://git.k8s.io/community/contributors/design-proposals/node/resource-qos.md
                      type: string
                    reason:
                      description: |-
                        A brief CamelCase message indicating details about why the pod is in this state.
                        e.g. 'Evicted'
                      type: string
                    startTime:
                      description: |-
                        RFC 3339 date and time at which the object was acknowledged by the Kubelet.
                        This is before the Kubelet pulled the container image(s) for the pod.
                      format: date-time
                      type: string
                  type: object
                type: array
              state:
                description: State field that defines status of the IBMLicensing
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: zenservices.zen.cpd.ibm.com
  labels:
    app.kubernetes.io/instance: zenservice.zen.cpd.ibm.com
    app.kubernetes.io/managed-by: ibm-zen-operator
    app.kubernetes.io/name: zenservice.zen.cpd.ibm.com
spec:
  group: zen.cpd.ibm.com
  names:
    kind: ZenService
    listKind: ZenServiceList
    plural: zenservices
    singular: zenservice
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The version of the zenservice
      jsonPath: .spec.version
      name: Version
      type: string
    - description: The status of the zenservice
      jsonPath: .status.zenStatus
      name: Status
      type: string
    - description: The age of the zenservice
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: ZenService is the Schema for the zenservices API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: |+
              * storageClass: if storageVendor is not set, then identify a File storage class that supports RWX access mode as the default class
              * zenCoreMetaDbStorageClass: overrides the default storageClass value specified. Highly recommended that a Block storage class be specified for reliability
              * storageVendor: predefined storage name, one of ocs|portwrox
              * acceptRollback: must be set to True explicitly to start a rollback, and set to False/No after rollback is finished
              * cloudpakfordata: (internal)set to True to install CP4D role, used only by the Cloud Pak for Data Platform Operator
              * iamIntegration: must be set to True to integrate with bedrock iam service
              * zenCustomRoute: customized/external zen route, following subkey supported
                  route_host: subkey for the customized/external zen hostname
              * scaleConfig: T-Shirt size for zen deployments, one of small, medium and large. Default is small
              * version: select a supported version to pin the zen deployments to. The default is to pick the latest, which is highly recommended.
              * zen_vault_enabled: must be set to True to enable support for external Vaults and introduce associated permissions
              * ignoreForMaintenance: set to True to temporarily pause the Zen operator's reconcile loop for maintenance.
                For example, during quiesced backups or during upgrade or as recommended by IBM support
              * enableTopologyZone: must be set to True to enable multi-zone key: topology.kubernetes.io/zone
              * enableTopologyRegion: must be set to True to enable multi-region key: topology.kubernetes.io/region
              * customizedTopologyKey: specify the custom topology key if this value has been changed in the cluster
              * nodeTaints: identify a node selector to set node tolerations for optionally isolating specific Zen pods
                that require kubernetes RBAC to dedicated "controller" nodes. For example nodeTaints: "onlyfor=cpd-controllers:NoExecute"
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            description: Status defines the observed state of ZenService
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

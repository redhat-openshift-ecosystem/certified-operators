apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: hooks.triliovault.trilio.io
spec:
  group: triliovault.trilio.io
  names:
    kind: Hook
    listKind: HookList
    plural: hooks
    singular: hook
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Hook is the Schema for the hooks API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: HookSpec defines the desired state of Hook.
            properties:
              post:
                description: PostHook is the Hook executed to unquiesce the application
                  after backup operation
                properties:
                  execAction:
                    description: ExecAction is a Command to be executed as a part
                      of Hook. Specifies the action to take. Commands should include
                      what shell to use or the commands and its args which will be
                      able to run without the shell. User can provide multiple commands
                      merged as a part of a single command in the ExecAction. Shell
                      Script Ex. ["/bin/bash", "-c", "echo hello > hello.txt && echo
                      goodbye > goodbye.txt"]
                    properties:
                      command:
                        description: Command is the command line to execute inside
                          the container, the working directory for the command  is
                          root ('/') in the container's filesystem. The command is
                          simply exec'd, it is not run inside a shell, so traditional
                          shell instructions ('|', etc) won't work. To use a shell,
                          you need to explicitly call out to that shell. Exit status
                          of 0 is treated as live/healthy and non-zero is unhealthy.
                        items:
                          type: string
                        type: array
                    type: object
                  ignoreFailure:
                    description: IgnoreFailure is a boolean, if set to true all the
                      failures will be ignored both in pre and post hooks Default
                      is false.
                    type: boolean
                  maxRetryCount:
                    description: MaxRetryCount count will be used to retry hook execution
                      within the time range specified by Timeout in `TimeoutSeconds`
                      field. Hook execution will be considered in error if it fails
                      to complete within `MaxRetryCount`. Each retry count will be
                      run with timeout of `TimeoutSeconds` field. Default is 0
                    maximum: 10
                    minimum: 0
                    type: integer
                  timeoutSeconds:
                    description: TimeoutSeconds is A Maximum allowed time in seconds
                      for each retry count according to value set in `MaxRetryCount`
                      field to execute Hook. timeout here is a hard timeout. MaxRetryCount
                      field is related to TimeoutSeconds, Meaning each retry count
                      will run with a timeout of `TimeoutSeconds`. The command needs
                      to exit in that time, either with exit code 0 or non 0.
                    maximum: 300
                    minimum: 1
                    type: integer
                required:
                - execAction
                type: object
              pre:
                description: PreHook is the Hook executed to quiesce the application
                  before backup operation
                properties:
                  execAction:
                    description: ExecAction is a Command to be executed as a part
                      of Hook. Specifies the action to take. Commands should include
                      what shell to use or the commands and its args which will be
                      able to run without the shell. User can provide multiple commands
                      merged as a part of a single command in the ExecAction. Shell
                      Script Ex. ["/bin/bash", "-c", "echo hello > hello.txt && echo
                      goodbye > goodbye.txt"]
                    properties:
                      command:
                        description: Command is the command line to execute inside
                          the container, the working directory for the command  is
                          root ('/') in the container's filesystem. The command is
                          simply exec'd, it is not run inside a shell, so traditional
                          shell instructions ('|', etc) won't work. To use a shell,
                          you need to explicitly call out to that shell. Exit status
                          of 0 is treated as live/healthy and non-zero is unhealthy.
                        items:
                          type: string
                        type: array
                    type: object
                  ignoreFailure:
                    description: IgnoreFailure is a boolean, if set to true all the
                      failures will be ignored both in pre and post hooks Default
                      is false.
                    type: boolean
                  maxRetryCount:
                    description: MaxRetryCount count will be used to retry hook execution
                      within the time range specified by Timeout in `TimeoutSeconds`
                      field. Hook execution will be considered in error if it fails
                      to complete within `MaxRetryCount`. Each retry count will be
                      run with timeout of `TimeoutSeconds` field. Default is 0
                    maximum: 10
                    minimum: 0
                    type: integer
                  timeoutSeconds:
                    description: TimeoutSeconds is A Maximum allowed time in seconds
                      for each retry count according to value set in `MaxRetryCount`
                      field to execute Hook. timeout here is a hard timeout. MaxRetryCount
                      field is related to TimeoutSeconds, Meaning each retry count
                      will run with a timeout of `TimeoutSeconds`. The command needs
                      to exit in that time, either with exit code 0 or non 0.
                    maximum: 300
                    minimum: 1
                    type: integer
                required:
                - execAction
                type: object
            required:
            - post
            - pre
            type: object
          status:
            description: HookStatus defines the observed state of Hook.
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

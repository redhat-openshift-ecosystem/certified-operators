apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: clusters.storage.lightbitslabs.com
spec:
  group: storage.lightbitslabs.com
  names:
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.clusterAdminSecretName
      name: SecretName
      type: string
    - jsonPath: .status.message
      name: Status
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Cluster is the Schema for the clusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSpec defines the desired state of Cluster
            properties:
              addresses:
                items:
                  description: EndpointAddress is a tuple that describes single IP
                    address.
                  properties:
                    hostname:
                      description: The Hostname of this endpoint
                      type: string
                    ip:
                      description: 'The IP of this endpoint. May not be loopback (127.0.0.0/8),
                        link-local (169.254.0.0/16), or link-local multicast ((224.0.0.0/24).
                        IPv6 is also accepted but not fully supported on all platforms.
                        Also, certain kubernetes components, like kube-proxy, are
                        not IPv6 ready. TODO: This should allow hostname or IP, See
                        #4447.'
                      type: string
                    nodeName:
                      description: 'Optional: Node hosting this endpoint. This can
                        be used to determine endpoints local to a node.'
                      type: string
                    targetRef:
                      description: Reference to object providing the endpoint.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                  - ip
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              apiService:
                default:
                  ports:
                  - name: https
                    port: 443
                  serviceType: ClusterIP
                properties:
                  ports:
                    items:
                      description: EndpointPort is a tuple that describes a single
                        port.
                      properties:
                        appProtocol:
                          description: The application protocol for this port. This
                            field follows standard Kubernetes label syntax. Un-prefixed
                            names are reserved for IANA standard service names (as
                            per RFC-6335 and https://www.iana.org/assignments/service-names).
                            Non-standard protocols should use prefixed names such
                            as mycompany.com/my-custom-protocol.
                          type: string
                        name:
                          description: The name of this port.  This must match the
                            'name' field in the corresponding ServicePort. Must be
                            a DNS_LABEL. Optional only if one port is defined.
                          type: string
                        port:
                          description: The port number of the endpoint.
                          format: int32
                          type: integer
                        protocol:
                          default: TCP
                          description: The IP protocol for this port. Must be UDP,
                            TCP, or SCTP. Default is TCP.
                          type: string
                      required:
                      - port
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  serviceType:
                    description: Service Type string describes ingress methods for
                      a service
                    type: string
                type: object
              clusterAdminSecretName:
                description: The name of the secret object that stores the cluster-admin's
                  JWT. if not specified will not be able to manage projects.
                type: string
              clusterName:
                type: string
              exporterService:
                default:
                  ports:
                  - name: metrics
                    port: 8090
                  serviceType: ClusterIP
                properties:
                  ports:
                    items:
                      description: EndpointPort is a tuple that describes a single
                        port.
                      properties:
                        appProtocol:
                          description: The application protocol for this port. This
                            field follows standard Kubernetes label syntax. Un-prefixed
                            names are reserved for IANA standard service names (as
                            per RFC-6335 and https://www.iana.org/assignments/service-names).
                            Non-standard protocols should use prefixed names such
                            as mycompany.com/my-custom-protocol.
                          type: string
                        name:
                          description: The name of this port.  This must match the
                            'name' field in the corresponding ServicePort. Must be
                            a DNS_LABEL. Optional only if one port is defined.
                          type: string
                        port:
                          description: The port number of the endpoint.
                          format: int32
                          type: integer
                        protocol:
                          default: TCP
                          description: The IP protocol for this port. Must be UDP,
                            TCP, or SCTP. Default is TCP.
                          type: string
                      required:
                      - port
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  serviceType:
                    description: Service Type string describes ingress methods for
                      a service
                    type: string
                type: object
            type: object
          status:
            description: ClusterStatus defines the observed state of Cluster
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              message:
                type: string
              phase:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file Conditions represent the latest available observations
                  of an object''s state'
                type: string
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null

apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "netscaler.com/v1",
          "kind": "NetscalerCpxWithIngressController",
          "metadata": {
            "name": "nscpx"
          },
          "spec": {
            "ADMSettings": {
              "ADMIP": "",
              "bandWidth": 1000,
              "bandWidthLicense": false,
              "cpxCores": 1,
              "licenseEdition": "PLATINUM",
              "licenseServerIP": "",
              "licenseServerPort": 27000,
              "loginSecret": "",
              "vCPULicense": false
            },
            "affinity": {},
            "analyticsConfig": {
              "distributedTracing": {
                "enable": false,
                "samplingrate": 100
              },
              "endpoint": {
                "server": "",
                "service": ""
              },
              "required": false,
              "timeseries": {
                "auditlogs": {
                  "enable": false
                },
                "events": {
                  "enable": false
                },
                "metrics": {
                  "enable": false,
                  "enableNativeScrape": false,
                  "exportFrequency": 30,
                  "mode": "avro",
                  "schemaFile": "schema.json"
                },
                "port": 5563
              },
              "transactions": {
                "enable": false,
                "port": 5557
              }
            },
            "bgpPort": 179,
            "bgpSettings": {
              "bgpConfig": [
                {
                  "bgpRouter": {
                    "localAS": 100,
                    "neighbor": [
                      {
                        "ASOriginationInterval": 10,
                        "address": "",
                        "advertisementInterval": 10,
                        "remoteAS": 100
                      }
                    ]
                  }
                }
              ],
              "required": false
            },
            "cpxBgpRouter": false,
            "cpxCommands": "",
            "cpxLicenseAggregator": "",
            "cpxShellCommands": "",
            "crds": {
              "install": false,
              "retainOnDelete": false
            },
            "daemonSet": false,
            "defaultSSLCertSecret": "",
            "disableAPIServerCertVerify": false,
            "disableOpenshiftRoutes": false,
            "entityPrefix": "",
            "exporter": {
              "image": "{{ .Values.exporter.imageRegistry }}/{{ .Values.exporter.imageRepository }}:{{ .Values.exporter.imageTag }}",
              "imageRegistry": "quay.io",
              "imageRepository": "netscaler/netscaler-adc-metrics-exporter",
              "imageTag": "1.4.9",
              "ports": {
                "containerPort": 8888
              },
              "pullPolicy": "IfNotPresent",
              "required": false,
              "resources": {},
              "serviceMonitorExtraLabels": {}
            },
            "fullnameOverride": "",
            "image": "{{ .Values.imageRegistry }}/{{ .Values.imageRepository }}:{{ .Values.imageTag }}",
            "imagePullSecrets": [],
            "imageRegistry": "quay.io",
            "imageRepository": "netscaler/netscaler-cpx",
            "imageTag": "13.1-49.15",
            "ingressClass": [],
            "ingressIP": "",
            "ipam": false,
            "jsonLog": false,
            "kubernetesURL": "",
            "license": {
              "accept": "no"
            },
            "logLevel": "INFO",
            "logProxy": "",
            "mgmtHttpPort": 9080,
            "mgmtHttpsPort": 9443,
            "nameOverride": "",
            "namespaceLabels": "",
            "nitroReadTimeout": 20,
            "nodeSelector": {
              "key": "",
              "value": ""
            },
            "nsConfigDnsRec": false,
            "nsCookieVersion": "0",
            "nsDnsNameserver": "",
            "nsGateway": "192.168.1.1",
            "nsHTTP2ServerSide": "OFF",
            "nsIP": "192.168.1.2",
            "nsLbHashAlgo": {
              "hashAlgorithm": "DEFAULT",
              "hashFingers": 256,
              "required": false
            },
            "nsProtocol": "http",
            "nsSvcLbDnsRec": false,
            "nsic": {
              "image": "{{ .Values.nsic.imageRegistry }}/{{ .Values.nsic.imageRepository }}:{{ .Values.nsic.imageTag }}",
              "imageRegistry": "quay.io",
              "imageRepository": "netscaler/netscaler-k8s-ingress-controller",
              "imageTag": "1.37.5",
              "prometheusCredentialSecret": "",
              "pullPolicy": "IfNotPresent",
              "required": true,
              "resources": {
                "limits": {},
                "requests": {
                  "cpu": "32m",
                  "memory": "128Mi"
                }
              }
            },
            "openshift": true,
            "optimizeEndpointBinding": false,
            "podAnnotations": {},
            "profileHttpFrontend": {},
            "profileSslFrontend": {},
            "profileTcpFrontend": {},
            "pullPolicy": "IfNotPresent",
            "rbacRole": false,
            "replicaCount": 1,
            "resources": {
              "limits": {},
              "requests": {
                "cpu": "128m",
                "memory": "500Mi"
              }
            },
            "routeLabels": "",
            "serviceAccount": {
              "create": true
            },
            "serviceAnnotations": {},
            "servicePorts": [],
            "serviceSpec": {
              "externalTrafficPolicy": "Cluster",
              "loadBalancerIP": "",
              "loadBalancerSourceRanges": []
            },
            "serviceType": {
              "loadBalancer": {
                "enabled": false
              },
              "nodePort": {
                "enabled": false,
                "httpPort": "",
                "httpsPort": ""
              }
            },
            "setAsDefaultIngressClass": false,
            "sslCertManagedByAWS": false,
            "tolerations": [],
            "updateIngressStatus": false
          }
        },
        {
          "apiVersion": "netscaler.com/v1",
          "kind": "NetscalerIngressController",
          "metadata": {
            "name": "nsic"
          },
          "spec": {
            "adcCredentialSecret": "",
            "affinity": {},
            "analyticsConfig": {
              "distributedTracing": {
                "enable": false,
                "samplingrate": 100
              },
              "endpoint": {
                "server": "",
                "service": ""
              },
              "required": false,
              "timeseries": {
                "auditlogs": {
                  "enable": false
                },
                "events": {
                  "enable": false
                },
                "metrics": {
                  "enable": false,
                  "enableNativeScrape": false,
                  "exportFrequency": 30,
                  "mode": "avro",
                  "schemaFile": "schema.json"
                },
                "port": 30002
              },
              "transactions": {
                "enable": false,
                "port": 30001
              }
            },
            "clusterName": "",
            "crds": {
              "install": false,
              "retainOnDelete": false
            },
            "defaultSSLCertSecret": "",
            "disableAPIServerCertVerify": false,
            "disableOpenshiftRoutes": false,
            "entityPrefix": "",
            "exporter": {
              "extraVolumeMounts": [],
              "image": "{{ .Values.exporter.imageRegistry }}/{{ .Values.exporter.imageRepository }}:{{ .Values.exporter.imageTag }}",
              "imageRegistry": "quay.io",
              "imageRepository": "netscaler/netscaler-adc-metrics-exporter",
              "imageTag": "1.4.9",
              "ports": {
                "containerPort": 8888
              },
              "pullPolicy": "IfNotPresent",
              "required": false,
              "resources": {},
              "serviceMonitorExtraLabels": {}
            },
            "extraVolumeMounts": [],
            "extraVolumes": [],
            "fullnameOverride": "",
            "ignoreNodeExternalIP": false,
            "image": "{{ .Values.imageRegistry }}/{{ .Values.imageRepository }}:{{ .Values.imageTag }}",
            "imagePullSecrets": [],
            "imageRegistry": "quay.io",
            "imageRepository": "netscaler/netscaler-k8s-ingress-controller",
            "imageTag": "1.37.5",
            "ingressClass": [],
            "ipam": false,
            "jsonLog": false,
            "kubernetesURL": "",
            "license": {
              "accept": "no"
            },
            "logLevel": "INFO",
            "logProxy": "",
            "nameOverride": "",
            "namespaceLabels": "",
            "nitroReadTimeout": 20,
            "nodeSelector": {
              "key": "",
              "value": ""
            },
            "nodeWatch": false,
            "nsConfigDnsRec": false,
            "nsCookieVersion": "0",
            "nsDnsNameserver": "",
            "nsEnableLabel": true,
            "nsHTTP2ServerSide": "OFF",
            "nsIP": "",
            "nsLbHashAlgo": {
              "hashAlgorithm": "DEFAULT",
              "hashFingers": 256,
              "required": false
            },
            "nsPort": 443,
            "nsProtocol": "HTTPS",
            "nsSNIPS": [],
            "nsSvcLbDnsRec": false,
            "nsVIP": "",
            "nsncPbr": false,
            "openshift": true,
            "optimizeEndpointBinding": false,
            "podAnnotations": {},
            "podIPsforServiceGroupMembers": false,
            "profileHttpFrontend": {},
            "profileSslFrontend": {},
            "profileTcpFrontend": {},
            "pullPolicy": "IfNotPresent",
            "rbacRole": false,
            "resources": {
              "limits": {},
              "requests": {
                "cpu": "32m",
                "memory": "128Mi"
              }
            },
            "routeLabels": "",
            "secretStore": {
              "enabled": false,
              "password": {},
              "username": {}
            },
            "serviceAccount": {
              "create": true
            },
            "serviceClass": [],
            "setAsDefaultIngressClass": false,
            "tolerations": [],
            "updateIngressStatus": true
          }
        },
        {
          "apiVersion": "netscaler.com/v1",
          "kind": "NetscalerObservabilityExporter",
          "metadata": {
            "name": "nsoe"
          },
          "spec": {
            "affinity": {},
            "elasticsearch": {
              "enabled": false,
              "indexprefix": "",
              "server": ""
            },
            "headless": false,
            "image": "{{ .Values.imageRegistry }}/{{ .Values.imageRepository }}:{{ .Values.imageTag }}",
            "imageRegistry": "quay.io",
            "imageRepository": "netscaler/netscaler-observability-exporter",
            "imageTag": "1.8.001",
            "json_trans_rate_limiting": {
              "enabled": false,
              "limit": 100,
              "queuelimit": 1000,
              "window": 5
            },
            "kafka": {
              "broker": "",
              "dataFormat": "AVRO",
              "enabled": false,
              "topic": "HTTP"
            },
            "license": {
              "accept": "no"
            },
            "nodePortRequired": false,
            "ns_tracing": {
              "enabled": false,
              "server": "zipkin:9411/api/v1/spans"
            },
            "nsoeLogLevel": "INFO",
            "podAnnotations": {},
            "pullPolicy": "IfNotPresent",
            "replicas": 1,
            "resources": {},
            "splunk": {
              "authtoken": "",
              "enabled": false,
              "indexprefix": "",
              "server": ""
            },
            "timeseries": {
              "enabled": false,
              "nodePort": 30002
            },
            "tolerations": [],
            "transaction": {
              "nodePort": 30001
            }
          }
        }
      ]
    capabilities: Basic Install
    operators.openshift.io/infrastructure-features: '["disconnected"]'
    categories: Networking
    description: "This is an operator to install Cloud Native portfolio provided by NetScaler"
    containerImage: registry.connect.redhat.com/citrix/netscaler-operator@sha256:e773a0870e2f9a52cba367a32e9e2db087ea2ac5f2649bc6cc743ad058ef1296
    support: NetScaler
    repository: https://github.com/netscaler/netscaler-k8s-ingress-controller
    createdAt: "2023-11-20T08:36:13Z"
    operators.operatorframework.io/builder: operator-sdk-v1.32.0
    operators.operatorframework.io/project_layout: helm.sdk.operatorframework.io/v1
  name: netscaler-operator.v2.1.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - kind: NetscalerCpxWithIngressController
      name: netscalercpxwithingresscontrollers.netscaler.com
      version: v1
      displayName: NetScaler CPX with Ingress Controller
      description: To install NetScaler CPX with Ingress Controller running as sidecar.
    - kind: NetscalerIngressController
      name: netscaleringresscontrollers.netscaler.com
      version: v1
      displayName: NetScaler Ingress Controller
      description: To install NetScaler Ingress Controller for NetScaler VPX/MPX/SDX.
    - kind: NetscalerObservabilityExporter
      name: netscalerobservabilityexporters.netscaler.com
      version: v1
      displayName: NetScaler Observability Exporter
      description: To install NetScaler Observability Exporter for NetScaler CPX, VPX and/or MPX.
  minKubeVersion: 1.24.0
  description: |-
    NetScaler provides various products to empower Developer/DevOps managing your applications in OpenShift Cluster. Using this operator you can deploy below controllers for NetScaler appliance:
    1. [NetScaler Ingress Controller](https://docs.netscaler.com/en-us/citrix-k8s-ingress-controller.html)
    2. [NetScaler CPX with Ingress Controller](https://docs.netscaler.com/en-us/citrix-k8s-ingress-controller/deployment-topologies.html#dual-tier-topology)
    3. [NetScaler Observability Exporter](https://docs.netscaler.com/en-us/citrix-observability-exporter.html)

    ### Installation
    Refer [installation instructions](https://github.com/netscaler/netscaler-k8s-ingress-controller/blob/master/docs/deploy/deploy-ns-operator.md).

    This operator version contains:
    1. NetScaler Ingress Controller version [1.37.5](https://github.com/netscaler/netscaler-helm-charts/releases/tag/nsic-v1.37.5)
    2. NetScaler CPX version [13.1-49.15](https://docs.netscaler.com/en-us/citrix-adc/13-1/citrix-adc-release-notes/release-notes-13-1-49-15)
    3. NetScaler Observability Exporter version [1.8.001](https://github.com/citrix/citrix-helm-charts/releases/tag/nsoe-v1.8.001)
    4. NetScaler Metrics Exporter [1.4.9](https://github.com/citrix/citrix-adc-metrics-exporter/releases/tag/1.4.9)

    ### Support

    For debugging issues, please use [NetScaler Kubernetes Plugin](https://github.com/netscaler/modern-apps-toolkit/tree/main/netscaler-plugin).

    For questions and support, the following channels are available:
    - [NetScaler community portal](https://community.netscaler.com/s/)
    - [Contact us](https://www.netscaler.com/contact)
  displayName: NetScaler Operator
  icon:
  - base64data: "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"
    mediatype: "image/png"
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          - clusterroles
          - roles
          - rolebindings
          verbs:
          - '*'
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          verbs:
          - '*'
        - apiGroups:
          - apps.openshift.io
          resources:
          - deploymentconfigs
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - services/finalizers
          - endpoints
          - persistentvolumeclaims
          - configmaps
          - serviceaccounts
          verbs:
          - '*'
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - '*'
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingressclasses
          verbs:
          - '*'
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - '*'
        - apiGroups:
          - netscaler.com
          resources:
          - netscaleringresscontrollers
          - netscaleringresscontrollers/status
          - netscaleringresscontrollers/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - netscaler.com
          resources:
          - netscalercpxwithingresscontrollers
          - netscalercpxwithingresscontrollers/status
          - netscalercpxwithingresscontrollers/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - netscaler.com
          resources:
          - netscalerobservabilityexporters
          - netscalerobservabilityexporters/status
          - netscalerobservabilityexporters/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: netscaler-operator-controller-manager
      deployments:
      - label:
          app.kubernetes.io/component: manager
          app.kubernetes.io/created-by: netscaler-operator
          app.kubernetes.io/instance: controller-manager
          app.kubernetes.io/managed-by: kustomize
          app.kubernetes.io/name: deployment
          app.kubernetes.io/part-of: netscaler-operator
          control-plane: controller-manager
        name: netscaler-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                control-plane: controller-manager
            spec:
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - key: kubernetes.io/arch
                        operator: In
                        values:
                        - amd64
                        - arm64
                        - ppc64le
                        - s390x
                      - key: kubernetes.io/os
                        operator: In
                        values:
                        - linux
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=0
                image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:2978537b01d76522943d72ea45b99bb13a83c405e8a9f7d96fc2ff25f8690787
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                  protocol: TCP
                resources:
                  limits:
                    cpu: 500m
                    memory: 128Mi
                  requests:
                    cpu: 5m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                - --leader-election-id=netscaler-operator
                env:
                - name: RELATED_IMAGE_CPX
                  value: quay.io/netscaler/netscaler-cpx@sha256:fb83509f2e699ee72517727b26492d4195e7fe0b82438052f528224af78cb833
                - name: RELATED_IMAGE_NSIC
                  value: quay.io/netscaler/netscaler-k8s-ingress-controller@sha256:7d6a83ac72676e45e4d9812cfa0e2a4222c9ff82252b06d1b918b00bdb64dc17
                - name: RELATED_IMAGE_EXPORTER
                  value: quay.io/netscaler/netscaler-adc-metrics-exporter@sha256:3d54b9151c742c00117be74e1ffd54430358e4cf628fe1f02d503088583f678a
                - name: RELATED_IMAGE_NSOE
                  value: quay.io/netscaler/netscaler-observability-exporter@sha256:a16ecb9673861ef24ba76adf2fa9728bdbabea3be0cdf8dcbeda11d247dba5dc
                - name: OPENSHIFT
                  value: "True"
                image: registry.connect.redhat.com/citrix/netscaler-operator@sha256:e773a0870e2f9a52cba367a32e9e2db087ea2ac5f2649bc6cc743ad058ef1296
                livenessProbe:
                  failureThreshold: 5
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                  successThreshold: 1
                name: manager
                readinessProbe:
                  failureThreshold: 5
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                  successThreshold: 1
                resources:
                  limits:
                    cpu: 500m
                    memory: 500Mi
                  requests:
                    cpu: 200m
                    memory: 200Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              securityContext:
                runAsNonRoot: true
              serviceAccountName: netscaler-operator-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: netscaler-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: true
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - Ingress
  - NetScaler
  - ADC
  - Kubernetes
  - OpenShift
  - Citrix
  - Controller
  - Observability
  - Metrices
  links:
  - name: Netscaler Operator
    url: https://github.com/netscaler/netscaler-k8s-ingress-controller/blob/master/docs/deploy/deploy-ns-operator.md
  maintainers:
  - email: priyanka.sharma@cloud.com
    name: Priyanka Sharma
  - email: arijit.ray@cloud.com
    name: Arijit Ray
  maturity: stable
  provider:
    name: NetScaler
    url: https://netscaler.com
  relatedImages:
  - image: quay.io/netscaler/netscaler-cpx@sha256:fb83509f2e699ee72517727b26492d4195e7fe0b82438052f528224af78cb833
    name: cpx
  - image: quay.io/netscaler/netscaler-k8s-ingress-controller@sha256:7d6a83ac72676e45e4d9812cfa0e2a4222c9ff82252b06d1b918b00bdb64dc17
    name: nsic
  - image: quay.io/netscaler/netscaler-adc-metrics-exporter@sha256:3d54b9151c742c00117be74e1ffd54430358e4cf628fe1f02d503088583f678a
    name: exporter
  - image: quay.io/netscaler/netscaler-observability-exporter@sha256:a16ecb9673861ef24ba76adf2fa9728bdbabea3be0cdf8dcbeda11d247dba5dc
    name: nsoe
  - name: ns-operator
    image: registry.connect.redhat.com/citrix/netscaler-operator@sha256:e773a0870e2f9a52cba367a32e9e2db087ea2ac5f2649bc6cc743ad058ef1296
  - name: ose-kube-rbac-proxy
    image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:2978537b01d76522943d72ea45b99bb13a83c405e8a9f7d96fc2ff25f8690787
  replaces: netscaler-operator.v2.0.0
  version: 2.1.0

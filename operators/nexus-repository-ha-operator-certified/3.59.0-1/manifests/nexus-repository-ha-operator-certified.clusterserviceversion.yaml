---
apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "sonatype.com/v1alpha1",
          "kind": "NexusRepo",
          "metadata": {
            "name": "nexusrepo-sample"
          },
          "spec": {
            "ingress": {
              "additionalRules": null,
              "annotations": null,
              "defaultRule": "false",
              "dockerIngress": {
                "annotations": null,
                "enabled": "false",
                "host": "example.com",
                "name": "nexus-docker-ingress"
              },
              "dockerSubdomain": false,
              "enabled": "false",
              "host": "example.com",
              "name": "nexus-ingress",
              "tls": {
                "enabled": "false",
                "secretName": "tlsSecretName"
              }
            },
            "license": {
              "fileContentsBase64": "your_license_file_contents_in_base_64",
              "secretName": "nexus-repo-license"
            },
            "nexusData": {
              "local": {
                "accessMode": "ReadWriteOnce",
                "enabled": "true",
                "pv": {
                  "matchNodes": "example-node-1 example-node-2 example-node-3",
                  "name": "nexusrepo-local-storage-pv",
                  "size": "10Gi"
                },
                "storageClass": {
                  "provisioner": "kubernetes.io/no-provisioner"
                }
              },
              "nfs": {
                "accessMode": "ReadWriteMany",
                "enabled": "false",
                "pv": {
                  "exportedServerPaths": "/path1 /path2 /path3",
                  "mountOptions": [
                    "hard",
                    "nfsvers=4.1"
                  ],
                  "name": "nexusrepo-nfs-storage-pv",
                  "server": {
                    "ip": "70.71.156.85"
                  },
                  "size": "10Gi"
                },
                "storageClass": {
                  "provisioner": "nfs-provisioner"
                }
              },
              "pv": {
                "directoryPrefix": "/var/nexus-repo-mgr-work-dir/work"
              },
              "pvc": {
                "accessMode": "ReadWriteOnce",
                "size": "10Gi"
              },
              "storageClass": {
                "name": "nexusrepo-storage",
                "reclaimPolicy": "Retain"
              }
            },
            "service": {
              "docker": {
                "enabled": "false",
                "name": "nexus-repo-docker-service",
                "port": 9090,
                "protocol": "TCP",
                "targetPort": 8081,
                "type": "NodePort"
              },
              "nexus": {
                "enabled": "false",
                "name": "nexus-repo-service",
                "port": 80,
                "protocol": "TCP",
                "targetPort": 8081,
                "type": "NodePort"
              }
            },
            "statefulset": {
              "container": {
                "containerPort": 8081,
                "env": {
                  "clustered": false,
                  "install4jAddVmParams": "-Xms2703m -Xmx2703m",
                  "jdbcUrl": null,
                  "nexusInitialPassword": "nexusabc",
                  "password": "nexus",
                  "user": "nexus"
                },
                "imageName": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:98ecd45ed9a9a8f92fcc53c3e209ddcb8b4d71a21ba3981278fe8d542d702686",
                "pullPolicy": "IfNotPresent",
                "resources": {
                  "limits": {
                    "cpu": 4,
                    "memory": "8Gi"
                  },
                  "requests": {
                    "cpu": 4,
                    "memory": "8Gi"
                  }
                },
                "terminationGracePeriod": 120
              },
              "imagePullSecrets": {},
              "livenessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 240,
                "path": "/",
                "periodSeconds": 60
              },
              "name": "nexusrepo-statefulset",
              "readinessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 240,
                "path": "/",
                "periodSeconds": 60
              },
              "replicaCount": 1
            }
          }
        }
      ]
    capabilities: Basic Install
    categories: "Integration & Delivery"
    description: |-
      Nexus Repository is the central source of control to efficiently manage all binaries
      and build artifacts across your DevOps pipeline.
    containerImage: registry.connect.redhat.com/sonatype/nexus-repository-ha-operator-certified@sha256:c56fa44f2ec521e73ad744922fbe0dee11a6a3f73a7b810a60b1e79d8028b2a7
    repository: https://github.com/sonatype/operator-nexus-repository
    createdAt: 2023-08-14
    support: Sonatype
    certified: "true"
    olm.skipRange: "<3.59.0-1"
  name: nexus-repository-ha-operator-certified.v3.59.0-1
  namespace: placeholder
spec:
  relatedImages:
    - name: nexus-repository-ha-operator-certified
      image: registry.connect.redhat.com/sonatype/nexus-repository-ha-operator-certified@sha256:c56fa44f2ec521e73ad744922fbe0dee11a6a3f73a7b810a60b1e79d8028b2a7
    - name: nexus-repository-manager
      image: registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:98ecd45ed9a9a8f92fcc53c3e209ddcb8b4d71a21ba3981278fe8d542d702686
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
      - description: Nexus Repository
        displayName: NexusRepo
        kind: NexusRepo
        name: nexusrepos.sonatype.com
        version: v1alpha1
  description: |-
    Nexus Repository is the central source of control to efficiently manage all binaries
    and build artifacts across your DevOps pipeline.
    The flow of open source and third-party components into and through an organization
    creates a complex software supply chain.
    Nexus Repository delivers speed, efficiency, and quality to the governance
    and management of all dependencies, libraries, and applications for your DevOps teams.

    ## Core Capabilities

    * **Dependency Management**:
      Improves reliability with repeatable, fast access to secure dependencies
    * **Developer Productivity**:
      Streamline developer workflows by enabling the sharing of components and applications across teams
    * **Supply Chain Performance**:
      Improve speed-to-market and reduced build times with release advanced staging and component tagging
    * **CI/CD Integrations**:
      Increase DevOps scalability with integrations to the most popular build and deployment tools

    Version control systems and package registries do not scale when managing proprietary,
    open source, and third-party components.
    Organizations need a central binary and build artifact repository to manage dependencies
    across the entire software supply chain.

    ## Limitations

    This operator will be released on a quarterly basis.

    ## Controlling Automatic vs Manual Update

    If you use the default configuration for the Nexus Repository Operator installation,
    please notice that on any new operator release, the corresponding deployments are
    also updated without user intervention, resulting in unscheduled downtime.

    If you want to avoid this unscheduled downtime, we recommend installing the operator
    into **its own namespace** with **manual approval** for updates.

    ## Usage
    By default, the Nexus Repository starts up in OSS mode until a license is installed.
    The Nexus Repository can be further configured via the NexusRepo custom resource definition:

    | Parameter                                                   | Description                         | Default                                 |
    | ----------------------------------------------------------- | ----------------------------------  | ----------------------------------------|
    | `statefulset.name`                                          |  The suffix for the statefulset's service name    | nexusrepo-statefulset     |
    | `statefulset.replicaCount`                                  |  The desired number of Nexus Repository pods    | 3                           |
    | `statefulset.container.imageName`                           |  The Nexus repository image registry url    | registry.connect.redhat.com/sonatype/nexus-repository-manager:<app version>-ubi-1|
    | `statefulset.container.resources.requests.cpu`              |  The minimum cpu the Nexus repository pod can request    | 4 |
    | `statefulset.container.resources.requests.memory`           |  The minimum memory the Nexus repository pod can request    | 8Gi|
    | `statefulset.container.resources.limits.cpu`                |  The maximum cpu the Nexus repository pod may get.    | 4|
    | `statefulset.container.resources.limits.memory`             |  The maximum memory the Nexus repository pod may get.  | 8Gi|
    | `statefulset.container.containerPort`                       |  The Nexus repository container's HTTP port.  | 8081|
    | `statefulset.container.pullPolicy`                          |  The Nexus repository docker image pull policy.  | IfNotPresent|
    | `statefulset.container.terminationGracePeriod`              |  The time given for the pod to shutdown gracefully  | 120 seconds|
    | `statefulset.container.env.clustered`                       |  The determines whether Nexus Repository should be started in clustered mode  | True|
    | `statefulset.container.env.install4jAddVmParams`            |  Xmx and Xms settings for JVM  | -Xms2703m -Xmx2703m|
    | `statefulset.container.env.user`                            |  The database user name | nexus (can be overridden via Kubernetes secret. See above)|
    | `statefulset.container.env.password`                        |  The database password  | nexus (can be overridden via Kubernetes secret. See above)|
    | `statefulset.container.env.jdbcUrl`                         |  The database url | jdbc:postgresql://your_database_server:5432/nexus (must be overridden via Kubernetes secret object which feeds into env variable variables defined in the operator.yaml . See above)|
    | `statefulset.container.env.nexusInitialPassword`            |  The initial admin password for Nexus Repository UI. This is for first time installs only. Subsequent installs/restarts on the same node ignores this setting | nexusabc|
    | `statefulset.livenessProbe.initialDelaySeconds`             |  The initial delay before the Nexus Repository application is pinged for a response i.e. to determine whether the application is still alive | 240|
    | `statefulset.livenessProbe.path`                            |  The path to ping the application | |
    | `statefulset.livenessProbe.periodSeconds`                   |  The interval for checking that the application is still alive i.e. responsive, not deadlocked etc | 60|
    | `statefulset.livenessProbe.failureThreshold`                |  The maximum number of times the application ping can fail before the application is considered unresponsive. Kubernetes will attempt to restart the application's pod in this case | 6|
    | `statefulset.readinessProbe.initialDelaySeconds`            |  The initial delay before the Nexus Repository application is checked whether it is ready to receive traffic | 240|
    | `statefulset.readinessProbe.path`                           |  The path where the Nexus Repository application is checked for traffic readiness | |
    | `statefulset.readinessProbe.periodSeconds`                  |  The interval for checking the Nexus Repository application for traffic readiness | 60|
    | `statefulset.readinessProbe.failureThreshold`               |  The maximum number of times to check the Nexus Repository application for traffic readiness | 6|
    | `statefulset.imagePullSecrets`                              |  The pull secret for private image registries | {}|
    | `ingress.name`                                              |  The name of Nexus Repository Ingress object | nexus-ingress|
    | `ingress.enabled`                                           |  Whether or not to create the Nexus Repository Ingress | "false"|
    | `ingress.host`                                              |  Ingress host | "example.com"|
    | `ingress.defaultRule`                                       |  Whether or not to add a default rule for the Nexus Repository Ingress which forwards traffic to a Service object  | "false"|
    | `ingress.additionalRules`                                   |  Additional rules to add to the ingress | null|
    | `ingress.tls.enabled`                                       |  Whether or not TLS should be enabled for the ingress | "false"|
    | `ingress.tls.secretName`                                    | The name of a Secret object to store TLS secret in | tlsSecretName|
    | `ingress.dockerSubdomain`                                   |  Whether or not to add rules for docker subdomains | false|
    | `ingress.annotations`                                       |  Annotations for the ingress object | null |
    | `license.fileContentsBase64`                                |  Your Base64 encoded Nexus Repository license | nexus-repo-license (must be overridden via Kubernetes secret object which feeds into env variable variables defined in the operator.yaml . See above)|
    | `license.secretName`                                        |  The name of a secret object to store your Base64 encoded Nexus Repository license in | nexus-repo-license|

  displayName: Nexus Repository HA Operator
  icon:
    - base64data: "iVBORw0KGgoAAAANSUhEUgAAAHAAAACACAYAAADTcu1SAAAACXBI\
      WXMAACE3AAAhNwEzWJ96AAAHQklEQVR4nO2dMXLbOBSGXzLb2/1yJqzJIr5BnNpFf\
      IP1DaJC/cq9ZyyfIPIJohSqbZ3ASiG3lmd0gNUJvAPNTy9XpCQSBB7wQHwzKWIqMc\
      WfxA/8APE+vL29UUgkaX5KROP1anm1+7Wy2XBARNPni5tVKF/5Y+UngknSfERESpy\
      /9nyLSyJaZLPhKJsNTytHBRKEgEmanydproT7m4hOKh/4Pyf4nBKy8pRKQ7SASZqn\
      SZo/EtEDEX2qfOAw6vM/stnwMZsNzw5+0mNECqh8LknzMRG9ENGXygfaof79UzYbT\
      iQ2q+IETNJ8AJ/7XjnYDeWbK+WP3N+pC2IEhM8tiOi2gc/psvXHbDZUQp7b/1bd+c\
      P3E1Q+p4YFRPStctAeyh8fstlwTkRXPg87vH0C4XMj+ByneGWUP75ks+HYV3/0UsA\
      kzVX3foHuvg98hz8OPDmfd7wSED6nhgU/NIYFtlH+eJvNhguf/NELATGem2A813VY\
      YJvP8MdpNhumrk/GuYDwucWB+MtXvsEfncZyzgRM0vyyRfzlM05jOXYBkzQ/g8/99\
      NDndCnHcqz+yCZgKf56EuBzunyBP7LFciwCWoy/9nG95+dTItpUfmoetljO6oSuGh\
      YQ0YSxqfxFRIP1ark3OcGTMWbsNL2qc3q+uJlWjhjAioCIvyaMTeVvCPdYObIHeNW\
      I8RznEHJROdIBowJiOcOAMUFRzeFovVqOK0cagt7jiLGVuFO/7/ni5p/KEQ2MCYj4\
      a8w4JNheiPVq2flCoFllv/GeL260b7yCzgLC58ZIKDjYzhAc8jldkKxwzny8Yrajc\
      dO/i7aA8LkRd2dgvVpa6QyUgT9y3pS/4I+tb8rWApZ8bsDUXG6wTJB9phyzDyNGW1\
      DDn3Ebf2wlIHyO0/Dv8dQZMXwd4I8jxjHsBk/jpHKkhkYCqvgLTQprl3u9Whrtcnc\
      B/sg5NJqjo3PQHw8KWKxyZvY51bNsdPe5AP7IGU7cQ8haf9wrIKZ5WH0OXuesuWwD\
      YjL267PrjxUBfYy/fMWHWO5dQAnxl69gZTdnH+Hu+eJmuz7nw5+fMie9LJ99TheGW\
      K7SlCoBz7EWhYNrST6nQymWM+2PtZ0ZLgGtxV++YjCW+w3fq7Ua2wK+QrjaX94HOs\
      RyjQb0tgTsPM0TGvDHprM1RyO1Iou2IaDz+MtXGsRyR9/F2M2iTQroXfzlKzWxXKN\
      pJbUUE0/xey/XhIBs0zyhAX9Mj/ncoSy6i4DOpnn6QpMsusuywkUUzx6lpZh7xSMJ\
      L3j2jbZZdBTQE3Sz6KA2+hGO1kRCFFA4UUDhRAGFEzsxADFXseXW4lAO6RNBCIig+\
      Nj76o+7URVEu8Kf8mzBV/X5yv/gIaE8gVcNe3BbUSxOurLTuyYU61emobze3atODJ\
      rap4Deze/VE3jJ+LIKG316AoMTj+I4UD5RQOH0fSD/iqHFCtt9qbHkKf4ugr4KOMe\
      qL/HLQPom4AaLh4JZv9MnAZV456b3aXFNnzox49DEo9gLlU8UUDhRQOFEAYUTBRRO\
      FFA4UUDhRAGFEwUUThRQOFFA4UQBhRMFFE4UUDhRQOFEAYUTBRROFFA4UUDhRAGFE\
      wUUTijLCicN3qgNcs/SIARsWuUkRGITKpwooHCigMKJAgqni4Bn2NMy0gHU19cuxt\
      xFQLW/ym2S5ivscRlpCeoxLrrU7jUxjFBbdjwkad674h664IY3UgLdpAeqk3lJ0ny\
      MvZ4jO6C5nGCPciOFsmx0YlRNhBWahwiAzx3dA7sttkvvBFNiTpe6Wg8msT2M+Ax/\
      nGJP6N6gaj0kaa5u3J82t/biGgeqCl4L1YyE7o/wuTH2ZLNeEPIjurH3lSPmOUF3e\
      RGqP5ZqPeyrjWSa63IJ1r3lXSwxR4Uz8f7osu5wXRFkq6Zbg9hqZ/B1E0Uem1Kpx1\
      gRkGpKnFU+YB5RdZhK10c7QWnJ3nqMtQKWTjRFYsBaZtvnSmjw76aFHE1wB/FqW6i\
      DApZOWreMqC7exXIm46+GNLoGjQQs8O3u48D3VqiVgORZ+28TKf2A1gIW+NADs4Wk\
      nri2gAUux0CVIx2ROBbuLGABUogRoz9uS3Wb8McmpU4N8wrhOi+HNCYg/XchDpXZN\
      s0GT6P2hWC+8Ta4UYzceGRawAIJTVEoTb8VAQscdQZGhy6SbqnTDlidE7UqYAFmo1\
      m747vNlMTmvQksApK7jsJ2QBxyAMEmYIGDSGrDKBx7BMguYAGeilEglcTYQoZdnAl\
      IbmI50zifBnMqYIGDWM4EXkxEeyFggYNpKx3mEM6LGhReCVjgoNfYBC8nm718vQxj\
      pxTdcddskLue+bhSwMsnsIyD5KTM0WTHNd4LWMCcXYp5JUCMgAWWYzmW+Msk4gQke\
      7GcsflFTkQKWGBo2sraDD8HogUs0Jy2chZ/mSQIAandKjInq9xsEYyABUfWcTpfZ2\
      qa4AQs2InlvIq/TBKsgAWqoxOicFuI6F87l4XLuRPd1QAAAABJRU5ErkJggg=="
      mediatype: "image/png"
  install:
    spec:
      deployments:
        - name: nexus-repository-ha-operator-certified
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: nexus-repository-ha-operator-certified
            strategy: {}
            template:
              metadata:
                labels:
                  name: nexus-repository-ha-operator-certified
              spec:
                containers:
                  - env:
                      - name: WATCH_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.annotations['olm.targetNamespaces']
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: OPERATOR_NAME
                        value: nexus-repository-ha-operator-certified
                      - name: RELATED_IMAGE_NEXUS
                        value: registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:98ecd45ed9a9a8f92fcc53c3e209ddcb8b4d71a21ba3981278fe8d542d702686
                    image: registry.connect.redhat.com/sonatype/nexus-repository-ha-operator-certified@sha256:c56fa44f2ec521e73ad744922fbe0dee11a6a3f73a7b810a60b1e79d8028b2a7
                    imagePullPolicy: Always
                    name: nexus-repository-ha-operator-certified
                    resources: {}
                serviceAccountName: nexus-repository-ha-operator-certified
      clusterPermissions:
        - rules:
            - apiGroups:
                - ""
              resources:
                - namespaces
              verbs:
                - get
            - apiGroups:
                - ""
              resources:
                - configmaps
                - secrets
                - services
              verbs:
                - '*'
            - apiGroups:
                - ""
              resources:
                - events
              verbs:
                - create
            - apiGroups:
                - sonatype.com
              resources:
                - nexusrepos
                - nexusrepos/status
                - nexusrepos/finalizers
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - storage.k8s.io
              resources:
                - storageclasses
              verbs:
                - '*'
            - apiGroups:
                - ""
              resources:
                - secrets
                - persistentvolumes
                - services
              verbs:
                - '*'
            - apiGroups:
                - apps
              resources:
                - statefulsets
              verbs:
                - '*'
            - apiGroups:
                - networking.k8s.io
              resources:
                - ingresses
              verbs:
                - '*'
            - apiGroups:
                - monitoring.coreos.com
              resources:
                - servicemonitors
              verbs:
                - get
                - create
            - apiGroups:
                - apps
              resourceNames:
                - nexus-repository-ha-operator-certified
              resources:
                - statefulsets/finalizers
              verbs:
                - update
            - apiGroups:
                - ""
              resources:
                - pods
              verbs:
                - get
            - apiGroups:
                - apps
              resources:
                - statefulsets
              verbs:
                - get
          serviceAccountName: nexus-repository-ha-operator-certified
    strategy: deployment
  installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: true
      type: AllNamespaces
  keywords:
    - repository
    - sonatype
  links:
    - name: Nexus Repository Manager
      url: https://www.sonatype.com/product-nexus-repository
  maintainers:
    - email: support@sonatype.com
      name: Sonatype
  maturity: stable
  provider:
    name: Sonatype
  version: 3.59.0-1

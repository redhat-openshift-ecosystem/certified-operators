apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: nim-operator-certified.v2.0.0
  namespace: placeholder
  labels:
    operatorframework.io/arch.amd64: supported
  annotations:
    features.operators.openshift.io/disconnected: "true"
    features.operators.openshift.io/fips-compliant: "false"
    features.operators.openshift.io/proxy-aware: "true"
    features.operators.openshift.io/tls-profiles: "false"
    features.operators.openshift.io/token-auth-aws: "false"
    features.operators.openshift.io/token-auth-azure: "false"
    features.operators.openshift.io/token-auth-gcp: "false"
    features.operators.openshift.io/cnf: "false"
    features.operators.openshift.io/cni: "false"
    features.operators.openshift.io/csi: "false"
    alm-examples: |-
      [
        {
          "apiVersion": "apps.nvidia.com/v1alpha1",
          "kind": "NIMCache",
          "metadata": {
            "name": "meta-llama3-8b-instruct",
            "namespace": "nim-service"
          },
          "spec": {
            "source": {
              "ngc": {
                "modelPuller": "nvcr.io/nim/meta/llama-3.1-8b-instruct@sha256:088a7f400286291e9c1512e326596f4caedd2ed7aa30b909d78cbd3727b55ee8",
                "pullSecret": "ngc-secret",
                "authSecret": "ngc-api-secret",
                "model": {
                  "lora": false,
                  "precision": "fp16",
                  "engine": "tensorrt_llm",
                  "qosProfile": "throughput",
                  "gpus": [
                    {
                      "product": "a100",
                      "ids": []
                    }
                  ]
                }
              }
            },
            "storage": {
              "pvc": {
                "create": true,
                "storageClass": "local-path",
                "size": "50Gi",
                "volumeAccessMode": "ReadWriteOnce"
              }
            }
          }
        },
        {
          "apiVersion": "apps.nvidia.com/v1alpha1",
          "kind": "NIMService",
          "metadata": {
            "name": "meta-llama3-8b-instruct",
            "namespace": "nim-service"
          },
          "spec": {
            "image": {
              "repository": "nvcr.io/nim/meta/llama-3.1-8b-instruct",
              "tag": "1.3.3",
              "pullPolicy": "IfNotPresent",
              "pullSecrets": [
                "ngc-secret"
              ]
            },
            "authSecret": "ngc-api-secret",
            "storage": {
              "nimCache": {
                "name": "meta-llama3-8b-instruct",
                "profile": ""
              }
            },
            "scale": {
              "enabled": false,
              "hpa": {
                "minReplicas": 1,
                "maxReplicas": 10
              }
            },
            "resources": {
              "limits": {
                "nvidia.com/gpu": 1
              }
            },
            "expose": {
              "service": {
                "type": "ClusterIP",
                "port": 8000
              }
            }
          }
        },
        {
          "apiVersion": "apps.nvidia.com/v1alpha1",
          "kind": "NIMPipeline",
          "metadata": {
            "labels": {
              "app.kubernetes.io/name": "k8s-nim-operator",
              "app.kubernetes.io/managed-by": "k8s-nim-operator"
            },
            "name": "nimpipeline-sample"
          },
          "spec": {
            "services": [
              {
                "name": "meta-llama3-8b-instruct",
                "enabled": true,
                "spec": {
                  "image": {
                    "repository": "nvcr.io/nim/meta/llama-3.1-8b-instruct",
                    "tag": "1.3.3",
                    "pullPolicy": "IfNotPresent",
                    "pullSecrets": [
                      "ngc-secret"
                    ]
                  },
                  "authSecret": "ngc-api-secret",
                  "storage": {
                    "nimCache": {
                      "name": "meta-llama3-8b-instruct",
                      "profile": ""
                    }
                  },
                  "replicas": 1,
                  "resources": {
                    "limits": {
                      "nvidia.com/gpu": 1
                    }
                  },
                  "expose": {
                    "service": {
                      "type": "ClusterIP",
                      "port": 8000
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "apiVersion": "apps.nvidia.com/v1alpha1",
          "kind": "NemoCustomizer",
          "metadata": {
            "name": "nemocustomizer-sample",
            "namespace": "nemo"
          },
          "spec": {
            "scheduler": {
              "type": "volcano"
            },
            "wandb": {
              "secretName": "wandb-secret",
              "apiKeyKey": "apiKey",
              "encryptionKey": "encryptionKey"
            },
            "otel": {
              "enabled": true,
              "exporterOtlpEndpoint": "http://customizer-otel-opentelemetry-collector.nemo.svc.cluster.local:4317"
            },
            "databaseConfig": {
              "credentials": {
                "user": "ncsuser",
                "secretName": "customizer-pg-existing-secret",
                "passwordKey": "password"
              },
              "host": "customizer-pg-postgresql.nemo.svc.cluster.local",
              "port": 5432,
              "databaseName": "ncsdb"
            },
            "expose": {
              "service": {
                "type": "ClusterIP",
                "port": 8000
              }
            },
            "image": {
              "repository": "nvcr.io/nvidia/nemo-microservices/customizer-api",
              "tag": "25.04",
              "pullPolicy": "IfNotPresent",
              "pullSecrets": ["ngc-secret"]
            },
            "entitystore": {
              "endpoint": "http://nemoentitystore-sample.nemo.svc.cluster.local:8000"
            },
            "datastore": {
              "endpoint": "http://nemodatastore-sample.nemo.svc.cluster.local:8000"
            },
            "mlflow": {
              "endpoint": "http://mlflow-tracking.nemo.svc.cluster.local:80"
            },
            "nemoDatastoreTools": {
              "image": "nvcr.io/nvidia/nemo-microservices/nds-v2-huggingface-cli@sha256:f3119e9b1555f106968b8594bebd344d6e97381728a75df900a52c7e328d721e"
            },
            "modelDownloadJobs": {
              "image": "nvcr.io/nvidia/nemo-microservices/customizer-api@sha256:1c896fbd865eeac2eab88d784f67522dc61f811efe58d48ae95de9f6251640a5",
              "ngcAPISecret": {
                "name": "ngc-api-secret",
                "key": "NGC_API_KEY"
              },
              "securityContext": {
                "fsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000,
                "runAsGroup": 1000
              },
              "ttlSecondsAfterFinished": 600,
              "pollIntervalSeconds": 15
            },
            "modelConfig": {
              "name": "nemo-model-config"
            },
            "trainingConfig": {
              "configMap": {
                "name": "nemo-training-config"
              },
              "modelPVC": {
                "create": true,
                "name": "finetuning-ms-models-pvc",
                "storageClass": "",
                "volumeAccessMode": "ReadWriteOnce",
                "size": 50
              },
              "workspacePVC": {
                "storageClass": "local-path",
                "volumeAccessMode": "ReadWriteOnce",
                "size": 10,
                "mountPath": "/pvc/workspace"
              },
              "image": {
                "repository": "nvcr.io/nvidia/nemo-microservices/customizer",
                "tag": "25.04"
              },
              "env": [
                { "name": "LOG_LEVEL", "value": "INFO" }
              ],
              "networkConfig": [
                { "name": "NCCL_IB_SL", "value": "0" },
                { "name": "NCCL_IB_TC", "value": "41" },
                { "name": "NCCL_IB_QPS_PER_CONNECTION", "value": "4" },
                { "name": "UCX_TLS", "value": "TCP" },
                { "name": "UCX_NET_DEVICES", "value": "eth0" },
                { "name": "HCOLL_ENABLE_MCAST_ALL", "value": "0" },
                { "name": "NCCL_IB_GID_INDEX", "value": "3" }
              ],
              "ttlSecondsAfterFinished": 3600,
              "timeout": 3600,
              "tolerations": [
                {
                  "key": "nvidia.com/gpu",
                  "operator": "Exists",
                  "effect": "NoSchedule"
                }
              ]
            }
          }
        },
        {
          "apiVersion": "apps.nvidia.com/v1alpha1",
          "kind": "NemoGuardrail",
          "metadata": {
            "name": "nemoguardrails-sample",
            "namespace": "nemo"
          },
          "spec": {
            "configStore": {
              "pvc": {
                "name": "pvc-guardrail-config",
                "create": true,
                "storageClass": "",
                "volumeAccessMode": "ReadWriteOnce",
                "size": "1Gi"
              }
            },
            "nimEndpoint": {
              "baseURL": "http://meta-llama3-1b-instruct.nemo.svc.cluster.local:8000/v1"
            },
            "expose": {
              "service": {
                "type": "ClusterIP",
                "port": 8000
              }
            },
            "image": {
              "repository": "nvcr.io/nvidia/nemo-microservices/guardrails",
              "tag": "25.04",
              "pullPolicy": "IfNotPresent",
              "pullSecrets": ["ngc-secret"]
            },
            "metrics": {
              "serviceMonitor": {}
            },
            "replicas": 1,
            "resources": {
              "limits": {
                "cpu": "1",
                "ephemeral-storage": "10Gi"
              }
            }
          }
        },
        {
          "apiVersion": "apps.nvidia.com/v1alpha1",
          "kind": "NemoEvaluator",
          "metadata": {
            "name": "nemoevaluator-sample",
            "namespace": "nemo"
          },
          "spec": {
            "evaluationImages": {
              "bigcodeEvalHarness": "nvcr.io/nvidia/nemo-microservices/eval-tool-benchmark-bigcode@sha256:b802c5344bc2ca4fd100be555e647ba5be0c7a852b5e5f371037f4faeb12217d",
              "lmEvalHarness": "nvcr.io/nvidia/nemo-microservices/eval-tool-benchmark-lm-eval-harness@sha256:1b6514520ca6af26de70dbd269d89d27559cc6520c43f87bacf9a501d0ae7a2f",
              "similarityMetrics": "nvcr.io/nvidia/nemo-microservices/eval-tool-benchmark-custom-eval@sha256:5bf3dc569d6318be24fe88bc5527a46541e28378cdd14699284c41b27c9ca597",
              "llmAsJudge": "nvcr.io/nvidia/nemo-microservices/eval-tool-benchmark-llm-as-a-judge@sha256:1ee1808bd690435c5ea50c9ceb7bfe9c1cf1f1bec584069d89ddafdf141687a4",
              "mtBench": "nvcr.io/nvidia/nemo-microservices/eval-tool-benchmark-llm-as-a-judge@1ee1808bd690435c5ea50c9ceb7bfe9c1cf1f1bec584069d89ddafdf141687a4",
              "retriever": "nvcr.io/nvidia/nemo-microservices/eval-tool-benchmark-retriever@sha256:442cbd23cf6a0cb656ce8a817bae9886aec991343d3cfff5bcb0c0bae7cc0a9e",
              "rag": "nvcr.io/nvidia/nemo-microservices/eval-tool-benchmark-rag@sha256:fb095172dc9cc831fab48b28934b8e527af3bd092109997df9f189d5eeddb6a0"
            },
            "image": {
              "repository": "nvcr.io/nvidia/nemo-microservices/evaluator",
              "tag": "25.04",
              "pullPolicy": "IfNotPresent",
              "pullSecrets": ["ngc-secret"]
            },
            "expose": {
              "service": {
                "type": "ClusterIP",
                "port": 8000
              }
            },
            "argoWorkflows": {
              "endpoint": "https://argo-workflows-server.nemo.svc.cluster.local:2746",
              "serviceAccount": "argo-workflows-executor"
            },
            "vectorDB": {
              "endpoint": "http://milvus.nemo.svc.cluster.local:19530"
            },
            "datastore": {
              "endpoint": "http://nemodatastore-sample.nemo.svc.cluster.local:8000/v1/hf"
            },
            "entitystore": {
              "endpoint": "http://nemoentitystore-sample.nemo.svc.cluster.local:8000"
            },
            "databaseConfig": {
              "host": "evaluator-pg-postgresql.nemo.svc.cluster.local",
              "port": 5432,
              "databaseName": "evaldb",
              "credentials": {
                "user": "evaluser",
                "secretName": "evaluator-pg-existing-secret",
                "passwordKey": "password"
              }
            },
            "otel": {
              "enabled": true,
              "exporterOtlpEndpoint": "http://evaluator-otel-opentelemetry-collector.nemo.svc.cluster.local:4317"
            },
            "replicas": 1
          }
        },
        {
          "apiVersion": "apps.nvidia.com/v1alpha1",
          "kind": "NemoEntitystore",
          "metadata": {
            "name": "nemoentitystore-sample",
            "namespace": "nemo"
          },
          "spec": {
            "image": {
              "repository": "nvcr.io/nvidia/nemo-microservices/entity-store",
              "tag": "25.04",
              "pullPolicy": "IfNotPresent",
              "pullSecrets": ["ngc-secret"]
            },
            "expose": {
              "service": {
                "type": "ClusterIP",
                "port": 8000
              }
            },
            "databaseConfig": {
              "databaseName": "nesdb",
              "host": "entity-store-pg-postgresql.nemo.svc.cluster.local",
              "port": 5432,
              "credentials": {
                "user": "nesuser",
                "secretName": "entity-store-pg-existing-secret",
                "passwordKey": "password"
              }
            },
            "datastore": {
              "endpoint": "http://nemodatastore-sample.nemo.svc.cluster.local:8000"
            }
          }
        },
        {
          "apiVersion": "apps.nvidia.com/v1alpha1",
          "kind": "NemoDatastore",
          "metadata": {
            "name": "nemodatastore-sample",
            "namespace": "nemo"
          },
          "spec": {
            "secrets": {
              "datastoreConfigSecret": "nemo-ms-nemo-datastore",
              "datastoreInitSecret": "nemo-ms-nemo-datastore-init",
              "datastoreInlineConfigSecret": "nemo-ms-nemo-datastore-inline-config",
              "giteaAdminSecret": "gitea-admin-credentials",
              "lfsJwtSecret": "nemo-ms-nemo-datastore--lfs-jwt"
            },
            "databaseConfig": {
              "credentials": {
                "user": "ndsuser",
                "secretName": "datastore-pg-existing-secret",
                "passwordKey": "password"
              },
              "host": "datastore-pg-postgresql.nemo.svc.cluster.local",
              "port": 5432,
              "databaseName": "ndsdb"
            },
            "pvc": {
              "name": "pvc-shared-data",
              "create": true,
              "storageClass": "",
              "volumeAccessMode": "ReadWriteOnce",
              "size": "10Gi"
            },
            "expose": {
              "service": {
                "type": "ClusterIP",
                "port": 8000
              }
            },
            "image": {
              "repository": "nvcr.io/nvidia/nemo-microservices/datastore",
              "tag": "25.04",
              "pullPolicy": "IfNotPresent",
              "pullSecrets": ["ngc-secret"]
            },
            "replicas": 1,
            "resources": {
              "requests": {
                "memory": "256Mi",
                "cpu": "500m"
              },
              "limits": {
                "memory": "512Mi",
                "cpu": "1"
              }
            }
          }
        }
      ]
    k8sMinVersion: 1.26.0
    categories: AI/Machine Learning
    certified: 'true'
    createdAt: 'Tue Apr 29 21:14:50 PDT 2025'
    description: >-
      An Operator for deployment and maintenance of NVIDIA NIMs and NeMo microservices in a Kubernetes environment
    containerImage: 'nvcr.io/nvidia/cloud-native/k8s-nim-operator@sha256:876620620fc31d171021c15fc67606ef9f47fab80e734d46af0af328de8da7fb'
    support: NVIDIA
    capabilities: Basic Install
    repository: github.com/NVIDIA/k8s-nim-operator
spec:
  displayName: The NVIDIA NIM Operator for Kubernetes
  description: >-
    ## NVIDIA NIM Operator

    The NVIDIA NIM Operator enables Kubernetes cluster administrators to operate the software components and services necessary to run NVIDIA NIMs in various domains such as reasoning, retrieval, speech, and biology. Additionally, it allows the use of NeMo Microservices to fine-tune, evaluate, or apply guardrails to your models.

    The Operator manages the life cycle of the following microservices and the models they use:

    ### NVIDIA NIM models, such as:

    * Reasoning LLMs

    * Retrieval - Embedding, Reranking, etc.

    * Speech

    * Biology

    ### NeMo core microservices:

    * NeMo Customizer

    * NeMo Evaluator

    * NeMo Guardrails

    ### NeMo platform component microservices:

    * NeMo Data Store

    * NeMo Entity Store

  maturity: stable
  version: 2.0.0
  replaces: 'nim-operator-certified.v1.0.1'
  skips: []
  minKubeVersion: 1.26.0
  keywords: []
  maintainers:
    - name: shivamerla
      email: operator_feedback@nvidia.com
  provider:
    name: NVIDIA
  labels: {}
  selector:
    matchLabels: {}
  links:
    - name: NVIDIA NIM
      url: 'https://docs.nvidia.com/nim/index.html'
    - name: Documentation
      url: 'https://docs.nvidia.com/nim-operator/latest'
  icon:
    - base64data: >-
        
      mediatype: image/png
  relatedImages:
    - name: nim-operator-image
      image: nvcr.io/nvidia/cloud-native/k8s-nim-operator@sha256:876620620fc31d171021c15fc67606ef9f47fab80e734d46af0af328de8da7fb
    - name: test-nim-image
      image: nvcr.io/nim/meta/llama-3.1-8b-instruct@sha256:088a7f400286291e9c1512e326596f4caedd2ed7aa30b909d78cbd3727b55ee8
    - name: bigcode-eval-harness
      image: nvcr.io/nvidia/nemo-microservices/eval-tool-benchmark-bigcode@sha256:b802c5344bc2ca4fd100be555e647ba5be0c7a852b5e5f371037f4faeb12217d
    - name: lm-eval-harness
      image: nvcr.io/nvidia/nemo-microservices/eval-tool-benchmark-lm-eval-harness@sha256:1b6514520ca6af26de70dbd269d89d27559cc6520c43f87bacf9a501d0ae7a2f
    - name: similarity-metrics
      image: nvcr.io/nvidia/nemo-microservices/eval-tool-benchmark-custom-eval@sha256:5bf3dc569d6318be24fe88bc5527a46541e28378cdd14699284c41b27c9ca597
    - name: llm-as-judge
      image: nvcr.io/nvidia/nemo-microservices/eval-tool-benchmark-llm-as-a-judge@sha256:1ee1808bd690435c5ea50c9ceb7bfe9c1cf1f1bec584069d89ddafdf141687a4
    - name: retriever-benchmark
      image: nvcr.io/nvidia/nemo-microservices/eval-tool-benchmark-retriever@sha256:442cbd23cf6a0cb656ce8a817bae9886aec991343d3cfff5bcb0c0bae7cc0a9e
    - name: rag-benchmark
      image: nvcr.io/nvidia/nemo-microservices/eval-tool-benchmark-rag@sha256:fb095172dc9cc831fab48b28934b8e527af3bd092109997df9f189d5eeddb6a0
    - name: nemo-datastore-tools
      image: nvcr.io/nvidia/nemo-microservices/nds-v2-huggingface-cli@sha256:f3119e9b1555f106968b8594bebd344d6e97381728a75df900a52c7e328d721e
    - name: model-download-jobs
      image: nvcr.io/nvidia/nemo-microservices/customizer-api@sha256:1c896fbd865eeac2eab88d784f67522dc61f811efe58d48ae95de9f6251640a5
  customresourcedefinitions:
    owned:
      - name: nimcaches.apps.nvidia.com
        displayName: NIMCache
        kind: NIMCache
        version: v1alpha1
        description: NIM Cache
        resources:
          - version: v1
            kind: Deployment
          - version: v1
            kind: Service
          - version: v1
            kind: ReplicaSet
          - version: v1
            kind: Pod
          - version: v1
            kind: Secret
          - version: v1
            kind: ConfigMap
        specDescriptors: []
        statusDescriptors: []
      - name: nimservices.apps.nvidia.com
        displayName: NIMService
        kind: NIMService
        version: v1alpha1
        description: NIM Service
        resources:
          - version: v1
            kind: Deployment
          - version: v1
            kind: Service
          - version: v1
            kind: ReplicaSet
          - version: v1
            kind: Pod
          - version: v1
            kind: Secret
          - version: v1
            kind: ConfigMap
        specDescriptors: []
        statusDescriptors: []
      - name: nimpipelines.apps.nvidia.com
        displayName: NIMPipeline
        kind: NIMPipeline
        version: v1alpha1
        description: NIM Pipeline
        resources:
          - version: v1
            kind: Deployment
          - version: v1
            kind: Service
          - version: v1
            kind: ReplicaSet
          - version: v1
            kind: Pod
          - version: v1
            kind: Secret
          - version: v1
            kind: ConfigMap
        specDescriptors: []
        statusDescriptors: []
      - name: nemoguardrails.apps.nvidia.com
        displayName: NemoGuardrail
        kind: NemoGuardrail
        version: v1alpha1
        description: NEMO guardrail Service
        resources:
          - version: v1
            kind: Deployment
          - version: v1
            kind: Service
          - version: v1
            kind: ReplicaSet
          - version: v1
            kind: Pod
          - version: v1
            kind: Secret
          - version: v1
            kind: ConfigMap
        specDescriptors: []
        statusDescriptors: []
      - name: nemodatastores.apps.nvidia.com
        displayName: NemoDatastore
        kind: NemoDatastore
        version: v1alpha1
        description: NEMO datastore Service
        resources:
          - version: v1
            kind: Deployment
          - version: v1
            kind: Service
          - version: v1
            kind: ReplicaSet
          - version: v1
            kind: Pod
          - version: v1
            kind: Secret
          - version: v1
            kind: ConfigMap
        specDescriptors: []
        statusDescriptors: []
      - name: nemoevaluators.apps.nvidia.com
        displayName: NemoEvaluator
        kind: NemoEvaluator
        version: v1alpha1
        description: NEMO Eval Service
        resources:
          - version: v1
            kind: Deployment
          - version: v1
            kind: Service
          - version: v1
            kind: ReplicaSet
          - version: v1
            kind: Pod
          - version: v1
            kind: Secret
          - version: v1
            kind: ConfigMap
        specDescriptors: []
        statusDescriptors: []
      - name: nemocustomizers.apps.nvidia.com
        displayName: NemoCustomizer
        kind: NemoCustomizer
        version: v1alpha1
        description: NEMO Customizer Service
        resources:
          - version: v1
            kind: Deployment
          - version: v1
            kind: Service
          - version: v1
            kind: ReplicaSet
          - version: v1
            kind: Pod
          - version: v1
            kind: Secret
          - version: v1
            kind: ConfigMap
        specDescriptors: []
        statusDescriptors: []
      - name: nemoentitystores.apps.nvidia.com
        displayName: NemoEntitystore
        kind: NemoEntitystore
        version: v1alpha1
        description: NEMO Entitystore Service
        resources:
          - version: v1
            kind: Deployment
          - version: v1
            kind: Service
          - version: v1
            kind: ReplicaSet
          - version: v1
            kind: Pod
          - version: v1
            kind: Secret
          - version: v1
            kind: ConfigMap
        specDescriptors: []
        statusDescriptors: []
    required: []
  install:
    strategy: deployment
    spec:
      permissions:
        - serviceAccountName: k8s-nim-operator
          rules:
            - apiGroups:
              - ""
              resources:
              - configmaps
              verbs:
              - get
              - list
              - watch
              - create
              - update
              - patch
              - delete
            - apiGroups:
              - coordination.k8s.io
              resources:
              - leases
              verbs:
              - get
              - list
              - watch
              - create
              - update
              - patch
              - delete
            - apiGroups:
              - ""
              resources:
              - events
              verbs:
              - create
              - patch
              - update
      clusterPermissions:
        - serviceAccountName: k8s-nim-operator
          rules:
            - apiGroups:
                - ''
              resources:
                - nodes
              verbs:
                - get
                - list
                - watch
            - apiGroups:
              - ""
              resources:
              - events
              verbs:
              - create
              - patch
              - update
            - apiGroups:
                - ''
              resources:
                - configmaps
                - persistentvolumeclaims
                - secrets
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - ''
              resources:
                - endpoints
                - pods
                - pods/log
                - pods/eviction
                - serviceaccounts
                - services
                - services/finalizers
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - ''
              resources:
                - pods
              verbs:
                - create
                - delete
                - get
                - list
                - watch
            - apiGroups:
                - apps
              resources:
                - deployments
                - statefulsets
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - apps.nvidia.com
              resources:
                - nimcaches
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - apps.nvidia.com
              resources:
                - nimcaches/finalizers
              verbs:
                - update
            - apiGroups:
                - apps.nvidia.com
              resources:
                - nimcaches/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - apps.nvidia.com
              resources:
                - nimpipelines
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - apps.nvidia.com
              resources:
                - nimpipelines/finalizers
              verbs:
                - update
            - apiGroups:
                - apps.nvidia.com
              resources:
                - nimpipelines/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - apps.nvidia.com
              resources:
                - nimservices
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - apps.nvidia.com
              resources:
                - nimservices/finalizers
              verbs:
                - update
            - apiGroups:
                - apps.nvidia.com
              resources:
                - nimservices/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - apps.nvidia.com
              resources:
                - nemoguardrails
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - apps.nvidia.com
              resources:
                - nemoguardrails/finalizers
              verbs:
                - update
            - apiGroups:
                - apps.nvidia.com
              resources:
                - nemoguardrails/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - apps.nvidia.com
              resources:
                - nemodatastores
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - apps.nvidia.com
              resources:
                - nemodatastores/finalizers
              verbs:
                - update
            - apiGroups:
                - apps.nvidia.com
              resources:
                - nemodatastores/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - apps.nvidia.com
              resources:
                - nemoevaluators
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - apps.nvidia.com
              resources:
                - nemoevaluators/finalizers
              verbs:
                - update
            - apiGroups:
                - apps.nvidia.com
              resources:
                - nemoevaluators/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - apps.nvidia.com
              resources:
                - nemocustomizers
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - apps.nvidia.com
              resources:
                - nemocustomizers/finalizers
              verbs:
                - update
            - apiGroups:
                - apps.nvidia.com
              resources:
                - nemocustomizers/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - apps.nvidia.com
              resources:
                - nemoentitystores
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - apps.nvidia.com
              resources:
                - nemoentitystores/finalizers
              verbs:
                - update
            - apiGroups:
                - apps.nvidia.com
              resources:
                - nemoentitystores/status
              verbs:
                - get
                - patch
                - update
            - apiGroups:
                - batch
              resources:
                - jobs
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - batch
              resources:
                - jobs/status
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - config.openshift.io
              resources:
                - clusterversions
                - proxies
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - ''
              resources:
                - persistentvolumeclaims
              verbs:
                - create
                - delete
                - get
                - list
            - apiGroups:
                - monitoring.coreos.com
              resources:
                - prometheusrules
                - servicemonitors
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - rbac.authorization.k8s.io
              resources:
                - rolebindings
                - roles
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - route.openshift.io
              resources:
                - routes
              verbs:
                - create
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - networking.k8s.io
              resources:
                - ingresses
              verbs:
                - create
                - get
                - list
                - patch
                - update
                - watch
                - delete
            - apiGroups:
                - autoscaling
              resources:
                - horizontalpodautoscalers
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - scheduling.k8s.io
              resources:
                - priorityclasses
              verbs:
                - create
                - get
                - list
                - watch
            - apiGroups:
              - security.openshift.io
              resourceNames:
              - nonroot
              - anyuid
              resources:
              - securitycontextconstraints
              verbs:
              - use
            - apiGroups:
                - security.openshift.io
              resources:
                - securitycontextconstraints
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - storage.k8s.io
              resources:
                - storageclasses
              verbs:
                - get
                - list
                - watch
            - apiGroups:
              - authentication.k8s.io
              resources:
              - tokenreviews
              verbs:
              - create
            - apiGroups:
              - authorization.k8s.io
              resources:
              - subjectaccessreviews
              verbs:
              - create
            - apiGroups:
              - batch.volcano.sh
              resources:
              - jobs
              verbs:
              - create
              - delete
              - get
              - list
              - patch
              - update
              - watch
            - apiGroups:
              - batch.volcano.sh
              resources:
              - jobs/status
              verbs:
              - get
              - list
              - watch
            - apiGroups:
              - nodeinfo.volcano.sh
              resources:
              - numatopologies
              verbs:
              - get
              - list
              - watch
            - apiGroups:
              - nvidia.com
              resources:
              - nemoentityhandlers
              - nemotrainingjobs
              - nemotrainingjobs/status
              verbs:
              - create
              - delete
              - get
              - list
              - patch
              - update
              - watch
            - apiGroups:
              - scheduling.incubator.k8s.io
              - scheduling.volcano.sh
              resources:
              - podgroups
              - queues
              - queues/status
              verbs:
              - get
              - list
              - watch
      deployments:
        - name: k8s-nim-operator
          spec:
            replicas: 1
            selector:
              matchLabels:
                app.kubernetes.io/instance: nim-operator
                app.kubernetes.io/name: k8s-nim-operator
                control-plane: controller-manager
            strategy:
              rollingUpdate:
                maxSurge: 25%
                maxUnavailable: 25%
              type: RollingUpdate
            template:
              metadata:
                annotations:
                  kubectl.kubernetes.io/default-container: manager
                labels:
                  app.kubernetes.io/instance: nim-operator
                  app.kubernetes.io/name: k8s-nim-operator
                  control-plane: controller-manager
              spec:
                affinity:
                  nodeAffinity:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      - preference:
                          matchExpressions:
                            - key: node-role.kubernetes.io/master
                              operator: In
                              values:
                                - ''
                        weight: 1
                      - preference:
                          matchExpressions:
                            - key: node-role.kubernetes.io/control-plane
                              operator: In
                              values:
                                - ''
                        weight: 1
                containers:
                  - args:
                      - '--health-probe-bind-address=:8081'
                      - '--metrics-bind-address=127.0.0.1:8080'
                      - '--leader-elect'
                    command:
                      - /manager
                    env:
                      - name: WATCH_NAMESPACE
                      - name: OPERATOR_NAMESPACE
                        valueFrom:
                          fieldRef:
                            apiVersion: v1
                            fieldPath: metadata.namespace
                    image: 'nvcr.io/nvidia/cloud-native/k8s-nim-operator@sha256:876620620fc31d171021c15fc67606ef9f47fab80e734d46af0af328de8da7fb'
                    imagePullPolicy: Always
                    livenessProbe:
                      failureThreshold: 3
                      httpGet:
                        path: /healthz
                        port: 8081
                        scheme: HTTP
                      initialDelaySeconds: 15
                      periodSeconds: 20
                      successThreshold: 1
                      timeoutSeconds: 1
                    name: manager
                    readinessProbe:
                      failureThreshold: 3
                      httpGet:
                        path: /readyz
                        port: 8081
                        scheme: HTTP
                      initialDelaySeconds: 5
                      periodSeconds: 10
                      successThreshold: 1
                      timeoutSeconds: 1
                    resources:
                      limits:
                        cpu: '1'
                        memory: 256Mi
                      requests:
                        cpu: 500m
                        memory: 128Mi
                    securityContext:
                      allowPrivilegeEscalation: false
                    terminationMessagePath: /dev/termination-log
                    terminationMessagePolicy: File
                dnsPolicy: ClusterFirst
                imagePullSecrets: []
                restartPolicy: Always
                serviceAccountName: k8s-nim-operator
                securityContext:
                  runAsNonRoot: true
                terminationGracePeriodSeconds: 10
                tolerations:
                  - effect: NoSchedule
                    key: node-role.kubernetes.io/master
                    operator: Equal
                  - effect: NoSchedule
                    key: node-role.kubernetes.io/control-plane
                    operator: Equal
  installModes:
    - type: OwnNamespace
      supported: false
    - type: SingleNamespace
      supported: false
    - type: MultiNamespace
      supported: false
    - type: AllNamespaces
      supported: true

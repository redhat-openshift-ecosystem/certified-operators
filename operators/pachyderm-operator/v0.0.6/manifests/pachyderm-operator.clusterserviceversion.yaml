apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "aiml.pachyderm.com/v1beta1",
          "kind": "Pachyderm",
          "metadata": {
            "name": "pachyderm-sample"
          },
          "spec": {
            "console": {
              "disable": true
            },
            "pachd": {
              "metrics": {
                "disable": false
              },
              "storage": {
                "amazon": {
                  "credentialSecretName": "pachyderm-aws-secret"
                },
                "backend": "AMAZON"
              }
            }
          }
        },
        {
          "apiVersion": "aiml.pachyderm.com/v1beta1",
          "kind": "PachydermExport",
          "metadata": {
            "name": "pachydermexport-sample"
          },
          "spec": {
            "backup": {
              "target": "pachyderm-sample"
            }
          }
        }
      ]
    capabilities: Basic Install
    categories: AI/Machine Learning
    certified: "true"
    containerImage: registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:a600517dc31570ea8947ad39fb5f5aab873ecec09d884c4d40e3466e62e3554c
    createdAt: "2021-05-20T08:05:00Z"
    description: Pachyderm provides version control for data. Think, "git for data",
      but better.
    operators.operatorframework.io/builder: operator-sdk-v1.11.0+git
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
    repository: https://github.com/pachyderm/openshift-operator
    support: Pachyderm, Inc.
  name: pachyderm-operator.v0.0.6
  namespace: placeholder
spec:
  minKubeVersion: v1.19.0
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: PachydermExport is the Schema for the pachydermexports API
      displayName: Pachyderm Export
      kind: PachydermExport
      name: pachydermexports.aiml.pachyderm.com
      version: v1beta1
    - description: Pachyderm is the Schema for the pachyderms API
      displayName: Pachyderm
      kind: Pachyderm
      name: pachyderms.aiml.pachyderm.com
      version: v1beta1
  description: |
    The Pachyderm operator aims to make deploying and managing Pachyderm instances on Openshift or Kubernetes easier.

    Pachyderm brings together version control for data with tools to build scalable end-to-end ML/AI pipelines while empowering users to develop their code in any language, framework, or tool.

    It has been chosen time and time again to be the ideal foundation for teams looking to solve real-world AI and ML problems reliably. Below are some reasons why you shouuld use Pachyderm

    ## 1. Data Lineage
    Pachyderm allows you to know with certainity, the complete journey of your data, code, models and the relationships between them.

    ## 2. End-to-End Pipelines
    Pachyderm makes it easy to make end-to-end data science workflows using any language or framework.

    ## 3. Enterprise Scale
    We built Pachyderm on Kubernetes providing a direct and reliable path to production and scalability.
  displayName: Pachyderm
  icon:
  - base64data: 
    mediatype: image/png
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - aiml.pachyderm.com
          resources:
          - pachydermexports
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - aiml.pachyderm.com
          resources:
          - pachydermexports/finalizers
          verbs:
          - update
        - apiGroups:
          - aiml.pachyderm.com
          resources:
          - pachydermexports/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - aiml.pachyderm.com
          resources:
          - pachyderms
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - aiml.pachyderm.com
          resources:
          - pachyderms/finalizers
          verbs:
          - update
        - apiGroups:
          - aiml.pachyderm.com
          resources:
          - pachyderms/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - statefulsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - batch
          resources:
          - jobs
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - endpoints
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - pods/exec
          verbs:
          - create
          - get
        - apiGroups:
          - ""
          resources:
          - pods/log
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - replicationcontrollers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - replicationcontrollers/scale
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingresses
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterroles
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - rolebindings
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - roles
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - security.openshift.io
          resourceNames:
          - anyuid
          resources:
          - securitycontextconstraints
          verbs:
          - use
        - apiGroups:
          - storage.k8s.io
          resources:
          - storageclasses
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: pachyderm-operator-controller-manager
      deployments:
      - name: pachyderm-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=10
                image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:902233b05914e8fc9ac3ed5816827f4310c9a5380f516078244147b7de2d20e1
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                resources: {}
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                command:
                - /manager
                env:
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                image: registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:a600517dc31570ea8947ad39fb5f5aab873ecec09d884c4d40e3466e62e3554c
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                ports:
                - containerPort: 9443
                  name: webhook-server
                  protocol: TCP
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 30
                  periodSeconds: 15
                resources:
                  limits:
                    cpu: 100m
                    memory: 240Mi
                  requests:
                    cpu: 100m
                    memory: 200Mi
                securityContext:
                  allowPrivilegeEscalation: false
              securityContext:
                runAsNonRoot: true
              serviceAccountName: pachyderm-operator-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          - coordination.k8s.io
          resources:
          - configmaps
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: pachyderm-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - pachyderm
  - versioning
  - machine learning
  - artificial intelligence
  links:
  - name: Documentation
    url: https://docs.pachyderm.com/latest/
  maintainers:
  - email: kyle@pachyderm.io
    name: Kyle White
  - email: eochieng@redhat.com
    name: Edmund Ochieng
  maturity: beta
  provider:
    name: Pachyderm, Inc.
    url: https://pachyderm.com
  version: 0.0.6
  webhookdefinitions:
  - admissionReviewVersions:
    - v1
    - v1beta1
    containerPort: 443
    deploymentName: pachyderm-operator-controller-manager
    failurePolicy: Fail
    generateName: mpachyderm.kb.io
    rules:
    - apiGroups:
      - aiml.pachyderm.com
      apiVersions:
      - v1beta1
      operations:
      - CREATE
      - UPDATE
      resources:
      - pachyderms
    sideEffects: None
    targetPort: 9443
    type: MutatingAdmissionWebhook
    webhookPath: /mutate-aiml-pachyderm-com-v1beta1-pachyderm
  - admissionReviewVersions:
    - v1
    - v1beta1
    containerPort: 443
    deploymentName: pachyderm-operator-controller-manager
    failurePolicy: Fail
    generateName: vpachyderm.kb.io
    rules:
    - apiGroups:
      - aiml.pachyderm.com
      apiVersions:
      - v1beta1
      operations:
      - CREATE
      - UPDATE
      resources:
      - pachyderms
    sideEffects: None
    targetPort: 9443
    type: ValidatingAdmissionWebhook
    webhookPath: /validate-aiml-pachyderm-com-v1beta1-pachyderm

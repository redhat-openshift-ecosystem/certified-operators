apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "pgd.k8s.enterprisedb.io/v1beta1",
          "kind": "PGDGroup",
          "metadata": {
            "name": "region-a"
          },
          "spec": {
            "cnp": {
              "storage": {
                "size": "1Gi"
              }
            },
            "connectivity": {
              "dns": {
                "additional": [
                  {
                    "domain": "alternate.domain"
                  },
                  {
                    "domain": "my.domain",
                    "hostSuffix": "-dc1"
                  }
                ]
              },
              "tls": {
                "clientCert": {
                  "caCertSecret": "client-ca-key-pair",
                  "certManager": {
                    "spec": {
                      "issuerRef": {
                        "group": "cert-manager.io",
                        "kind": "Issuer",
                        "name": "client-ca-issuer"
                      }
                    }
                  }
                },
                "mode": "verify-ca",
                "serverCert": {
                  "caCertSecret": "server-ca-key-pair",
                  "certManager": {
                    "spec": {
                      "issuerRef": {
                        "group": "cert-manager.io",
                        "kind": "Issuer",
                        "name": "server-ca-issuer"
                      }
                    }
                  }
                }
              }
            },
            "instances": 2,
            "pgd": {
              "discovery": [
                {
                  "host": "region-a-group"
                },
                {
                  "host": "region-b-group"
                },
                {
                  "host": "region-c-group"
                }
              ],
              "parentGroup": {
                "create": true,
                "name": "world"
              }
            },
            "proxyInstances": 2,
            "witnessInstances": 1
          }
        },
        {
          "apiVersion": "pgd.k8s.enterprisedb.io/v1beta1",
          "kind": "PGDGroup",
          "metadata": {
            "name": "region-b"
          },
          "spec": {
            "cnp": {
              "storage": {
                "size": "1Gi"
              }
            },
            "connectivity": {
              "tls": {
                "clientCert": {
                  "caCertSecret": "client-ca-key-pair",
                  "certManager": {
                    "spec": {
                      "issuerRef": {
                        "group": "cert-manager.io",
                        "kind": "Issuer",
                        "name": "client-ca-issuer"
                      }
                    }
                  }
                },
                "mode": "verify-ca",
                "serverCert": {
                  "caCertSecret": "server-ca-key-pair",
                  "certManager": {
                    "spec": {
                      "issuerRef": {
                        "group": "cert-manager.io",
                        "kind": "Issuer",
                        "name": "server-ca-issuer"
                      }
                    }
                  }
                }
              }
            },
            "instances": 2,
            "pgd": {
              "discovery": [
                {
                  "host": "region-a-group"
                },
                {
                  "host": "region-b-group"
                },
                {
                  "host": "region-c-group"
                }
              ],
              "parentGroup": {
                "name": "world"
              }
            },
            "proxyInstances": 2,
            "witnessInstances": 1
          }
        },
        {
          "apiVersion": "pgd.k8s.enterprisedb.io/v1beta1",
          "kind": "PGDGroup",
          "metadata": {
            "name": "region-c"
          },
          "spec": {
            "cnp": {
              "storage": {
                "size": "1Gi"
              }
            },
            "connectivity": {
              "tls": {
                "clientCert": {
                  "caCertSecret": "client-ca-key-pair",
                  "certManager": {
                    "spec": {
                      "issuerRef": {
                        "group": "cert-manager.io",
                        "kind": "Issuer",
                        "name": "client-ca-issuer"
                      }
                    }
                  }
                },
                "mode": "verify-ca",
                "serverCert": {
                  "caCertSecret": "server-ca-key-pair",
                  "certManager": {
                    "spec": {
                      "issuerRef": {
                        "group": "cert-manager.io",
                        "kind": "Issuer",
                        "name": "server-ca-issuer"
                      }
                    }
                  }
                }
              }
            },
            "instances": 0,
            "pgd": {
              "discovery": [
                {
                  "host": "region-a-group"
                },
                {
                  "host": "region-b-group"
                },
                {
                  "host": "region-c-group"
                }
              ],
              "parentGroup": {
                "name": "world"
              }
            },
            "proxyInstances": 0,
            "witnessInstances": 1
          }
        }
      ]
    capabilities: Auto Pilot
    categories: Database
    certified: "true"
    containerImage: docker.enterprisedb.com/k8s_enterprise_pgd/pg4k-pgd-openshift@sha256:3a58d204fc9d58398c39e1566fc3741270b8df3c82ecf808e992f15fe41889dc
    createdAt: "2023-05-16T18:47:13Z"
    description: EDB Postgres Distributed for Kubernetes is an operator designed to
      manage EDB Postgres Distributed (PGD) v5 workloads on Kubernetes both in a single
      Kubernetes cluster or across multiple ones.
    operators.operatorframework.io/builder: operator-sdk-v1.27.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v2
    support: EnterpriseDB Corporation
  labels:
    operatorframework.io/arch.amd64: supported
    operatorframework.io/arch.ppc64le: supported
    operatorframework.io/arch.s390x: supported
  name: pg4k-pgd.v0.6.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - kind: PGDGroupCleanup
      name: pgdgroupcleanups.pgd.k8s.enterprisedb.io
      version: v1beta1
    - description: A group of Postgres Clusters
      displayName: PGD Group
      kind: PGDGroup
      name: pgdgroups.pgd.k8s.enterprisedb.io
      resources:
      - kind: Cluster
        name: ""
        version: v1
      specDescriptors:
      - description: The name of the PGDGroup
        displayName: PGDGroup Name
        path: name
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Clusters
      - description: The image for the cluster
        displayName: Image
        path: image
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The image pull policy for the cluster
        displayName: Image Pull Policy
        path: imagePullPolicy
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:ImagePullPolicy
      - description: The image pull secret for the cluster
        displayName: Image Pull Secret
        path: imagePullSecret
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:Secret
      - description: Metadata to be inherited by all objects related to the PGDGroup
        displayName: Inherited Metadata
        path: inheritedMetadata
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:text
      - description: The number of data nodes to be created
        displayName: Data Nodes
        path: instances
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: The number of proxy nodes to be created
        displayName: Proxy Nodes
        path: proxyInstances
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: The number of witness instances required in the cluster
        displayName: Witness Instances
        path: witnessInstances
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:podCount
      - description: Definition for backups to be taken of the clusters
        displayName: Backup Configuration
        path: backup
      - description: Configuration to backup on Google
        displayName: Google Credentials
        path: backup.configuration.barmanObjectStore.googleCredentials
      - description: Boolean to toggle the use of GKE credentials
        displayName: Use GKE Credentials
        path: backup.configuration.barmanObjectStore.googleCredentials.gkeEnvironment
        x-descriptors:
        - urn:alm:descriptor:com.tectonic.ui:booleanSwitch
      - description: Secret containing the Google Cloud Storage JSON file with the
          credentials
        displayName: Google Credentials
        path: backup.configuration.barmanObjectStore.googleCredentials.applicationCredentials
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes:SecretKeySelector
      - description: Configuration of the instances
        displayName: PGD Node Configuration
        path: cnp
      - description: Instructions to bootstrap cluster
        displayName: Bootstrap Config
        path: pgd
      - description: Configures the connectivity of the PGDGroup
        displayName: Connectivity
        path: connectivity
      statusDescriptors:
      - description: The PGDGroup
        path: pgdgroup
      version: v1beta1
  description: |
    EDB Postgres Distributed for Kubernetes is an operator designed to manage EDB Postgres Distributed (PGD) v5 workloads on Kubernetes both in a single Kubernetes cluster or across multiple ones.

    EDB Postgres Distributed is an extension for PostgreSQL that provides multi-master replication and data distribution with advanced conflict management, data-loss protection, and throughput up to 5X faster than native logical replication. It enables distributed PostgreSQL clusters with high availability up to five 9s.

    This operator is available for preview and requires access to the EDB private repositories.
  displayName: EDB Postgres Distributed for Kubernetes
  icon:
  - base64data: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDI1LjIuMCwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHZpZXdCb3g9IjAgMCAxNjAgODAiIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDE2MCA4MDsiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJLnN0MHtmaWxsOiNGRjNFMDA7fQoJLnN0MXtmaWxsOiNGRkZGRkY7fQoJLnN0MntmaWxsOiMxMjE2NDY7fQo8L3N0eWxlPgo8Zz4KCTxnPgoJCTxnPgoJCQk8Y2lyY2xlIGNsYXNzPSJzdDAiIGN4PSIyNi41IiBjeT0iNDAiIHI9IjI2Ii8+CgkJPC9nPgoJCTxnPgoJCQk8Zz4KCQkJCTxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik00MiwzOC43YzEtMSwxLjYtMi4zLDEuNi0zLjdjMC0yLjYtMi4xLTQuNS00LjgtNC4ybC00LDAuNGMtMC40LDAtMC44LDAuNC0wLjgsMC44djdWNDB2NwoJCQkJCWMwLDAuNCwwLjMsMC43LDAuOCwwLjdsNC0wLjRjMi42LTAuMyw0LjgtMi42LDQuOC01LjJ2MEM0My42LDQwLjcsNDMsMzkuNSw0MiwzOC43eiIvPgoJCQk8L2c+CgkJCTxnPgoJCQkJPHBhdGggY2xhc3M9InN0MSIgZD0iTTE4LjIsMzEuMmwtNC0wLjRjLTIuNi0wLjMtNC44LDEuNi00LjgsNC4yYzAsMS40LDAuNiwyLjcsMS42LDMuN2MtMSwwLjgtMS42LDItMS42LDMuM3YwCgkJCQkJYzAsMi42LDIuMSw0LjksNC44LDUuMmw0LDAuNGMwLjQsMCwwLjgtMC4zLDAuOC0wLjd2LTd2LTAuOXYtN0MxOC45LDMxLjcsMTguNiwzMS4zLDE4LjIsMzEuMnoiLz4KCQkJPC9nPgoJCQk8Zz4KCQkJCTxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik0yNi41LDM0LjZoLTRjLTAuNCwwLTAuOCwwLjMtMC44LDAuOHYxMC40djEuMWMwLDAuNCwwLjMsMC45LDAuOCwwLjloNGMwLDAuOC0xLjIsMS44LTMuOSwyLjFsLTAuMywwCgkJCQkJYy0wLjIsMC0wLjYsMC0wLjYsMC44djAuMmMwLDAuNCwwLjMsMC44LDAuOCwwLjhoNGMyLjYsMCw0LjgtMi41LDQuOC01LjJ2LTcuMUMzMS4yLDM2LjcsMjkuMSwzNC42LDI2LjUsMzQuNnoiLz4KCQkJPC9nPgoJCTwvZz4KCTwvZz4KCTxnPgoJCTxnPgoJCQk8cGF0aCBjbGFzcz0ic3QyIiBkPSJNMTU1LjcsMjQuNnYwLjVoLTAuOXYyLjZoLTAuNnYtMi42aC0wLjl2LTAuNUgxNTUuN3ogTTE1OC45LDI3LjdsLTAuMS0xLjhjMC0wLjIsMC0wLjUsMC0wLjloMAoJCQkJYy0wLjEsMC4zLTAuMiwwLjYtMC4yLDAuOWwtMC41LDEuN2gtMC42bC0wLjUtMS44Yy0wLjEtMC4yLTAuMS0wLjYtMC4yLTAuOWgwYzAsMC4zLDAsMC42LDAsMC45bC0wLjEsMS44aC0wLjZsMC4yLTMuMWgwLjkKCQkJCWwwLjUsMS41YzAuMSwwLjIsMC4xLDAuNSwwLjIsMC44aDBjMC4xLTAuMywwLjEtMC42LDAuMi0wLjhsMC41LTEuNWgwLjhsMC4yLDMuMUgxNTguOXoiLz4KCQk8L2c+CgkJPHBhdGggY2xhc3M9InN0MiIgZD0iTTY4LjgsNDMuMnY3LjJoMTcuNGMwLjMsMCwwLjcsMC40LDAuNywwLjd2NC42YzAsMC4zLTAuNCwwLjctMC43LDAuN0g2Mi42Yy0wLjMsMC0wLjYtMC4zLTAuNi0wLjZWMjUuMwoJCQljMC0wLjMsMC4zLTAuNiwwLjYtMC42aDIzLjZjMC4zLDAsMC43LDAuNCwwLjcsMC43djQuNmMwLDAuMy0wLjQsMC43LTAuNywwLjdINjguOHY2LjVoMTUuOWMwLjMsMCwwLjcsMC40LDAuNywwLjd2NC42CgkJCWMwLDAuMy0wLjQsMC43LTAuNywwLjdINjguOHoiLz4KCQk8cGF0aCBjbGFzcz0ic3QyIiBkPSJNOTEuOSw1Ni41Yy0wLjMsMC0wLjYtMC4zLTAuNi0wLjZWMjUuM2MwLTAuMywwLjMtMC42LDAuNi0wLjZoMTIuN2M5LjUsMCwxNi43LDYuMiwxNi43LDE2CgkJCWMwLDkuNi02LDE2LTE2LjYsMTZIOTEuOXogTTk4LjEsMzAuN3YxOS44aDYuNmM2LjQsMCw5LjctMy44LDkuNy05LjljMC02LjEtNC4xLTkuOS05LjgtOS45SDk4LjF6Ii8+CgkJPHBhdGggY2xhc3M9InN0MiIgZD0iTTEyNi4zLDU2LjVjLTAuMywwLTAuNi0wLjMtMC42LTAuNlYyNS4zYzAtMC4zLDAuMy0wLjYsMC42LTAuNmgxNS40YzYuOCwwLDEwLjQsMy44LDEwLjQsOC44CgkJCWMwLDIuNi0xLDQuNi0yLjYsNnYwLjFjMi40LDEuNiwzLjgsNC4yLDMuOCw3LjRjMCw2LjEtNC4yLDkuNi0xMS40LDkuNkgxMjYuM3ogTTEzMi41LDMwLjd2Ni41aDguN2MzLDAsNC4xLTEuNSw0LjEtMy4yCgkJCWMwLTEuOC0xLjQtMy4zLTQuNi0zLjNIMTMyLjV6IE0xNDEuMSw1MC41YzMuOCwwLDUuMy0xLjMsNS4zLTMuOGMwLTIuMy0xLjctMy45LTUuNS0zLjloLTguNXY3LjhIMTQxLjF6Ii8+Cgk8L2c+Cgk8Zz4KCQk8Zz4KCQkJPGNpcmNsZSBjbGFzcz0ic3QwIiBjeD0iMjYuNSIgY3k9IjQwIiByPSIyNiIvPgoJCTwvZz4KCQk8Zz4KCQkJPGc+CgkJCQk8cGF0aCBjbGFzcz0ic3QxIiBkPSJNNDIsMzguN2MxLTEsMS42LTIuMywxLjYtMy43YzAtMi42LTIuMS00LjUtNC44LTQuMmwtNCwwLjRjLTAuNCwwLTAuOCwwLjQtMC44LDAuOHY3VjQwdjcKCQkJCQljMCwwLjQsMC4zLDAuNywwLjgsMC43bDQtMC40YzIuNi0wLjMsNC44LTIuNiw0LjgtNS4ydjBDNDMuNiw0MC43LDQzLDM5LjUsNDIsMzguN3oiLz4KCQkJPC9nPgoJCQk8Zz4KCQkJCTxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik0xOC4yLDMxLjJsLTQtMC40Yy0yLjYtMC4zLTQuOCwxLjYtNC44LDQuMmMwLDEuNCwwLjYsMi43LDEuNiwzLjdjLTEsMC44LTEuNiwyLTEuNiwzLjN2MAoJCQkJCWMwLDIuNiwyLjEsNC45LDQuOCw1LjJsNCwwLjRjMC40LDAsMC44LTAuMywwLjgtMC43di03di0wLjl2LTdDMTguOSwzMS43LDE4LjYsMzEuMywxOC4yLDMxLjJ6Ii8+CgkJCTwvZz4KCQkJPGc+CgkJCQk8cGF0aCBjbGFzcz0ic3QxIiBkPSJNMjYuNSwzNC42aC00Yy0wLjQsMC0wLjgsMC4zLTAuOCwwLjh2MTAuNHYxLjFjMCwwLjQsMC4zLDAuOSwwLjgsMC45aDRjMCwwLjgtMS4yLDEuOC0zLjksMi4xbC0wLjMsMAoJCQkJCWMtMC4yLDAtMC42LDAtMC42LDAuOHYwLjJjMCwwLjQsMC4zLDAuOCwwLjgsMC44aDRjMi42LDAsNC44LTIuNSw0LjgtNS4ydi03LjFDMzEuMiwzNi43LDI5LjEsMzQuNiwyNi41LDM0LjZ6Ii8+CgkJCTwvZz4KCQk8L2c+Cgk8L2c+Cgk8Zz4KCQk8Zz4KCQkJPHBhdGggY2xhc3M9InN0MiIgZD0iTTE1NS43LDI0LjZ2MC41aC0wLjl2Mi42aC0wLjZ2LTIuNmgtMC45di0wLjVIMTU1Ljd6IE0xNTguOSwyNy43bC0wLjEtMS44YzAtMC4yLDAtMC41LDAtMC45aDAKCQkJCWMtMC4xLDAuMy0wLjIsMC42LTAuMiwwLjlsLTAuNSwxLjdoLTAuNmwtMC41LTEuOGMtMC4xLTAuMi0wLjEtMC42LTAuMi0wLjloMGMwLDAuMywwLDAuNiwwLDAuOWwtMC4xLDEuOGgtMC42bDAuMi0zLjFoMC45CgkJCQlsMC41LDEuNWMwLjEsMC4yLDAuMSwwLjUsMC4yLDAuOGgwYzAuMS0wLjMsMC4xLTAuNiwwLjItMC44bDAuNS0xLjVoMC44bDAuMiwzLjFIMTU4Ljl6Ii8+CgkJPC9nPgoJCTxwYXRoIGNsYXNzPSJzdDIiIGQ9Ik02OC44LDQzLjJ2Ny4yaDE3LjRjMC4zLDAsMC43LDAuNCwwLjcsMC43djQuNmMwLDAuMy0wLjQsMC43LTAuNywwLjdINjIuNmMtMC4zLDAtMC42LTAuMy0wLjYtMC42VjI1LjMKCQkJYzAtMC4zLDAuMy0wLjYsMC42LTAuNmgyMy42YzAuMywwLDAuNywwLjQsMC43LDAuN3Y0LjZjMCwwLjMtMC40LDAuNy0wLjcsMC43SDY4Ljh2Ni41aDE1LjljMC4zLDAsMC43LDAuNCwwLjcsMC43djQuNgoJCQljMCwwLjMtMC40LDAuNy0wLjcsMC43SDY4Ljh6Ii8+CgkJPHBhdGggY2xhc3M9InN0MiIgZD0iTTkxLjksNTYuNWMtMC4zLDAtMC42LTAuMy0wLjYtMC42VjI1LjNjMC0wLjMsMC4zLTAuNiwwLjYtMC42aDEyLjdjOS41LDAsMTYuNyw2LjIsMTYuNywxNgoJCQljMCw5LjYtNiwxNi0xNi42LDE2SDkxLjl6IE05OC4xLDMwLjd2MTkuOGg2LjZjNi40LDAsOS43LTMuOCw5LjctOS45YzAtNi4xLTQuMS05LjktOS44LTkuOUg5OC4xeiIvPgoJCTxwYXRoIGNsYXNzPSJzdDIiIGQ9Ik0xMjYuMyw1Ni41Yy0wLjMsMC0wLjYtMC4zLTAuNi0wLjZWMjUuM2MwLTAuMywwLjMtMC42LDAuNi0wLjZoMTUuNGM2LjgsMCwxMC40LDMuOCwxMC40LDguOAoJCQljMCwyLjYtMSw0LjYtMi42LDZ2MC4xYzIuNCwxLjYsMy44LDQuMiwzLjgsNy40YzAsNi4xLTQuMiw5LjYtMTEuNCw5LjZIMTI2LjN6IE0xMzIuNSwzMC43djYuNWg4LjdjMywwLDQuMS0xLjUsNC4xLTMuMgoJCQljMC0xLjgtMS40LTMuMy00LjYtMy4zSDEzMi41eiBNMTQxLjEsNTAuNWMzLjgsMCw1LjMtMS4zLDUuMy0zLjhjMC0yLjMtMS43LTMuOS01LjUtMy45aC04LjV2Ny44SDE0MS4xeiIvPgoJPC9nPgo8L2c+Cjwvc3ZnPgo=
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - configmaps/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - watch
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          verbs:
          - create
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - admissionregistration.k8s.io
          resources:
          - mutatingwebhookconfigurations
          verbs:
          - get
          - list
          - patch
          - update
        - apiGroups:
          - admissionregistration.k8s.io
          resources:
          - validatingwebhookconfigurations
          verbs:
          - get
          - list
          - patch
          - update
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - get
          - list
          - patch
          - update
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - statefulsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - batch
          resources:
          - jobs
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - batch
          resources:
          - jobs/status
          verbs:
          - get
        - apiGroups:
          - cert-manager.io
          resources:
          - certificates
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - create
          - get
          - update
        - apiGroups:
          - pgd.k8s.enterprisedb.io
          resources:
          - pgdgroupcleanups
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - pgd.k8s.enterprisedb.io
          resources:
          - pgdgroupcleanups/finalizers
          verbs:
          - update
        - apiGroups:
          - pgd.k8s.enterprisedb.io
          resources:
          - pgdgroupcleanups/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - pgd.k8s.enterprisedb.io
          resources:
          - pgdgroups
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - pgd.k8s.enterprisedb.io
          resources:
          - pgdgroups/finalizers
          verbs:
          - update
        - apiGroups:
          - pgd.k8s.enterprisedb.io
          resources:
          - pgdgroups/status
          verbs:
          - get
          - patch
          - update
          - watch
        - apiGroups:
          - policy
          resources:
          - poddisruptionbudgets
          verbs:
          - create
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - postgresql.k8s.enterprisedb.io
          resources:
          - clusters
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - postgresql.k8s.enterprisedb.io
          resources:
          - clusters/finalizers
          verbs:
          - update
        - apiGroups:
          - postgresql.k8s.enterprisedb.io
          resources:
          - clusters/status
          verbs:
          - get
          - patch
          - update
          - watch
        - apiGroups:
          - postgresql.k8s.enterprisedb.io
          resources:
          - scheduledbackups
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - rolebindings
          verbs:
          - create
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - roles
          verbs:
          - create
          - get
          - list
          - patch
          - update
          - watch
        serviceAccountName: pgd-operator-controller-manager
      deployments:
      - label:
          app.kubernetes.io/name: pgd-operator
          control-plane: controller-manager
        name: pgd-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              app.kubernetes.io/name: pgd-operator
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                app.kubernetes.io/name: pgd-operator
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - controller
                - --leader-elect
                - --config-map-name=pgd-operator-controller-manager-config
                - --secret-name=pgd-operator-controller-manager-config
                - --log-level=info
                command:
                - /manager
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: WEBHOOK_CERT_DIR
                  value: /apiserver.local.config/certificates
                - name: OPERATOR_IMAGE_NAME
                  value: docker.enterprisedb.com/k8s_enterprise_pgd/pg4k-pgd-openshift@sha256:3a58d204fc9d58398c39e1566fc3741270b8df3c82ecf808e992f15fe41889dc
                - name: OPERATOR_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                image: docker.enterprisedb.com/k8s_enterprise_pgd/pg4k-pgd-openshift@sha256:3a58d204fc9d58398c39e1566fc3741270b8df3c82ecf808e992f15fe41889dc
                livenessProbe:
                  httpGet:
                    path: /readyz
                    port: 9443
                    scheme: HTTPS
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                ports:
                - containerPort: 8080
                  name: metrics
                  protocol: TCP
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 9443
                    scheme: HTTPS
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources: {}
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
                  readOnlyRootFilesystem: true
                volumeMounts:
                - mountPath: /controller
                  name: scratch-data
                - mountPath: /run/secrets/k8s.enterprisedb.io/webhook
                  name: webhook-certificates
              imagePullSecrets:
              - name: pgd-operator-pull-secret
              securityContext:
                runAsNonRoot: true
              serviceAccountName: pgd-operator-controller-manager
              terminationGracePeriodSeconds: 10
              volumes:
              - emptyDir: {}
                name: scratch-data
              - name: webhook-certificates
                secret:
                  defaultMode: 420
                  optional: true
                  secretName: pgd-operator-webhook-cert
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: pgd-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - postgresql
  - distributed
  - postgres
  - database
  - sql
  - cloud
  - native
  - edb
  - enterprisedb
  - cnp
  links:
  - name: 'Documentation: EDB Postgres Distributed v5'
    url: https://www.enterprisedb.com/docs/pgd/latest/
  - name: 'Documentation: EDB Postgres Distributed for Kubernetes'
    url: https://www.enterprisedb.com/docs/postgres_distributed_for_kubernetes/latest/
  maintainers:
  - email: sales@enterprisedb.com
    name: Sales
  - email: support@enterprisedb.com
    name: Support
  maturity: alpha
  provider:
    name: EnterpriseDB Corporation
  version: 0.6.0
  webhookdefinitions:
  - admissionReviewVersions:
    - v1
    containerPort: 443
    conversionCRDs:
    - pgdgroups.pgd.k8s.enterprisedb.io
    deploymentName: pgd-operator-controller-manager
    generateName: cpgdgroups.kb.io
    sideEffects: None
    targetPort: 9443
    type: ConversionWebhook
    webhookPath: /convert
  - admissionReviewVersions:
    - v1
    containerPort: 443
    deploymentName: pgd-operator-controller-manager
    failurePolicy: Fail
    generateName: mpgdgroup.kb.io
    rules:
    - apiGroups:
      - pgd.k8s.enterprisedb.io
      apiVersions:
      - v1beta1
      operations:
      - CREATE
      - UPDATE
      resources:
      - pgdgroups
    sideEffects: None
    targetPort: 9443
    type: MutatingAdmissionWebhook
    webhookPath: /mutate-pgd-k8s-enterprisedb-io-v1beta1-pgdgroup
  - admissionReviewVersions:
    - v1
    containerPort: 443
    deploymentName: pgd-operator-controller-manager
    failurePolicy: Fail
    generateName: vpgdgroup.kb.io
    rules:
    - apiGroups:
      - pgd.k8s.enterprisedb.io
      apiVersions:
      - v1beta1
      operations:
      - CREATE
      - UPDATE
      resources:
      - pgdgroups
    sideEffects: None
    targetPort: 9443
    type: ValidatingAdmissionWebhook
    webhookPath: /validate-pgd-k8s-enterprisedb-io-v1beta1-pgdgroup
  - admissionReviewVersions:
    - v1
    containerPort: 443
    deploymentName: pgd-operator-controller-manager
    failurePolicy: Fail
    generateName: vpgdgroupcleanup.kb.io
    rules:
    - apiGroups:
      - pgd.k8s.enterprisedb.io
      apiVersions:
      - v1beta1
      operations:
      - CREATE
      - UPDATE
      resources:
      - pgdgroupcleanups
    sideEffects: None
    targetPort: 9443
    type: ValidatingAdmissionWebhook
    webhookPath: /validate-pgd-k8s-enterprisedb-io-v1beta1-pgdgroupcleanup

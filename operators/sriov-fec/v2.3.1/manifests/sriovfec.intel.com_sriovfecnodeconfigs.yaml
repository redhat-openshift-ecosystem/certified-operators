# SPDX-License-Identifier: Apache-2.0
# Copyright (c) 2020-2022 Intel Corporation
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: sriovfecnodeconfigs.sriovfec.intel.com
spec:
  group: sriovfec.intel.com
  names:
    kind: SriovFecNodeConfig
    listKind: SriovFecNodeConfigList
    plural: sriovfecnodeconfigs
    shortNames:
    - sfnc
    singular: sriovfecnodeconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Configured")].reason
      name: Configured
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: SriovFecNodeConfig is the Schema for the sriovfecnodeconfigs
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SriovFecNodeConfigSpec defines the desired state of SriovFecNodeConfig
            properties:
              drainSkip:
                type: boolean
              physicalFunctions:
                description: List of PhysicalFunctions configs
                items:
                  description: PhysicalFunctionConfig defines a possible configuration
                    of a single Physical Function (PF), i.e. card
                  properties:
                    bbDevConfig:
                      description: BBDevConfig is a config for PF's queues
                      properties:
                        acc100:
                          description: ACC100BBDevConfig specifies variables to configure
                            ACC100 with
                          properties:
                            downlink4G:
                              properties:
                                aqDepthLog2:
                                  maximum: 4
                                  minimum: 4
                                  type: integer
                                numAqsPerGroups:
                                  maximum: 16
                                  minimum: 16
                                  type: integer
                                numQueueGroups:
                                  maximum: 8
                                  minimum: 0
                                  type: integer
                              required:
                              - aqDepthLog2
                              - numAqsPerGroups
                              - numQueueGroups
                              type: object
                            downlink5G:
                              properties:
                                aqDepthLog2:
                                  maximum: 4
                                  minimum: 4
                                  type: integer
                                numAqsPerGroups:
                                  maximum: 16
                                  minimum: 16
                                  type: integer
                                numQueueGroups:
                                  maximum: 8
                                  minimum: 0
                                  type: integer
                              required:
                              - aqDepthLog2
                              - numAqsPerGroups
                              - numQueueGroups
                              type: object
                            maxQueueSize:
                              maximum: 1024
                              minimum: 1024
                              type: integer
                            numVfBundles:
                              maximum: 16
                              minimum: 16
                              type: integer
                            pfMode:
                              type: boolean
                            uplink4G:
                              properties:
                                aqDepthLog2:
                                  maximum: 4
                                  minimum: 4
                                  type: integer
                                numAqsPerGroups:
                                  maximum: 16
                                  minimum: 16
                                  type: integer
                                numQueueGroups:
                                  maximum: 8
                                  minimum: 0
                                  type: integer
                              required:
                              - aqDepthLog2
                              - numAqsPerGroups
                              - numQueueGroups
                              type: object
                            uplink5G:
                              properties:
                                aqDepthLog2:
                                  maximum: 4
                                  minimum: 4
                                  type: integer
                                numAqsPerGroups:
                                  maximum: 16
                                  minimum: 16
                                  type: integer
                                numQueueGroups:
                                  maximum: 8
                                  minimum: 0
                                  type: integer
                              required:
                              - aqDepthLog2
                              - numAqsPerGroups
                              - numQueueGroups
                              type: object
                          required:
                          - downlink4G
                          - downlink5G
                          - maxQueueSize
                          - numVfBundles
                          - pfMode
                          - uplink4G
                          - uplink5G
                          type: object
                        n3000:
                          description: N3000BBDevConfig specifies variables to configure
                            N3000 with
                          properties:
                            downlink:
                              properties:
                                bandwidth:
                                  minimum: 0
                                  type: integer
                                loadBalance:
                                  minimum: 0
                                  type: integer
                                queues:
                                  properties:
                                    vf0:
                                      maximum: 32
                                      minimum: 0
                                      type: integer
                                    vf1:
                                      maximum: 32
                                      minimum: 0
                                      type: integer
                                    vf2:
                                      maximum: 32
                                      minimum: 0
                                      type: integer
                                    vf3:
                                      maximum: 32
                                      minimum: 0
                                      type: integer
                                    vf4:
                                      maximum: 32
                                      minimum: 0
                                      type: integer
                                    vf5:
                                      maximum: 32
                                      minimum: 0
                                      type: integer
                                    vf6:
                                      maximum: 32
                                      minimum: 0
                                      type: integer
                                    vf7:
                                      maximum: 32
                                      minimum: 0
                                      type: integer
                                  required:
                                  - vf0
                                  - vf1
                                  - vf2
                                  - vf3
                                  - vf4
                                  - vf5
                                  - vf6
                                  - vf7
                                  type: object
                              required:
                              - bandwidth
                              - loadBalance
                              - queues
                              type: object
                            flrTimeout:
                              minimum: 0
                              type: integer
                            networkType:
                              enum:
                              - FPGA_5GNR
                              - FPGA_LTE
                              type: string
                            pfMode:
                              type: boolean
                            uplink:
                              properties:
                                bandwidth:
                                  minimum: 0
                                  type: integer
                                loadBalance:
                                  minimum: 0
                                  type: integer
                                queues:
                                  properties:
                                    vf0:
                                      maximum: 32
                                      minimum: 0
                                      type: integer
                                    vf1:
                                      maximum: 32
                                      minimum: 0
                                      type: integer
                                    vf2:
                                      maximum: 32
                                      minimum: 0
                                      type: integer
                                    vf3:
                                      maximum: 32
                                      minimum: 0
                                      type: integer
                                    vf4:
                                      maximum: 32
                                      minimum: 0
                                      type: integer
                                    vf5:
                                      maximum: 32
                                      minimum: 0
                                      type: integer
                                    vf6:
                                      maximum: 32
                                      minimum: 0
                                      type: integer
                                    vf7:
                                      maximum: 32
                                      minimum: 0
                                      type: integer
                                  required:
                                  - vf0
                                  - vf1
                                  - vf2
                                  - vf3
                                  - vf4
                                  - vf5
                                  - vf6
                                  - vf7
                                  type: object
                              required:
                              - bandwidth
                              - loadBalance
                              - queues
                              type: object
                          required:
                          - downlink
                          - flrTimeout
                          - networkType
                          - pfMode
                          - uplink
                          type: object
                      type: object
                    pciAddress:
                      description: PCIAdress is a Physical Functions's PCI address
                        that will be configured according to this spec
                      pattern: ^[a-fA-F0-9]{4}:[a-fA-F0-9]{2}:[01][a-fA-F0-9]\.[0-7]$
                      type: string
                    pfDriver:
                      description: PFDriver to bound the PFs to
                      type: string
                    vfAmount:
                      description: VFAmount is an amount of VFs to be created
                      minimum: 0
                      type: integer
                    vfDriver:
                      description: VFDriver to bound the VFs to
                      type: string
                  required:
                  - bbDevConfig
                  - pciAddress
                  - pfDriver
                  - vfAmount
                  - vfDriver
                  type: object
                type: array
            required:
            - physicalFunctions
            type: object
          status:
            description: SriovFecNodeConfigStatus defines the observed state of SriovFecNodeConfig
            properties:
              conditions:
                description: Provides information about device update status
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              inventory:
                description: Provides information about FPGA inventory on the node
                properties:
                  sriovAccelerators:
                    items:
                      properties:
                        deviceID:
                          type: string
                        driver:
                          type: string
                        maxVirtualFunctions:
                          type: integer
                        pciAddress:
                          type: string
                        vendorID:
                          type: string
                        virtualFunctions:
                          items:
                            properties:
                              deviceID:
                                type: string
                              driver:
                                type: string
                              pciAddress:
                                type: string
                            required:
                            - deviceID
                            - driver
                            - pciAddress
                            type: object
                          type: array
                      required:
                      - deviceID
                      - driver
                      - maxVirtualFunctions
                      - pciAddress
                      - vendorID
                      - virtualFunctions
                      type: object
                    type: array
                type: object
            type: object
        type: object
    served: false
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Configured")].reason
      name: Configured
      type: string
    name: v2
    schema:
      openAPIV3Schema:
        description: SriovFecNodeConfig is the Schema for the sriovfecnodeconfigs
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SriovFecNodeConfigSpec defines the desired state of SriovFecNodeConfig
            properties:
              drainSkip:
                description: Skips drain process when true; default false. Should
                  be true if operator is running on SNO
                type: boolean
              physicalFunctions:
                description: List of PhysicalFunctions configs
                items:
                  properties:
                    bbDevConfig:
                      description: BBDevConfig is a config for PF's queues
                      properties:
                        acc100:
                          description: ACC100BBDevConfig specifies variables to configure
                            ACC100 with
                          properties:
                            downlink4G:
                              properties:
                                aqDepthLog2:
                                  maximum: 12
                                  minimum: 1
                                  type: integer
                                numAqsPerGroups:
                                  maximum: 16
                                  minimum: 1
                                  type: integer
                                numQueueGroups:
                                  maximum: 8
                                  minimum: 0
                                  type: integer
                              required:
                              - aqDepthLog2
                              - numAqsPerGroups
                              - numQueueGroups
                              type: object
                            downlink5G:
                              properties:
                                aqDepthLog2:
                                  maximum: 12
                                  minimum: 1
                                  type: integer
                                numAqsPerGroups:
                                  maximum: 16
                                  minimum: 1
                                  type: integer
                                numQueueGroups:
                                  maximum: 8
                                  minimum: 0
                                  type: integer
                              required:
                              - aqDepthLog2
                              - numAqsPerGroups
                              - numQueueGroups
                              type: object
                            maxQueueSize:
                              maximum: 1024
                              minimum: 1024
                              type: integer
                            numVfBundles:
                              maximum: 16
                              minimum: 1
                              type: integer
                            pfMode:
                              enum:
                              - false
                              type: boolean
                            uplink4G:
                              properties:
                                aqDepthLog2:
                                  maximum: 12
                                  minimum: 1
                                  type: integer
                                numAqsPerGroups:
                                  maximum: 16
                                  minimum: 1
                                  type: integer
                                numQueueGroups:
                                  maximum: 8
                                  minimum: 0
                                  type: integer
                              required:
                              - aqDepthLog2
                              - numAqsPerGroups
                              - numQueueGroups
                              type: object
                            uplink5G:
                              properties:
                                aqDepthLog2:
                                  maximum: 12
                                  minimum: 1
                                  type: integer
                                numAqsPerGroups:
                                  maximum: 16
                                  minimum: 1
                                  type: integer
                                numQueueGroups:
                                  maximum: 8
                                  minimum: 0
                                  type: integer
                              required:
                              - aqDepthLog2
                              - numAqsPerGroups
                              - numQueueGroups
                              type: object
                          required:
                          - downlink4G
                          - downlink5G
                          - numVfBundles
                          - uplink4G
                          - uplink5G
                          type: object
                        n3000:
                          description: N3000BBDevConfig specifies variables to configure
                            N3000 with
                          properties:
                            downlink:
                              properties:
                                bandwidth:
                                  minimum: 0
                                  type: integer
                                loadBalance:
                                  minimum: 0
                                  type: integer
                                queues:
                                  properties:
                                    vf0:
                                      maximum: 32
                                      minimum: 0
                                      type: integer
                                    vf1:
                                      maximum: 32
                                      minimum: 0
                                      type: integer
                                    vf2:
                                      maximum: 32
                                      minimum: 0
                                      type: integer
                                    vf3:
                                      maximum: 32
                                      minimum: 0
                                      type: integer
                                    vf4:
                                      maximum: 32
                                      minimum: 0
                                      type: integer
                                    vf5:
                                      maximum: 32
                                      minimum: 0
                                      type: integer
                                    vf6:
                                      maximum: 32
                                      minimum: 0
                                      type: integer
                                    vf7:
                                      maximum: 32
                                      minimum: 0
                                      type: integer
                                  required:
                                  - vf0
                                  - vf1
                                  - vf2
                                  - vf3
                                  - vf4
                                  - vf5
                                  - vf6
                                  - vf7
                                  type: object
                              required:
                              - bandwidth
                              - loadBalance
                              - queues
                              type: object
                            flrTimeout:
                              minimum: 0
                              type: integer
                            networkType:
                              enum:
                              - FPGA_5GNR
                              - FPGA_LTE
                              type: string
                            pfMode:
                              enum:
                              - false
                              type: boolean
                            uplink:
                              properties:
                                bandwidth:
                                  minimum: 0
                                  type: integer
                                loadBalance:
                                  minimum: 0
                                  type: integer
                                queues:
                                  properties:
                                    vf0:
                                      maximum: 32
                                      minimum: 0
                                      type: integer
                                    vf1:
                                      maximum: 32
                                      minimum: 0
                                      type: integer
                                    vf2:
                                      maximum: 32
                                      minimum: 0
                                      type: integer
                                    vf3:
                                      maximum: 32
                                      minimum: 0
                                      type: integer
                                    vf4:
                                      maximum: 32
                                      minimum: 0
                                      type: integer
                                    vf5:
                                      maximum: 32
                                      minimum: 0
                                      type: integer
                                    vf6:
                                      maximum: 32
                                      minimum: 0
                                      type: integer
                                    vf7:
                                      maximum: 32
                                      minimum: 0
                                      type: integer
                                  required:
                                  - vf0
                                  - vf1
                                  - vf2
                                  - vf3
                                  - vf4
                                  - vf5
                                  - vf6
                                  - vf7
                                  type: object
                              required:
                              - bandwidth
                              - loadBalance
                              - queues
                              type: object
                          required:
                          - downlink
                          - flrTimeout
                          - networkType
                          - uplink
                          type: object
                      type: object
                    pciAddress:
                      description: PCIAdress is a Physical Functions's PCI address
                        that will be configured according to this spec
                      pattern: ^[a-fA-F0-9]{4}:[a-fA-F0-9]{2}:[01][a-fA-F0-9]\.[0-7]$
                      type: string
                    pfDriver:
                      description: PFDriver to bound the PFs to
                      pattern: (pci-pf-stub|pci_pf_stub|igb_uio|vfio-pci)
                      type: string
                    vfAmount:
                      description: VFAmount is an amount of VFs to be created
                      minimum: 0
                      type: integer
                    vfDriver:
                      description: VFDriver to bound the VFs to
                      type: string
                  required:
                  - bbDevConfig
                  - pciAddress
                  - pfDriver
                  - vfAmount
                  - vfDriver
                  type: object
                type: array
            required:
            - physicalFunctions
            type: object
          status:
            description: SriovFecNodeConfigStatus defines the observed state of SriovFecNodeConfig
            properties:
              conditions:
                description: Provides information about device update status
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              inventory:
                description: Provides information about FPGA inventory on the node
                properties:
                  sriovAccelerators:
                    items:
                      properties:
                        deviceID:
                          type: string
                        driver:
                          type: string
                        maxVirtualFunctions:
                          type: integer
                        pciAddress:
                          type: string
                        vendorID:
                          type: string
                        virtualFunctions:
                          items:
                            properties:
                              deviceID:
                                type: string
                              driver:
                                type: string
                              pciAddress:
                                type: string
                            required:
                            - deviceID
                            - driver
                            - pciAddress
                            type: object
                          type: array
                      required:
                      - deviceID
                      - driver
                      - maxVirtualFunctions
                      - pciAddress
                      - vendorID
                      - virtualFunctions
                      type: object
                    type: array
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

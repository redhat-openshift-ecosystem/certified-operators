apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  creationTimestamp: null
  name: unitsets.tesseract-cube.bsgchina.com
spec:
  group: tesseract-cube.bsgchina.com
  names:
    kind: UnitSet
    listKind: UnitSetList
    plural: unitsets
    shortNames:
    - us
    singular: unitset
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.architecture.units
      name: EXPECTED
      type: integer
    - jsonPath: .status.units
      name: CURRENT
      type: integer
    - jsonPath: .status.readyUnits
      name: READY
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: UnitSet is the Schema for the unitsets API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec Specification of the desired behavior of the unitset.
            properties:
              architecture:
                description: Architecture the architecture information of the unitset
                  in this, we can define the number of units, the mode of the architecture,
                  the role of the unit
                properties:
                  mode:
                    description: 'Mode the mode of the architecture e.g.: single,
                      clone, replication_async, replication_semi_sync'
                    type: string
                  role:
                    description: Role the role of the unit
                    type: string
                  units:
                    description: Units the number of units
                    type: integer
                type: object
              externalSecret:
                description: ExternalSecret is used to communicate parameter for ExternalSecretInfo.
                properties:
                  organization:
                    description: Organization the organization of the certificate
                      issuing authority
                    type: string
                  root_secret:
                    description: RootSecret the root secret of the certificate issuing
                      authority
                    type: string
                type: object
              image:
                description: 'Image the image version of units which belong to the
                  unitset required: true'
                properties:
                  arch:
                    description: 'Arch the architecture of the image The mirror architecture
                      type needs to match the server architecture. enum: "arm64",
                      "amd64" required: true'
                    type: string
                  build:
                    description: 'Dev the build version of the image version required:
                      true'
                    minimum: 0
                    type: integer
                  major:
                    description: 'Major the major version of the image version required:
                      true'
                    minimum: 0
                    type: integer
                  minor:
                    description: 'Minor the minor version of the image version required:
                      true'
                    minimum: 0
                    type: integer
                  patch:
                    description: 'Patch the patch version of the image version required:
                      true'
                    minimum: 0
                    type: integer
                  type:
                    description: 'Type the service type of the image e.g.: mysql,
                      redis, elasticsearch, kafka, zookeeper ... required: true'
                    type: string
                required:
                - arch
                - build
                - major
                - minor
                - patch
                - type
                type: object
              rollingUpdate:
                description: RollingUpdate is used to communicate parameter for RollingUpdateStatefulSetStrategyType.
                x-kubernetes-preserve-unknown-fields: true
              serviceInfo:
                description: ServiceInfo describes the attributes that a user creates
                  on a service.
                x-kubernetes-preserve-unknown-fields: true
              sharedConfigName:
                description: SharedConfigName the name of the shared configmap The
                  different data structures consisting of the names of the units in
                  the unitset, partly customized for use in the program processing
                  logic, will be present in this configmap.
                type: string
              strategy:
                description: 'Strategy is used to communicate parameter for the strategy
                  of the unitset enum: "Recreate","RollingUpdate"'
                type: string
              template:
                description: Template the template of the unit
                properties:
                  affinity:
                    description: Affinity is a group of affinity scheduling rules.
                      If specified, the pod's scheduling constraints
                    x-kubernetes-preserve-unknown-fields: true
                  env:
                    description: Env represents an environment variable present in
                      a Container.
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: 'Variable references $(VAR_NAME) are expanded
                            using the previously defined environment variables in
                            the container and any service environment variables. If
                            a variable cannot be resolved, the reference in the input
                            string will be unchanged. Double $$ are reduced to a single
                            $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                            Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Defaults to "".'
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value.
                            Cannot be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, `metadata.labels[''<KEY>'']`,
                                `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                spec.serviceAccountName, status.hostIP, status.podIP,
                                status.podIPs.'
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                              x-kubernetes-map-type: atomic
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                              x-kubernetes-map-type: atomic
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-preserve-unknown-fields: true
                  metadata:
                    description: Metadata the metadata of the unit
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations the annotations of the unit
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels the labels of the unit
                        type: object
                      name:
                        description: Name the name of the unit
                        type: string
                    type: object
                  ports:
                    description: Ports the ports of the unit
                    items:
                      description: ContainerPort represents a network port in a single
                        container.
                      properties:
                        name:
                          description: Name the name of the port If specified, this
                            must be an IANA_SVC_NAME and unique within the pod. Each
                            named port in a pod must have a unique name. Name for
                            the port that can be referred to by services.
                          type: string
                        port:
                          description: Port the port of the unit
                          format: int32
                          type: integer
                      type: object
                    type: array
                  resource:
                    description: Resource describes the compute resource requirements.
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined
                          in spec.resourceClaims, that are used by this container.
                          \n This is an alpha field and requires enabling the DynamicResourceAllocation
                          feature gate. \n This field is immutable. It can only be
                          set for containers."
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. Requests cannot exceed
                          Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  serviceAccount:
                    description: 'ServiceAccount is the name of the ServiceAccount
                      to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/'
                    type: string
                  serviceInfo:
                    description: ServiceInfo describes the attributes that a user
                      creates on a service about unit.
                    properties:
                      portNames:
                        description: 'The list of ports that are exposed by this service.
                          More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies'
                        items:
                          type: string
                        type: array
                      serviceType:
                        description: 'ServiceType the service type of the unitset
                          type determines how the Service is exposed. Defaults to
                          ClusterIP. Valid options are ExternalName, ClusterIP, NodePort,
                          and LoadBalancer. "ClusterIP" allocates a cluster-internal
                          IP address for load-balancing to endpoints. Endpoints are
                          determined by the selector or if that is not specified,
                          by manual construction of an Endpoints object or EndpointSlice
                          objects. If clusterIP is "None", no virtual IP is allocated
                          and the endpoints are published as a set of endpoints rather
                          than a virtual IP. "NodePort" builds on ClusterIP and allocates
                          a port on every node which routes to the same endpoints
                          as the clusterIP. "LoadBalancer" builds on NodePort and
                          creates an external load-balancer (if supported in the current
                          cloud) which routes to the same endpoints as the clusterIP.
                          "ExternalName" aliases this service to the specified externalName.
                          Several other fields do not apply to ExternalName services.
                          More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types'
                        type: string
                    type: object
                  shareProcessNamespace:
                    description: 'ShareProcessNamespace Share a single process namespace
                      between all of the containers in a pod. When this is set containers
                      will be able to view and signal processes from other containers
                      in the same pod, and the first process in each container will
                      not be assigned PID 1. HostPID and ShareProcessNamespace cannot
                      both be set. default: true'
                    type: boolean
                  topologySpreadConstraints:
                    description: TopologySpreadConstraints describes how a group of
                      pods ought to spread across topology domains. Scheduler will
                      schedule pods in a way which abides by the constraints. All
                      topologySpreadConstraints are ANDed.
                    x-kubernetes-preserve-unknown-fields: true
                  unbindNode:
                    description: UnbindNode defines whether the unit is bound to a
                      node or not.
                    type: boolean
                  volumeMounts:
                    description: VolumeMounts describes a mounting of a Volume within
                      a container.
                    x-kubernetes-preserve-unknown-fields: true
                  volumes:
                    description: 'Volumes List of volumes that can be mounted by containers
                      belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes'
                    x-kubernetes-preserve-unknown-fields: true
                type: object
              volumeClaimTemplates:
                description: VolumeClaimTemplates is a user's request for and claim
                  to a persistent volume
                x-kubernetes-preserve-unknown-fields: true
            required:
            - image
            type: object
          status:
            description: Status Most recently observed status of the unitset. This
              data may not be up to date. Populated by the system. Read-only.
            properties:
              inUpdate:
                description: InUpdate used to mark if a mirror upgrade or resource
                  change is in progress
                type: string
              readyUnits:
                description: ReadyUnits the number of ready units
                type: integer
              service:
                description: Service the service name of the unitset
                type: string
              unitImageSynced:
                description: ImageSyncStatus defines the status of the image sync
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime the last transition time
                    format: date-time
                    type: string
                  status:
                    description: 'Status the status of the image sync enum: True,
                      False'
                    type: string
                type: object
              unitPVCSynced:
                description: PvcSyncStatus defines the status of the pvc sync
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime the last transition time
                    format: date-time
                    type: string
                  status:
                    description: 'Status the status of the pvc sync enum: True, False'
                    type: string
                type: object
              unitResourceSynced:
                description: ResourceSyncStatus defines the status of the resource
                  sync
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime the last transition time
                    format: date-time
                    type: string
                  status:
                    description: 'Status the status of the resource sync enum: True,
                      False'
                    type: string
                type: object
              units:
                description: Units the number of units
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null

apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations: {alm-examples: "[\n  {\n    \"apiVersion\": \"examplecnf.openshift.io/v1\"\
      ,\n    \"kind\": \"TestPMD\",\n    \"metadata\": {\n      \"name\": \"testpmd-sample\"\
      \n    },\n    \"spec\": {\n      \"ethpeerMaclist\": [\n        \"20:04:0f:f1:89:01\"\
      ,\n        \"20:04:0f:f1:89:02\"\n      ],\n      \"image_testpmd\": \"registry.redhat.io/openshift4/dpdk-base-rhel8:v4.6\"\
      ,\n      \"networks\": [\n        {\n          \"count\": 2,\n          \"name\"\
      : \"intel-numa0-net1\"\n        }\n      ],\n      \"size\": 1\n    }\n  }\n\
      ]", capabilities: Basic Install, operators.operatorframework.io/builder: operator-sdk-v1.7.1+git,
    operators.operatorframework.io/project_layout: ansible.sdk.operatorframework.io/v1}
  name: testpmd-operator.v0.2.9
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - {kind: TestPMD, name: testpmds.examplecnf.openshift.io, version: v1}
  description: An operator to manage the TestPMD application
  displayName: TestPMD Operator
  icon:
  - {base64data: ,
    mediatype: image/png}
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups: ['']
          resources: [secrets, pods, pods/exec, pods/log, configmaps]
          verbs: [create, delete, get, list, patch, update, watch]
        - apiGroups: [apps]
          resources: [deployments, daemonsets, replicasets, statefulsets]
          verbs: [create, delete, get, list, patch, update, watch]
        - apiGroups: [examplecnf.openshift.io]
          resources: [testpmds, testpmds/status]
          verbs: [create, delete, get, list, patch, update, watch]
        - apiGroups: [k8s.cni.cncf.io]
          resources: [network-attachment-definitions]
          verbs: [get, list, watch]
        - apiGroups: [security.openshift.io]
          resourceNames: [privileged]
          resources: [securitycontextconstraints]
          verbs: [use]
        serviceAccountName: testpmd-operator-controller-manager
      deployments:
      - name: testpmd-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels: {control-plane: controller-manager}
          strategy: {}
          template:
            metadata:
              labels: {control-plane: controller-manager, example-cnf-type: testpmd-operator}
            spec:
              containers:
              - args: ['--metrics-addr=127.0.0.1:8080', --enable-leader-election,
                  --leader-election-id=testpmd-operator]
                env:
                - {name: ANSIBLE_GATHERING, value: explicit}
                image: quay.io/rh-nfv-int/testpmd-operator@sha256:3e8fc703c71a7ccaca24b7312f8fcb3495370c46e7abc12975757b76430addf5
                imagePullPolicy: IfNotPresent
                livenessProbe:
                  httpGet: {path: /healthz, port: 6789}
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet: {path: /readyz, port: 6789}
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources: {}
                securityContext: {allowPrivilegeEscalation: false}
              securityContext: {runAsNonRoot: true}
              serviceAccountName: testpmd-operator-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups: ['']
          resources: [configmaps]
          verbs: [get, list, watch, create, update, patch, delete]
        - apiGroups: ['']
          resources: [events]
          verbs: [create, patch]
        - apiGroups: [coordination.k8s.io]
          resources: [leases]
          verbs: [get]
        serviceAccountName: testpmd-operator-controller-manager
    strategy: deployment
  installModes:
  - {supported: true, type: OwnNamespace}
  - {supported: true, type: SingleNamespace}
  - {supported: false, type: MultiNamespace}
  - {supported: true, type: AllNamespaces}
  keywords: [testpmd, nfv, cnf]
  links:
  - {name: Testpmd Operator, url: 'https://testpmd-operator.domain'}
  maintainers:
  - {email: skramaja@redhat.com, name: Saravanan KR}
  maturity: alpha
  provider: {name: Red Hat}
  relatedImages:
  - {image: 'registry.redhat.io/openshift4/dpdk-base-rhel8@sha256:9af03fb4c5ae1c51f71ad04f02fee8e9458aa73c3f4324e984c731d07896c4e1',
    name: testpmd-app}
  - {image: 'quay.io/rh-nfv-int/testpmd-container-app-mac@sha256:0a516a6f646989cb1abe77696b19838ff6138f177b1e4df6970b7bc8938552df',
    name: testpmd-container-app-mac}
  version: 0.2.9

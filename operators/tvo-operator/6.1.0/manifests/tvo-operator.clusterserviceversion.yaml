apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  labels:
    operatorframework.io/arch.amd64: supported
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "tvo.trilio.io/v1",
          "kind": "TVOControlPlane",
          "metadata": {
            "name": "tvocontrolplane-sample"
          },
          "spec": {
            "crdType": "TVOControlPlane"
            "common": {
              "dmapi_workers": "16",
              "memcached_servers": "",
              "my_ip": {
                "host_interface": null
              },
              "nova_group_id": "42436",
              "nova_user_id": "42436",
              "oslo_enable_proxy_headers_parsing": false,
              "trustee_role": "creator"
            },
            "database": {
              "common": {
                "host": "EDIT_DB_HOSTNAME",
                "root_password": "EDIT_PASSWORD",
                "root_user_name": "root"
              },
              "datamover_api": {
                "database": "dmapi",
                "password": "EDIT_PASSWORD",
                "user": "dmapi"
              },
              "wlm_api": {
                "database": "workloadmgr",
                "password": "EDIT_PASSWORD",
                "user": "workloadmgr"
              }
            },
            "helm3_hook": true,
            "images": {
              "triliovault_datamover_api": "registry.connect.redhat.com/trilio/trilio-datamover-api@sha256:3aa05496011001eae7308afbe4c825252e94161a84f65fc5b350dba25fc3501a",
              "triliovault_datamover_db_sync": "registry.connect.redhat.com/trilio/trilio-datamover-api@sha256:3aa05496011001eae7308afbe4c825252e94161a84f65fc5b350dba25fc3501a",
              "triliovault_object_store": "registry.connect.redhat.com/trilio/trilio-wlm@sha256:b62229854368726cbb3ac494622afb9574845699a31b400aa4244ee6571364d1",
              "triliovault_wlm": "registry.connect.redhat.com/trilio/trilio-wlm@sha256:b62229854368726cbb3ac494622afb9574845699a31b400aa4244ee6571364d1",
              "triliovault_wlm_api": "registry.connect.redhat.com/trilio/trilio-wlm@sha256:b62229854368726cbb3ac494622afb9574845699a31b400aa4244ee6571364d1",
              "triliovault_wlm_cloud_trust": "registry.connect.redhat.com/trilio/trilio-wlm@sha256:b62229854368726cbb3ac494622afb9574845699a31b400aa4244ee6571364d1",
              "triliovault_wlm_cron": "registry.connect.redhat.com/trilio/trilio-wlm@sha256:b62229854368726cbb3ac494622afb9574845699a31b400aa4244ee6571364d1",
              "triliovault_wlm_db_sync": "registry.connect.redhat.com/trilio/trilio-wlm@sha256:b62229854368726cbb3ac494622afb9574845699a31b400aa4244ee6571364d1",
              "triliovault_wlm_scheduler": "registry.connect.redhat.com/trilio/trilio-wlm@sha256:b62229854368726cbb3ac494622afb9574845699a31b400aa4244ee6571364d1",
              "triliovault_wlm_workloads": "registry.connect.redhat.com/trilio/trilio-wlm@sha256:b62229854368726cbb3ac494622afb9574845699a31b400aa4244ee6571364d1"
            },
            "keystone": {
              "common": {
                "admin_role_name": "admin",
                "auth_uri": "",
                "auth_url": "",
                "ca_cert": "CERT MULTIPLE LINES\n",
                "cloud_admin_domain_name": "Default",
                "cloud_admin_project_name": "admin",
                "cloud_admin_user_name": "admin",
                "cloud_admin_user_password": "",
                "is_self_signed_ssl_cert": true,
                "keystone_auth_host": "",
                "keystone_auth_port": "",
                "keystone_auth_protocol": "",
                "region_name": "regionOne",
                "service_project_domain_name": "Default",
                "service_project_name": "service"
              },
              "datamover_api": {
                "internal_endpoint": "ENDPOINT_PROTOCOL_INTERNAL://ENDPOINT_HOST_INTERNAL:8784/v2",
                "password": "EDIT_PASSWORD",
                "public_auth_host": "",
                "public_endpoint": "ENDPOINT_PROTOCOL_PUBLIC://ENDPOINT_HOST_PUBLIC:8784/v2",
                "service_desc": "TrilioVault Datamover Api Service",
                "service_name": "dmapi",
                "service_type": "datamover",
                "user": "dmapi"
              },
              "identity": null,
              "keystone_interface": "internal",
              "wlm_api": {
                "internal_endpoint": "ENDPOINT_PROTOCOL_INTERNAL://ENDPOINT_HOST_INTERNAL:8781/v1/$(tenant_id)s",
                "password": "EDIT_PASSWORD",
                "public_auth_host": "",
                "public_endpoint": "ENDPOINT_PROTOCOL_PUBLIC://ENDPOINT_HOST_PUBLIC:8781/v1/$(tenant_id)s",
                "service_desc": "TrilioVault Workloadmgr Api Service",
                "service_name": "TrilioVaultWLM",
                "service_type": "workloads",
                "user": "triliovault"
              }
            },
            "labels": {
              "datamover_api": {
                "node_selector_key": "trilio-control-plane",
                "node_selector_value": "enabled"
              },
              "wlm_api": {
                "node_selector_key": "trilio-control-plane",
                "node_selector_value": "enabled"
              },
              "wlm_cron": {
                "node_selector_key": "trilio-control-plane",
                "node_selector_value": "enabled"
              },
              "wlm_scheduler": {
                "node_selector_key": "trilio-control-plane",
                "node_selector_value": "enabled"
              },
              "wlm_workloads": {
                "node_selector_key": "trilio-control-plane",
                "node_selector_value": "enabled"
              }
            },
            "pod": {
              "replicas": {
                "triliovault_datamover_api": 3,
                "triliovault_object_store": 3,
                "triliovault_wlm_api": 3,
                "triliovault_wlm_cron": 1,
                "triliovault_wlm_scheduler": 3,
                "triliovault_wlm_workloads": 3
              },
              "security_context": {
                "triliovault": {
                  "container": {
                    "triliovault_datamover_api": {
                      "allowPrivilegeEscalation": false,
                      "readOnlyRootFilesystem": false,
                      "runAsGroup": 0,
                      "runAsUser": 63630
                    },
                    "triliovault_datamover_api_init": {
                      "readOnlyRootFilesystem": false,
                      "runAsGroup": 63630,
                      "runAsUser": 0
                    },
                    "triliovault_wlm_api": {
                      "privileged": true,
                      "readOnlyRootFilesystem": false,
                      "runAsUser": 42436
                    },
                    "triliovault_wlm_cron": {
                      "allowPrivilegeEscalation": false,
                      "readOnlyRootFilesystem": false,
                      "runAsUser": 42436
                    },
                    "triliovault_wlm_init": {
                      "readOnlyRootFilesystem": false,
                      "runAsGroup": 42436,
                      "runAsUser": 0
                    },
                    "triliovault_wlm_scheduler": {
                      "privileged": true,
                      "readOnlyRootFilesystem": false,
                      "runAsUser": 42436
                    },
                    "triliovault_wlm_workloads": {
                      "privileged": true,
                      "readOnlyRootFilesystem": false,
                      "runAsUser": 42436
                    },
                    "wlm_cloud_trust_creation": {
                      "readOnlyRootFilesystem": false,
                      "runAsGroup": 42436,
                      "runAsUser": 42436
                    }
                  }
                }
              }
            },
            "rabbitmq": {
              "common": {
                "admin_password": "EDIT_PASSWORD",
                "admin_user": "admin",
                "driver": "messagingv2",
                "host": "EDIT_HOST",
                "port": "5672"
              },
              "datamover_api": {
                "password": "EDIT_PASSWORD",
                "transport_url": "",
                "user": "dmapi",
                "vhost": "dmapi"
              },
              "wlm_api": {
                "password": "EDIT_PASSWORD",
                "transport_url": "",
                "user": "workloadmgr",
                "vhost": "workloadmgr"
              }
            },
            "triliovault_backup_targets": [
              {
                "backup_target_name": "S3_BT1",
                "backup_target_type": "s3",
                "is_default": true,
                "s3_access_key": "ACCESSKEY1",
                "s3_auth_version": "DEFAULT",
                "s3_bucket": "BUCKET1",
                "s3_bucket_object_lock_enabled": false,
                "s3_endpoint_url": "ENDPOINT_URL1",
                "s3_region_name": "REGION1",
                "s3_secret_key": "SECRETKEY1",
                "s3_self_signed_cert": false,
                "s3_signature_version": "default",
                "s3_ssl_enabled": true,
                "s3_ssl_verify": true,
                "s3_type": "amazon_s3"
              },
              {
                "backup_target_name": "S3_BT2",
                "backup_target_type": "s3",
                "is_default": true,
                "s3_access_key": "ACCESSKEY2",
                "s3_auth_version": "DEFAULT",
                "s3_bucket": "BUCKET2",
                "s3_bucket_object_lock_enabled": false,
                "s3_endpoint_url": "ENDPOINT_URL2",
                "s3_region_name": "REGION2",
                "s3_secret_key": "SECRETKEY2",
                "s3_self_signed_cert": true,
                "s3_signature_version": "default",
                "s3_ssl_ca_cert": "SSL_CERT_LINE_1\n",
                "s3_ssl_enabled": true,
                "s3_ssl_verify": true,
                "s3_type": "amazon_s3"
              },
              {
                "backup_target_name": "NFS_BT3",
                "backup_target_type": "nfs",
                "is_default": false,
                "nfs_options": "nolock,soft,timeo=600,intr,lookupcache=none,nfsvers=3,retrans=10",
                "nfs_shares": "11.30.1.10:/mnt/share"
              }
            ]
          }
        }
      ]
    capabilities: Full Lifecycle
    repository: https://github.com/trilioData/triliovault-cfg-scripts
    support: Trilio
    operatorframework.io/suggested-namespace: trilio-openstack
    operators.operatorframework.io/builder: operator-sdk-v1.38.0
    operators.operatorframework.io/project_layout: helm.sdk.operatorframework.io/v1
    containerImage: registry.connect.redhat.com/trilio/tvo-operator@sha256:<EDIT_SHA_HERE>
    certified: 'true'
    features.operators.openshift.io/disconnected: "true"
    features.operators.openshift.io/fips-compliant: "false"
    features.operators.openshift.io/proxy-aware: "true"
    features.operators.openshift.io/tls-profiles: "false"
    features.operators.openshift.io/token-auth-aws: "false"
    features.operators.openshift.io/token-auth-azure: "false"
    features.operators.openshift.io/token-auth-gcp: "false"
    categories: "Storage,Database,Monitoring,Security,Developer Tools"
    description: Cloud-Native Data Protection for OpenStack
    createdAt: "2025-01-14T11:20:30Z"
  name: tvo-operator.6.1.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - kind: TVOControlPlane
      name: tvocontrolplanes.tvo.trilio.io
      displayName: Trilio for OpenStack Control Plane
      description: Trilio for OpenStack Control Plane. Includes all control plane components like Datamover Api, Trilio object store and Workloadmgr services.
      version: v1
    - kind: TVOBackupTarget
      name: tvobackuptargets.tvo.trilio.io
      displayName: Trilio for OpenStack Backup Target
      description: Trilio for OpenStack Backup Target. This CR is responsible to add a new backup target.
      version: v1
  description: |-
    Trilio for OpenStack provides scalable, native, agentless, multi-tenant backup and recovery solutions, ensuring seamless protection of workloads with flexible storage options for dynamic cloud environments.

      * OpenStack Backup and Recovery: Recover any OpenStack application quickly in the event of data loss or misconfiguration. Trilio enables easy restoration of entire workloads that reflect the clouds last best-known state. Such as One-Click-Restore to entire project recovery on different clusters.
      * Disaster Recovery: Recover any OpenStack application quickly in the event of a disaster. Trilio enables easy restoration of entire workloads that reflect the clouds last best-known state. Trilio makes OpenStack disaster recovery easy.

      * Migration: A tenant or administrator can capture an application and its data and non-disruptively migrate that exact point-in-time to another OpenStack cloud. The need to migrate OpenStack workloads can be driven by economics, security or test/dev.

      * Network Functions Virtualization backup and recovery: Business critical services like NFV can quickly be configured to any state, assuring the optimal quality of service. Trilio provides recovery from data damage and allows restoration of entire VNFs, selected VNFs, or individual data items using a point-in-time working copy. The platform also allows recovery from a disaster by restoring the OpenStack network topology and populating it with a working copy of the entire NFV.

    More Information
    ----------------------
    Please click the link below to access more information about Trilio for Red Hat OpenShift:
    <a target="_blank" href="https://trilio.io/products/openshift-backup-and-recovery/">More Information</a>"
    About Trilio
    ----------------
    Trilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our Trilio technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. Visit our website https://trilio.io
  displayName: Trilio for OpenStack
  icon:
  - base64data: ""
    mediatype: ""
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
        - apiGroups:
          - tvo.trilio.io
          resources:
          - tvocontrolplanes
          - tvocontrolplanes/status
          - tvocontrolplanes/finalizers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - services/finalizers
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: tvo-operator-controller-manager
      deployments:
      - label:
          app.kubernetes.io/managed-by: kustomize
          app.kubernetes.io/name: tvo-operator
          control-plane: controller-manager
        name: tvo-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --metrics-require-rbac
                - --metrics-secure
                - --metrics-bind-address=:8443
                - --leader-elect
                - --leader-election-id=tvo-operator
                - --health-probe-bind-address=:8081
                image: registry.connect.redhat.com/trilio/tvo-operator@sha256:<EDIT_SHA_HERE>
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 500Mi
                  requests:
                    cpu: 10m
                    memory: 256Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                    - ALL
              securityContext:
                runAsNonRoot: true
              serviceAccountName: tvo-operator-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: tvo-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - OpenStack
  - Backup
  - Recovery
  - RHOSO Backup
  - Disaster Recovery
  maintainers:
  - name: 'Trilio'
    email: 'info@trilio.io'
  links:
  - name: Trilio Homepage
    url: https://trilio.io/
  - name: Tutorials
    url: https://trilio.io/products/openstack-backup-and-recovery/
  - name: Operator Documentation 
    url: https://docs.trilio.io/openstack
  maturity: stable
  provider:
    name: Trilio
    url: https://trilio.io/
  version: 6.1.0
  relatedImages:
  - name: tvo-operator
    image: registry.connect.redhat.com/trilio/tvo-operator@sha256:<EDIT_SHA_HERE>
  - name: trilio-datamover-api
    image: registry.connect.redhat.com/trilio/trilio-datamover-api@sha256:3aa05496011001eae7308afbe4c825252e94161a84f65fc5b350dba25fc3501a
  - name: trilio-wlm
    image: registry.connect.redhat.com/trilio/trilio-wlm@sha256:b62229854368726cbb3ac494622afb9574845699a31b400aa4244ee6571364d1

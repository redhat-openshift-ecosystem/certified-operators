apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "ca.broadcom.com/v1alpha1",
          "kind": "UniversalMonitoringAgent",
          "metadata": {
            "name": "uma-monitor"
          },
          "spec": {
            "agentManager": {
              "credential": "",
              "url": "localhost:5001"
            },
            "cloudmonitoring": {
              "aws": {
                "accessKey": null,
                "enabled": false,
                "secretKey": null,
                "servicesList": null
              }
            },
            "clusterName": "DevelopmentCluster",
            "daemonset": {
              "apmia": {
                "epagent": {
                  "port": 8889
                }
              }
            },
            "legacyapi": false,
            "monitor": {
              "application": {
                "autoattach": {
                  "dotnet": {
                    "enabled": true,
                    "propertiesOverride": null
                  },
                  "dynamicPropertyResolution": {
                    "agentName": "",
                    "hostName": "{k8s_deployment_name},{k8s_daemonset_name},{k8s_deploymentconfig_name},{k8s_pod_name},ContainerHost"
                  },
                  "filterType": "whitelist",
                  "java": {
                    "enabled": true,
                    "propertiesOverride": null
                  },
                  "probe": {
                    "enabled": true
                  }
                },
                "jmx": {
                  "enabled": true
                },
                "opentracing": {
                  "correlation": {
                    "enabled": false
                  },
                  "enabled": true,
                  "grpc": {
                    "hostport": null
                  }
                },
                "zipkinTracing": {
                  "enabled": true,
                  "zipkinServer": {
                    "hostport": null
                  }
                }
              },
              "clusterPerformance": {
                "enabled": true
              },
              "container": {
                "dockerstats": {
                  "enabled": true
                },
                "prometheus": {
                  "backend": {
                    "enabled": false,
                    "endPoint": {
                      "configFiles": null,
                      "metricAlias": "container_name=container,pod_name=pod",
                      "password": null,
                      "token": null,
                      "url": null,
                      "username": null
                    },
                    "filter": {
                      "name": null,
                      "value": null
                    }
                  },
                  "exporter": {
                    "enabled": true
                  }
                }
              },
              "httpCollector": {
                "enabled": true,
                "ingress": {
                  "enabled": false,
                  "host": null,
                  "ssl": {
                    "enabled": false
                  }
                },
                "memoryGrid": {
                  "enabled": null
                },
                "replicas": 1,
                "server": {
                  "host": "0.0.0.0",
                  "maxMemory": null,
                  "minMemory": null,
                  "port": 8085
                }
              },
              "kafka": {
                "consumergroups": {
                  "filter": "",
                  "metrics": true
                },
                "debug": false,
                "deployAsDaemonSet": false,
                "enabled": false,
                "jmx": {
                  "MBeans": {
                    "exclude": "",
                    "include": ""
                  },
                  "modules": "kafka,jvm,memory"
                },
                "ssl": {
                  "client": {
                    "enabled": false,
                    "endpointIdentificationEnabled": false,
                    "keystoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "keystoreKeyPassword": {
                      "value": ""
                    },
                    "keystorePassword": {
                      "value": ""
                    },
                    "truststoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "truststorePassword": {
                      "value": ""
                    }
                  },
                  "jmx": {
                    "enabled": false,
                    "keystoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "keystorePassword": {
                      "value": ""
                    },
                    "truststoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "truststorePassword": {
                      "value": ""
                    }
                  }
                }
              },
              "node": {
                "enabled": true
              }
            },
            "role": "common",
            "type": "Kubernetes"
          }
        }
      ]
    capabilities: Basic Install
    operators.operatorframework.io/builder: operator-sdk-v1.13.0+git
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v2
  name: uma-operator.v21.8.0
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - kind: UniversalMonitoringAgent
      name: universalmonitoringagents.ca.broadcom.com
      version: v1alpha1
  description: Uma Operator description. TODO.
  displayName: Uma Operator
  icon:
  - base64data: ""
    mediatype: ""
  install:
    spec:
      clusterPermissions:
      - rules:
        - nonResourceURLs:
          - /metrics
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - nodes
          - nodes/stats
          - nodes/metrics
          - nodes/proxy
          - services
          - pods
          - events
          - pods/exec
          - resourcequotas
          - replicationcontrollers
          - limitranges
          - namespaces
          - persistentvolumes
          - persistentvolumeclaims
          - endpoints
          - ingresses
          verbs:
          - get
          - create
          - list
          - watch
          - patch
        - apiGroups:
          - apps
          - admissionregistration.k8s.io
          resources:
          - deployments
          - statefulsets
          - replicasets
          - daemonsets
          - mutatingwebhookconfigurations
          verbs:
          - get
          - list
          - watch
          - create
          - patch
        - apiGroups:
          - extensions
          resources:
          - deployments
          - statefulsets
          - replicasets
          - daemonsets
          - ingresses
          verbs:
          - get
          - list
          - watch
          - create
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - configmaps
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - extensions
          - networking.k8s.io
          resources:
          - ingresses
          verbs:
          - get
          - list
          - watch
          - create
          - patch
          - delete
        - apiGroups:
          - ca.broadcom.com
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - security.openshift.io
          resourceNames:
          - anyuid
          - privileged
          resources:
          - securitycontextconstraints
          verbs:
          - use
        - apiGroups:
          - extensions
          resourceNames:
          - ibm-privileged-psp
          resources:
          - podsecuritypolicies
          verbs:
          - use
        - apiGroups:
          - apps.openshift.io
          resources:
          - deploymentconfigs
          verbs:
          - get
          - list
          - watch
          - create
          - patch
        - nonResourceURLs:
          - /metrics
          verbs:
          - get
        - apiGroups:
          - ""
          resources:
          - nodes
          - nodes/stats
          - nodes/metrics
          - nodes/proxy
          - services
          - pods
          - events
          - pods/exec
          - resourcequotas
          - replicationcontrollers
          - limitranges
          - namespaces
          - persistentvolumes
          - persistentvolumeclaims
          - endpoints
          - ingresses
          verbs:
          - get
          - create
          - list
          - watch
          - patch
        - apiGroups:
          - apps
          - admissionregistration.k8s.io
          resources:
          - deployments
          - statefulsets
          - replicasets
          - daemonsets
          - mutatingwebhookconfigurations
          verbs:
          - get
          - list
          - watch
          - create
          - patch
        - apiGroups:
          - extensions
          resources:
          - deployments
          - statefulsets
          - replicasets
          - daemonsets
          - ingresses
          verbs:
          - get
          - list
          - watch
          - create
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - configmaps
          - secrets
          verbs:
          - '*'
        - apiGroups:
          - extensions
          - networking.k8s.io
          resources:
          - ingresses
          verbs:
          - get
          - list
          - watch
          - create
          - patch
          - delete
        - apiGroups:
          - ca.broadcom.com
          resources:
          - '*'
          verbs:
          - '*'
        - apiGroups:
          - security.openshift.io
          resourceNames:
          - anyuid
          - privileged
          resources:
          - securitycontextconstraints
          verbs:
          - use
        - apiGroups:
          - extensions
          resourceNames:
          - ibm-privileged-psp
          resources:
          - podsecuritypolicies
          verbs:
          - use
        - apiGroups:
          - apps.openshift.io
          resources:
          - deploymentconfigs
          verbs:
          - get
          - list
          - watch
          - create
          - patch
        serviceAccountName: uma
      deployments:
      - name: uma-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: uma-operator
          strategy: {}
          template:
            metadata:
              labels:
                name: uma-operator
            spec:
              containers:
              - env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: OPERATOR_NAME
                  value: uma-operator
                - name: RELATED_IMAGE_UMA
                  value: registry.connect.redhat.com/ca/universalmonitoragent:latest
                image: registry.connect.redhat.com/ca/uma-operator:latest
                imagePullPolicy: Always
                name: uma-operator
                resources: {}
              serviceAccountName: uma
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - uma-operator
  links:
  - name: Uma Operator
    url: https://uma-operator.domain
  maintainers:
  - email: your@email.com
    name: Maintainer Name
  maturity: alpha
  provider:
    name: Provider Name
    url: https://your.domain
  version: 21.8.0-2

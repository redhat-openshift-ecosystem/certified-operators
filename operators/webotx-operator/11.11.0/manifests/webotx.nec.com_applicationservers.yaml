apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: applicationservers.webotx.nec.com
spec:
  group: webotx.nec.com
  names:
    kind: ApplicationServer
    listKind: ApplicationServerList
    plural: applicationservers
    singular: applicationserver
  scope: Namespaced
  versions:
  - name: v3
    schema:
      openAPIV3Schema:
        description: ApplicationServer is the Schema for the applicationservers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ApplicationServerSpec defines the desired state of ApplicationServer
            properties:
              common:
                description: Common Settings for each manifest registration.
                properties:
                  labels:
                    additionalProperties:
                      type: string
                    description: Set labels to be assigned to Deployment, Pod, and
                      Service.
                    type: object
                type: object
              deployment:
                description: Settings for Deployment manifest registration.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: Set the annotation to be given to the pod.
                    type: object
                  automountServiceAccountToken:
                    description: Sets whether to mount the service account token in
                      the container.
                    type: boolean
                  dns:
                    description: Set the items related to DNS of the pod.
                    properties:
                      dnsConfig:
                        description: Set the DNS Configration.
                        properties:
                          nameservers:
                            description: A list of DNS name server IP addresses. This
                              will be appended to the base nameservers generated from
                              DNSPolicy. Duplicated nameservers will be removed.
                            items:
                              type: string
                            type: array
                          options:
                            description: A list of DNS resolver options. This will
                              be merged with the base options generated from DNSPolicy.
                              Duplicated entries will be removed. Resolution options
                              given in Options will override those that appear in
                              the base DNSPolicy.
                            items:
                              description: PodDNSConfigOption defines DNS resolver
                                options of a pod.
                              properties:
                                name:
                                  description: Required.
                                  type: string
                                value:
                                  type: string
                              type: object
                            type: array
                          searches:
                            description: A list of DNS search domains for host-name
                              lookup. This will be appended to the base search paths
                              generated from DNSPolicy. Duplicated search paths will
                              be removed.
                            items:
                              type: string
                            type: array
                        type: object
                      dnsPolicy:
                        description: Set policies for DNS configuration of pods.
                        type: string
                    type: object
                  hostAliases:
                    description: Set a list of IP addresses and domain names to be
                      added to the hosts file in the container.
                    items:
                      description: HostAlias holds the mapping between IP and hostnames
                        that will be injected as an entry in the pod's hosts file.
                      properties:
                        hostnames:
                          description: Hostnames for the above IP address.
                          items:
                            type: string
                          type: array
                        ip:
                          description: IP address of the host file entry.
                          type: string
                      type: object
                    type: array
                  hostname:
                    description: Set the hostname of the Pod.
                    type: string
                  image:
                    description: Set the docker image name of WebOTX AS.
                    type: string
                  imagePullPolicy:
                    description: Set the policy for acquiring the container image
                      of WebOTX AS. One of Always, Never, IfNotPresent. Defaults to
                      IfNotPresent.
                    type: string
                  imagePullSecrets:
                    description: Set a list of Secret names that have registered the
                      authentication information required to acquire images from Docker
                      private registry.
                    items:
                      description: LocalObjectReference contains enough information
                        to let you locate the referenced object inside the same namespace.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                    type: array
                  livenessProbe:
                    description: Set items related to ReadinessProbe of each container.
                    properties:
                      logstash:
                        description: Set items related to ReadinessProbe of Logstash
                          container.
                        properties:
                          exec:
                            description: One and only one of the following should
                              be specified. Exec specifies the action to take.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe
                              to be considered failed after having succeeded. Defaults
                              to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: 'Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe
                              to be considered successful after having failed. Defaults
                              to 1. Must be 1 for liveness and startup. Minimum value
                              is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: 'TCPSocket specifies an action involving
                              a TCP port. TCP hooks not yet supported TODO: implement
                              a realistic TCP lifecycle hook'
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          terminationGracePeriodSeconds:
                            description: Optional duration in seconds the pod needs
                              to terminate gracefully upon probe failure. The grace
                              period is the duration in seconds after the processes
                              running in the pod are sent a termination signal and
                              the time when the processes are forcibly halted with
                              a kill signal. Set this value longer than the expected
                              cleanup time for your process. If this value is nil,
                              the pod's terminationGracePeriodSeconds will be used.
                              Otherwise, this value overrides the value provided by
                              the pod spec. Value must be non-negative integer. The
                              value zero indicates stop immediately via the kill signal
                              (no opportunity to shut down). This is an alpha field
                              and requires enabling ProbeTerminationGracePeriod feature
                              gate.
                            format: int64
                            type: integer
                          timeoutSeconds:
                            description: 'Number of seconds after which the probe
                              times out. Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                        type: object
                      webotx:
                        description: Set items related to ReadinessProbe of WebOTX
                          AS container.
                        properties:
                          exec:
                            description: One and only one of the following should
                              be specified. Exec specifies the action to take.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe
                              to be considered failed after having succeeded. Defaults
                              to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: 'Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe
                              to be considered successful after having failed. Defaults
                              to 1. Must be 1 for liveness and startup. Minimum value
                              is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: 'TCPSocket specifies an action involving
                              a TCP port. TCP hooks not yet supported TODO: implement
                              a realistic TCP lifecycle hook'
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          terminationGracePeriodSeconds:
                            description: Optional duration in seconds the pod needs
                              to terminate gracefully upon probe failure. The grace
                              period is the duration in seconds after the processes
                              running in the pod are sent a termination signal and
                              the time when the processes are forcibly halted with
                              a kill signal. Set this value longer than the expected
                              cleanup time for your process. If this value is nil,
                              the pod's terminationGracePeriodSeconds will be used.
                              Otherwise, this value overrides the value provided by
                              the pod spec. Value must be non-negative integer. The
                              value zero indicates stop immediately via the kill signal
                              (no opportunity to shut down). This is an alpha field
                              and requires enabling ProbeTerminationGracePeriod feature
                              gate.
                            format: int64
                            type: integer
                          timeoutSeconds:
                            description: 'Number of seconds after which the probe
                              times out. Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                        type: object
                    type: object
                  logstash:
                    description: Set items related to Logstash settings.
                    properties:
                      elasticsearch:
                        description: Set items related to Elasticsearch.
                        properties:
                          auth:
                            description: Set the Auth Configration.
                            properties:
                              enabled:
                                default: true
                                description: Set to enable Auth.
                                type: boolean
                              secretName:
                                description: Set the name of Secret.
                                type: string
                            type: object
                          host:
                            description: Set the host name or IP address of Elasticsearch.
                            type: string
                          port:
                            description: Set the Elasticsearch port number.
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          tls:
                            description: Set the TLS Configration.
                            properties:
                              cacert:
                                description: Set the Cacert Configration.
                                properties:
                                  secret:
                                    description: Set the Secret Configration.
                                    properties:
                                      key:
                                        description: Set the key of Secret.
                                        type: string
                                      name:
                                        description: Set the name of Secret.
                                        type: string
                                    type: object
                                type: object
                              enabled:
                                default: true
                                description: Set to enable TLS.
                                type: boolean
                              verification:
                                default: true
                                description: Set to enable Verification.
                                type: boolean
                            type: object
                        type: object
                    type: object
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: Set the label to be used as the condition for selecting
                      the node to schedule the pod.
                    type: object
                  progressDeadlineSeconds:
                    description: Set the maximum processing time of Deployment process.
                    format: int32
                    maximum: 2147483647
                    minimum: 1
                    type: integer
                  readinessProbe:
                    description: Set items related to ReadinessProbe of each container.
                    properties:
                      logstash:
                        description: Set items related to ReadinessProbe of Logstash
                          container.
                        properties:
                          exec:
                            description: One and only one of the following should
                              be specified. Exec specifies the action to take.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe
                              to be considered failed after having succeeded. Defaults
                              to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: 'Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe
                              to be considered successful after having failed. Defaults
                              to 1. Must be 1 for liveness and startup. Minimum value
                              is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: 'TCPSocket specifies an action involving
                              a TCP port. TCP hooks not yet supported TODO: implement
                              a realistic TCP lifecycle hook'
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          terminationGracePeriodSeconds:
                            description: Optional duration in seconds the pod needs
                              to terminate gracefully upon probe failure. The grace
                              period is the duration in seconds after the processes
                              running in the pod are sent a termination signal and
                              the time when the processes are forcibly halted with
                              a kill signal. Set this value longer than the expected
                              cleanup time for your process. If this value is nil,
                              the pod's terminationGracePeriodSeconds will be used.
                              Otherwise, this value overrides the value provided by
                              the pod spec. Value must be non-negative integer. The
                              value zero indicates stop immediately via the kill signal
                              (no opportunity to shut down). This is an alpha field
                              and requires enabling ProbeTerminationGracePeriod feature
                              gate.
                            format: int64
                            type: integer
                          timeoutSeconds:
                            description: 'Number of seconds after which the probe
                              times out. Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                        type: object
                      webotx:
                        description: Set items related to ReadinessProbe of WebOTX
                          AS container.
                        properties:
                          exec:
                            description: One and only one of the following should
                              be specified. Exec specifies the action to take.
                            properties:
                              command:
                                description: Command is the command line to execute
                                  inside the container, the working directory for
                                  the command  is root ('/') in the container's filesystem.
                                  The command is simply exec'd, it is not run inside
                                  a shell, so traditional shell instructions ('|',
                                  etc) won't work. To use a shell, you need to explicitly
                                  call out to that shell. Exit status of 0 is treated
                                  as live/healthy and non-zero is unhealthy.
                                items:
                                  type: string
                                type: array
                            type: object
                          failureThreshold:
                            description: Minimum consecutive failures for the probe
                              to be considered failed after having succeeded. Defaults
                              to 3. Minimum value is 1.
                            format: int32
                            type: integer
                          httpGet:
                            description: HTTPGet specifies the http request to perform.
                            properties:
                              host:
                                description: Host name to connect to, defaults to
                                  the pod IP. You probably want to set "Host" in httpHeaders
                                  instead.
                                type: string
                              httpHeaders:
                                description: Custom headers to set in the request.
                                  HTTP allows repeated headers.
                                items:
                                  description: HTTPHeader describes a custom header
                                    to be used in HTTP probes
                                  properties:
                                    name:
                                      description: The header field name
                                      type: string
                                    value:
                                      description: The header field value
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                type: array
                              path:
                                description: Path to access on the HTTP server.
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Name or number of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                              scheme:
                                description: Scheme to use for connecting to the host.
                                  Defaults to HTTP.
                                type: string
                            required:
                            - port
                            type: object
                          initialDelaySeconds:
                            description: 'Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                          periodSeconds:
                            description: How often (in seconds) to perform the probe.
                              Default to 10 seconds. Minimum value is 1.
                            format: int32
                            type: integer
                          successThreshold:
                            description: Minimum consecutive successes for the probe
                              to be considered successful after having failed. Defaults
                              to 1. Must be 1 for liveness and startup. Minimum value
                              is 1.
                            format: int32
                            type: integer
                          tcpSocket:
                            description: 'TCPSocket specifies an action involving
                              a TCP port. TCP hooks not yet supported TODO: implement
                              a realistic TCP lifecycle hook'
                            properties:
                              host:
                                description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                type: string
                              port:
                                anyOf:
                                - type: integer
                                - type: string
                                description: Number or name of the port to access
                                  on the container. Number must be in the range 1
                                  to 65535. Name must be an IANA_SVC_NAME.
                                x-kubernetes-int-or-string: true
                            required:
                            - port
                            type: object
                          terminationGracePeriodSeconds:
                            description: Optional duration in seconds the pod needs
                              to terminate gracefully upon probe failure. The grace
                              period is the duration in seconds after the processes
                              running in the pod are sent a termination signal and
                              the time when the processes are forcibly halted with
                              a kill signal. Set this value longer than the expected
                              cleanup time for your process. If this value is nil,
                              the pod's terminationGracePeriodSeconds will be used.
                              Otherwise, this value overrides the value provided by
                              the pod spec. Value must be non-negative integer. The
                              value zero indicates stop immediately via the kill signal
                              (no opportunity to shut down). This is an alpha field
                              and requires enabling ProbeTerminationGracePeriod feature
                              gate.
                            format: int64
                            type: integer
                          timeoutSeconds:
                            description: 'Number of seconds after which the probe
                              times out. Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                            format: int32
                            type: integer
                        type: object
                    type: object
                  replicas:
                    description: Set the pod multiplicity of the WebOTX AS to be deployed.
                    format: int32
                    maximum: 2147483647
                    minimum: 1
                    type: integer
                  resources:
                    description: Set items related to resources of each container.
                    properties:
                      logstash:
                        description: Set items related to resources of Logstash container.
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      webotx:
                        description: Set items related to resources or WebOTX AS container.
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                    type: object
                  restartPolicy:
                    description: Restart policy for all containers within the pod.
                      One of Always, OnFailure, Never. Default to Always.
                    type: string
                  serviceAccountName:
                    description: Set the service account name that runs the pod.
                    type: string
                  strategy:
                    description: Set items related to updating pods during deployment.
                    properties:
                      type:
                        description: Set the pod update method type.
                        type: string
                    type: object
                  subdomain:
                    description: Set the pod subdomain name. If specified, the fully
                      qualified Pod hostname will be "<hostname>.<subdomain>.<pod
                      namespace>.svc.<cluster domain>". If not specified, the pod
                      will not have a domainname at all.
                    type: string
                  terminationGracePeriodSeconds:
                    description: Sets the time (in seconds) between when the pod shutdown
                      process starts and when SIGKILL is sent.
                    format: int64
                    maximum: 2147483647
                    minimum: 0
                    type: integer
                  timeZone:
                    description: Set the time zone of the WebOTX AS container.
                    type: string
                required:
                - image
                - replicas
                type: object
              service:
                description: Settings for Service manifest registration.
                properties:
                  externalIPs:
                    description: Set a list of IP addresses for which nodes in the
                      cluster will also accept traffic for this service.
                    items:
                      type: string
                    type: array
                  externalTrafficPolicy:
                    description: Set a policy to load balance traffic that reaches
                      a node to another node.
                    type: string
                  loadBalancerIP:
                    description: 'Only applies to Service Type: LoadBalancer LoadBalancer
                      will get created with the IP specified in this field.'
                    type: string
                  loadBalancerSourceRanges:
                    description: Set a list of connection source IP addresses that
                      are allowed to access the service. This field will be ignored
                      if the cloud-provider does not support the feature."
                    items:
                      type: string
                    type: array
                  ports:
                    description: Set the items related to the public port.
                    items:
                      description: ServicePort contains information on service's port.
                      properties:
                        appProtocol:
                          description: The application protocol for this port. This
                            field follows standard Kubernetes label syntax. Un-prefixed
                            names are reserved for IANA standard service names (as
                            per RFC-6335 and http://www.iana.org/assignments/service-names).
                            Non-standard protocols should use prefixed names such
                            as mycompany.com/my-custom-protocol. This is a beta field
                            that is guarded by the ServiceAppProtocol feature gate
                            and enabled by default.
                          type: string
                        name:
                          description: The name of this port within the service. This
                            must be a DNS_LABEL. All ports within a ServiceSpec must
                            have unique names. When considering the endpoints for
                            a Service, this must match the 'name' field in the EndpointPort.
                            Optional if only one ServicePort is defined on this service.
                          type: string
                        nodePort:
                          description: 'The port on each node on which this service
                            is exposed when type is NodePort or LoadBalancer.  Usually
                            assigned by the system. If a value is specified, in-range,
                            and not in use it will be used, otherwise the operation
                            will fail.  If not specified, a port will be allocated
                            if this Service requires one.  If this field is specified
                            when creating a Service which does not need it, creation
                            will fail. This field will be wiped when updating a Service
                            to no longer need it (e.g. changing type from NodePort
                            to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                          format: int32
                          type: integer
                        port:
                          description: The port that will be exposed by this service.
                          format: int32
                          type: integer
                        protocol:
                          default: TCP
                          description: The IP protocol for this port. Supports "TCP",
                            "UDP", and "SCTP". Default is TCP.
                          type: string
                        targetPort:
                          anyOf:
                          - type: integer
                          - type: string
                          description: 'Number or name of the port to access on the
                            pods targeted by the service. Number must be in the range
                            1 to 65535. Name must be an IANA_SVC_NAME. If this is
                            a string, it will be looked up as a named port in the
                            target Pod''s container ports. If this is not specified,
                            the value of the ''port'' field is used (an identity map).
                            This field is ignored for services with clusterIP=None,
                            and should be omitted or set equal to the ''port'' field.
                            More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                          x-kubernetes-int-or-string: true
                      required:
                      - port
                      type: object
                    type: array
                  sessionAffinity:
                    description: Sets whether to maintain session affinity.
                    type: string
                  sessionAffinityConfig:
                    description: Enable client IP based session affinity.
                    properties:
                      clientIP:
                        description: clientIP contains the configurations of Client
                          IP based session affinity.
                        properties:
                          timeoutSeconds:
                            description: timeoutSeconds specifies the seconds of ClientIP
                              type session sticky time. The value must be >0 && <=86400(for
                              1 day) if ServiceAffinity == "ClientIP". Default value
                              is 10800(for 3 hours).
                            format: int32
                            type: integer
                        type: object
                    type: object
                  type:
                    description: Set the service type.
                    type: string
                required:
                - ports
                - type
                type: object
              webotx:
                description: Settings for WebOTX AS deployment.
                properties:
                  application:
                    description: Settings related to the application.
                    properties:
                      logs:
                        description: Set the log file paste to be collected by Logstash.
                        items:
                          type: string
                        type: array
                    type: object
                  envFrom:
                    description: Set items to set environment variables from ConfigMap.
                    properties:
                      configMaps:
                        description: Set the name of ConfigMap that defines environment
                          variables.
                        items:
                          type: string
                        type: array
                      secrets:
                        description: Set the name of Secret that defines environment
                          variables.
                        items:
                          type: string
                        type: array
                    type: object
                  fileMounts:
                    description: Setting items related to file mount config.
                    properties:
                      configMaps:
                        description: Set a list of ConfigMap that defines file mount
                          config.
                        items:
                          description: Set the ConfigMap that defines file mount config.
                          properties:
                            key:
                              description: Set the key of ConfigMap.
                              type: string
                            name:
                              description: Set the name of ConfigMap.
                              type: string
                            path:
                              description: Set the path in the container.
                              type: string
                          required:
                          - key
                          - name
                          - path
                          type: object
                        type: array
                      secrets:
                        description: Set a list of Secret that defines file mount
                          config.
                        items:
                          description: Set the Secret that defines file mount config.
                          properties:
                            key:
                              description: Set the key of Secret.
                              type: string
                            name:
                              description: Set the name of Secret.
                              type: string
                            path:
                              description: Set the path in the container.
                              type: string
                          required:
                          - key
                          - name
                          - path
                          type: object
                        type: array
                    type: object
                  healthCheck:
                    description: Settings related to HealthCheck. Set only when using
                      the UberJAR container image.
                    properties:
                      port:
                        default: 8443
                        description: Set the port number to be used in MP-HealthCheck
                          of WebOTX Server.
                        format: int32
                        maximum: 65535
                        minimum: 1
                        type: integer
                      scheme:
                        default: https
                        description: Set the scheme to be used in MP-HealthCheck of
                          WebOTX Server.
                        enum:
                        - http
                        - https
                        type: string
                    required:
                    - port
                    - scheme
                    type: object
                  jaeger:
                    description: Settings related to Jaeger.
                    properties:
                      agentHost:
                        description: Setting items related to Jaeger. The hostname
                          for communicating with agent via UDP.
                        type: string
                      agentPort:
                        description: Setting items related to Jaeger. The port for
                          communicating with agent via UDP.
                        type: string
                      authSecret:
                        description: Setting items related to Jaeger. Secret name
                          that defines the user name and password to be sent to the
                          endpoint as part of basic authentication.
                        properties:
                          name:
                            type: string
                        type: object
                      authToken:
                        description: Setting items related to Jaeger. Authentication
                          Token to send as "Bearer" to the endpoint.
                        type: string
                      endpoint:
                        description: Setting items related to Jaeger. The traces endpoint,
                          in case the client should connect directly to the Collector,
                          like http://jaeger-collector:14268/api/traces.
                        type: string
                      propagation:
                        description: Setting items related to Jaeger. Comma separated
                          list of formats to use for propagating the trace context.
                          Defaults to the standard Jaeger format. Valid values are
                          jaeger, b3, and w3c.
                        enum:
                        - jaeger
                        - b3
                        - w3c
                        type: string
                      reporterFlushInterval:
                        description: Setting items related to Jaeger. The reporter's
                          flush interval (ms).
                        type: string
                      reporterLogSpans:
                        description: Setting items related to Jaeger. Whether the
                          reporter should also log the spans.
                        type: string
                      reporterMaxQueueSize:
                        description: Setting items related to Jaeger. The reporter's
                          maximum queue size.
                        type: string
                      samplerManagerHostPort:
                        description: Setting items related to Jaeger. The host name
                          and port when using the remote controlled sampler. Specify
                          in the format of <host_name>:<port_number>.
                        type: string
                      samplerParam:
                        description: Setting items related to Jaeger. The sampler
                          parameter (number).
                        type: string
                      samplerType:
                        description: Setting items related to Jaeger. The sampler
                          type.
                        enum:
                        - const
                        - probabilistic
                        - ratelimiting
                        - remote
                        type: string
                      serviceName:
                        description: Setting items related to Jaeger. The service
                          name.
                        type: string
                      tags:
                        description: Setting items related to Jaeger. A comma separated
                          list of name = value tracer level tags, which get added
                          to all reported spans.
                        type: string
                    type: object
                  metering:
                    description: Settings related to metering function.
                    properties:
                      enabled:
                        default: false
                        description: Set to enable Metering.
                        type: boolean
                      port:
                        default: 8443
                        description: Set the port number when retrieving metrics.
                        format: int32
                        maximum: 65535
                        minimum: 1
                        type: integer
                      scheme:
                        default: https
                        description: Set the URL scheme for retrieving metrics.
                        enum:
                        - http
                        - https
                        type: string
                    required:
                    - enabled
                    - port
                    - scheme
                    type: object
                  sessionReplication:
                    description: Setting items related to session replication.
                    properties:
                      enabled:
                        default: false
                        description: Enable the session replication function.
                        type: boolean
                      useAllProcessGroups:
                        default: false
                        description: Sets whether the data grid is loaded in all process
                          groups.
                        type: boolean
                      useJmxAgent:
                        default: false
                        description: Sets whether the data grid is loaded by the agent
                          process.
                        type: boolean
                    required:
                    - enabled
                    - useAllProcessGroups
                    - useJmxAgent
                    type: object
                required:
                - metering
                - sessionReplication
                type: object
            required:
            - deployment
            - service
            - webotx
            type: object
          status:
            description: ApplicationServerStatus defines the observed state of ApplicationServer
            properties:
              operatorVersion:
                description: OperatorVersion store the version of WebOTX Operator.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

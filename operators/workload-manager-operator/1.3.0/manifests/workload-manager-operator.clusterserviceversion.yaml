apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "workloadmanager.nec.com/v1",
          "kind": "WorkloadManager",
          "metadata": {
            "name": "workload-manager",
            "namespace": "nec-workload-manager"
          },
          "spec": {
            "api_timeout": 3,
            "cluster_collection_size": 10737418240,
            "cluster_platform": "OpenShift",
            "common_config_log_level": "INFO",
            "db_startup_recheck_time": 5,
            "db_startup_wait_time": 60,
            "default_monitor_count": 10,
            "default_monitor_interval": 60,
            "default_repeat_interval": 1800,
            "detail_collection_size": 10737418240,
            "detect_count": 1,
            "detect_interval": 60,
            "event_collection_size": 10737418240,
            "expire_after_seconds": 31536000,
            "get_info_interval": 60,
            "get_info_ssc": "off",
            "grafana_cooperation": "off",
            "grafana_datasource": "prometheus",
            "grafana_node_additional_varlist": "",
            "grafana_node_dashboard_endpoint": "https://changeit.nec.co.jp:443/d/wmnode/wm-node-dashboard",
            "grafana_node_varname_datasource": "datasource",
            "grafana_node_varname_node": "node",
            "grafana_pod_additional_varlist": "",
            "grafana_pod_dashboard_endpoint": "https://changeit.nec.co.jp:443/d/wmpod/wm-pod-dashboard",
            "grafana_pod_varname_datasource": "datasource",
            "grafana_pod_varname_pod": "pod",
            "grafana_time_range_minutes": 60,
            "hidden_namespace": "",
            "image": "registry.connect.redhat.com/nec/nec-workload-manager@sha256:1d99212cf18d83886a7b487151af00ef3abae8e2662aadfca38108b5eff9649d",
            "jaeger_endpoint": "https://changeit.nec.co.jp:443/search",
            "jaeger_service_mapping": "{}",
            "jaeger_time_range_sec": 60,
            "max_policy_fired_histories": 512,
            "mode": "trial",
            "node_cpu_usage_threshold": 80,
            "node_disk_usage_threshold": 100,
            "node_memory_usage_threshold": 80,
            "node_network_usage_threshold": 55,
            "openshift": {
              "use_ebs": "n",
              "web_console_host": "REPLACE_WEB_CONSOLE_HOST"
            },
            "policy_fired_histories_collection_max_size": 1073741824,
            "policy_fired_histories_expire_after_seconds": 31536000,
            "skip_action_interval": 600,
            "ssc_auth_by_secret": "false",
            "ssc_event_collection_size": 1073741824,
            "use_auth": "false",
            "use_pv": "false",
            "user_authority_config_json": "[\n  {\n    \"username\": \"cluster-admin-user\",\n    \"is_cluster_admin\": true,\n    \"namespaces\": []\n  },\n  {\n    \"username\": \"tenant-user\",\n    \"is_cluster_admin\": false,\n    \"namespaces\": [\n      \"tenant-namespace\"\n    ]\n  }\n]\n"
          }
        }
      ]
    capabilities: Basic Install
    operators.operatorframework.io/builder: operator-sdk-v1.13.0+git
    operators.operatorframework.io/project_layout: ansible.sdk.operatorframework.io/v1
  name: workload-manager-operator.v1.3.0
  namespace: placeholder
spec:
  relatedImages:
    - name: nec-workload-manager
      image: registry.connect.redhat.com/nec/nec-workload-manager@sha256:1d99212cf18d83886a7b487151af00ef3abae8e2662aadfca38108b5eff9649d
    - name: nec-workload-manager-operator
      image: registry.connect.redhat.com/nec/nec-workload-manager-operator@sha256:5805850512de4c4868d0dcc7da6d2cc557196285b8c0e3c67c32065115e9ae87
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - kind: WorkloadManager
      name: workloadmanagers.workloadmanager.nec.com
      version: v1
      resources:
      - kind: Service
        name: ''
        version: v1
      - kind: Route
        name: ''
        version: v1
      - kind: PersistentVolumeClaim
        name: ''
        version: v1
      - kind: ConfigMap
        name: ''
        version: v1
      - kind: DeploymentConfig
        name: ''
        version: v1
      specDescriptors:
      - description: ''
        displayName: Image
        path: image
      - description: ''
        displayName: Use PV
        path: use_pv
      - description: ''
        displayName: Node Selector
        path: node_selector
      - description: ''
        displayName: Mode
        path: mode
      - description: ''
        displayName: Use Auth
        path: use_auth
      - description: ''
        displayName: Cluster Platform
        path: cluster_platform
      - description: ''
        displayName: Get Kubernetes URL V10
        path: get_kubernetes_url_v10
      - description: ''
        displayName: Get Info SSC
        path: get_info_ssc
      - description: ''
        displayName: Common Config Log Level
        path: common_config_log_level
      - description: ''
        displayName: DB StartUp Wait Time
        path: db_startup_wait_time
      - description: ''
        displayName: DB StartUP Recheck Time
        path: db_startup_recheck_time
      - description: ''
        displayName: Default Monitor Count
        path: default_monitor_count
      - description: ''
        displayName: Default Monitor Interval
        path: default_monitor_interval
      - description: ''
        displayName: Default Repeat Interval
        path: default_repeat_interval
      - description: ''
        displayName: Api Timeout
        path: api_timeout
      - description: ''
        displayName: Skip Action Interval
        path: skip_action_interval
      - description: ''
        displayName: Max Policy Fired Histories
        path: max_policy_fired_histories
      - description: ''
        displayName: Policy Fired Histories Expire After Seconds
        path: policy_fired_histories_expire_after_seconds
      - description: ''
        displayName: Policy Fired Histories Collection Max Size
        path: policy_fired_histories_collection_max_size
      - description: ''
        displayName: Expire After Seconds
        path: expire_after_seconds
      - description: ''
        displayName: Event Collection Size
        path: event_collection_size
      - description: ''
        displayName: Detail Collection Size
        path: detail_collection_size
      - description: ''
        displayName: Cluster Collection Size
        path: cluster_collection_size
      - description: ''
        displayName: Get Info Interval
        path: get_info_interval
      - description: ''
        displayName: Hidden Namespace
        path: hidden_namespace
      - description: ''
        displayName: SSC Event Collection Size
        path: ssc_event_collection_size
      - description: ''
        displayName: Jaeger Endpoint
        path: jaeger_endpoint
      - description: ''
        displayName: Jaeger Service Mapping
        path: jaeger_service_mapping
      - description: ''
        displayName: Jaeger Time Range Sec
        path: jaeger_time_range_sec
      - description: ''
        displayName: SSC Auth by Secret
        path: ssc_auth_by_secret
      - description: ''
        displayName: User Authority Config JSON
        path: user_authority_config_json
      - description: ''
        displayName: Grafana Cooperation
        path: grafana_cooperation
      - description: ''
        displayName: Grafana Datasource
        path: grafana_datasource
      - description: ''
        displayName: Grafana Node Dashboard Endpoint
        path: grafana_node_dashboard_endpoint
      - description: ''
        displayName: Grafana Node Var Name Node
        path: grafana_node_varname_node
      - description: ''
        displayName: Grafana Node Var Name Datasource
        path: grafana_node_varname_datasource
      - description: ''
        displayName: Grafana Node Additional Var List
        path: grafana_node_additional_varlist
      - description: ''
        displayName: Grafana Pod Dashboard Endpoint
        path: grafana_pod_dashboard_endpoint
      - description: ''
        displayName: Grafana Pod Var Name
        path: grafana_pod_varname_pod
      - description: ''
        displayName: Grafana Pod Var Name Datasource
        path: grafana_pod_varname_datasource
      - description: ''
        displayName: Grafana Pod Additional Var List
        path: grafana_pod_additional_varlist
      - description: ''
        displayName: Grafana Time Range Minutes
        path: grafana_time_range_minutes
      - description: ''
        displayName: Node CPU Usage Threshold
        path: node_cpu_usage_threshold
      - description: ''
        displayName: Node Disk Usage Threshold
        path: node_disk_usage_threshold
      - description: ''
        displayName: Node Memory Usage Threshold
        path: node_memory_usage_threshold
      - description: ''
        displayName: Node Network Usage Threshold
        path: node_network_usage_threshold
      - description: ''
        displayName: Detect Count
        path: detect_count
      - description: ''
        displayName: Detect Interval
        path: detect_interval
      - description: ''
        displayName: OpenShift
        path: openshift
      - description: ''
        displayName: EKS
        path: eks
      - description: ''
        displayName: Kubernetes
        path: kubernetes
      statusDescriptors:
      - description: WorkloadManagerStatus defines the observed state of WorkloadManager
        displayName: WorkloadManagerStatus
        path: conditions
  description: This operator deploys the NEC Workload Manager for Container Platform
    on OpenShift Container Platform.
  displayName: NEC Workload Manager for Container Platform Operator
  icon:
  - base64data: >-
        
    mediatype: image/png
  install:
    spec:
      deployments:
      - name: workload-manager-operator-workload-manager-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: workload-manager-operator
          strategy: {}
          template:
            metadata:
              labels:
                name: workload-manager-operator
              name: workload-manager-operator
              namespace: nec-workload-manager
            spec:
              containers:
              - env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: OPERATOR_NAME
                  value: workload-manager-operator
                - name: ANSIBLE_GATHERING
                  value: explicit
                image: registry.connect.redhat.com/nec/nec-workload-manager-operator@sha256:5805850512de4c4868d0dcc7da6d2cc557196285b8c0e3c67c32065115e9ae87
                imagePullPolicy: Always
                livenessProbe:
                  failureThreshold: 3
                  httpGet:
                    path: /healthz
                    port: 6789
                  initialDelaySeconds: 5
                  periodSeconds: 10
                  successThreshold: 1
                  timeoutSeconds: 3
                name: workload-manager-operator
                resources: {}
                volumeMounts:
                - mountPath: /tmp/ansible-operator/runner
                  name: runner
              serviceAccountName: workload-manager-operator-workload-manager-operator
              volumes:
              - emptyDir: {}
                name: runner
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - services/finalizers
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - get
          - create
        - apiGroups:
          - apps
          resourceNames:
          - workload-manager-operator
          resources:
          - deployments/finalizers
          verbs:
          - update
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - get
        - apiGroups:
          - apps
          resources:
          - replicasets
          - deployments
          verbs:
          - get
        - apiGroups:
          - workloadmanager.nec.com
          resources:
          - '*'
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - route.openshift.io
          resources:
          - '*'
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps.openshift.io
          resources:
          - '*'
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        serviceAccountName: workload-manager-operator-workload-manager-operator
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: true
    type: MultiNamespace
  - supported: false
    type: AllNamespaces
  keywords:
  - workload-manager-operator
  - nec
  - NEC
  links:
  - name: Workload Manager Operator
    url: https://workload-manager-operator.domain
  maturity: alpha
  provider:
    name: NEC Corporarion
    url: https://jpn.nec.com/
  version: 1.3.0
